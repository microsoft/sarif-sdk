<?xml version='1.0' encoding='UTF-8'?>
<DEFECTS><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test130.cpp</FILENAME><LINE>103</LINE><COLUMN>12</COLUMN></SFA><DEFECTCODE>26070</DEFECTCODE><DESCRIPTION>Potential range precondition violation using expression '&amp; b1'
PREFAST_NEWLINE
Assumed __inout annotation on function B::safe1 requires that {parameter 1}-&gt;n is &lt;= 3
PREFAST_NEWLINE
  where {parameter 1}-&gt;n is &amp; b1
PREFAST_NEWLINE
[Field annotation SAL_range(0, 3) at c:\somepath\test130.cpp(67)]
PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
b1.B::n = b1.B::n`103
PREFAST_NEWLINE

PREFAST_NEWLINE
where
PREFAST_NEWLINE
b1.B::n`103 &gt;= 0
PREFAST_NEWLINE

PREFAST_NEWLINE
Range violation occurs when
PREFAST_NEWLINE
b1.B::n`103 &lt;= 2
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>main</FUNCTION><DECORATED>main</DECORATED><FUNCLINE>86</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test130.cpp</FILENAME><LINE>86</LINE><COLUMN>5</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test130.cpp</FILENAME><LINE>88</LINE><COLUMN>13</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test130.cpp</FILENAME><LINE>90</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test130.cpp</FILENAME><LINE>91</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test130.cpp</FILENAME><LINE>92</LINE><COLUMN>14</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test130.cpp</FILENAME><LINE>93</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test130.cpp</FILENAME><LINE>94</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test130.cpp</FILENAME><LINE>96</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test130.cpp</FILENAME><LINE>97</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test130.cpp</FILENAME><LINE>98</LINE><COLUMN>14</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test130.cpp</FILENAME><LINE>99</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test130.cpp</FILENAME><LINE>100</LINE><COLUMN>19</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test130.cpp</FILENAME><LINE>102</LINE><COLUMN>6</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test130.cpp</FILENAME><LINE>103</LINE><COLUMN>12</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test130.cpp</FILENAME><LINE>106</LINE><COLUMN>20</COLUMN></SFA><DEFECTCODE>26070</DEFECTCODE><DESCRIPTION>Potential range precondition violation using expression '&amp; b2'
PREFAST_NEWLINE
Assumed __inout annotation on function B::safe requires that {parameter 1}-&gt;n is &lt;= 3
PREFAST_NEWLINE
  where {parameter 1}-&gt;n is &amp; b2
PREFAST_NEWLINE
[Field annotation SAL_range(0, 3) at c:\somepath\test130.cpp(67)]
PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
b2.B::n = b2.B::n`106
PREFAST_NEWLINE

PREFAST_NEWLINE
where
PREFAST_NEWLINE
b2.B::n`106 &gt;= 0
PREFAST_NEWLINE

PREFAST_NEWLINE
Range violation occurs when
PREFAST_NEWLINE
b2.B::n`106 &lt;= 2
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>main</FUNCTION><DECORATED>main</DECORATED><FUNCLINE>86</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test130.cpp</FILENAME><LINE>86</LINE><COLUMN>5</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test130.cpp</FILENAME><LINE>88</LINE><COLUMN>13</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test130.cpp</FILENAME><LINE>90</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test130.cpp</FILENAME><LINE>91</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test130.cpp</FILENAME><LINE>92</LINE><COLUMN>14</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test130.cpp</FILENAME><LINE>93</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test130.cpp</FILENAME><LINE>94</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test130.cpp</FILENAME><LINE>96</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test130.cpp</FILENAME><LINE>97</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test130.cpp</FILENAME><LINE>98</LINE><COLUMN>14</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test130.cpp</FILENAME><LINE>99</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test130.cpp</FILENAME><LINE>100</LINE><COLUMN>19</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test130.cpp</FILENAME><LINE>102</LINE><COLUMN>6</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test130.cpp</FILENAME><LINE>103</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test130.cpp</FILENAME><LINE>105</LINE><COLUMN>6</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test130.cpp</FILENAME><LINE>106</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test130.cpp</FILENAME><LINE>106</LINE><COLUMN>20</COLUMN></SFA></PATH></DEFECT></DEFECTS>