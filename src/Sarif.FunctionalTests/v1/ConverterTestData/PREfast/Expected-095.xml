<?xml version='1.0' encoding='UTF-8'?>
<DEFECTS><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test095.cpp</FILENAME><LINE>47</LINE><COLUMN>12</COLUMN></SFA><DEFECTCODE>26014</DEFECTCODE><DESCRIPTION>Potential overflow using expression 'aa[b]'
PREFAST_NEWLINE
This is likely to be due to incorrect or insufficient validation of the buffer access
PREFAST_NEWLINE
Buffer accessed is aa
PREFAST_NEWLINE
Buffer is of length 10 elements (4 bytes/element) [size of variable]
PREFAST_NEWLINE
Accessing the element (4 bytes/element) at element offset (*q)`36a
PREFAST_NEWLINE

PREFAST_NEWLINE
 when function Goop called at line 46 is inline analyzed.
PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
b = (*q)`36a
PREFAST_NEWLINE

PREFAST_NEWLINE
where
PREFAST_NEWLINE
(*q)`36a &lt;= 10
PREFAST_NEWLINE
(*q)`36a &gt;= 0
PREFAST_NEWLINE

PREFAST_NEWLINE
Overrun access occurs when
PREFAST_NEWLINE
(*q)`36a == 10
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>KK</FUNCTION><DECORATED>?KK@@YAXH@Z</DECORATED><FUNCLINE>42</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test095.cpp</FILENAME><LINE>42</LINE><COLUMN>5</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test095.cpp</FILENAME><LINE>44</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test095.cpp</FILENAME><LINE>44</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test095.cpp</FILENAME><LINE>45</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test095.cpp</FILENAME><LINE>46</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test095.cpp</FILENAME><LINE>46</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test095.cpp</FILENAME><LINE>47</LINE><COLUMN>12</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test095.cpp</FILENAME><LINE>47</LINE><COLUMN>12</COLUMN></SFA><DEFECTCODE>26011</DEFECTCODE><DESCRIPTION>Potential Underflow using expression 'aa[b]'
PREFAST_NEWLINE
Buffer accessed is aa
PREFAST_NEWLINE
Buffer is of length 10 elements (4 bytes/element) [size of variable]
PREFAST_NEWLINE
Accessing the element (4 bytes/element) at element offset (*q)`36a
PREFAST_NEWLINE

PREFAST_NEWLINE
 when function Goop called at line 46 fails.
PREFAST_NEWLINE
 when function Goop called at line 46 is inline analyzed.
PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
b = (*q)`36a
PREFAST_NEWLINE

PREFAST_NEWLINE
Underflow access occurs when
PREFAST_NEWLINE
(*q)`36a + 1 &lt;= 0
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>KK</FUNCTION><DECORATED>?KK@@YAXH@Z</DECORATED><FUNCLINE>42</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test095.cpp</FILENAME><LINE>42</LINE><COLUMN>5</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test095.cpp</FILENAME><LINE>44</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test095.cpp</FILENAME><LINE>44</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test095.cpp</FILENAME><LINE>45</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test095.cpp</FILENAME><LINE>46</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test095.cpp</FILENAME><LINE>46</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test095.cpp</FILENAME><LINE>47</LINE><COLUMN>12</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test095.cpp</FILENAME><LINE>49</LINE><COLUMN>12</COLUMN></SFA><DEFECTCODE>26015</DEFECTCODE><DESCRIPTION>Potential overflow using expression 'bb[b]'
PREFAST_NEWLINE
Buffer access is apparently unbounded by the buffer size.  
PREFAST_NEWLINE

PREFAST_NEWLINE
In particular: (*q)`36a is not constrained by any constant
PREFAST_NEWLINE

PREFAST_NEWLINE
Buffer accessed is bb
PREFAST_NEWLINE
Buffer is of length 10 elements (4 bytes/element) [size of variable]
PREFAST_NEWLINE
Accessing the element (4 bytes/element) at element offset (*q)`36a
PREFAST_NEWLINE

PREFAST_NEWLINE
 when function Goop called at line 46 fails.
PREFAST_NEWLINE
 when function Goop called at line 46 is inline analyzed.
PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
b = (*q)`36a
PREFAST_NEWLINE

PREFAST_NEWLINE
Overrun access occurs when
PREFAST_NEWLINE
(*q)`36a &gt;= 10
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>KK</FUNCTION><DECORATED>?KK@@YAXH@Z</DECORATED><FUNCLINE>42</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test095.cpp</FILENAME><LINE>42</LINE><COLUMN>5</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test095.cpp</FILENAME><LINE>44</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test095.cpp</FILENAME><LINE>44</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test095.cpp</FILENAME><LINE>45</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test095.cpp</FILENAME><LINE>46</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test095.cpp</FILENAME><LINE>46</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test095.cpp</FILENAME><LINE>49</LINE><COLUMN>12</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test095.cpp</FILENAME><LINE>49</LINE><COLUMN>12</COLUMN></SFA><DEFECTCODE>26011</DEFECTCODE><DESCRIPTION>Potential Underflow using expression 'bb[b]'
PREFAST_NEWLINE
Buffer accessed is bb
PREFAST_NEWLINE
Buffer is of length 10 elements (4 bytes/element) [size of variable]
PREFAST_NEWLINE
Accessing the element (4 bytes/element) at element offset (*q)`36a
PREFAST_NEWLINE

PREFAST_NEWLINE
 when function Goop called at line 46 fails.
PREFAST_NEWLINE
 when function Goop called at line 46 is inline analyzed.
PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
b = (*q)`36a
PREFAST_NEWLINE

PREFAST_NEWLINE
Underflow access occurs when
PREFAST_NEWLINE
(*q)`36a + 1 &lt;= 0
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>KK</FUNCTION><DECORATED>?KK@@YAXH@Z</DECORATED><FUNCLINE>42</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test095.cpp</FILENAME><LINE>42</LINE><COLUMN>5</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test095.cpp</FILENAME><LINE>44</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test095.cpp</FILENAME><LINE>44</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test095.cpp</FILENAME><LINE>45</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test095.cpp</FILENAME><LINE>46</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test095.cpp</FILENAME><LINE>46</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test095.cpp</FILENAME><LINE>49</LINE><COLUMN>12</COLUMN></SFA></PATH></DEFECT></DEFECTS>