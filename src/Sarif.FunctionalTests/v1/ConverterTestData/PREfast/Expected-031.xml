<?xml version='1.0' encoding='UTF-8'?>
<DEFECTS><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>14</LINE><COLUMN>11</COLUMN></SFA><DEFECTCODE>26026</DEFECTCODE><DESCRIPTION>Cast cannot be proven safe: "(struct S *)result.malloc" Accessing 12 bytes starting at byte offset 0
PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
Pointer result.malloc is at offset offset(result.malloc)`14a bytes from the start of the buffer
PREFAST_NEWLINE

PREFAST_NEWLINE
There are other instances of this error:
PREFAST_NEWLINE
Overflow using expression 'p-&gt;c' at line 22
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>f</FUNCTION><DECORATED>?f@@YAXXZ</DECORATED><FUNCLINE>12</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>12</LINE><COLUMN>5</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>14</LINE><COLUMN>7</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>14</LINE><COLUMN>22</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>14</LINE><COLUMN>11</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>87</LINE><COLUMN>16</COLUMN></SFA><DEFECTCODE>26000</DEFECTCODE><DESCRIPTION>Overflow using expression 'x-&gt;a[i]'
PREFAST_NEWLINE
Buffer result.malloc created during call to malloc on line 73
PREFAST_NEWLINE
Buffer is of length 4*fullLength`70 + 204 bytes [from annotation _Post_writable_byte_size_(byteCount({parameter 1})) on function malloc called at line 73]
PREFAST_NEWLINE
Accessing 4 bytes starting at byte offset 208
PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
Pointer x is at offset 0 bytes from the start of the buffer
PREFAST_NEWLINE
i = 1
PREFAST_NEWLINE

PREFAST_NEWLINE
where
PREFAST_NEWLINE
fullLength`70 == 1
PREFAST_NEWLINE
offset(result.malloc)`73a == 0
PREFAST_NEWLINE
{loop iterations}'80 == 0
PREFAST_NEWLINE
{loop iterations}'85 == 0
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>doExtensible</FUNCTION><DECORATED>?doExtensible@@YAXI@Z</DECORATED><FUNCLINE>70</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>70</LINE><COLUMN>5</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>72</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>73</LINE><COLUMN>14</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>72</LINE><COLUMN>20</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>75</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>78</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>80</LINE><COLUMN>13</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>80</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>80</LINE><COLUMN>22</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>82</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>80</LINE><COLUMN>38</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>80</LINE><COLUMN>22</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>85</LINE><COLUMN>13</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>85</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>85</LINE><COLUMN>22</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>87</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>85</LINE><COLUMN>39</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>85</LINE><COLUMN>22</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>87</LINE><COLUMN>16</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>92</LINE><COLUMN>13</COLUMN></SFA><DEFECTCODE>26000</DEFECTCODE><DESCRIPTION>Overflow using expression 'x-&gt;b[25]'
PREFAST_NEWLINE
Buffer accessed is extensible::b
PREFAST_NEWLINE
Buffer is of length 20 elements (4 bytes/element) [size of field]
PREFAST_NEWLINE
Accessing the element (4 bytes/element) at element offset 25
PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
Pointer x is at offset 0 bytes from the start of result.malloc'73
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>doExtensible</FUNCTION><DECORATED>?doExtensible@@YAXI@Z</DECORATED><FUNCLINE>70</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>70</LINE><COLUMN>5</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>72</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>73</LINE><COLUMN>14</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>72</LINE><COLUMN>20</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>75</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>78</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>80</LINE><COLUMN>13</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>80</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>80</LINE><COLUMN>22</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>82</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>80</LINE><COLUMN>38</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>80</LINE><COLUMN>22</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>85</LINE><COLUMN>13</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>85</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>85</LINE><COLUMN>22</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>87</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>85</LINE><COLUMN>39</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>85</LINE><COLUMN>22</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>87</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>85</LINE><COLUMN>39</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>85</LINE><COLUMN>22</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>87</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>85</LINE><COLUMN>39</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>85</LINE><COLUMN>22</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>92</LINE><COLUMN>13</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>100</LINE><COLUMN>10</COLUMN></SFA><DEFECTCODE>26000</DEFECTCODE><DESCRIPTION>Overflow using expression '(void *)(signed char *)(&amp; x-&gt;c)'
PREFAST_NEWLINE
Buffer accessed is extensible::c
PREFAST_NEWLINE
Buffer is of length 120 bytes [size of field]
PREFAST_NEWLINE
Accessing 200 bytes starting at byte offset 0
PREFAST_NEWLINE
Annotation on function memset requires that {parameter 1} is of length &gt;= {parameter 3} bytes
PREFAST_NEWLINE
  where {parameter 1} is (void *)(signed char *)(&amp; x-&gt;c); {parameter 3} is 200
PREFAST_NEWLINE
[Annotation _Out_(byteCount({parameter 3}))]
PREFAST_NEWLINE

PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
Pointer x is at offset 0 bytes from the start of result.malloc'73
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>doExtensible</FUNCTION><DECORATED>?doExtensible@@YAXI@Z</DECORATED><FUNCLINE>70</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>70</LINE><COLUMN>5</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>72</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>73</LINE><COLUMN>14</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>72</LINE><COLUMN>20</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>75</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>78</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>80</LINE><COLUMN>13</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>80</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>80</LINE><COLUMN>22</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>82</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>80</LINE><COLUMN>38</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>80</LINE><COLUMN>22</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>85</LINE><COLUMN>13</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>85</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>85</LINE><COLUMN>22</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>87</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>85</LINE><COLUMN>39</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>85</LINE><COLUMN>22</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>87</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>85</LINE><COLUMN>39</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>85</LINE><COLUMN>22</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>87</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>85</LINE><COLUMN>39</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>85</LINE><COLUMN>22</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>92</LINE><COLUMN>13</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>95</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>95</LINE><COLUMN>18</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>96</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>96</LINE><COLUMN>18</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>97</LINE><COLUMN>10</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test031.cpp</FILENAME><LINE>100</LINE><COLUMN>10</COLUMN></SFA></PATH></DEFECT></DEFECTS>