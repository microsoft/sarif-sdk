<?xml version='1.0' encoding='UTF-8'?>
<DEFECTS><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test080.cpp</FILENAME><LINE>36</LINE><COLUMN>21</COLUMN></SFA><DEFECTCODE>26000</DEFECTCODE><DESCRIPTION>Overflow using expression 'a[y * x + 1]'
PREFAST_NEWLINE
Buffer accessed is a
PREFAST_NEWLINE
Buffer is of length 10 elements (4 bytes/element) [size of variable]
PREFAST_NEWLINE
Accessing the element (4 bytes/element) at element offset 10
PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
x = x`31
PREFAST_NEWLINE
y = y`31
PREFAST_NEWLINE

PREFAST_NEWLINE
where
PREFAST_NEWLINE
{x * y}`35 == 9
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>g</FUNCTION><DECORATED>?g@@YAXHH@Z</DECORATED><FUNCLINE>31</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test080.cpp</FILENAME><LINE>31</LINE><COLUMN>5</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test080.cpp</FILENAME><LINE>33</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test080.cpp</FILENAME><LINE>35</LINE><COLUMN>14</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test080.cpp</FILENAME><LINE>36</LINE><COLUMN>21</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test080.cpp</FILENAME><LINE>48</LINE><COLUMN>17</COLUMN></SFA><DEFECTCODE>26017</DEFECTCODE><DESCRIPTION>Potential overflow using expression 'a[x]'
PREFAST_NEWLINE
Buffer accessed is a
PREFAST_NEWLINE
Buffer is of length 10 elements (4 bytes/element) [size of variable]
PREFAST_NEWLINE
Accessing the element (4 bytes/element) at element offset {i | j}`47
PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
x = {i | j}`47
PREFAST_NEWLINE

PREFAST_NEWLINE
Overrun access occurs when
PREFAST_NEWLINE
{i | j}`47 &gt;= 10
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>nested</FUNCTION><DECORATED>?nested@@YAXXZ</DECORATED><FUNCLINE>39</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test080.cpp</FILENAME><LINE>39</LINE><COLUMN>5</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test080.cpp</FILENAME><LINE>41</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test080.cpp</FILENAME><LINE>43</LINE><COLUMN>13</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test080.cpp</FILENAME><LINE>43</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test080.cpp</FILENAME><LINE>43</LINE><COLUMN>22</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test080.cpp</FILENAME><LINE>45</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test080.cpp</FILENAME><LINE>45</LINE><COLUMN>21</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test080.cpp</FILENAME><LINE>45</LINE><COLUMN>26</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test080.cpp</FILENAME><LINE>47</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test080.cpp</FILENAME><LINE>47</LINE><COLUMN>22</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test080.cpp</FILENAME><LINE>48</LINE><COLUMN>17</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test080.cpp</FILENAME><LINE>48</LINE><COLUMN>17</COLUMN></SFA><DEFECTCODE>26011</DEFECTCODE><DESCRIPTION>Potential Underflow using expression 'a[x]'
PREFAST_NEWLINE
Buffer accessed is a
PREFAST_NEWLINE
Buffer is of length 10 elements (4 bytes/element) [size of variable]
PREFAST_NEWLINE
Accessing the element (4 bytes/element) at element offset {i | j}`47
PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
x = {i | j}`47
PREFAST_NEWLINE

PREFAST_NEWLINE
Underflow access occurs when
PREFAST_NEWLINE
{i | j}`47 + 1 &lt;= 0
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>nested</FUNCTION><DECORATED>?nested@@YAXXZ</DECORATED><FUNCLINE>39</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test080.cpp</FILENAME><LINE>39</LINE><COLUMN>5</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test080.cpp</FILENAME><LINE>41</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test080.cpp</FILENAME><LINE>43</LINE><COLUMN>13</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test080.cpp</FILENAME><LINE>43</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test080.cpp</FILENAME><LINE>43</LINE><COLUMN>22</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test080.cpp</FILENAME><LINE>45</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test080.cpp</FILENAME><LINE>45</LINE><COLUMN>21</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test080.cpp</FILENAME><LINE>45</LINE><COLUMN>26</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test080.cpp</FILENAME><LINE>47</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test080.cpp</FILENAME><LINE>47</LINE><COLUMN>22</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test080.cpp</FILENAME><LINE>48</LINE><COLUMN>17</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test080.cpp</FILENAME><LINE>55</LINE><COLUMN>4</COLUMN></SFA><DEFECTCODE>26017</DEFECTCODE><DESCRIPTION>Potential read overflow using expression 'buf[n &gt;&gt; (int )m]'
PREFAST_NEWLINE
Buffer buf is a parameter to this function declared on line 53
PREFAST_NEWLINE
Buffer is of length offset(buf)`53 + n`53 bytes [from annotation SAL_writableTo(elementCount(n)) at c:\somepath\test080.cpp(53)]
PREFAST_NEWLINE
Accessing the byte at byte offset {n &gt;&gt; (int )m}`55
PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
Pointer buf is at offset 0 bytes from the start of the buffer
PREFAST_NEWLINE
m = m`53
PREFAST_NEWLINE
n = n`53
PREFAST_NEWLINE

PREFAST_NEWLINE
where
PREFAST_NEWLINE
offset(buf)`53 == 0
PREFAST_NEWLINE
n`53 &gt;= 1
PREFAST_NEWLINE
{n &gt;&gt; (int )m}`55 &gt;= 0
PREFAST_NEWLINE

PREFAST_NEWLINE
Overrun access occurs when
PREFAST_NEWLINE
n`53 &lt;= {n &gt;&gt; (int )m}`55
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>call</FUNCTION><DECORATED>?call@@YADPADID@Z</DECORATED><FUNCLINE>53</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test080.cpp</FILENAME><LINE>53</LINE><COLUMN>5</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test080.cpp</FILENAME><LINE>55</LINE><COLUMN>4</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test080.cpp</FILENAME><LINE>61</LINE><COLUMN>4</COLUMN></SFA><DEFECTCODE>26017</DEFECTCODE><DESCRIPTION>Potential read overflow using expression 'buf[n1]'
PREFAST_NEWLINE
Buffer buf is a parameter to this function declared on line 58
PREFAST_NEWLINE
Buffer is of length offset(buf)`58 + n`58 bytes [from annotation SAL_writableTo(elementCount(n)) at c:\somepath\test080.cpp(58)]
PREFAST_NEWLINE
Accessing the byte at byte offset {n &gt;&gt; (int )m}`60
PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
Pointer buf is at offset 0 bytes from the start of the buffer
PREFAST_NEWLINE
n1 = {n &gt;&gt; (int )m}`60
PREFAST_NEWLINE

PREFAST_NEWLINE
where
PREFAST_NEWLINE
offset(buf)`58 == 0
PREFAST_NEWLINE
n`58 &gt;= 1
PREFAST_NEWLINE
{n &gt;&gt; (int )m}`60 &gt;= 0
PREFAST_NEWLINE

PREFAST_NEWLINE
Overrun access occurs when
PREFAST_NEWLINE
n`58 &lt;= {n &gt;&gt; (int )m}`60
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>call1</FUNCTION><DECORATED>?call1@@YADPADID@Z</DECORATED><FUNCLINE>58</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test080.cpp</FILENAME><LINE>58</LINE><COLUMN>5</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test080.cpp</FILENAME><LINE>60</LINE><COLUMN>11</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test080.cpp</FILENAME><LINE>60</LINE><COLUMN>18</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test080.cpp</FILENAME><LINE>61</LINE><COLUMN>4</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test080.cpp</FILENAME><LINE>70</LINE><COLUMN>18</COLUMN></SFA><DEFECTCODE>26014</DEFECTCODE><DESCRIPTION>Potential overflow using expression 'a[i + b1]'
PREFAST_NEWLINE
This is likely to be due to incorrect or insufficient validation of the buffer access
PREFAST_NEWLINE
Buffer accessed is a
PREFAST_NEWLINE
Buffer is of length 10 elements (4 bytes/element) [size of variable]
PREFAST_NEWLINE
Accessing the element (4 bytes/element) at element offset i`65 + {j &lt; 10}`68
PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
b1 = {j &lt; 10}`68
PREFAST_NEWLINE
i = i`65
PREFAST_NEWLINE

PREFAST_NEWLINE
where
PREFAST_NEWLINE
i`65 + {j &lt; 10}`68 &gt;= 0
PREFAST_NEWLINE
i`65 &lt;= 9
PREFAST_NEWLINE
i`65 &gt;= 0
PREFAST_NEWLINE
{j &lt; 10}`68 &lt;= 1
PREFAST_NEWLINE
{j &lt; 10}`68 &gt;= 0
PREFAST_NEWLINE

PREFAST_NEWLINE
Overrun access occurs when
PREFAST_NEWLINE
i`65 + {j &lt; 10}`68 &gt;= 10
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>TestRelopBad</FUNCTION><DECORATED>?TestRelopBad@@YAXII@Z</DECORATED><FUNCLINE>65</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test080.cpp</FILENAME><LINE>65</LINE><COLUMN>5</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test080.cpp</FILENAME><LINE>67</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test080.cpp</FILENAME><LINE>68</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test080.cpp</FILENAME><LINE>68</LINE><COLUMN>13</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test080.cpp</FILENAME><LINE>69</LINE><COLUMN>10</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test080.cpp</FILENAME><LINE>70</LINE><COLUMN>18</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test080.cpp</FILENAME><LINE>79</LINE><COLUMN>23</COLUMN></SFA><DEFECTCODE>26014</DEFECTCODE><DESCRIPTION>Potential overflow using expression 'a[(i + b1) + b2]'
PREFAST_NEWLINE
This is likely to be due to incorrect or insufficient validation of the buffer access
PREFAST_NEWLINE
Buffer accessed is a
PREFAST_NEWLINE
Buffer is of length 10 elements (4 bytes/element) [size of variable]
PREFAST_NEWLINE
Accessing the element (4 bytes/element) at element offset i`73 + {j &lt; 10}`76 + {10 &lt;= j}`77
PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
b1 = {j &lt; 10}`76
PREFAST_NEWLINE
b2 = {10 &lt;= j}`77
PREFAST_NEWLINE
i = i`73
PREFAST_NEWLINE

PREFAST_NEWLINE
where
PREFAST_NEWLINE
i`73 + {j &lt; 10}`76 + {10 &lt;= j}`77 &gt;= 0
PREFAST_NEWLINE
i`73 + {j &lt; 10}`76 &gt;= 0
PREFAST_NEWLINE
i`73 &lt;= 8
PREFAST_NEWLINE
i`73 &gt;= 0
PREFAST_NEWLINE
{10 &lt;= j}`77 &lt;= 1
PREFAST_NEWLINE
{10 &lt;= j}`77 &gt;= 0
PREFAST_NEWLINE
{j &lt; 10}`76 &lt;= 1
PREFAST_NEWLINE
{j &lt; 10}`76 &gt;= 0
PREFAST_NEWLINE

PREFAST_NEWLINE
Overrun access occurs when
PREFAST_NEWLINE
i`73 + {j &lt; 10}`76 + {10 &lt;= j}`77 &gt;= 10
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>TestRelopGood</FUNCTION><DECORATED>?TestRelopGood@@YAXII@Z</DECORATED><FUNCLINE>73</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test080.cpp</FILENAME><LINE>73</LINE><COLUMN>5</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test080.cpp</FILENAME><LINE>75</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test080.cpp</FILENAME><LINE>76</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test080.cpp</FILENAME><LINE>76</LINE><COLUMN>13</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test080.cpp</FILENAME><LINE>77</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test080.cpp</FILENAME><LINE>77</LINE><COLUMN>13</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test080.cpp</FILENAME><LINE>78</LINE><COLUMN>10</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test080.cpp</FILENAME><LINE>79</LINE><COLUMN>23</COLUMN></SFA></PATH></DEFECT></DEFECTS>