<?xml version='1.0' encoding='UTF-8'?>
<DEFECTS><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test073.cpp</FILENAME><LINE>15</LINE><COLUMN>9</COLUMN></SFA><DEFECTCODE>26011</DEFECTCODE><DESCRIPTION>Potential read underflow using expression 'buf[i]'
PREFAST_NEWLINE
Buffer buf is a parameter to this function declared on line 12
PREFAST_NEWLINE
Buffer is of length offset(buf)`12 + size`12 bytes [from annotation SAL_readableTo(elementCount(size)) at c:\somepath\test073.cpp(12)]
PREFAST_NEWLINE
Accessing the byte at byte offset result.find`14a
PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
Pointer buf is at offset 0 bytes from the start of the buffer
PREFAST_NEWLINE
i = result.find`14a
PREFAST_NEWLINE

PREFAST_NEWLINE
where
PREFAST_NEWLINE
offset(buf)`12 == 0
PREFAST_NEWLINE
size`12 &gt;= 1
PREFAST_NEWLINE
size`12 &gt;= result.find`14a + 1
PREFAST_NEWLINE

PREFAST_NEWLINE
Underflow access occurs when
PREFAST_NEWLINE
result.find`14a + 1 &lt;= 0
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>f</FUNCTION><DECORATED>?f@@YAXPADH@Z</DECORATED><FUNCLINE>12</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test073.cpp</FILENAME><LINE>12</LINE><COLUMN>5</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test073.cpp</FILENAME><LINE>14</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test073.cpp</FILENAME><LINE>14</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test073.cpp</FILENAME><LINE>14</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test073.cpp</FILENAME><LINE>15</LINE><COLUMN>9</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test073.cpp</FILENAME><LINE>21</LINE><COLUMN>11</COLUMN></SFA><DEFECTCODE>26014</DEFECTCODE><DESCRIPTION>Potential read overflow using expression 'buf[i + 1]'
PREFAST_NEWLINE
This is likely to be due to incorrect or insufficient validation of the buffer access
PREFAST_NEWLINE
Buffer buf is a parameter to this function declared on line 18
PREFAST_NEWLINE
Buffer is of length offset(buf)`18 + size`18 bytes [from annotation SAL_readableTo(elementCount(size)) at c:\somepath\test073.cpp(18)]
PREFAST_NEWLINE
Accessing the byte at byte offset result.find`20a + 1
PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
Pointer buf is at offset 0 bytes from the start of the buffer
PREFAST_NEWLINE
i = result.find`20a
PREFAST_NEWLINE

PREFAST_NEWLINE
where
PREFAST_NEWLINE
offset(buf)`18 == 0
PREFAST_NEWLINE
size`18 &gt;= 1
PREFAST_NEWLINE
size`18 &gt;= result.find`20a + 1
PREFAST_NEWLINE

PREFAST_NEWLINE
Overrun access occurs when
PREFAST_NEWLINE
size`18 == result.find`20a + 1
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>f1</FUNCTION><DECORATED>?f1@@YAXPADH@Z</DECORATED><FUNCLINE>18</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test073.cpp</FILENAME><LINE>18</LINE><COLUMN>5</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test073.cpp</FILENAME><LINE>20</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test073.cpp</FILENAME><LINE>20</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test073.cpp</FILENAME><LINE>20</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test073.cpp</FILENAME><LINE>21</LINE><COLUMN>11</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test073.cpp</FILENAME><LINE>21</LINE><COLUMN>11</COLUMN></SFA><DEFECTCODE>26011</DEFECTCODE><DESCRIPTION>Potential read underflow using expression 'buf[i + 1]'
PREFAST_NEWLINE
Buffer buf is a parameter to this function declared on line 18
PREFAST_NEWLINE
Buffer is of length offset(buf)`18 + size`18 bytes [from annotation SAL_readableTo(elementCount(size)) at c:\somepath\test073.cpp(18)]
PREFAST_NEWLINE
Accessing the byte at byte offset result.find`20a + 1
PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
Pointer buf is at offset 0 bytes from the start of the buffer
PREFAST_NEWLINE
i = result.find`20a
PREFAST_NEWLINE

PREFAST_NEWLINE
where
PREFAST_NEWLINE
offset(buf)`18 == 0
PREFAST_NEWLINE
size`18 &gt;= 1
PREFAST_NEWLINE
size`18 &gt;= result.find`20a + 1
PREFAST_NEWLINE

PREFAST_NEWLINE
Underflow access occurs when
PREFAST_NEWLINE
result.find`20a + 2 &lt;= 0
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>f1</FUNCTION><DECORATED>?f1@@YAXPADH@Z</DECORATED><FUNCLINE>18</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test073.cpp</FILENAME><LINE>18</LINE><COLUMN>5</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test073.cpp</FILENAME><LINE>20</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test073.cpp</FILENAME><LINE>20</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test073.cpp</FILENAME><LINE>20</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test073.cpp</FILENAME><LINE>21</LINE><COLUMN>11</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test073.cpp</FILENAME><LINE>41</LINE><COLUMN>12</COLUMN></SFA><DEFECTCODE>26011</DEFECTCODE><DESCRIPTION>Potential Underflow using expression 'buf[(int )size1]'
PREFAST_NEWLINE
Buffer buf is a parameter to this function declared on line 37
PREFAST_NEWLINE
Buffer is of length offset(buf)`37 + size`37 bytes [from annotation SAL_writableTo(elementCount(_Old_(size))) at c:\somepath\test073.cpp(37)]
PREFAST_NEWLINE
Accessing the byte at byte offset size1`40a
PREFAST_NEWLINE

PREFAST_NEWLINE
 when function SafeAdd called at line 40 fails.
PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
Pointer buf is at offset 0 bytes from the start of the buffer
PREFAST_NEWLINE
size1 = size1`40a
PREFAST_NEWLINE

PREFAST_NEWLINE
Underflow access occurs when
PREFAST_NEWLINE
offset(buf)`37 == 0
PREFAST_NEWLINE
size1`40a + 1 &lt;= 0
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>foo</FUNCTION><DECORATED>?foo@@YAXPADF@Z</DECORATED><FUNCLINE>37</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test073.cpp</FILENAME><LINE>37</LINE><COLUMN>5</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test073.cpp</FILENAME><LINE>39</LINE><COLUMN>10</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test073.cpp</FILENAME><LINE>39</LINE><COLUMN>18</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test073.cpp</FILENAME><LINE>40</LINE><COLUMN>15</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test073.cpp</FILENAME><LINE>40</LINE><COLUMN>15</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test073.cpp</FILENAME><LINE>41</LINE><COLUMN>12</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test073.cpp</FILENAME><LINE>41</LINE><COLUMN>12</COLUMN></SFA><DEFECTCODE>26000</DEFECTCODE><DESCRIPTION>Overflow using expression 'buf[(int )size1]'
PREFAST_NEWLINE
Buffer buf is a parameter to this function declared on line 37
PREFAST_NEWLINE
Buffer is of length offset(buf)`37 + size`37 bytes [from annotation SAL_writableTo(elementCount(_Old_(size))) at c:\somepath\test073.cpp(37)]
PREFAST_NEWLINE
Accessing the byte at byte offset size1`40a
PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
Pointer buf is at offset 0 bytes from the start of the buffer
PREFAST_NEWLINE
size1 = size1`40a
PREFAST_NEWLINE

PREFAST_NEWLINE
where
PREFAST_NEWLINE
offset(buf)`37 == 0
PREFAST_NEWLINE
size`37 + 1 == size1`40a
PREFAST_NEWLINE
size`37 &gt;= 1
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>foo</FUNCTION><DECORATED>?foo@@YAXPADF@Z</DECORATED><FUNCLINE>37</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test073.cpp</FILENAME><LINE>37</LINE><COLUMN>5</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test073.cpp</FILENAME><LINE>39</LINE><COLUMN>10</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test073.cpp</FILENAME><LINE>39</LINE><COLUMN>18</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test073.cpp</FILENAME><LINE>40</LINE><COLUMN>15</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test073.cpp</FILENAME><LINE>40</LINE><COLUMN>15</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test073.cpp</FILENAME><LINE>41</LINE><COLUMN>12</COLUMN></SFA></PATH></DEFECT></DEFECTS>