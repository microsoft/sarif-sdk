<?xml version='1.0' encoding='UTF-8'?>
<DEFECTS><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>9</LINE><COLUMN>9</COLUMN></SFA><DEFECTCODE>26017</DEFECTCODE><DESCRIPTION>Potential overflow using expression 'g[i]'
PREFAST_NEWLINE
Buffer accessed is g
PREFAST_NEWLINE
Buffer is of length 10 elements (4 bytes/element) [size of variable]
PREFAST_NEWLINE
Accessing the element (4 bytes/element) at element offset i`7
PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
i = i`7
PREFAST_NEWLINE

PREFAST_NEWLINE
Overrun access occurs when
PREFAST_NEWLINE
i`7 &gt;= 10
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>f</FUNCTION><DECORATED>?f@@YAXH@Z</DECORATED><FUNCLINE>7</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>7</LINE><COLUMN>5</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>9</LINE><COLUMN>9</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>9</LINE><COLUMN>9</COLUMN></SFA><DEFECTCODE>26011</DEFECTCODE><DESCRIPTION>Potential Underflow using expression 'g[i]'
PREFAST_NEWLINE
Buffer accessed is g
PREFAST_NEWLINE
Buffer is of length 10 elements (4 bytes/element) [size of variable]
PREFAST_NEWLINE
Accessing the element (4 bytes/element) at element offset i`7
PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
i = i`7
PREFAST_NEWLINE

PREFAST_NEWLINE
Underflow access occurs when
PREFAST_NEWLINE
i`7 + 1 &lt;= 0
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>f</FUNCTION><DECORATED>?f@@YAXH@Z</DECORATED><FUNCLINE>7</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>7</LINE><COLUMN>5</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>9</LINE><COLUMN>9</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>29</LINE><COLUMN>8</COLUMN></SFA><DEFECTCODE>26061</DEFECTCODE><DESCRIPTION>Range postcondition violation
PREFAST_NEWLINE
Annotation on function find requires that result.find is &gt;= 0
PREFAST_NEWLINE
[Annotation SAL_range(0, n) at c:\somepath\test054.cpp(17)]
PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
result.find = -1
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>find</FUNCTION><DECORATED>?find@@YAHPAHHH@Z</DECORATED><FUNCLINE>17</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>17</LINE><COLUMN>22</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>19</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>19</LINE><COLUMN>19</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>22</LINE><COLUMN>4</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>29</LINE><COLUMN>8</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>53</LINE><COLUMN>9</COLUMN></SFA><DEFECTCODE>26014</DEFECTCODE><DESCRIPTION>Potential overflow using expression 'a[i]'
PREFAST_NEWLINE
This is likely to be due to incorrect or insufficient validation of the buffer access
PREFAST_NEWLINE
Buffer a is a parameter to this function declared on line 50
PREFAST_NEWLINE
Buffer is of length offset(a)`50 + 4*n`50 bytes [from annotation SAL_readableTo(elementCount(n)) at c:\somepath\test054.cpp(50)]
PREFAST_NEWLINE
Accessing 4 bytes starting at byte offset 4*result.find1`52a
PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
Pointer a is at offset 0 bytes from the start of the buffer
PREFAST_NEWLINE
i = result.find1`52a
PREFAST_NEWLINE

PREFAST_NEWLINE
where
PREFAST_NEWLINE
offset(a)`50 == 0
PREFAST_NEWLINE
n`50 &gt;= 1
PREFAST_NEWLINE
result.find1`52a &lt;= n`50
PREFAST_NEWLINE
result.find1`52a &gt;= 0
PREFAST_NEWLINE

PREFAST_NEWLINE
Overrun access occurs when
PREFAST_NEWLINE
result.find1`52a == n`50
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>h</FUNCTION><DECORATED>?h@@YAXPAHH@Z</DECORATED><FUNCLINE>50</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>50</LINE><COLUMN>5</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>52</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>52</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>52</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>53</LINE><COLUMN>9</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>53</LINE><COLUMN>9</COLUMN></SFA><DEFECTCODE>26001</DEFECTCODE><DESCRIPTION>Underflow using expression 'a[i]'
PREFAST_NEWLINE
Buffer a is a parameter to this function declared on line 50
PREFAST_NEWLINE
Buffer is of length offset(a)`50 + 4*n`50 bytes [from annotation SAL_readableTo(elementCount(n)) at c:\somepath\test054.cpp(50)]
PREFAST_NEWLINE
Accessing 4 bytes starting at byte offset 4*result.find1`52a
PREFAST_NEWLINE

PREFAST_NEWLINE
 when function find1 called at line 52 fails.
PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
Pointer a is at offset 0 bytes from the start of the buffer
PREFAST_NEWLINE
i = result.find1`52a
PREFAST_NEWLINE

PREFAST_NEWLINE
where
PREFAST_NEWLINE
offset(a)`50 == 0
PREFAST_NEWLINE
result.find1`52a + 1 &lt;= 0
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>h</FUNCTION><DECORATED>?h@@YAXPAHH@Z</DECORATED><FUNCLINE>50</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>50</LINE><COLUMN>5</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>52</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>52</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>52</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>53</LINE><COLUMN>9</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>60</LINE><COLUMN>13</COLUMN></SFA><DEFECTCODE>26014</DEFECTCODE><DESCRIPTION>Potential overflow using expression 'a[i]'
PREFAST_NEWLINE
This is likely to be due to incorrect or insufficient validation of the buffer access
PREFAST_NEWLINE
Buffer a is a parameter to this function declared on line 56
PREFAST_NEWLINE
Buffer is of length offset(a)`56 + 4*n`56 bytes [from annotation SAL_readableTo(elementCount(n)) at c:\somepath\test054.cpp(56)]
PREFAST_NEWLINE
Accessing 4 bytes starting at byte offset 4*result.find1`58a
PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
Pointer a is at offset 0 bytes from the start of the buffer
PREFAST_NEWLINE
i = result.find1`58a
PREFAST_NEWLINE

PREFAST_NEWLINE
where
PREFAST_NEWLINE
offset(a)`56 == 0
PREFAST_NEWLINE
n`56 &gt;= 1
PREFAST_NEWLINE
result.find1`58a &lt;= n`56
PREFAST_NEWLINE
result.find1`58a &gt;= 0
PREFAST_NEWLINE

PREFAST_NEWLINE
Overrun access occurs when
PREFAST_NEWLINE
result.find1`58a == n`56
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>h1</FUNCTION><DECORATED>?h1@@YAXPAHH@Z</DECORATED><FUNCLINE>56</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>56</LINE><COLUMN>5</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>58</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>58</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>58</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>59</LINE><COLUMN>10</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>60</LINE><COLUMN>13</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>65</LINE><COLUMN>11</COLUMN></SFA><DEFECTCODE>26061</DEFECTCODE><DESCRIPTION>Range postcondition violation
PREFAST_NEWLINE
Annotation on function search requires that * index is &lt;= n - 1
PREFAST_NEWLINE
[Annotation SAL_range(0, n - 1) at c:\somepath\test054.cpp(63)]
PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
(*index) = (*n)`63
PREFAST_NEWLINE
(*n) = (*n)`63
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>search</FUNCTION><DECORATED>?search@@YAXPAHABH0@Z</DECORATED><FUNCLINE>63</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>63</LINE><COLUMN>5</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>65</LINE><COLUMN>11</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>102</LINE><COLUMN>7</COLUMN></SFA><DEFECTCODE>26060</DEFECTCODE><DESCRIPTION>Range precondition violation using expression '10'
PREFAST_NEWLINE
Annotation on function get requires that {parameter 3} is &lt;= {parameter 2} - 1
PREFAST_NEWLINE
  where {parameter 3} is 10; {parameter 2} is 10
PREFAST_NEWLINE
[Annotation SAL_range(0, {parameter 2} - 1) at c:\somepath\test054.cpp(87)]
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>baz</FUNCTION><DECORATED>?baz@@YAXXZ</DECORATED><FUNCLINE>99</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>99</LINE><COLUMN>5</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>101</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>101</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>102</LINE><COLUMN>7</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>217</LINE><COLUMN>8</COLUMN></SFA><DEFECTCODE>26014</DEFECTCODE><DESCRIPTION>Potential read overflow using expression 'g[idx]'
PREFAST_NEWLINE
This is likely to be due to incorrect or insufficient validation of the buffer access
PREFAST_NEWLINE
Buffer accessed is g
PREFAST_NEWLINE
Buffer is of length 10 elements (4 bytes/element) [size of variable]
PREFAST_NEWLINE
Accessing the element (4 bytes/element) at element offset result.find`216a
PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
idx = result.find`216a
PREFAST_NEWLINE

PREFAST_NEWLINE
where
PREFAST_NEWLINE
result.find`216a &lt;= 10
PREFAST_NEWLINE
result.find`216a &gt;= 0
PREFAST_NEWLINE

PREFAST_NEWLINE
Overrun access occurs when
PREFAST_NEWLINE
result.find`216a == 10
PREFAST_NEWLINE

PREFAST_NEWLINE
There are other instances of this error:
PREFAST_NEWLINE
Potential read overflow using expression 'g[idx]' at line 220
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>main</FUNCTION><DECORATED>main</DECORATED><FUNCLINE>204</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>204</LINE><COLUMN>5</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>206</LINE><COLUMN>13</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>206</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>206</LINE><COLUMN>22</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>207</LINE><COLUMN>13</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>206</LINE><COLUMN>22</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>207</LINE><COLUMN>13</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>206</LINE><COLUMN>22</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>207</LINE><COLUMN>13</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>206</LINE><COLUMN>22</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>209</LINE><COLUMN>5</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>210</LINE><COLUMN>5</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>211</LINE><COLUMN>5</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>213</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>214</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>216</LINE><COLUMN>14</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>216</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>217</LINE><COLUMN>8</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>220</LINE><COLUMN>8</COLUMN></SFA><DEFECTCODE>26001</DEFECTCODE><DESCRIPTION>Read underflow using expression 'g[idx]'
PREFAST_NEWLINE
Buffer accessed is g
PREFAST_NEWLINE
Buffer is of length 10 elements (4 bytes/element) [size of variable]
PREFAST_NEWLINE
Accessing the element (4 bytes/element) at element offset result.find1`219a
PREFAST_NEWLINE

PREFAST_NEWLINE
 when function find1 called at line 219 fails.
PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
idx = result.find1`219a
PREFAST_NEWLINE

PREFAST_NEWLINE
where
PREFAST_NEWLINE
result.find1`219a + 1 &lt;= 0
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>main</FUNCTION><DECORATED>main</DECORATED><FUNCLINE>204</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>204</LINE><COLUMN>5</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>206</LINE><COLUMN>13</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>206</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>206</LINE><COLUMN>22</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>207</LINE><COLUMN>13</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>206</LINE><COLUMN>22</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>207</LINE><COLUMN>13</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>206</LINE><COLUMN>22</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>207</LINE><COLUMN>13</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>206</LINE><COLUMN>22</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>209</LINE><COLUMN>5</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>210</LINE><COLUMN>5</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>211</LINE><COLUMN>5</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>213</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>214</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>216</LINE><COLUMN>14</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>216</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>217</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>219</LINE><COLUMN>15</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>219</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test054.cpp</FILENAME><LINE>220</LINE><COLUMN>8</COLUMN></SFA></PATH></DEFECT></DEFECTS>