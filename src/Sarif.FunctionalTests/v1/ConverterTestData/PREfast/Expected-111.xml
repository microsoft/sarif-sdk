<?xml version='1.0' encoding='UTF-8'?>
<DEFECTS><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>133</LINE><COLUMN>23</COLUMN></SFA><DEFECTCODE>26024</DEFECTCODE><DESCRIPTION>Cast cannot be proven safe: "(EXTRST *)pb" Accessing 12 bytes starting at byte offset 0
PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
Pointer rgb is at offset offset(rgb)`103 bytes from the start of the buffer
PREFAST_NEWLINE
pb = rgb
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>PbLoadExtRstSst</FUNCTION><DECORATED>?PbLoadExtRstSst@@YAPAEPAU_srst@@HPAE1PAPAE@Z</DECORATED><FUNCLINE>103</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>103</LINE><COLUMN>6</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>108</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>108</LINE><COLUMN>13</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>109</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>110</LINE><COLUMN>10</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>111</LINE><COLUMN>9</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>111</LINE><COLUMN>21</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>112</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>112</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>113</LINE><COLUMN>21</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>114</LINE><COLUMN>25</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>115</LINE><COLUMN>30</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>115</LINE><COLUMN>10</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>116</LINE><COLUMN>20</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>118</LINE><COLUMN>27</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>120</LINE><COLUMN>31</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>120</LINE><COLUMN>15</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>121</LINE><COLUMN>19</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>123</LINE><COLUMN>31</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>123</LINE><COLUMN>15</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>125</LINE><COLUMN>35</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>127</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>129</LINE><COLUMN>15</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>130</LINE><COLUMN>20</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>131</LINE><COLUMN>24</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>133</LINE><COLUMN>23</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>133</LINE><COLUMN>23</COLUMN></SFA><DEFECTCODE>26007</DEFECTCODE><DESCRIPTION>Possibly incorrect single element annotation on buffer
PREFAST_NEWLINE
Read overflow using expression '((EXTRST *)pb)-&gt;cb'
PREFAST_NEWLINE
Buffer rgb is a parameter to this function declared on line 103
PREFAST_NEWLINE
Buffer lengths are from an assumed __inout annotation on the parameter
PREFAST_NEWLINE
Buffer is of length offset(rgb)`103 + 1 bytes [from annotation valid(elementCount(1)) at c:\somepath\test111.cpp(103)]
PREFAST_NEWLINE
Accessing 4 bytes starting at byte offset 0
PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
Pointer rgb is at offset 0 bytes from the start of the buffer
PREFAST_NEWLINE
pb = rgb
PREFAST_NEWLINE

PREFAST_NEWLINE
There are other instances of this error:
PREFAST_NEWLINE
Possibly incorrect single element annotation on buffer at line 135
PREFAST_NEWLINE
Possibly incorrect single element annotation on buffer at line 163
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>PbLoadExtRstSst</FUNCTION><DECORATED>?PbLoadExtRstSst@@YAPAEPAU_srst@@HPAE1PAPAE@Z</DECORATED><FUNCLINE>103</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>103</LINE><COLUMN>6</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>108</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>108</LINE><COLUMN>13</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>109</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>110</LINE><COLUMN>10</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>111</LINE><COLUMN>9</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>111</LINE><COLUMN>21</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>112</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>112</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>113</LINE><COLUMN>21</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>114</LINE><COLUMN>25</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>115</LINE><COLUMN>30</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>115</LINE><COLUMN>10</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>116</LINE><COLUMN>20</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>118</LINE><COLUMN>27</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>120</LINE><COLUMN>31</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>120</LINE><COLUMN>15</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>121</LINE><COLUMN>19</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>123</LINE><COLUMN>31</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>123</LINE><COLUMN>15</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>125</LINE><COLUMN>35</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>127</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>129</LINE><COLUMN>15</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>130</LINE><COLUMN>20</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>131</LINE><COLUMN>24</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>133</LINE><COLUMN>23</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>163</LINE><COLUMN>16</COLUMN></SFA><DEFECTCODE>26015</DEFECTCODE><DESCRIPTION>Potential overflow using expression '(void *)pb'
PREFAST_NEWLINE
Buffer access is apparently unbounded by the buffer size.  
PREFAST_NEWLINE

PREFAST_NEWLINE
In particular: result.min`161a is not constrained by offset((*ppbMax))`103
PREFAST_NEWLINE

PREFAST_NEWLINE
Buffer pb is a parameter to this function declared on line 103
PREFAST_NEWLINE
Buffer is of length offset((*ppbMax))`103 bytes [from annotation SAL_writableTo(elementCount(* ppbMax - pb)) at c:\somepath\test111.cpp(103)] OR
PREFAST_NEWLINE
  offset(pb)`116 bytes [from annotation SAL_readableTo(elementCount(1)) at c:\somepath\test111.cpp(82) on function BltB called at line 135]
PREFAST_NEWLINE
Accessing result.min`161a bytes starting at byte offset 12
PREFAST_NEWLINE
Annotation on function BltB requires that {parameter 1} is of length &gt;= {parameter 3} bytes
PREFAST_NEWLINE
  where {parameter 1} is (void *)pb; {parameter 3} is (unsigned int )cb
PREFAST_NEWLINE
[Annotation SAL_writableTo(byteCount({parameter 3})) at c:\somepath\test111.cpp(82)]
PREFAST_NEWLINE

PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
Pointer pb is at offset 12 bytes from the start of the buffer
PREFAST_NEWLINE
cb = result.min`161a
PREFAST_NEWLINE

PREFAST_NEWLINE
where
PREFAST_NEWLINE
offset(pb)`103 == 0
PREFAST_NEWLINE
offset(pb)`116 == 0
PREFAST_NEWLINE
offset(pb)`143 == 12
PREFAST_NEWLINE
offset((*ppbMax))`103 &gt;= 13
PREFAST_NEWLINE

PREFAST_NEWLINE
Overrun access occurs when
PREFAST_NEWLINE
offset((*ppbMax))`103 &lt;= result.min`161a + 11
PREFAST_NEWLINE
result.min`161a + 11 &gt;= 0
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>PbLoadExtRstSst</FUNCTION><DECORATED>?PbLoadExtRstSst@@YAPAEPAU_srst@@HPAE1PAPAE@Z</DECORATED><FUNCLINE>103</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>103</LINE><COLUMN>6</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>108</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>108</LINE><COLUMN>13</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>109</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>110</LINE><COLUMN>10</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>111</LINE><COLUMN>9</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>111</LINE><COLUMN>21</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>112</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>112</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>113</LINE><COLUMN>21</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>114</LINE><COLUMN>25</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>115</LINE><COLUMN>30</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>115</LINE><COLUMN>10</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>116</LINE><COLUMN>20</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>118</LINE><COLUMN>27</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>133</LINE><COLUMN>23</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>133</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>135</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>137</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>138</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>139</LINE><COLUMN>11</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>140</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>143</LINE><COLUMN>19</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>145</LINE><COLUMN>19</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>161</LINE><COLUMN>20</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>161</LINE><COLUMN>15</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>163</LINE><COLUMN>16</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>163</LINE><COLUMN>16</COLUMN></SFA><DEFECTCODE>26011</DEFECTCODE><DESCRIPTION>Potential Underflow using expression '(void *)pb'
PREFAST_NEWLINE
Buffer pb is a parameter to this function declared on line 103
PREFAST_NEWLINE
Buffer is of length offset((*ppbMax))`103 bytes [from annotation SAL_writableTo(elementCount(* ppbMax - pb)) at c:\somepath\test111.cpp(103)] OR
PREFAST_NEWLINE
  offset(pb)`116 bytes [from annotation SAL_readableTo(elementCount(1)) at c:\somepath\test111.cpp(82) on function BltB called at line 135] OR
PREFAST_NEWLINE
  offset(pb)`143 bytes [from annotation SAL_readableTo(elementCount(1)) at c:\somepath\test111.cpp(82) on function BltB called at line 163]
PREFAST_NEWLINE
Accessing result.min`161a bytes starting at byte offset result.min`161a + 12
PREFAST_NEWLINE
Annotation on function BltB requires that {parameter 1} is of length &gt;= {parameter 3} bytes
PREFAST_NEWLINE
  where {parameter 1} is (void *)pb; {parameter 3} is (unsigned int )cb
PREFAST_NEWLINE
[Annotation SAL_writableTo(byteCount({parameter 3})) at c:\somepath\test111.cpp(82)]
PREFAST_NEWLINE

PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
Pointer pb is at offset result.min`161a + 12 bytes from the start of the buffer
PREFAST_NEWLINE
cb = result.min`161a
PREFAST_NEWLINE

PREFAST_NEWLINE
where
PREFAST_NEWLINE
offset(pb)`103 == 0
PREFAST_NEWLINE
offset(pb)`116 == 0
PREFAST_NEWLINE
offset(pb)`143 == 12
PREFAST_NEWLINE
offset((*ppbMax))`103 &gt;= 13
PREFAST_NEWLINE

PREFAST_NEWLINE
Underflow access occurs when
PREFAST_NEWLINE
result.min`161a + 13 &lt;= 0
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>PbLoadExtRstSst</FUNCTION><DECORATED>?PbLoadExtRstSst@@YAPAEPAU_srst@@HPAE1PAPAE@Z</DECORATED><FUNCLINE>103</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>103</LINE><COLUMN>6</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>108</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>108</LINE><COLUMN>13</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>109</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>110</LINE><COLUMN>10</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>111</LINE><COLUMN>9</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>111</LINE><COLUMN>21</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>112</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>112</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>113</LINE><COLUMN>21</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>114</LINE><COLUMN>25</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>115</LINE><COLUMN>30</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>115</LINE><COLUMN>10</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>116</LINE><COLUMN>20</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>118</LINE><COLUMN>27</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>133</LINE><COLUMN>23</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>133</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>135</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>137</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>138</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>139</LINE><COLUMN>11</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>140</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>143</LINE><COLUMN>19</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>145</LINE><COLUMN>19</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>161</LINE><COLUMN>20</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>161</LINE><COLUMN>15</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>163</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>164</LINE><COLUMN>21</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>165</LINE><COLUMN>29</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>190</LINE><COLUMN>22</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>191</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>192</LINE><COLUMN>15</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>193</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>194</LINE><COLUMN>21</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>143</LINE><COLUMN>19</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>145</LINE><COLUMN>19</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>161</LINE><COLUMN>20</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>161</LINE><COLUMN>15</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>163</LINE><COLUMN>16</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>163</LINE><COLUMN>16</COLUMN></SFA><DEFECTCODE>26011</DEFECTCODE><DESCRIPTION>Potential Underflow using expression '(void *)pb'
PREFAST_NEWLINE
Buffer rgb is a parameter to this function declared on line 103
PREFAST_NEWLINE
Buffer lengths are from an assumed __inout annotation on the parameter
PREFAST_NEWLINE
Buffer is of length offset(rgb)`103 + 1 bytes [from annotation valid(elementCount(1)) at c:\somepath\test111.cpp(103)] OR
PREFAST_NEWLINE
  offset(rgb)`103 bytes [from annotation SAL_readableTo(elementCount(1)) at c:\somepath\test111.cpp(82) on function BltB called at line 163]
PREFAST_NEWLINE
Accessing result.min`161a bytes starting at byte offset result.min`161a
PREFAST_NEWLINE
Annotation on function BltB requires that {parameter 1} is of length &gt;= {parameter 3} bytes
PREFAST_NEWLINE
  where {parameter 1} is (void *)pb; {parameter 3} is (unsigned int )cb
PREFAST_NEWLINE
[Annotation SAL_writableTo(byteCount({parameter 3})) at c:\somepath\test111.cpp(82)]
PREFAST_NEWLINE

PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
Pointer pb is at offset result.min`161a bytes from the start of the buffer
PREFAST_NEWLINE
cb = result.min`161a
PREFAST_NEWLINE

PREFAST_NEWLINE
Underflow access occurs when
PREFAST_NEWLINE
offset(rgb)`103 == 0
PREFAST_NEWLINE
result.min`161a + 1 &lt;= 0
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>PbLoadExtRstSst</FUNCTION><DECORATED>?PbLoadExtRstSst@@YAPAEPAU_srst@@HPAE1PAPAE@Z</DECORATED><FUNCLINE>103</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>103</LINE><COLUMN>6</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>108</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>108</LINE><COLUMN>13</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>109</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>110</LINE><COLUMN>10</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>111</LINE><COLUMN>9</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>111</LINE><COLUMN>21</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>112</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>112</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>113</LINE><COLUMN>21</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>114</LINE><COLUMN>25</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>115</LINE><COLUMN>30</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>115</LINE><COLUMN>10</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>116</LINE><COLUMN>20</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>118</LINE><COLUMN>27</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>133</LINE><COLUMN>23</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>133</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>135</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>137</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>138</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>139</LINE><COLUMN>11</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>140</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>143</LINE><COLUMN>19</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>145</LINE><COLUMN>19</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>147</LINE><COLUMN>35</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>147</LINE><COLUMN>19</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>148</LINE><COLUMN>23</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>150</LINE><COLUMN>35</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>150</LINE><COLUMN>19</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>152</LINE><COLUMN>39</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>154</LINE><COLUMN>20</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>156</LINE><COLUMN>19</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>157</LINE><COLUMN>24</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>158</LINE><COLUMN>28</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>161</LINE><COLUMN>20</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>161</LINE><COLUMN>15</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>163</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>164</LINE><COLUMN>21</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>165</LINE><COLUMN>29</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>190</LINE><COLUMN>22</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>191</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>192</LINE><COLUMN>15</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>193</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>194</LINE><COLUMN>21</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>143</LINE><COLUMN>19</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>145</LINE><COLUMN>19</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>161</LINE><COLUMN>20</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>161</LINE><COLUMN>15</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>163</LINE><COLUMN>16</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>163</LINE><COLUMN>16</COLUMN></SFA><DEFECTCODE>26002</DEFECTCODE><DESCRIPTION>Accessing buffer 'result.PerstFirstFromPrst'115' of unspecified length.  Please annotate.
PREFAST_NEWLINE

PREFAST_NEWLINE
If we assume that the buffer has single element in length, then the checker would report:
PREFAST_NEWLINE
Potential read overflow using expression '(void *)pbT'
PREFAST_NEWLINE
Buffer result.PerstFirstFromPrst created during call to PerstFirstFromPrst on line 115
PREFAST_NEWLINE
Buffer is of length 12 bytes [assumed because the buffer is unannotated] OR
PREFAST_NEWLINE
  offset(perst)`116 bytes [from annotation SAL_readableTo(elementCount(1)) at c:\somepath\test111.cpp(81) on function SwapBytes called at line 137]
PREFAST_NEWLINE
Accessing result.min`161a bytes starting at byte offset 12
PREFAST_NEWLINE
Annotation on function BltB requires that {parameter 2} is of length &gt;= {parameter 3} bytes
PREFAST_NEWLINE
  where {parameter 2} is (void *)pbT; {parameter 3} is (unsigned int )cb
PREFAST_NEWLINE
[Annotation SAL_readableTo(byteCount({parameter 3})) at c:\somepath\test111.cpp(82)]
PREFAST_NEWLINE

PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
Pointer pbT is at offset 12 bytes from the start of the buffer
PREFAST_NEWLINE
cb = result.min`161a
PREFAST_NEWLINE

PREFAST_NEWLINE
where
PREFAST_NEWLINE
offset(pbT)`143 == 12
PREFAST_NEWLINE
offset(perst)`116 == 0
PREFAST_NEWLINE
offset(result.PerstFirstFromPrst)`115 == 0
PREFAST_NEWLINE

PREFAST_NEWLINE
Overrun access occurs when
PREFAST_NEWLINE
result.min`161a &gt;= 1
PREFAST_NEWLINE

PREFAST_NEWLINE
There are other instances of this error:
PREFAST_NEWLINE
Writing to buffer 'result.PerstFirstFromPrst'115' of unspecified length.  Please annotate. at line 164
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>PbLoadExtRstSst</FUNCTION><DECORATED>?PbLoadExtRstSst@@YAPAEPAU_srst@@HPAE1PAPAE@Z</DECORATED><FUNCLINE>103</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>103</LINE><COLUMN>6</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>108</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>108</LINE><COLUMN>13</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>109</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>110</LINE><COLUMN>10</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>111</LINE><COLUMN>9</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>111</LINE><COLUMN>21</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>112</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>112</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>113</LINE><COLUMN>21</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>114</LINE><COLUMN>25</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>115</LINE><COLUMN>30</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>115</LINE><COLUMN>10</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>116</LINE><COLUMN>20</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>118</LINE><COLUMN>27</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>133</LINE><COLUMN>23</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>133</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>135</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>137</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>138</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>139</LINE><COLUMN>11</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>140</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>143</LINE><COLUMN>19</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>145</LINE><COLUMN>19</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>161</LINE><COLUMN>20</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>161</LINE><COLUMN>15</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>163</LINE><COLUMN>16</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>163</LINE><COLUMN>16</COLUMN></SFA><DEFECTCODE>26002</DEFECTCODE><DESCRIPTION>Accessing buffer 'result.PerstNextFromPerst'199' of unspecified length.  Please annotate.
PREFAST_NEWLINE

PREFAST_NEWLINE
If we assume that the buffer has single element in length, then the checker would report:
PREFAST_NEWLINE
Potential read overflow using expression '(void *)pbT'
PREFAST_NEWLINE
Buffer result.PerstNextFromPerst created during call to PerstNextFromPerst on line 199
PREFAST_NEWLINE
Buffer is of length 12 bytes [assumed because the buffer is unannotated] OR
PREFAST_NEWLINE
  offset(result.PerstNextFromPerst)`199 bytes [from annotation SAL_readableTo(elementCount(1)) at c:\somepath\test111.cpp(81) on function SwapBytes called at line 137]
PREFAST_NEWLINE
Accessing result.min`161a bytes starting at byte offset 12
PREFAST_NEWLINE
Annotation on function BltB requires that {parameter 2} is of length &gt;= {parameter 3} bytes
PREFAST_NEWLINE
  where {parameter 2} is (void *)pbT; {parameter 3} is (unsigned int )cb
PREFAST_NEWLINE
[Annotation SAL_readableTo(byteCount({parameter 3})) at c:\somepath\test111.cpp(82)]
PREFAST_NEWLINE

PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
Pointer pbT is at offset 12 bytes from the start of the buffer
PREFAST_NEWLINE
cb = result.min`161a
PREFAST_NEWLINE

PREFAST_NEWLINE
where
PREFAST_NEWLINE
offset(pbT)`143(1) == 12
PREFAST_NEWLINE
offset(result.PerstNextFromPerst)`199 == 0
PREFAST_NEWLINE

PREFAST_NEWLINE
Overrun access occurs when
PREFAST_NEWLINE
result.min`161a &gt;= 1
PREFAST_NEWLINE

PREFAST_NEWLINE
There are other instances of this error:
PREFAST_NEWLINE
Writing to buffer 'result.PerstNextFromPerst'199' of unspecified length.  Please annotate. at line 164
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>PbLoadExtRstSst</FUNCTION><DECORATED>?PbLoadExtRstSst@@YAPAEPAU_srst@@HPAE1PAPAE@Z</DECORATED><FUNCLINE>103</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>103</LINE><COLUMN>6</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>108</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>108</LINE><COLUMN>13</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>109</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>110</LINE><COLUMN>10</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>111</LINE><COLUMN>9</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>111</LINE><COLUMN>21</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>112</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>112</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>113</LINE><COLUMN>21</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>114</LINE><COLUMN>25</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>115</LINE><COLUMN>30</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>115</LINE><COLUMN>10</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>116</LINE><COLUMN>20</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>118</LINE><COLUMN>27</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>133</LINE><COLUMN>23</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>133</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>135</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>137</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>138</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>139</LINE><COLUMN>11</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>140</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>143</LINE><COLUMN>19</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>145</LINE><COLUMN>19</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>161</LINE><COLUMN>20</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>161</LINE><COLUMN>15</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>163</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>164</LINE><COLUMN>21</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>165</LINE><COLUMN>29</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>190</LINE><COLUMN>22</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>191</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>192</LINE><COLUMN>15</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>193</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>194</LINE><COLUMN>21</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>143</LINE><COLUMN>19</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>196</LINE><COLUMN>18</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>199</LINE><COLUMN>34</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>199</LINE><COLUMN>14</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>116</LINE><COLUMN>20</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>118</LINE><COLUMN>27</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>133</LINE><COLUMN>23</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>133</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>135</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>137</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>138</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>139</LINE><COLUMN>11</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>140</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>143</LINE><COLUMN>19</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>145</LINE><COLUMN>19</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>161</LINE><COLUMN>20</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>161</LINE><COLUMN>15</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test111.cpp</FILENAME><LINE>163</LINE><COLUMN>16</COLUMN></SFA></PATH></DEFECT></DEFECTS>