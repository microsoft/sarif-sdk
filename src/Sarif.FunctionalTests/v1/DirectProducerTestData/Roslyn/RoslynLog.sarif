{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "1.3.0.0",
        "fileVersion": "1.3.0.0",
        "semanticVersion": "1.3.0",
        "language": "en-US"
      },
      "results": [
        {
          "ruleId": "CS0618",
          "level": "warning",
          "message": "'BsonBinaryType.BinaryOld' is obsolete: 'This type has been deprecated in the BSON specification. Use Binary instead.'",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Bson/BsonReader.cs",
                "region": {
                  "startLine": 571,
                  "startColumn": 31,
                  "endLine": 571,
                  "endColumn": 55
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 2
          }
        },
        {
          "ruleId": "CS0618",
          "level": "warning",
          "message": "'DefaultContractResolver.DefaultContractResolver(bool)' is obsolete: 'DefaultContractResolver(bool) is obsolete. Use the parameterless constructor and cache instances of the contract resolver within your application for optimal performance.'",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/CamelCasePropertyNamesContractResolver.cs",
                "region": {
                  "startLine": 41,
                  "startColumn": 13,
                  "endLine": 41,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 2
          }
        },
        {
          "ruleId": "CS0618",
          "level": "warning",
          "message": "'DefaultContractResolver.DefaultContractResolver(bool)' is obsolete: 'DefaultContractResolver(bool) is obsolete. Use the parameterless constructor and cache instances of the contract resolver within your application for optimal performance.'",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 101,
                  "startColumn": 63,
                  "endLine": 101,
                  "endColumn": 96
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 2
          }
        },
        {
          "ruleId": "CS0618",
          "level": "warning",
          "message": "'JsonObjectContract.OverrideConstructor' is obsolete: 'OverrideConstructor is obsolete. Use OverrideCreator instead.'",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 410,
                  "startColumn": 21,
                  "endLine": 410,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 2
          }
        },
        {
          "ruleId": "CS0618",
          "level": "warning",
          "message": "'JsonObjectContract.ParametrizedConstructor' is obsolete: 'ParametrizedConstructor is obsolete. Use OverrideCreator instead.'",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 431,
                  "startColumn": 25,
                  "endLine": 431,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 2
          }
        },
        {
          "ruleId": "CS1574",
          "level": "warning",
          "message": "XML comment has cref attribute 'NonSerializedAttribute' that could not be resolved",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/MemberSerialization.cs",
                "region": {
                  "startLine": 39,
                  "startColumn": 137,
                  "endLine": 39,
                  "endColumn": 159
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1574",
          "level": "warning",
          "message": "XML comment has cref attribute 'NonSerializedAttribute' that could not be resolved",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/MemberSerialization.cs",
                "region": {
                  "startLine": 51,
                  "startColumn": 137,
                  "endLine": 51,
                  "endColumn": 159
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1574",
          "level": "warning",
          "message": "XML comment has cref attribute 'SerializableAttribute' that could not be resolved",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/MemberSerialization.cs",
                "region": {
                  "startLine": 52,
                  "startColumn": 97,
                  "endLine": 52,
                  "endColumn": 118
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Bson/BsonReader.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 1,
                  "endLine": 32,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1027",
          "level": "warning",
          "message": "Tabs must not be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Bson/BsonReader.cs",
                "region": {
                  "startLine": 91,
                  "startColumn": 12,
                  "endLine": 91,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Bson/BsonReader.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 1,
                  "endLine": 29,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Bson/BsonWriter.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 1,
                  "endLine": 34,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Bson/BsonWriter.cs",
                "region": {
                  "startLine": 33,
                  "startColumn": 1,
                  "endLine": 33,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1208",
          "level": "warning",
          "message": "Using directive for 'System.Globalization' must appear before directive for 'Newtonsoft.Json.Linq'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Bson/BsonWriter.cs",
                "region": {
                  "startLine": 36,
                  "startColumn": 1,
                  "endLine": 36,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1208",
          "level": "warning",
          "message": "Using directive for 'System.Globalization' must appear before directive for 'Newtonsoft.Json.Bson'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/BsonObjectIdConverter.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 1,
                  "endLine": 28,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1505",
          "level": "warning",
          "message": "An opening brace must not be followed by a blank line.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 48,
                  "startColumn": 1,
                  "endLine": 48,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1027",
          "level": "warning",
          "message": "Tabs must not be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Bson/BsonReader.cs",
                "region": {
                  "startLine": 104,
                  "startColumn": 12,
                  "endLine": 104,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/DiscriminatedUnionConverter.cs",
                "region": {
                  "startLine": 36,
                  "startColumn": 1,
                  "endLine": 36,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1208",
          "level": "warning",
          "message": "Using directive for 'System' must appear before directive for 'Newtonsoft.Json.Linq'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/DiscriminatedUnionConverter.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 1,
                  "endLine": 28,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1208",
          "level": "warning",
          "message": "Using directive for 'System.Collections' must appear before directive for 'Newtonsoft.Json.Linq'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/DiscriminatedUnionConverter.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 1,
                  "endLine": 29,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1208",
          "level": "warning",
          "message": "Using directive for 'System.Collections.Generic' must appear before directive for 'Newtonsoft.Json.Linq'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/DiscriminatedUnionConverter.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 1,
                  "endLine": 30,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1208",
          "level": "warning",
          "message": "Using directive for 'System.Globalization' must appear before directive for 'Newtonsoft.Json.Linq'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/DiscriminatedUnionConverter.cs",
                "region": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 38,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1208",
          "level": "warning",
          "message": "Using directive for 'System.Reflection' must appear before directive for 'Newtonsoft.Json.Utilities'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/KeyValuePairConverter.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 1,
                  "endLine": 30,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/RegexConverter.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 1,
                  "endLine": 27,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1208",
          "level": "warning",
          "message": "Using directive for 'System.Globalization' must appear before directive for 'Newtonsoft.Json.Bson'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/RegexConverter.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 1,
                  "endLine": 29,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1204",
          "level": "warning",
          "message": "Static members must appear before non-static members",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/FSharpUtils.cs",
                "region": {
                  "startLine": 56,
                  "startColumn": 27,
                  "endLine": 56,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 33,
                  "startColumn": 1,
                  "endLine": 33,
                  "endColumn": 18
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1515",
          "level": "warning",
          "message": "Single-line comment must be preceded by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Bson/BsonReader.cs",
                "region": {
                  "startLine": 570,
                  "startColumn": 13,
                  "endLine": 570,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonConvert.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 1,
                  "endLine": 27,
                  "endColumn": 17
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonConvert.cs",
                "region": {
                  "startLine": 36,
                  "startColumn": 1,
                  "endLine": 36,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonConvert.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 1,
                  "endLine": 37,
                  "endColumn": 18
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1515",
          "level": "warning",
          "message": "Single-line comment must be preceded by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Bson/BsonReader.cs",
                "region": {
                  "startLine": 587,
                  "startColumn": 13,
                  "endLine": 587,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1208",
          "level": "warning",
          "message": "Using directive for 'System.Xml' must appear before directive for 'Newtonsoft.Json.Utilities'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonConvert.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 1,
                  "endLine": 37,
                  "endColumn": 18
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1208",
          "level": "warning",
          "message": "Using directive for 'System.Text' must appear before directive for 'Newtonsoft.Json.Utilities'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonConvert.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 1,
                  "endLine": 40,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1515",
          "level": "warning",
          "message": "Single-line comment must be preceded by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Bson/BsonReader.cs",
                "region": {
                  "startLine": 626,
                  "startColumn": 25,
                  "endLine": 626,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1515",
          "level": "warning",
          "message": "Single-line comment must be preceded by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Bson/BsonReader.cs",
                "region": {
                  "startLine": 712,
                  "startColumn": 25,
                  "endLine": 712,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonConverter.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 1,
                  "endLine": 29,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1208",
          "level": "warning",
          "message": "Using directive for 'System.Globalization' must appear before directive for 'Newtonsoft.Json.Utilities'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonConverterAttribute.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 1,
                  "endLine": 28,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonConverterCollection.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 1,
                  "endLine": 28,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1402",
          "level": "warning",
          "message": "File may only contain a single class",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Bson/BsonToken.cs",
                "region": {
                  "startLine": 38,
                  "startColumn": 20,
                  "endLine": 38,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1402",
          "level": "warning",
          "message": "File may only contain a single class",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Bson/BsonToken.cs",
                "region": {
                  "startLine": 64,
                  "startColumn": 20,
                  "endLine": 64,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1402",
          "level": "warning",
          "message": "File may only contain a single class",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Bson/BsonToken.cs",
                "region": {
                  "startLine": 90,
                  "startColumn": 20,
                  "endLine": 90,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1402",
          "level": "warning",
          "message": "File may only contain a single class",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Bson/BsonToken.cs",
                "region": {
                  "startLine": 112,
                  "startColumn": 20,
                  "endLine": 112,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1402",
          "level": "warning",
          "message": "File may only contain a single class",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Bson/BsonToken.cs",
                "region": {
                  "startLine": 124,
                  "startColumn": 20,
                  "endLine": 124,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1402",
          "level": "warning",
          "message": "File may only contain a single class",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Bson/BsonToken.cs",
                "region": {
                  "startLine": 135,
                  "startColumn": 20,
                  "endLine": 135,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1402",
          "level": "warning",
          "message": "File may only contain a single class",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Bson/BsonToken.cs",
                "region": {
                  "startLine": 152,
                  "startColumn": 20,
                  "endLine": 152,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonReader.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 1,
                  "endLine": 28,
                  "endColumn": 17
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 1,
                  "endLine": 32,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1208",
          "level": "warning",
          "message": "Using directive for 'System.Runtime.Serialization' must appear before directive for 'Newtonsoft.Json.Utilities'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 36,
                  "startColumn": 1,
                  "endLine": 36,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonSerializerSettings.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 1,
                  "endLine": 30,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1208",
          "level": "warning",
          "message": "Using directive for 'System.Runtime.Serialization' must appear before directive for 'Newtonsoft.Json.Serialization'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonSerializerSettings.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 1,
                  "endLine": 32,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 1,
                  "endLine": 30,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 1,
                  "endLine": 31,
                  "endColumn": 17
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonTextWriter.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 1,
                  "endLine": 32,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 35,
                  "startColumn": 1,
                  "endLine": 35,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1208",
          "level": "warning",
          "message": "Using directive for 'System.Globalization' must appear before directive for 'Newtonsoft.Json.Utilities'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 1,
                  "endLine": 34,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1208",
          "level": "warning",
          "message": "Using directive for 'System.Text.RegularExpressions' must appear before directive for 'Newtonsoft.Json.Utilities'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 35,
                  "startColumn": 1,
                  "endLine": 35,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1208",
          "level": "warning",
          "message": "Using directive for 'System.IO' must appear before directive for 'Newtonsoft.Json.Utilities'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 36,
                  "startColumn": 1,
                  "endLine": 36,
                  "endColumn": 17
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1208",
          "level": "warning",
          "message": "Using directive for 'System.Globalization' must appear before directive for 'Newtonsoft.Json.Utilities'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonWriter.cs",
                "region": {
                  "startLine": 33,
                  "startColumn": 1,
                  "endLine": 33,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1208",
          "level": "warning",
          "message": "Using directive for 'System.Globalization' must appear before directive for 'Newtonsoft.Json.Utilities'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/Extensions.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 1,
                  "endLine": 29,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JArray.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 1,
                  "endLine": 30,
                  "endColumn": 17
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1208",
          "level": "warning",
          "message": "Using directive for 'System.IO' must appear before directive for 'Newtonsoft.Json.Utilities'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JArray.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 1,
                  "endLine": 30,
                  "endColumn": 17
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1208",
          "level": "warning",
          "message": "Using directive for 'System.Globalization' must appear before directive for 'Newtonsoft.Json.Utilities'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JArray.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 1,
                  "endLine": 31,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1208",
          "level": "warning",
          "message": "Using directive for 'System.Globalization' must appear before directive for 'Newtonsoft.Json.Utilities'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JConstructor.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 1,
                  "endLine": 30,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JContainer.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 1,
                  "endLine": 31,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JContainer.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 1,
                  "endLine": 34,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1208",
          "level": "warning",
          "message": "Using directive for 'System.Collections' must appear before directive for 'Newtonsoft.Json.Utilities'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JContainer.cs",
                "region": {
                  "startLine": 33,
                  "startColumn": 1,
                  "endLine": 33,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1208",
          "level": "warning",
          "message": "Using directive for 'System.Globalization' must appear before directive for 'Newtonsoft.Json.Utilities'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JContainer.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 1,
                  "endLine": 34,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1208",
          "level": "warning",
          "message": "Using directive for 'System.ComponentModel' must appear before directive for 'Newtonsoft.Json.Utilities'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JContainer.cs",
                "region": {
                  "startLine": 35,
                  "startColumn": 1,
                  "endLine": 35,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1208",
          "level": "warning",
          "message": "Using directive for 'System.Collections' must appear before directive for 'Newtonsoft.Json.Utilities'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JEnumerable.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 1,
                  "endLine": 34,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JObject.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 1,
                  "endLine": 37,
                  "endColumn": 17
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1208",
          "level": "warning",
          "message": "Using directive for 'System.Globalization' must appear before directive for 'Newtonsoft.Json.Utilities'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JObject.cs",
                "region": {
                  "startLine": 39,
                  "startColumn": 1,
                  "endLine": 39,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1208",
          "level": "warning",
          "message": "Using directive for 'System.Diagnostics' must appear before directive for 'Newtonsoft.Json.Utilities'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JProperty.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 1,
                  "endLine": 30,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1208",
          "level": "warning",
          "message": "Using directive for 'System.Globalization' must appear before directive for 'Newtonsoft.Json.Utilities'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JProperty.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 1,
                  "endLine": 31,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 1,
                  "endLine": 37,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 1,
                  "endLine": 40,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1208",
          "level": "warning",
          "message": "Using directive for 'System.Diagnostics' must appear before directive for 'Newtonsoft.Json.Utilities'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 39,
                  "startColumn": 1,
                  "endLine": 39,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1208",
          "level": "warning",
          "message": "Using directive for 'System.Globalization' must appear before directive for 'Newtonsoft.Json.Utilities'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 1,
                  "endLine": 40,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1208",
          "level": "warning",
          "message": "Using directive for 'System.Collections' must appear before directive for 'Newtonsoft.Json.Utilities'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 41,
                  "startColumn": 1,
                  "endLine": 41,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1208",
          "level": "warning",
          "message": "Using directive for 'System.Globalization' must appear before directive for 'Newtonsoft.Json.Utilities'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 1,
                  "endLine": 29,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1208",
          "level": "warning",
          "message": "Using directive for 'System.Linq.Expressions' must appear before directive for 'Newtonsoft.Json.Utilities'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 1,
                  "endLine": 32,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1027",
          "level": "warning",
          "message": "Tabs must not be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/BsonObjectIdConverter.cs",
                "region": {
                  "startLine": 84,
                  "startColumn": 12,
                  "endLine": 84,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1027",
          "level": "warning",
          "message": "Tabs must not be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/CustomCreationConverter.cs",
                "region": {
                  "startLine": 86,
                  "startColumn": 12,
                  "endLine": 86,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1027",
          "level": "warning",
          "message": "Tabs must not be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/CustomCreationConverter.cs",
                "region": {
                  "startLine": 97,
                  "startColumn": 12,
                  "endLine": 97,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1027",
          "level": "warning",
          "message": "Tabs must not be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/DateTimeConverterBase.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 12,
                  "endLine": 40,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Schema/JsonSchema.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 1,
                  "endLine": 28,
                  "endColumn": 17
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1208",
          "level": "warning",
          "message": "Using directive for 'System.Globalization' must appear before directive for 'Newtonsoft.Json.Utilities'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Schema/JsonSchema.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 1,
                  "endLine": 31,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Schema/JsonSchemaBuilder.cs",
                "region": {
                  "startLine": 35,
                  "startColumn": 1,
                  "endLine": 35,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Schema/JsonSchemaGenerator.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 1,
                  "endLine": 31,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Schema/JsonSchemaGenerator.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 1,
                  "endLine": 27,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Schema/JsonSchemaGenerator.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 1,
                  "endLine": 28,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1027",
          "level": "warning",
          "message": "Tabs must not be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/DiscriminatedUnionConverter.cs",
                "region": {
                  "startLine": 239,
                  "startColumn": 12,
                  "endLine": 239,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/ExpressionValueProvider.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 1,
                  "endLine": 32,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/ExpressionValueProvider.cs",
                "region": {
                  "startLine": 33,
                  "startColumn": 1,
                  "endLine": 33,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1208",
          "level": "warning",
          "message": "Using directive for 'System.Globalization' must appear before directive for 'Newtonsoft.Json.Utilities'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/ExpressionValueProvider.cs",
                "region": {
                  "startLine": 35,
                  "startColumn": 1,
                  "endLine": 35,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 45,
                  "startColumn": 1,
                  "endLine": 45,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1208",
          "level": "warning",
          "message": "Using directive for 'System.Runtime.CompilerServices' must appear before directive for 'Newtonsoft.Json.Linq'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 47,
                  "startColumn": 1,
                  "endLine": 47,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1208",
          "level": "warning",
          "message": "Using directive for 'System.Globalization' must appear before directive for 'Newtonsoft.Json.Utilities'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/DefaultReferenceResolver.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 1,
                  "endLine": 28,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/DefaultSerializationBinder.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 1,
                  "endLine": 27,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/DefaultSerializationBinder.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 1,
                  "endLine": 28,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1027",
          "level": "warning",
          "message": "Tabs must not be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/ExpandoObjectConverter.cs",
                "region": {
                  "startLine": 148,
                  "startColumn": 12,
                  "endLine": 148,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1027",
          "level": "warning",
          "message": "Tabs must not be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/ExpandoObjectConverter.cs",
                "region": {
                  "startLine": 159,
                  "startColumn": 12,
                  "endLine": 159,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonArrayContract.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 1,
                  "endLine": 31,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1208",
          "level": "warning",
          "message": "Using directive for 'System.Collections' must appear before directive for 'Newtonsoft.Json.Utilities'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonArrayContract.cs",
                "region": {
                  "startLine": 33,
                  "startColumn": 1,
                  "endLine": 33,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonContainerContract.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 1,
                  "endLine": 28,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1208",
          "level": "warning",
          "message": "Using directive for 'System.Collections' must appear before directive for 'Newtonsoft.Json.Utilities'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonContainerContract.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 1,
                  "endLine": 30,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonDictionaryContract.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 1,
                  "endLine": 29,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1208",
          "level": "warning",
          "message": "Using directive for 'System.Collections' must appear before directive for 'Newtonsoft.Json.Utilities'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonDictionaryContract.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 1,
                  "endLine": 31,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonDynamicContract.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 1,
                  "endLine": 31,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1208",
          "level": "warning",
          "message": "Using directive for 'System.Collections' must appear before directive for 'Newtonsoft.Json.Utilities'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonDynamicContract.cs",
                "region": {
                  "startLine": 33,
                  "startColumn": 1,
                  "endLine": 33,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonPropertyCollection.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 1,
                  "endLine": 28,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1208",
          "level": "warning",
          "message": "Using directive for 'System.Globalization' must appear before directive for 'Newtonsoft.Json.Utilities'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonPropertyCollection.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 1,
                  "endLine": 31,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 36,
                  "startColumn": 1,
                  "endLine": 36,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1208",
          "level": "warning",
          "message": "Using directive for 'System.Runtime.Serialization' must appear before directive for 'Newtonsoft.Json.Utilities'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 39,
                  "startColumn": 1,
                  "endLine": 39,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonSerializerProxy.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 1,
                  "endLine": 29,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1208",
          "level": "warning",
          "message": "Using directive for 'System.Runtime.Serialization' must appear before directive for 'Newtonsoft.Json.Utilities'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonSerializerProxy.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 1,
                  "endLine": 31,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/ReflectionValueProvider.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 1,
                  "endLine": 27,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1208",
          "level": "warning",
          "message": "Using directive for 'System.Globalization' must appear before directive for 'Newtonsoft.Json.Utilities'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/ReflectionValueProvider.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 1,
                  "endLine": 29,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1027",
          "level": "warning",
          "message": "Tabs must not be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/KeyValuePairConverter.cs",
                "region": {
                  "startLine": 133,
                  "startColumn": 12,
                  "endLine": 133,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1512",
          "level": "warning",
          "message": "Single-line comments must not be followed by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/RegexConverter.cs",
                "region": {
                  "startLine": 75,
                  "startColumn": 13,
                  "endLine": 75,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/CollectionUtils.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 1,
                  "endLine": 30,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/CollectionWrapper.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 1,
                  "endLine": 29,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 1,
                  "endLine": 28,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 1,
                  "endLine": 34,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1208",
          "level": "warning",
          "message": "Using directive for 'System.Reflection' must appear before directive for 'Newtonsoft.Json.Serialization'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 36,
                  "startColumn": 1,
                  "endLine": 36,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/ExpressionReflectionDelegateFactory.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 1,
                  "endLine": 29,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 1,
                  "endLine": 28,
                  "endColumn": 18
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DictionaryWrapper.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 1,
                  "endLine": 27,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1027",
          "level": "warning",
          "message": "Tabs must not be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/RegexConverter.cs",
                "region": {
                  "startLine": 220,
                  "startColumn": 12,
                  "endLine": 220,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicUtils.cs",
                "region": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 38,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/FSharpUtils.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 1,
                  "endLine": 27,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 1,
                  "endLine": 31,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1208",
          "level": "warning",
          "message": "Using directive for 'System.Reflection' must appear before directive for 'Newtonsoft.Json.Serialization'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/LateBoundReflectionDelegateFactory.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 1,
                  "endLine": 28,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/MiscellaneousUtils.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 1,
                  "endLine": 31,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/ReflectionObject.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 1,
                  "endLine": 30,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1208",
          "level": "warning",
          "message": "Using directive for 'System' must appear before directive for 'Newtonsoft.Json.Serialization'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/ReflectionObject.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 1,
                  "endLine": 27,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1208",
          "level": "warning",
          "message": "Using directive for 'System.Collections.Generic' must appear before directive for 'Newtonsoft.Json.Serialization'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/ReflectionObject.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 1,
                  "endLine": 28,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1208",
          "level": "warning",
          "message": "Using directive for 'System.IO' must appear before directive for 'Newtonsoft.Json.Serialization'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/ReflectionObject.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 1,
                  "endLine": 29,
                  "endColumn": 17
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1208",
          "level": "warning",
          "message": "Using directive for 'System.Reflection' must appear before directive for 'Newtonsoft.Json.Serialization'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/ReflectionObject.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 1,
                  "endLine": 30,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1208",
          "level": "warning",
          "message": "Using directive for 'System.Globalization' must appear before directive for 'Newtonsoft.Json.Serialization'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/ReflectionObject.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 1,
                  "endLine": 31,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 1,
                  "endLine": 31,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1027",
          "level": "warning",
          "message": "Tabs must not be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/VersionConverter.cs",
                "region": {
                  "startLine": 99,
                  "startColumn": 12,
                  "endLine": 99,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1649",
          "level": "warning",
          "message": "File name must match first type name.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 343,
                  "startColumn": 24,
                  "endLine": 343,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedFileName": "IXmlDocument.cs"
            }
          }
        },
        {
          "ruleId": "SA1210",
          "level": "warning",
          "message": "Using directives must be ordered alphabetically by the namespaces.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/StringUtils.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 1,
                  "endLine": 29,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1402",
          "level": "warning",
          "message": "File may only contain a single class",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 399,
                  "startColumn": 20,
                  "endLine": 399,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1402",
          "level": "warning",
          "message": "File may only contain a single class",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 432,
                  "startColumn": 20,
                  "endLine": 432,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1402",
          "level": "warning",
          "message": "File may only contain a single class",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 468,
                  "startColumn": 20,
                  "endLine": 468,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1402",
          "level": "warning",
          "message": "File may only contain a single class",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 585,
                  "startColumn": 20,
                  "endLine": 585,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1402",
          "level": "warning",
          "message": "File may only contain a single class",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 617,
                  "startColumn": 20,
                  "endLine": 617,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1402",
          "level": "warning",
          "message": "File may only contain a single class",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 649,
                  "startColumn": 20,
                  "endLine": 649,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1402",
          "level": "warning",
          "message": "File may only contain a single class",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 673,
                  "startColumn": 20,
                  "endLine": 673,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1402",
          "level": "warning",
          "message": "File may only contain a single class",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 764,
                  "startColumn": 20,
                  "endLine": 764,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1402",
          "level": "warning",
          "message": "File may only contain a single class",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 820,
                  "startColumn": 20,
                  "endLine": 820,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1402",
          "level": "warning",
          "message": "File may only contain a single class",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 862,
                  "startColumn": 20,
                  "endLine": 862,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1027",
          "level": "warning",
          "message": "Tabs must not be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1927,
                  "startColumn": 12,
                  "endLine": 1927,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1515",
          "level": "warning",
          "message": "Single-line comment must be preceded by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1888,
                  "startColumn": 13,
                  "endLine": 1888,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1517",
          "level": "warning",
          "message": "Code must not contain blank lines at start of file",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/FormatterAssemblyStyle.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 2,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1027",
          "level": "warning",
          "message": "Tabs must not be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/IJsonLineInfo.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 12,
                  "endLine": 37,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1027",
          "level": "warning",
          "message": "Tabs must not be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonContainerAttribute.cs",
                "region": {
                  "startLine": 82,
                  "startColumn": 12,
                  "endLine": 82,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1027",
          "level": "warning",
          "message": "Tabs must not be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonContainerAttribute.cs",
                "region": {
                  "startLine": 94,
                  "startColumn": 12,
                  "endLine": 94,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1624",
          "level": "warning",
          "message": "Because the property only contains a visible get accessor, the documentation summary text must begin with 'Gets'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Bson/BsonObjectId.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 23,
                  "endLine": 40,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets",
              "TextToRemove": "Gets or sets"
            }
          }
        },
        {
          "ruleId": "CA1001",
          "level": "warning",
          "message": "Type 'BsonBinaryWriter' owns disposable fields but is not disposable",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Bson/BsonBinaryWriter.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 20,
                  "endLine": 34,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1027",
          "level": "warning",
          "message": "Tabs must not be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonConverter.cs",
                "region": {
                  "startLine": 62,
                  "startColumn": 12,
                  "endLine": 62,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1027",
          "level": "warning",
          "message": "Tabs must not be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonExtensionDataAttribute.cs",
                "region": {
                  "startLine": 16,
                  "startColumn": 12,
                  "endLine": 16,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1027",
          "level": "warning",
          "message": "Tabs must not be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonExtensionDataAttribute.cs",
                "region": {
                  "startLine": 24,
                  "startColumn": 12,
                  "endLine": 24,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets or sets a value indicating whether'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonExtensionDataAttribute.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 21,
                  "endLine": 18,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets or sets a value indicating whether"
            }
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets or sets a value indicating whether'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonExtensionDataAttribute.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 21,
                  "endLine": 26,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets or sets a value indicating whether"
            }
          }
        },
        {
          "ruleId": "SA1027",
          "level": "warning",
          "message": "Tabs must not be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonObjectAttribute.cs",
                "region": {
                  "startLine": 56,
                  "startColumn": 12,
                  "endLine": 56,
                  "endColumn": 78
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets or sets'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonContainerAttribute.cs",
                "region": {
                  "startLine": 58,
                  "startColumn": 21,
                  "endLine": 58,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets or sets"
            }
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets or sets'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonContainerAttribute.cs",
                "region": {
                  "startLine": 69,
                  "startColumn": 25,
                  "endLine": 69,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets or sets"
            }
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets or sets a value indicating whether'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonContainerAttribute.cs",
                "region": {
                  "startLine": 84,
                  "startColumn": 21,
                  "endLine": 84,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets or sets a value indicating whether"
            }
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets or sets a value indicating whether'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonContainerAttribute.cs",
                "region": {
                  "startLine": 96,
                  "startColumn": 21,
                  "endLine": 96,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets or sets a value indicating whether"
            }
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets or sets'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonPropertyAttribute.cs",
                "region": {
                  "startLine": 65,
                  "startColumn": 25,
                  "endLine": 65,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets or sets"
            }
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets or sets a value indicating whether'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonPropertyAttribute.cs",
                "region": {
                  "startLine": 121,
                  "startColumn": 21,
                  "endLine": 121,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets or sets a value indicating whether"
            }
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets or sets a value indicating whether'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonPropertyAttribute.cs",
                "region": {
                  "startLine": 179,
                  "startColumn": 21,
                  "endLine": 179,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets or sets a value indicating whether"
            }
          }
        },
        {
          "ruleId": "SA1204",
          "level": "warning",
          "message": "Static members must appear before non-static members",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonPosition.cs",
                "region": {
                  "startLine": 104,
                  "startColumn": 30,
                  "endLine": 104,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1027",
          "level": "warning",
          "message": "Tabs must not be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonPropertyAttribute.cs",
                "region": {
                  "startLine": 141,
                  "startColumn": 12,
                  "endLine": 141,
                  "endColumn": 67
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1504",
          "level": "warning",
          "message": "All accessors must be single-line or multi-line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonReader.cs",
                "region": {
                  "startLine": 176,
                  "startColumn": 13,
                  "endLine": 176,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1504",
          "level": "warning",
          "message": "All accessors must be single-line or multi-line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonReader.cs",
                "region": {
                  "startLine": 193,
                  "startColumn": 13,
                  "endLine": 193,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1504",
          "level": "warning",
          "message": "All accessors must be single-line or multi-line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonReader.cs",
                "region": {
                  "startLine": 216,
                  "startColumn": 13,
                  "endLine": 216,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets or sets'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonReader.cs",
                "region": {
                  "startLine": 165,
                  "startColumn": 29,
                  "endLine": 165,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets or sets"
            }
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets or sets'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonReader.cs",
                "region": {
                  "startLine": 191,
                  "startColumn": 34,
                  "endLine": 191,
                  "endColumn": 51
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets or sets"
            }
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets or sets'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonReader.cs",
                "region": {
                  "startLine": 214,
                  "startColumn": 35,
                  "endLine": 214,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets or sets"
            }
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets or sets'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonReader.cs",
                "region": {
                  "startLine": 174,
                  "startColumn": 37,
                  "endLine": 174,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets or sets"
            }
          }
        },
        {
          "ruleId": "SA1504",
          "level": "warning",
          "message": "All accessors must be single-line or multi-line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonReader.cs",
                "region": {
                  "startLine": 242,
                  "startColumn": 13,
                  "endLine": 242,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets or sets'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonReader.cs",
                "region": {
                  "startLine": 231,
                  "startColumn": 23,
                  "endLine": 231,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets or sets"
            }
          }
        },
        {
          "ruleId": "SA1504",
          "level": "warning",
          "message": "All accessors must be single-line or multi-line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonTextWriter.cs",
                "region": {
                  "startLine": 73,
                  "startColumn": 13,
                  "endLine": 73,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1504",
          "level": "warning",
          "message": "All accessors must be single-line or multi-line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonTextWriter.cs",
                "region": {
                  "startLine": 90,
                  "startColumn": 13,
                  "endLine": 90,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1504",
          "level": "warning",
          "message": "All accessors must be single-line or multi-line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonTextWriter.cs",
                "region": {
                  "startLine": 107,
                  "startColumn": 13,
                  "endLine": 107,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1504",
          "level": "warning",
          "message": "All accessors must be single-line or multi-line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonTextWriter.cs",
                "region": {
                  "startLine": 125,
                  "startColumn": 13,
                  "endLine": 125,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1204",
          "level": "warning",
          "message": "Static members must appear before non-static members",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 1109,
                  "startColumn": 39,
                  "endLine": 1109,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonConverterAttribute.cs",
                "region": {
                  "startLine": 53,
                  "startColumn": 25,
                  "endLine": 53,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets"
            }
          }
        },
        {
          "ruleId": "SA1204",
          "level": "warning",
          "message": "Static members must appear before non-static members",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1533,
                  "startColumn": 29,
                  "endLine": 1533,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1504",
          "level": "warning",
          "message": "All accessors must be single-line or multi-line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 89,
                  "startColumn": 13,
                  "endLine": 89,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets or sets a value indicating whether'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 938,
                  "startColumn": 21,
                  "endLine": 938,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets or sets a value indicating whether"
            }
          }
        },
        {
          "ruleId": "SA1504",
          "level": "warning",
          "message": "All accessors must be single-line or multi-line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 106,
                  "startColumn": 13,
                  "endLine": 106,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1504",
          "level": "warning",
          "message": "All accessors must be single-line or multi-line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 166,
                  "startColumn": 13,
                  "endLine": 166,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1504",
          "level": "warning",
          "message": "All accessors must be single-line or multi-line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 148,
                  "startColumn": 13,
                  "endLine": 148,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1504",
          "level": "warning",
          "message": "All accessors must be single-line or multi-line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 183,
                  "startColumn": 13,
                  "endLine": 183,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1504",
          "level": "warning",
          "message": "All accessors must be single-line or multi-line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 200,
                  "startColumn": 13,
                  "endLine": 200,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1504",
          "level": "warning",
          "message": "All accessors must be single-line or multi-line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 217,
                  "startColumn": 13,
                  "endLine": 217,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets or sets'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 198,
                  "startColumn": 46,
                  "endLine": 198,
                  "endColumn": 67
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets or sets"
            }
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets or sets'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 215,
                  "startColumn": 46,
                  "endLine": 215,
                  "endColumn": 67
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets or sets"
            }
          }
        },
        {
          "ruleId": "SA1504",
          "level": "warning",
          "message": "All accessors must be single-line or multi-line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 234,
                  "startColumn": 13,
                  "endLine": 234,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1504",
          "level": "warning",
          "message": "All accessors must be single-line or multi-line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 251,
                  "startColumn": 13,
                  "endLine": 251,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1504",
          "level": "warning",
          "message": "All accessors must be single-line or multi-line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 269,
                  "startColumn": 13,
                  "endLine": 269,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets or sets'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 232,
                  "startColumn": 42,
                  "endLine": 232,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets or sets"
            }
          }
        },
        {
          "ruleId": "SA1504",
          "level": "warning",
          "message": "All accessors must be single-line or multi-line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 287,
                  "startColumn": 13,
                  "endLine": 287,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets or sets'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 249,
                  "startColumn": 45,
                  "endLine": 249,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets or sets"
            }
          }
        },
        {
          "ruleId": "SA1504",
          "level": "warning",
          "message": "All accessors must be single-line or multi-line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 305,
                  "startColumn": 13,
                  "endLine": 305,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets or sets'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 357,
                  "startColumn": 35,
                  "endLine": 357,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets or sets"
            }
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets or sets'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 366,
                  "startColumn": 43,
                  "endLine": 366,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets or sets"
            }
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets or sets'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 375,
                  "startColumn": 45,
                  "endLine": 375,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets or sets"
            }
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets or sets'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 384,
                  "startColumn": 42,
                  "endLine": 384,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets or sets"
            }
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets or sets'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 393,
                  "startColumn": 43,
                  "endLine": 393,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets or sets"
            }
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets or sets'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 413,
                  "startColumn": 45,
                  "endLine": 413,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets or sets"
            }
          }
        },
        {
          "ruleId": "SA1504",
          "level": "warning",
          "message": "All accessors must be single-line or multi-line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 424,
                  "startColumn": 13,
                  "endLine": 424,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets or sets'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 422,
                  "startColumn": 31,
                  "endLine": 422,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets or sets"
            }
          }
        },
        {
          "ruleId": "SA1504",
          "level": "warning",
          "message": "All accessors must be single-line or multi-line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 446,
                  "startColumn": 13,
                  "endLine": 446,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets or sets a value indicating whether'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 465,
                  "startColumn": 29,
                  "endLine": 465,
                  "endColumn": 51
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets or sets a value indicating whether"
            }
          }
        },
        {
          "ruleId": "CA1001",
          "level": "warning",
          "message": "Type 'SchemaScope' owns disposable fields but is not disposable",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 57,
                  "startColumn": 23,
                  "endLine": 57,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1204",
          "level": "warning",
          "message": "Static members must appear before non-static members",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 943,
                  "startColumn": 31,
                  "endLine": 943,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets or sets'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 150,
                  "startColumn": 30,
                  "endLine": 150,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets or sets"
            }
          }
        },
        {
          "ruleId": "SA1610",
          "level": "warning",
          "message": "Property documentation must have value text",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 124,
                  "startColumn": 32,
                  "endLine": 124,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1610",
          "level": "warning",
          "message": "Property documentation must have value text",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 150,
                  "startColumn": 30,
                  "endLine": 150,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1610",
          "level": "warning",
          "message": "Property documentation must have value text",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 160,
                  "startColumn": 35,
                  "endLine": 160,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1610",
          "level": "warning",
          "message": "Property documentation must have value text",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 169,
                  "startColumn": 30,
                  "endLine": 169,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1504",
          "level": "warning",
          "message": "All accessors must be single-line or multi-line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 332,
                  "startColumn": 13,
                  "endLine": 332,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets or sets'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 404,
                  "startColumn": 44,
                  "endLine": 404,
                  "endColumn": 63
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets or sets"
            }
          }
        },
        {
          "ruleId": "SA1203",
          "level": "warning",
          "message": "Constant fields must appear before non-constant fields",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonSerializerSettings.cs",
                "region": {
                  "startLine": 53,
                  "startColumn": 35,
                  "endLine": 53,
                  "endColumn": 52
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1203",
          "level": "warning",
          "message": "Constant fields must appear before non-constant fields",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonSerializerSettings.cs",
                "region": {
                  "startLine": 62,
                  "startColumn": 29,
                  "endLine": 62,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1504",
          "level": "warning",
          "message": "All accessors must be single-line or multi-line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonWriter.cs",
                "region": {
                  "startLine": 228,
                  "startColumn": 13,
                  "endLine": 228,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1504",
          "level": "warning",
          "message": "All accessors must be single-line or multi-line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonWriter.cs",
                "region": {
                  "startLine": 245,
                  "startColumn": 13,
                  "endLine": 245,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1504",
          "level": "warning",
          "message": "All accessors must be single-line or multi-line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonWriter.cs",
                "region": {
                  "startLine": 262,
                  "startColumn": 13,
                  "endLine": 262,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1504",
          "level": "warning",
          "message": "All accessors must be single-line or multi-line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonWriter.cs",
                "region": {
                  "startLine": 279,
                  "startColumn": 13,
                  "endLine": 279,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets or sets'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonWriter.cs",
                "region": {
                  "startLine": 226,
                  "startColumn": 27,
                  "endLine": 226,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets or sets"
            }
          }
        },
        {
          "ruleId": "SA1504",
          "level": "warning",
          "message": "All accessors must be single-line or multi-line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonWriter.cs",
                "region": {
                  "startLine": 304,
                  "startColumn": 13,
                  "endLine": 304,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets or sets'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonWriter.cs",
                "region": {
                  "startLine": 243,
                  "startColumn": 35,
                  "endLine": 243,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets or sets"
            }
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets or sets'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonWriter.cs",
                "region": {
                  "startLine": 260,
                  "startColumn": 37,
                  "endLine": 260,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets or sets"
            }
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets or sets'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonWriter.cs",
                "region": {
                  "startLine": 277,
                  "startColumn": 37,
                  "endLine": 277,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets or sets"
            }
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets or sets'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonWriter.cs",
                "region": {
                  "startLine": 302,
                  "startColumn": 36,
                  "endLine": 302,
                  "endColumn": 55
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets or sets"
            }
          }
        },
        {
          "ruleId": "SA1127",
          "level": "warning",
          "message": "Generic type constraints must be on their own line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/IJEnumerable.cs",
                "region": {
                  "startLine": 38,
                  "startColumn": 33,
                  "endLine": 38,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1611",
          "level": "warning",
          "message": "The documentation for parameter 'key' is missing",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/IJEnumerable.cs",
                "region": {
                  "startLine": 44,
                  "startColumn": 42,
                  "endLine": 44,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets or sets'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonWriter.cs",
                "region": {
                  "startLine": 319,
                  "startColumn": 23,
                  "endLine": 319,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets or sets"
            }
          }
        },
        {
          "ruleId": "SA1504",
          "level": "warning",
          "message": "All accessors must be single-line or multi-line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonSerializerSettings.cs",
                "region": {
                  "startLine": 277,
                  "startColumn": 13,
                  "endLine": 277,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1504",
          "level": "warning",
          "message": "All accessors must be single-line or multi-line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonSerializerSettings.cs",
                "region": {
                  "startLine": 290,
                  "startColumn": 13,
                  "endLine": 290,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets or sets'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonSerializerSettings.cs",
                "region": {
                  "startLine": 275,
                  "startColumn": 23,
                  "endLine": 275,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets or sets"
            }
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets or sets'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonSerializerSettings.cs",
                "region": {
                  "startLine": 306,
                  "startColumn": 27,
                  "endLine": 306,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets or sets"
            }
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets or sets'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonSerializerSettings.cs",
                "region": {
                  "startLine": 315,
                  "startColumn": 35,
                  "endLine": 315,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets or sets"
            }
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets or sets'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonSerializerSettings.cs",
                "region": {
                  "startLine": 324,
                  "startColumn": 37,
                  "endLine": 324,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets or sets"
            }
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets or sets'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonSerializerSettings.cs",
                "region": {
                  "startLine": 333,
                  "startColumn": 34,
                  "endLine": 333,
                  "endColumn": 51
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets or sets"
            }
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets or sets'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonSerializerSettings.cs",
                "region": {
                  "startLine": 344,
                  "startColumn": 36,
                  "endLine": 344,
                  "endColumn": 55
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets or sets"
            }
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets or sets'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonSerializerSettings.cs",
                "region": {
                  "startLine": 353,
                  "startColumn": 35,
                  "endLine": 353,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets or sets"
            }
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets or sets'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonSerializerSettings.cs",
                "region": {
                  "startLine": 362,
                  "startColumn": 37,
                  "endLine": 362,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets or sets"
            }
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets or sets a value indicating whether'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonSerializerSettings.cs",
                "region": {
                  "startLine": 383,
                  "startColumn": 21,
                  "endLine": 383,
                  "endColumn": 43
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets or sets a value indicating whether"
            }
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets or sets a value indicating whether'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Schema/JsonSchema.cs",
                "region": {
                  "startLine": 178,
                  "startColumn": 21,
                  "endLine": 178,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets or sets a value indicating whether"
            }
          }
        },
        {
          "ruleId": "SA1214",
          "level": "warning",
          "message": "Readonly fields must appear before non-readonly fields",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Schema/JsonSchemaGenerator.cs",
                "region": {
                  "startLine": 94,
                  "startColumn": 44,
                  "endLine": 94,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1504",
          "level": "warning",
          "message": "All accessors must be single-line or multi-line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Schema/JsonSchemaGenerator.cs",
                "region": {
                  "startLine": 66,
                  "startColumn": 13,
                  "endLine": 66,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1204",
          "level": "warning",
          "message": "Static members must appear before non-static members",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 214,
                  "startColumn": 29,
                  "endLine": 214,
                  "endColumn": 43
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1504",
          "level": "warning",
          "message": "All accessors must be single-line or multi-line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 102,
                  "startColumn": 13,
                  "endLine": 102,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1204",
          "level": "warning",
          "message": "Static members must appear before non-static members",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Schema/JsonSchemaNode.cs",
                "region": {
                  "startLine": 76,
                  "startColumn": 30,
                  "endLine": 76,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1001",
          "level": "warning",
          "message": "Type 'JsonSchemaWriter' owns disposable fields but is not disposable",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Schema/JsonSchemaWriter.cs",
                "region": {
                  "startLine": 41,
                  "startColumn": 20,
                  "endLine": 41,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1127",
          "level": "warning",
          "message": "Generic type constraints must be on their own line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/CachedAttributeGetter.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 52,
                  "endLine": 32,
                  "endColumn": 71
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2231",
          "level": "warning",
          "message": "Overload operator equals on overriding ValueType.Equals",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 57,
                  "startColumn": 21,
                  "endLine": 57,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1611",
          "level": "warning",
          "message": "The documentation for parameter 'sender' is missing",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Schema/ValidationEventHandler.cs",
                "region": {
                  "startLine": 39,
                  "startColumn": 56,
                  "endLine": 39,
                  "endColumn": 62
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1611",
          "level": "warning",
          "message": "The documentation for parameter 'e' is missing",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Schema/ValidationEventHandler.cs",
                "region": {
                  "startLine": 39,
                  "startColumn": 84,
                  "endLine": 39,
                  "endColumn": 85
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1027",
          "level": "warning",
          "message": "Tabs must not be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 463,
                  "startColumn": 12,
                  "endLine": 463,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1306",
          "level": "warning",
          "message": "Field 'DefaultMembersSearchFlags' must begin with lower-case letter",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 159,
                  "startColumn": 30,
                  "endLine": 159,
                  "endColumn": 55
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1204",
          "level": "warning",
          "message": "Static members must appear before non-static members",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 497,
                  "startColumn": 29,
                  "endLine": 497,
                  "endColumn": 54
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1204",
          "level": "warning",
          "message": "Static members must appear before non-static members",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 880,
                  "startColumn": 29,
                  "endLine": 880,
                  "endColumn": 51
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2231",
          "level": "warning",
          "message": "Overload operator equals on overriding ValueType.Equals",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/DefaultSerializationBinder.cs",
                "region": {
                  "startLine": 99,
                  "startColumn": 25,
                  "endLine": 99,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1611",
          "level": "warning",
          "message": "The documentation for parameter 'index' is missing",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JArray.cs",
                "region": {
                  "startLine": 267,
                  "startColumn": 32,
                  "endLine": 267,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1611",
          "level": "warning",
          "message": "The documentation for parameter 'key' is missing",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JArray.cs",
                "region": {
                  "startLine": 237,
                  "startColumn": 44,
                  "endLine": 237,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1504",
          "level": "warning",
          "message": "All accessors must be single-line or multi-line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonArrayContract.cs",
                "region": {
                  "startLine": 94,
                  "startColumn": 13,
                  "endLine": 94,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets or sets a value indicating whether'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonArrayContract.cs",
                "region": {
                  "startLine": 107,
                  "startColumn": 21,
                  "endLine": 107,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets or sets a value indicating whether"
            }
          }
        },
        {
          "ruleId": "SA1214",
          "level": "warning",
          "message": "Readonly fields must appear before non-readonly fields",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JConstructor.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 39,
                  "endLine": 40,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1611",
          "level": "warning",
          "message": "The documentation for parameter 'key' is missing",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JConstructor.cs",
                "region": {
                  "startLine": 179,
                  "startColumn": 44,
                  "endLine": 179,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1504",
          "level": "warning",
          "message": "All accessors must be single-line or multi-line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonContainerContract.cs",
                "region": {
                  "startLine": 51,
                  "startColumn": 13,
                  "endLine": 51,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1615",
          "level": "warning",
          "message": "Element return value must be documented",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonContract.cs",
                "region": {
                  "startLine": 76,
                  "startColumn": 21,
                  "endLine": 76,
                  "endColumn": 62
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1204",
          "level": "warning",
          "message": "Static members must appear before non-static members",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonContract.cs",
                "region": {
                  "startLine": 382,
                  "startColumn": 47,
                  "endLine": 382,
                  "endColumn": 74
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1504",
          "level": "warning",
          "message": "All accessors must be single-line or multi-line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonContract.cs",
                "region": {
                  "startLine": 112,
                  "startColumn": 13,
                  "endLine": 112,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonContract.cs",
                "region": {
                  "startLine": 142,
                  "startColumn": 45,
                  "endLine": 142,
                  "endColumn": 68
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets"
            }
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonContract.cs",
                "region": {
                  "startLine": 159,
                  "startColumn": 45,
                  "endLine": 159,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets"
            }
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonContract.cs",
                "region": {
                  "startLine": 176,
                  "startColumn": 45,
                  "endLine": 176,
                  "endColumn": 66
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets"
            }
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonContract.cs",
                "region": {
                  "startLine": 193,
                  "startColumn": 45,
                  "endLine": 193,
                  "endColumn": 67
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets"
            }
          }
        },
        {
          "ruleId": "SA1504",
          "level": "warning",
          "message": "All accessors must be single-line or multi-line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonContract.cs",
                "region": {
                  "startLine": 230,
                  "startColumn": 13,
                  "endLine": 230,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1504",
          "level": "warning",
          "message": "All accessors must be single-line or multi-line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonContract.cs",
                "region": {
                  "startLine": 245,
                  "startColumn": 13,
                  "endLine": 245,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1504",
          "level": "warning",
          "message": "All accessors must be single-line or multi-line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonContract.cs",
                "region": {
                  "startLine": 260,
                  "startColumn": 13,
                  "endLine": 260,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1504",
          "level": "warning",
          "message": "All accessors must be single-line or multi-line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonContract.cs",
                "region": {
                  "startLine": 275,
                  "startColumn": 13,
                  "endLine": 275,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonContract.cs",
                "region": {
                  "startLine": 210,
                  "startColumn": 50,
                  "endLine": 210,
                  "endColumn": 66
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets"
            }
          }
        },
        {
          "ruleId": "SA1504",
          "level": "warning",
          "message": "All accessors must be single-line or multi-line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonContract.cs",
                "region": {
                  "startLine": 290,
                  "startColumn": 13,
                  "endLine": 290,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets or sets a value indicating whether'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonDictionaryContract.cs",
                "region": {
                  "startLine": 116,
                  "startColumn": 21,
                  "endLine": 116,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets or sets a value indicating whether"
            }
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JContainer.cs",
                "region": {
                  "startLine": 253,
                  "startColumn": 32,
                  "endLine": 253,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets"
            }
          }
        },
        {
          "ruleId": "SA1504",
          "level": "warning",
          "message": "All accessors must be single-line or multi-line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonObjectContract.cs",
                "region": {
                  "startLine": 95,
                  "startColumn": 13,
                  "endLine": 95,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1504",
          "level": "warning",
          "message": "All accessors must be single-line or multi-line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonObjectContract.cs",
                "region": {
                  "startLine": 110,
                  "startColumn": 13,
                  "endLine": 110,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1504",
          "level": "warning",
          "message": "All accessors must be single-line or multi-line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonObjectContract.cs",
                "region": {
                  "startLine": 125,
                  "startColumn": 13,
                  "endLine": 125,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1504",
          "level": "warning",
          "message": "All accessors must be single-line or multi-line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonObjectContract.cs",
                "region": {
                  "startLine": 153,
                  "startColumn": 13,
                  "endLine": 153,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1204",
          "level": "warning",
          "message": "Static members must appear before non-static members",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JContainer.cs",
                "region": {
                  "startLine": 605,
                  "startColumn": 30,
                  "endLine": 605,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1204",
          "level": "warning",
          "message": "Static members must appear before non-static members",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JContainer.cs",
                "region": {
                  "startLine": 676,
                  "startColumn": 32,
                  "endLine": 676,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2231",
          "level": "warning",
          "message": "Overload operator equals on overriding ValueType.Equals",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JEnumerable.cs",
                "region": {
                  "startLine": 42,
                  "startColumn": 19,
                  "endLine": 42,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1611",
          "level": "warning",
          "message": "The documentation for parameter 'key' is missing",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JEnumerable.cs",
                "region": {
                  "startLine": 93,
                  "startColumn": 49,
                  "endLine": 93,
                  "endColumn": 52
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1127",
          "level": "warning",
          "message": "Generic type constraints must be on their own line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JEnumerable.cs",
                "region": {
                  "startLine": 42,
                  "startColumn": 80,
                  "endLine": 42,
                  "endColumn": 96
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1504",
          "level": "warning",
          "message": "All accessors must be single-line or multi-line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonProperty.cs",
                "region": {
                  "startLine": 59,
                  "startColumn": 13,
                  "endLine": 59,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets or sets'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonProperty.cs",
                "region": {
                  "startLine": 89,
                  "startColumn": 31,
                  "endLine": 89,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets or sets"
            }
          }
        },
        {
          "ruleId": "SA1504",
          "level": "warning",
          "message": "All accessors must be single-line or multi-line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonProperty.cs",
                "region": {
                  "startLine": 103,
                  "startColumn": 13,
                  "endLine": 103,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1027",
          "level": "warning",
          "message": "Tabs must not be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonSerializerSettings.cs",
                "region": {
                  "startLine": 381,
                  "startColumn": 12,
                  "endLine": 381,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets or sets'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonProperty.cs",
                "region": {
                  "startLine": 155,
                  "startColumn": 23,
                  "endLine": 155,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets or sets"
            }
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JContainer.cs",
                "region": {
                  "startLine": 238,
                  "startColumn": 32,
                  "endLine": 238,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets"
            }
          }
        },
        {
          "ruleId": "SA1306",
          "level": "warning",
          "message": "Field 'InternalSerializer' must begin with lower-case letter",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonSerializerInternalBase.cs",
                "region": {
                  "startLine": 55,
                  "startColumn": 39,
                  "endLine": 55,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1611",
          "level": "warning",
          "message": "The documentation for parameter 'key' is missing",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JObject.cs",
                "region": {
                  "startLine": 289,
                  "startColumn": 44,
                  "endLine": 289,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1611",
          "level": "warning",
          "message": "The documentation for parameter 'propertyName' is missing",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JObject.cs",
                "region": {
                  "startLine": 321,
                  "startColumn": 35,
                  "endLine": 321,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1204",
          "level": "warning",
          "message": "Static members must appear before non-static members",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 343,
                  "startColumn": 29,
                  "endLine": 343,
                  "endColumn": 52
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1504",
          "level": "warning",
          "message": "All accessors must be single-line or multi-line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JProperty.cs",
                "region": {
                  "startLine": 124,
                  "startColumn": 17,
                  "endLine": 124,
                  "endColumn": 20
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1214",
          "level": "warning",
          "message": "Readonly fields must appear before non-readonly fields",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 53,
                  "startColumn": 39,
                  "endLine": 53,
                  "endColumn": 54
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1036",
          "level": "warning",
          "message": "Overload operator Equals and comparison operators when implementing System.IComparable",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JRaw.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 18,
                  "endLine": 34,
                  "endColumn": 22
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1504",
          "level": "warning",
          "message": "All accessors must be single-line or multi-line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JsonLoadSettings.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 13,
                  "endLine": 19,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1504",
          "level": "warning",
          "message": "All accessors must be single-line or multi-line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JsonLoadSettings.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 13,
                  "endLine": 37,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1504",
          "level": "warning",
          "message": "All accessors must be single-line or multi-line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JsonMergeSettings.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 13,
                  "endLine": 19,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1504",
          "level": "warning",
          "message": "All accessors must be single-line or multi-line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JsonMergeSettings.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 13,
                  "endLine": 37,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1204",
          "level": "warning",
          "message": "Static members must appear before non-static members",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 766,
                  "startColumn": 45,
                  "endLine": 766,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1615",
          "level": "warning",
          "message": "Element return value must be documented",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/ObjectConstructor.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 21,
                  "endLine": 32,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1611",
          "level": "warning",
          "message": "The documentation for parameter 'args' is missing",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/ObjectConstructor.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 65,
                  "endLine": 32,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets or sets'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/MemoryTraceWriter.cs",
                "region": {
                  "startLine": 25,
                  "startColumn": 27,
                  "endLine": 25,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets or sets"
            }
          }
        },
        {
          "ruleId": "CA1001",
          "level": "warning",
          "message": "Type 'Base64Encoder' owns disposable fields but is not disposable",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/Base64Encoder.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 20,
                  "endLine": 31,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1204",
          "level": "warning",
          "message": "Static members must appear before non-static members",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 69,
                  "startColumn": 46,
                  "endLine": 69,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1204",
          "level": "warning",
          "message": "Static members must appear before non-static members",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 2086,
                  "startColumn": 30,
                  "endLine": 2086,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1504",
          "level": "warning",
          "message": "All accessors must be single-line or multi-line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 106,
                  "startColumn": 13,
                  "endLine": 106,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1624",
          "level": "warning",
          "message": "Because the property only contains a visible get accessor, the documentation summary text must begin with 'Gets'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 103,
                  "startColumn": 27,
                  "endLine": 103,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets",
              "TextToRemove": "Gets or sets"
            }
          }
        },
        {
          "ruleId": "SA1611",
          "level": "warning",
          "message": "The documentation for parameter 'key' is missing",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 316,
                  "startColumn": 43,
                  "endLine": 316,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 340,
                  "startColumn": 31,
                  "endLine": 340,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets"
            }
          }
        },
        {
          "ruleId": "SA1623",
          "level": "warning",
          "message": "The property's documentation summary text must begin with: 'Gets'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 349,
                  "startColumn": 31,
                  "endLine": 349,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedText": "Gets"
            }
          }
        },
        {
          "ruleId": "CA2231",
          "level": "warning",
          "message": "Overload operator equals on overriding ValueType.Equals",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 251,
                  "startColumn": 25,
                  "endLine": 251,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1204",
          "level": "warning",
          "message": "Static members must appear before non-static members",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DateTimeParser.cs",
                "region": {
                  "startLine": 73,
                  "startColumn": 39,
                  "endLine": 73,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1203",
          "level": "warning",
          "message": "Constant fields must appear before non-constant fields",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DateTimeParser.cs",
                "region": {
                  "startLine": 89,
                  "startColumn": 29,
                  "endLine": 89,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1310",
          "level": "warning",
          "message": "Field 'Lzyyyy_' must not contain an underscore",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DateTimeParser.cs",
                "region": {
                  "startLine": 76,
                  "startColumn": 37,
                  "endLine": 76,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1310",
          "level": "warning",
          "message": "Field 'Lzyyyy_MM' must not contain an underscore",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DateTimeParser.cs",
                "region": {
                  "startLine": 77,
                  "startColumn": 37,
                  "endLine": 77,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1310",
          "level": "warning",
          "message": "Field 'Lzyyyy_MM_' must not contain an underscore",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DateTimeParser.cs",
                "region": {
                  "startLine": 78,
                  "startColumn": 37,
                  "endLine": 78,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1310",
          "level": "warning",
          "message": "Field 'Lzyyyy_MM_dd' must not contain an underscore",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DateTimeParser.cs",
                "region": {
                  "startLine": 79,
                  "startColumn": 37,
                  "endLine": 79,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1310",
          "level": "warning",
          "message": "Field 'Lzyyyy_MM_ddT' must not contain an underscore",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DateTimeParser.cs",
                "region": {
                  "startLine": 80,
                  "startColumn": 37,
                  "endLine": 80,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1310",
          "level": "warning",
          "message": "Field 'LzHH_' must not contain an underscore",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DateTimeParser.cs",
                "region": {
                  "startLine": 82,
                  "startColumn": 37,
                  "endLine": 82,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1310",
          "level": "warning",
          "message": "Field 'LzHH_mm' must not contain an underscore",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DateTimeParser.cs",
                "region": {
                  "startLine": 83,
                  "startColumn": 37,
                  "endLine": 83,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1310",
          "level": "warning",
          "message": "Field 'LzHH_mm_' must not contain an underscore",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DateTimeParser.cs",
                "region": {
                  "startLine": 84,
                  "startColumn": 37,
                  "endLine": 84,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1310",
          "level": "warning",
          "message": "Field 'LzHH_mm_ss' must not contain an underscore",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DateTimeParser.cs",
                "region": {
                  "startLine": 85,
                  "startColumn": 37,
                  "endLine": 85,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1310",
          "level": "warning",
          "message": "Field 'Lz_zz' must not contain an underscore",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DateTimeParser.cs",
                "region": {
                  "startLine": 87,
                  "startColumn": 37,
                  "endLine": 87,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1310",
          "level": "warning",
          "message": "Field 'Lz_' must not contain an underscore",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DateTimeParser.cs",
                "region": {
                  "startLine": 86,
                  "startColumn": 37,
                  "endLine": 86,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1036",
          "level": "warning",
          "message": "Overload operator Equals and comparison operators when implementing System.IComparable",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 44,
                  "startColumn": 18,
                  "endLine": 44,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1504",
          "level": "warning",
          "message": "All accessors must be single-line or multi-line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 712,
                  "startColumn": 13,
                  "endLine": 712,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1127",
          "level": "warning",
          "message": "Generic type constraints must be on their own line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/EnumValue.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 33,
                  "endLine": 28,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1203",
          "level": "warning",
          "message": "Constant fields must appear before non-constant fields",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/ImmutableCollectionsUtils.cs",
                "region": {
                  "startLine": 90,
                  "startColumn": 30,
                  "endLine": 90,
                  "endColumn": 73
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1204",
          "level": "warning",
          "message": "Static members must appear before non-static members",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/ReflectionObject.cs",
                "region": {
                  "startLine": 75,
                  "startColumn": 40,
                  "endLine": 75,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1204",
          "level": "warning",
          "message": "Static members must appear before non-static members",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/PropertyNameTable.cs",
                "region": {
                  "startLine": 142,
                  "startColumn": 29,
                  "endLine": 142,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1001",
          "level": "warning",
          "message": "Type 'DictionaryEnumerator' owns disposable fields but is not disposable",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DictionaryWrapper.cs",
                "region": {
                  "startLine": 475,
                  "startColumn": 24,
                  "endLine": 475,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1214",
          "level": "warning",
          "message": "Readonly fields must appear before non-readonly fields",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/ThreadSafeStore.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 45,
                  "endLine": 40,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1306",
          "level": "warning",
          "message": "Field 'DefaultFlags' must begin with lower-case letter",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/TypeExtensions.cs",
                "region": {
                  "startLine": 41,
                  "startColumn": 37,
                  "endLine": 41,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1027",
          "level": "warning",
          "message": "Tabs must not be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 2343,
                  "startColumn": 12,
                  "endLine": 2343,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1514",
          "level": "warning",
          "message": "Element documentation header must be preceded by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 947,
                  "startColumn": 9,
                  "endLine": 947,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1612",
          "level": "warning",
          "message": "The parameter documentation for 'serializer' should be at position 3.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 951,
                  "startColumn": 26,
                  "endLine": 951,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1612",
          "level": "warning",
          "message": "The parameter documentation for 'value' should be at position 2.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 952,
                  "startColumn": 26,
                  "endLine": 952,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1018,
                  "startColumn": 52,
                  "endLine": 1018,
                  "endColumn": 54
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1018,
                  "startColumn": 110,
                  "endLine": 1018,
                  "endColumn": 112
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1029,
                  "startColumn": 75,
                  "endLine": 1029,
                  "endColumn": 77
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1029,
                  "startColumn": 107,
                  "endLine": 1029,
                  "endColumn": 109
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1515",
          "level": "warning",
          "message": "Single-line comment must be preceded by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonWriter.cs",
                "region": {
                  "startLine": 666,
                  "startColumn": 17,
                  "endLine": 666,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1089,
                  "startColumn": 68,
                  "endLine": 1089,
                  "endColumn": 70
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1089,
                  "startColumn": 97,
                  "endLine": 1089,
                  "endColumn": 99
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1048,
                  "startColumn": 43,
                  "endLine": 1048,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1061,
                  "startColumn": 43,
                  "endLine": 1061,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1515",
          "level": "warning",
          "message": "Single-line comment must be preceded by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/Extensions.cs",
                "region": {
                  "startLine": 262,
                  "startColumn": 17,
                  "endLine": 262,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1027",
          "level": "warning",
          "message": "Tabs must not be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JArray.cs",
                "region": {
                  "startLine": 310,
                  "startColumn": 12,
                  "endLine": 310,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1027",
          "level": "warning",
          "message": "Tabs must not be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JArray.cs",
                "region": {
                  "startLine": 322,
                  "startColumn": 12,
                  "endLine": 322,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/DiscriminatedUnionConverter.cs",
                "region": {
                  "startLine": 176,
                  "startColumn": 72,
                  "endLine": 176,
                  "endColumn": 74
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/DiscriminatedUnionConverter.cs",
                "region": {
                  "startLine": 261,
                  "startColumn": 44,
                  "endLine": 261,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1642",
          "level": "warning",
          "message": "Constructor summary documentation must begin with standard text",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonArrayAttribute.cs",
                "region": {
                  "startLine": 56,
                  "startColumn": 47,
                  "endLine": 56,
                  "endColumn": 80
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1165,
                  "startColumn": 84,
                  "endLine": 1165,
                  "endColumn": 86
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1175,
                  "startColumn": 56,
                  "endLine": 1175,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1177,
                  "startColumn": 79,
                  "endLine": 1177,
                  "endColumn": 81
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1241,
                  "startColumn": 43,
                  "endLine": 1241,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1241,
                  "startColumn": 92,
                  "endLine": 1241,
                  "endColumn": 94
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1246,
                  "startColumn": 43,
                  "endLine": 1246,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1248,
                  "startColumn": 44,
                  "endLine": 1248,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1514",
          "level": "warning",
          "message": "Element documentation header must be preceded by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1318,
                  "startColumn": 9,
                  "endLine": 1318,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1027",
          "level": "warning",
          "message": "Tabs must not be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JContainer.cs",
                "region": {
                  "startLine": 199,
                  "startColumn": 12,
                  "endLine": 199,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1465,
                  "startColumn": 34,
                  "endLine": 1465,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1627,
                  "startColumn": 120,
                  "endLine": 1627,
                  "endColumn": 122
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1515",
          "level": "warning",
          "message": "Single-line comment must be preceded by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JContainer.cs",
                "region": {
                  "startLine": 370,
                  "startColumn": 13,
                  "endLine": 370,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1515",
          "level": "warning",
          "message": "Single-line comment must be preceded by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JContainer.cs",
                "region": {
                  "startLine": 854,
                  "startColumn": 25,
                  "endLine": 854,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1514",
          "level": "warning",
          "message": "Element documentation header must be preceded by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonConvert.cs",
                "region": {
                  "startLine": 523,
                  "startColumn": 9,
                  "endLine": 523,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1027",
          "level": "warning",
          "message": "Tabs must not be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JEnumerable.cs",
                "region": {
                  "startLine": 111,
                  "startColumn": 12,
                  "endLine": 111,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1027",
          "level": "warning",
          "message": "Tabs must not be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JEnumerable.cs",
                "region": {
                  "startLine": 123,
                  "startColumn": 12,
                  "endLine": 123,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1709,
                  "startColumn": 59,
                  "endLine": 1709,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1612",
          "level": "warning",
          "message": "The parameter documentation for 'settings' should be at position 3.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonConvert.cs",
                "region": {
                  "startLine": 595,
                  "startColumn": 26,
                  "endLine": 595,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1612",
          "level": "warning",
          "message": "The parameter documentation for 'type' should be at position 2.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonConvert.cs",
                "region": {
                  "startLine": 597,
                  "startColumn": 26,
                  "endLine": 597,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1612",
          "level": "warning",
          "message": "The parameter documentation for 'formatting' should be at position 3.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonConvert.cs",
                "region": {
                  "startLine": 631,
                  "startColumn": 26,
                  "endLine": 631,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1612",
          "level": "warning",
          "message": "The parameter documentation for 'settings' should be at position 4.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonConvert.cs",
                "region": {
                  "startLine": 632,
                  "startColumn": 26,
                  "endLine": 632,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1612",
          "level": "warning",
          "message": "The parameter documentation for 'type' should be at position 2.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonConvert.cs",
                "region": {
                  "startLine": 634,
                  "startColumn": 26,
                  "endLine": 634,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1514",
          "level": "warning",
          "message": "Element documentation header must be preceded by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonConvert.cs",
                "region": {
                  "startLine": 714,
                  "startColumn": 9,
                  "endLine": 714,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1754,
                  "startColumn": 30,
                  "endLine": 1754,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1514",
          "level": "warning",
          "message": "Element documentation header must be preceded by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonConvert.cs",
                "region": {
                  "startLine": 938,
                  "startColumn": 9,
                  "endLine": 938,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1500",
          "level": "warning",
          "message": "Braces for multi-line statements must not share line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1887,
                  "startColumn": 13,
                  "endLine": 1887,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1918,
                  "startColumn": 48,
                  "endLine": 1918,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Converters/XmlNodeConverter.cs",
                "region": {
                  "startLine": 1861,
                  "startColumn": 129,
                  "endLine": 1861,
                  "endColumn": 131
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1129",
          "level": "warning",
          "message": "Do not use default value type constructor",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonReader.cs",
                "region": {
                  "startLine": 391,
                  "startColumn": 41,
                  "endLine": 391,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1129",
          "level": "warning",
          "message": "Do not use default value type constructor",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonSerializerSettings.cs",
                "region": {
                  "startLine": 391,
                  "startColumn": 30,
                  "endLine": 391,
                  "endColumn": 52
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1500",
          "level": "warning",
          "message": "Braces for multi-line statements must not share line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Bson/BsonReader.cs",
                "region": {
                  "startLine": 720,
                  "startColumn": 13,
                  "endLine": 720,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonReader.cs",
                "region": {
                  "startLine": 895,
                  "startColumn": 39,
                  "endLine": 895,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonReader.cs",
                "region": {
                  "startLine": 901,
                  "startColumn": 47,
                  "endLine": 901,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1500",
          "level": "warning",
          "message": "Braces for multi-line statements must not share line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonReader.cs",
                "region": {
                  "startLine": 1168,
                  "startColumn": 13,
                  "endLine": 1168,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 887,
                  "startColumn": 70,
                  "endLine": 887,
                  "endColumn": 72
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonSerializer.cs",
                "region": {
                  "startLine": 1045,
                  "startColumn": 74,
                  "endLine": 1045,
                  "endColumn": 76
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1642",
          "level": "warning",
          "message": "Constructor summary documentation must begin with standard text",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonTextWriter.cs",
                "region": {
                  "startLine": 145,
                  "startColumn": 13,
                  "endLine": 147,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1514",
          "level": "warning",
          "message": "Element documentation header must be preceded by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Bson/BsonWriter.cs",
                "region": {
                  "startLine": 228,
                  "startColumn": 9,
                  "endLine": 228,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1514",
          "level": "warning",
          "message": "Element documentation header must be preceded by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonTextWriter.cs",
                "region": {
                  "startLine": 355,
                  "startColumn": 9,
                  "endLine": 355,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1500",
          "level": "warning",
          "message": "Braces for multi-line statements must not share line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 352,
                  "startColumn": 13,
                  "endLine": 352,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1402",
          "level": "warning",
          "message": "File may only contain a single class",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JsonPath/QueryExpression.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 20,
                  "endLine": 30,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1402",
          "level": "warning",
          "message": "File may only contain a single class",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JsonPath/QueryExpression.cs",
                "region": {
                  "startLine": 67,
                  "startColumn": 20,
                  "endLine": 67,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1500",
          "level": "warning",
          "message": "Braces for multi-line statements must not share line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonTextWriter.cs",
                "region": {
                  "startLine": 801,
                  "startColumn": 17,
                  "endLine": 801,
                  "endColumn": 18
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/TypeExtensions.cs",
                "region": {
                  "startLine": 301,
                  "startColumn": 48,
                  "endLine": 301,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/TypeExtensions.cs",
                "region": {
                  "startLine": 224,
                  "startColumn": 42,
                  "endLine": 224,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1642",
          "level": "warning",
          "message": "Constructor summary documentation must begin with standard text",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 76,
                  "startColumn": 47,
                  "endLine": 76,
                  "endColumn": 71
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/TypeExtensions.cs",
                "region": {
                  "startLine": 400,
                  "startColumn": 50,
                  "endLine": 400,
                  "endColumn": 52
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1500",
          "level": "warning",
          "message": "Braces for multi-line statements must not share line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1136,
                  "startColumn": 37,
                  "endLine": 1136,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/TypeExtensions.cs",
                "region": {
                  "startLine": 367,
                  "startColumn": 24,
                  "endLine": 367,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1129",
          "level": "warning",
          "message": "Do not use default value type constructor",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonTextReader.cs",
                "region": {
                  "startLine": 1288,
                  "startColumn": 37,
                  "endLine": 1288,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/TypeExtensions.cs",
                "region": {
                  "startLine": 438,
                  "startColumn": 49,
                  "endLine": 438,
                  "endColumn": 51
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/TypeExtensions.cs",
                "region": {
                  "startLine": 419,
                  "startColumn": 53,
                  "endLine": 419,
                  "endColumn": 55
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1642",
          "level": "warning",
          "message": "Constructor summary documentation must begin with standard text",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonWriter.cs",
                "region": {
                  "startLine": 334,
                  "startColumn": 13,
                  "endLine": 336,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1129",
          "level": "warning",
          "message": "Do not use default value type constructor",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonWriter.cs",
                "region": {
                  "startLine": 380,
                  "startColumn": 41,
                  "endLine": 380,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1500",
          "level": "warning",
          "message": "Braces for multi-line statements must not share line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonWriter.cs",
                "region": {
                  "startLine": 665,
                  "startColumn": 13,
                  "endLine": 665,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1027",
          "level": "warning",
          "message": "Tabs must not be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 146,
                  "startColumn": 12,
                  "endLine": 146,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1407",
          "level": "warning",
          "message": "Arithmetic expressions must declare precedence",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 945,
                  "startColumn": 31,
                  "endLine": 945,
                  "endColumn": 71
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1514",
          "level": "warning",
          "message": "Element documentation header must be preceded by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonWriter.cs",
                "region": {
                  "startLine": 872,
                  "startColumn": 9,
                  "endLine": 872,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1127",
          "level": "warning",
          "message": "Generic type constraints must be on their own line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/Extensions.cs",
                "region": {
                  "startLine": 50,
                  "startColumn": 85,
                  "endLine": 50,
                  "endColumn": 101
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1127",
          "level": "warning",
          "message": "Generic type constraints must be on their own line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/Extensions.cs",
                "region": {
                  "startLine": 63,
                  "startColumn": 92,
                  "endLine": 63,
                  "endColumn": 108
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1127",
          "level": "warning",
          "message": "Generic type constraints must be on their own line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/Extensions.cs",
                "region": {
                  "startLine": 76,
                  "startColumn": 87,
                  "endLine": 76,
                  "endColumn": 107
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1206",
          "level": "warning",
          "message": "The 'static' modifier must appear before 'new'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JArray.cs",
                "region": {
                  "startLine": 113,
                  "startColumn": 20,
                  "endLine": 113,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1127",
          "level": "warning",
          "message": "Generic type constraints must be on their own line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/Extensions.cs",
                "region": {
                  "startLine": 89,
                  "startColumn": 94,
                  "endLine": 89,
                  "endColumn": 114
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1206",
          "level": "warning",
          "message": "The 'static' modifier must appear before 'new'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JArray.cs",
                "region": {
                  "startLine": 158,
                  "startColumn": 20,
                  "endLine": 158,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1206",
          "level": "warning",
          "message": "The 'static' modifier must appear before 'new'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JArray.cs",
                "region": {
                  "startLine": 125,
                  "startColumn": 20,
                  "endLine": 125,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1206",
          "level": "warning",
          "message": "The 'static' modifier must appear before 'new'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JArray.cs",
                "region": {
                  "startLine": 173,
                  "startColumn": 20,
                  "endLine": 173,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1206",
          "level": "warning",
          "message": "The 'static' modifier must appear before 'new'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JArray.cs",
                "region": {
                  "startLine": 193,
                  "startColumn": 20,
                  "endLine": 193,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1206",
          "level": "warning",
          "message": "The 'static' modifier must appear before 'new'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JArray.cs",
                "region": {
                  "startLine": 204,
                  "startColumn": 20,
                  "endLine": 204,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1127",
          "level": "warning",
          "message": "Generic type constraints must be on their own line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/Extensions.cs",
                "region": {
                  "startLine": 170,
                  "startColumn": 64,
                  "endLine": 170,
                  "endColumn": 80
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1514",
          "level": "warning",
          "message": "Element documentation header must be preceded by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JArray.cs",
                "region": {
                  "startLine": 292,
                  "startColumn": 9,
                  "endLine": 292,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1514",
          "level": "warning",
          "message": "Element documentation header must be preceded by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JArray.cs",
                "region": {
                  "startLine": 342,
                  "startColumn": 9,
                  "endLine": 342,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1127",
          "level": "warning",
          "message": "Generic type constraints must be on their own line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/Extensions.cs",
                "region": {
                  "startLine": 183,
                  "startColumn": 93,
                  "endLine": 183,
                  "endColumn": 109
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1514",
          "level": "warning",
          "message": "Element documentation header must be preceded by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JTokenWriter.cs",
                "region": {
                  "startLine": 217,
                  "startColumn": 9,
                  "endLine": 217,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JConstructor.cs",
                "region": {
                  "startLine": 150,
                  "startColumn": 45,
                  "endLine": 150,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1206",
          "level": "warning",
          "message": "The 'static' modifier must appear before 'new'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JConstructor.cs",
                "region": {
                  "startLine": 215,
                  "startColumn": 20,
                  "endLine": 215,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1206",
          "level": "warning",
          "message": "The 'static' modifier must appear before 'new'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JConstructor.cs",
                "region": {
                  "startLine": 227,
                  "startColumn": 20,
                  "endLine": 227,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JObject.cs",
                "region": {
                  "startLine": 162,
                  "startColumn": 38,
                  "endLine": 162,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1515",
          "level": "warning",
          "message": "Single-line comment must be preceded by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JTokenWriter.cs",
                "region": {
                  "startLine": 42,
                  "startColumn": 9,
                  "endLine": 42,
                  "endColumn": 11
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JProperty.cs",
                "region": {
                  "startLine": 286,
                  "startColumn": 45,
                  "endLine": 286,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1206",
          "level": "warning",
          "message": "The 'static' modifier must appear before 'new'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JProperty.cs",
                "region": {
                  "startLine": 368,
                  "startColumn": 20,
                  "endLine": 368,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1206",
          "level": "warning",
          "message": "The 'static' modifier must appear before 'new'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JProperty.cs",
                "region": {
                  "startLine": 380,
                  "startColumn": 20,
                  "endLine": 380,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1027",
          "level": "warning",
          "message": "Tabs must not be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 215,
                  "startColumn": 12,
                  "endLine": 215,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1206",
          "level": "warning",
          "message": "The 'static' modifier must appear before 'new'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JObject.cs",
                "region": {
                  "startLine": 354,
                  "startColumn": 20,
                  "endLine": 354,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1206",
          "level": "warning",
          "message": "The 'static' modifier must appear before 'new'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JObject.cs",
                "region": {
                  "startLine": 366,
                  "startColumn": 20,
                  "endLine": 366,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1027",
          "level": "warning",
          "message": "Tabs must not be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JValue.cs",
                "region": {
                  "startLine": 1080,
                  "startColumn": 12,
                  "endLine": 1080,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1206",
          "level": "warning",
          "message": "The 'static' modifier must appear before 'new'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JObject.cs",
                "region": {
                  "startLine": 401,
                  "startColumn": 20,
                  "endLine": 401,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1127",
          "level": "warning",
          "message": "Generic type constraints must be on their own line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/Extensions.cs",
                "region": {
                  "startLine": 225,
                  "startColumn": 84,
                  "endLine": 225,
                  "endColumn": 100
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1206",
          "level": "warning",
          "message": "The 'static' modifier must appear before 'new'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JObject.cs",
                "region": {
                  "startLine": 436,
                  "startColumn": 20,
                  "endLine": 436,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1206",
          "level": "warning",
          "message": "The 'static' modifier must appear before 'new'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JObject.cs",
                "region": {
                  "startLine": 416,
                  "startColumn": 20,
                  "endLine": 416,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1127",
          "level": "warning",
          "message": "Generic type constraints must be on their own line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/Extensions.cs",
                "region": {
                  "startLine": 237,
                  "startColumn": 81,
                  "endLine": 237,
                  "endColumn": 97
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1620",
          "level": "warning",
          "message": "The type parameter documentation for 'U' should be at position 2.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/Extensions.cs",
                "region": {
                  "startLine": 234,
                  "startColumn": 30,
                  "endLine": 234,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1620",
          "level": "warning",
          "message": "The type parameter documentation for 'T' should be at position 1.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/Extensions.cs",
                "region": {
                  "startLine": 235,
                  "startColumn": 30,
                  "endLine": 235,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1127",
          "level": "warning",
          "message": "Generic type constraints must be on their own line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/Extensions.cs",
                "region": {
                  "startLine": 244,
                  "startColumn": 82,
                  "endLine": 244,
                  "endColumn": 98
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1206",
          "level": "warning",
          "message": "The 'static' modifier must appear before 'new'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JObject.cs",
                "region": {
                  "startLine": 447,
                  "startColumn": 20,
                  "endLine": 447,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1514",
          "level": "warning",
          "message": "Element documentation header must be preceded by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JObject.cs",
                "region": {
                  "startLine": 539,
                  "startColumn": 9,
                  "endLine": 539,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1612",
          "level": "warning",
          "message": "The parameter documentation for 'value' should be at position 3.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JObject.cs",
                "region": {
                  "startLine": 529,
                  "startColumn": 26,
                  "endLine": 529,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1612",
          "level": "warning",
          "message": "The parameter documentation for 'comparison' should be at position 2.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JObject.cs",
                "region": {
                  "startLine": 530,
                  "startColumn": 26,
                  "endLine": 530,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1127",
          "level": "warning",
          "message": "Generic type constraints must be on their own line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/Extensions.cs",
                "region": {
                  "startLine": 254,
                  "startColumn": 55,
                  "endLine": 254,
                  "endColumn": 71
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1128",
          "level": "warning",
          "message": "Put constructor initializers on their own line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/StringBuffer.cs",
                "region": {
                  "startLine": 49,
                  "startColumn": 74,
                  "endLine": 49,
                  "endColumn": 128
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1127",
          "level": "warning",
          "message": "Generic type constraints must be on their own line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/Extensions.cs",
                "region": {
                  "startLine": 316,
                  "startColumn": 84,
                  "endLine": 316,
                  "endColumn": 100
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1512",
          "level": "warning",
          "message": "Single-line comments must not be followed by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Properties/AssemblyInfo.cs",
                "region": {
                  "startLine": 94,
                  "startColumn": 1,
                  "endLine": 94,
                  "endColumn": 3
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1122",
          "level": "warning",
          "message": "Use string.Empty for empty strings",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 162,
                  "startColumn": 77,
                  "endLine": 162,
                  "endColumn": 79
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1027",
          "level": "warning",
          "message": "Tabs must not be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Schema/Extensions.cs",
                "region": {
                  "startLine": 55,
                  "startColumn": 12,
                  "endLine": 55,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1027",
          "level": "warning",
          "message": "Tabs must not be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Schema/Extensions.cs",
                "region": {
                  "startLine": 77,
                  "startColumn": 12,
                  "endLine": 77,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1127",
          "level": "warning",
          "message": "Generic type constraints must be on their own line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 730,
                  "startColumn": 67,
                  "endLine": 730,
                  "endColumn": 86
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1127",
          "level": "warning",
          "message": "Generic type constraints must be on their own line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 735,
                  "startColumn": 81,
                  "endLine": 735,
                  "endColumn": 100
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1127",
          "level": "warning",
          "message": "Generic type constraints must be on their own line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 816,
                  "startColumn": 84,
                  "endLine": 816,
                  "endColumn": 103
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1500",
          "level": "warning",
          "message": "Braces for multi-line statements must not share line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JContainer.cs",
                "region": {
                  "startLine": 869,
                  "startColumn": 13,
                  "endLine": 869,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 680,
                  "startColumn": 104,
                  "endLine": 680,
                  "endColumn": 106
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1111",
          "level": "warning",
          "message": "Closing parenthesis must be on line of last parameter",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 1066,
                  "startColumn": 17,
                  "endLine": 1066,
                  "endColumn": 18
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "action": "remove",
              "layout": "pack",
              "location": "preceding"
            }
          }
        },
        {
          "ruleId": "SA1128",
          "level": "warning",
          "message": "Put constructor initializers on their own line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JPropertyKeyedCollection.cs",
                "region": {
                  "startLine": 39,
                  "startColumn": 43,
                  "endLine": 39,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 1062,
                  "startColumn": 31,
                  "endLine": 1062,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1129",
          "level": "warning",
          "message": "Do not use default value type constructor",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 1100,
                  "startColumn": 28,
                  "endLine": 1100,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1129",
          "level": "warning",
          "message": "Do not use default value type constructor",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 1106,
                  "startColumn": 28,
                  "endLine": 1106,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1129",
          "level": "warning",
          "message": "Do not use default value type constructor",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 1109,
                  "startColumn": 28,
                  "endLine": 1109,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 1011,
                  "startColumn": 75,
                  "endLine": 1011,
                  "endColumn": 77
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 1033,
                  "startColumn": 79,
                  "endLine": 1033,
                  "endColumn": 81
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 1043,
                  "startColumn": 79,
                  "endLine": 1043,
                  "endColumn": 81
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1027",
          "level": "warning",
          "message": "Tabs must not be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Schema/JsonSchema.cs",
                "region": {
                  "startLine": 157,
                  "startColumn": 12,
                  "endLine": 157,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1027",
          "level": "warning",
          "message": "Tabs must not be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Schema/JsonSchema.cs",
                "region": {
                  "startLine": 171,
                  "startColumn": 12,
                  "endLine": 171,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1027",
          "level": "warning",
          "message": "Tabs must not be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Schema/JsonSchema.cs",
                "region": {
                  "startLine": 202,
                  "startColumn": 12,
                  "endLine": 202,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JsonPath/ScanFilter.cs",
                "region": {
                  "startLine": 45,
                  "startColumn": 36,
                  "endLine": 45,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1127",
          "level": "warning",
          "message": "Generic type constraints must be on their own line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 368,
                  "startColumn": 45,
                  "endLine": 368,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1116",
          "level": "warning",
          "message": "The parameters must begin on the line after the declaration, whenever the parameter span across multiple lines",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JsonPath/ArraySliceFilter.cs",
                "region": {
                  "startLine": 62,
                  "startColumn": 113,
                  "endLine": 62,
                  "endColumn": 141
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1514",
          "level": "warning",
          "message": "Element documentation header must be preceded by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 482,
                  "startColumn": 9,
                  "endLine": 482,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 109,
                  "startColumn": 40,
                  "endLine": 109,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 139,
                  "startColumn": 40,
                  "endLine": 139,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JsonPath/JPath.cs",
                "region": {
                  "startLine": 181,
                  "startColumn": 28,
                  "endLine": 181,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1515",
          "level": "warning",
          "message": "Single-line comment must be preceded by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Schema/JsonSchemaGenerator.cs",
                "region": {
                  "startLine": 498,
                  "startColumn": 17,
                  "endLine": 498,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1514",
          "level": "warning",
          "message": "Element documentation header must be preceded by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 1490,
                  "startColumn": 9,
                  "endLine": 1490,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1517",
          "level": "warning",
          "message": "Code must not contain blank lines at start of file",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/SerializationBinder.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 2,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1649",
          "level": "warning",
          "message": "File name must match first type name.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 57,
                  "startColumn": 21,
                  "endLine": 57,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedFileName": "ResolverContractKey.cs"
            }
          }
        },
        {
          "ruleId": "SA1127",
          "level": "warning",
          "message": "Generic type constraints must be on their own line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 2433,
                  "startColumn": 34,
                  "endLine": 2433,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1127",
          "level": "warning",
          "message": "Generic type constraints must be on their own line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 2509,
                  "startColumn": 48,
                  "endLine": 2509,
                  "endColumn": 63
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1127",
          "level": "warning",
          "message": "Generic type constraints must be on their own line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Linq/JToken.cs",
                "region": {
                  "startLine": 2593,
                  "startColumn": 44,
                  "endLine": 2593,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1127",
          "level": "warning",
          "message": "Generic type constraints must be on their own line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonTypeReflector.cs",
                "region": {
                  "startLine": 67,
                  "startColumn": 73,
                  "endLine": 67,
                  "endColumn": 92
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1402",
          "level": "warning",
          "message": "File may only contain a single class",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 89,
                  "startColumn": 20,
                  "endLine": 89,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1615",
          "level": "warning",
          "message": "Element return value must be documented",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonTypeReflector.cs",
                "region": {
                  "startLine": 181,
                  "startColumn": 23,
                  "endLine": 181,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1027",
          "level": "warning",
          "message": "Tabs must not be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 144,
                  "startColumn": 12,
                  "endLine": 144,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1027",
          "level": "warning",
          "message": "Tabs must not be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 166,
                  "startColumn": 12,
                  "endLine": 166,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1615",
          "level": "warning",
          "message": "Element return value must be documented",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonTypeReflector.cs",
                "region": {
                  "startLine": 192,
                  "startColumn": 24,
                  "endLine": 192,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1611",
          "level": "warning",
          "message": "The documentation for parameter 'converterType' is missing",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonTypeReflector.cs",
                "region": {
                  "startLine": 192,
                  "startColumn": 83,
                  "endLine": 192,
                  "endColumn": 96
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1131",
          "level": "warning",
          "message": "Constant values should appear on the right-hand side of comparisons",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonTypeReflector.cs",
                "region": {
                  "startLine": 208,
                  "startColumn": 29,
                  "endLine": 208,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1127",
          "level": "warning",
          "message": "Generic type constraints must be on their own line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonTypeReflector.cs",
                "region": {
                  "startLine": 273,
                  "startColumn": 53,
                  "endLine": 273,
                  "endColumn": 72
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1127",
          "level": "warning",
          "message": "Generic type constraints must be on their own line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonTypeReflector.cs",
                "region": {
                  "startLine": 307,
                  "startColumn": 65,
                  "endLine": 307,
                  "endColumn": 84
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1127",
          "level": "warning",
          "message": "Generic type constraints must be on their own line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonTypeReflector.cs",
                "region": {
                  "startLine": 354,
                  "startColumn": 58,
                  "endLine": 354,
                  "endColumn": 77
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1515",
          "level": "warning",
          "message": "Single-line comment must be preceded by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 337,
                  "startColumn": 17,
                  "endLine": 337,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1515",
          "level": "warning",
          "message": "Single-line comment must be preceded by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 753,
                  "startColumn": 17,
                  "endLine": 753,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1117",
          "level": "warning",
          "message": "The parameters must all be placed on the same line or each parameter must be placed on its own line.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/BidirectionalDictionary.cs",
                "region": {
                  "startLine": 54,
                  "startColumn": 13,
                  "endLine": 54,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1618",
          "level": "warning",
          "message": "The documentation for type parameter 'T' is missing",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/CollectionUtils.cs",
                "region": {
                  "startLine": 51,
                  "startColumn": 42,
                  "endLine": 51,
                  "endColumn": 43
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1515",
          "level": "warning",
          "message": "Single-line comment must be preceded by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 1435,
                  "startColumn": 21,
                  "endLine": 1435,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1618",
          "level": "warning",
          "message": "The documentation for type parameter 'T' is missing",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/CollectionUtils.cs",
                "region": {
                  "startLine": 65,
                  "startColumn": 37,
                  "endLine": 65,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/PropertyNameTable.cs",
                "region": {
                  "startLine": 100,
                  "startColumn": 63,
                  "endLine": 100,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1027",
          "level": "warning",
          "message": "Tabs must not be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/IReferenceResolver.cs",
                "region": {
                  "startLine": 55,
                  "startColumn": 12,
                  "endLine": 55,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1515",
          "level": "warning",
          "message": "Single-line comment must be preceded by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonArrayContract.cs",
                "region": {
                  "startLine": 98,
                  "startColumn": 17,
                  "endLine": 98,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 366,
                  "startColumn": 128,
                  "endLine": 366,
                  "endColumn": 130
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1514",
          "level": "warning",
          "message": "Element documentation header must be preceded by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 609,
                  "startColumn": 9,
                  "endLine": 609,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1117",
          "level": "warning",
          "message": "The parameters must all be placed on the same line or each parameter must be placed on its own line.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 150,
                  "startColumn": 13,
                  "endLine": 150,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 238,
                  "startColumn": 56,
                  "endLine": 238,
                  "endColumn": 62
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/ImmutableCollectionsUtils.cs",
                "region": {
                  "startLine": 144,
                  "startColumn": 146,
                  "endLine": 144,
                  "endColumn": 148
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/ImmutableCollectionsUtils.cs",
                "region": {
                  "startLine": 156,
                  "startColumn": 43,
                  "endLine": 156,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/ImmutableCollectionsUtils.cs",
                "region": {
                  "startLine": 112,
                  "startColumn": 141,
                  "endLine": 112,
                  "endColumn": 143
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/ImmutableCollectionsUtils.cs",
                "region": {
                  "startLine": 120,
                  "startColumn": 103,
                  "endLine": 120,
                  "endColumn": 105
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1131",
          "level": "warning",
          "message": "Constant values should appear on the right-hand side of comparisons",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DateTimeParser.cs",
                "region": {
                  "startLine": 107,
                  "startColumn": 24,
                  "endLine": 107,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1131",
          "level": "warning",
          "message": "Constant values should appear on the right-hand side of comparisons",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DateTimeParser.cs",
                "region": {
                  "startLine": 110,
                  "startColumn": 24,
                  "endLine": 110,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1131",
          "level": "warning",
          "message": "Constant values should appear on the right-hand side of comparisons",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DateTimeParser.cs",
                "region": {
                  "startLine": 114,
                  "startColumn": 24,
                  "endLine": 114,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1129",
          "level": "warning",
          "message": "Do not use default value type constructor",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 201,
                  "startColumn": 45,
                  "endLine": 201,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1131",
          "level": "warning",
          "message": "Constant values should appear on the right-hand side of comparisons",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DateTimeParser.cs",
                "region": {
                  "startLine": 261,
                  "startColumn": 21,
                  "endLine": 261,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1131",
          "level": "warning",
          "message": "Constant values should appear on the right-hand side of comparisons",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DateTimeParser.cs",
                "region": {
                  "startLine": 262,
                  "startColumn": 24,
                  "endLine": 262,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1129",
          "level": "warning",
          "message": "Do not use default value type constructor",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 267,
                  "startColumn": 45,
                  "endLine": 267,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1027",
          "level": "warning",
          "message": "Tabs must not be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonObjectContract.cs",
                "region": {
                  "startLine": 51,
                  "startColumn": 12,
                  "endLine": 51,
                  "endColumn": 78
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1131",
          "level": "warning",
          "message": "Constant values should appear on the right-hand side of comparisons",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DateTimeParser.cs",
                "region": {
                  "startLine": 242,
                  "startColumn": 21,
                  "endLine": 242,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1131",
          "level": "warning",
          "message": "Constant values should appear on the right-hand side of comparisons",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DateTimeParser.cs",
                "region": {
                  "startLine": 243,
                  "startColumn": 24,
                  "endLine": 243,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1131",
          "level": "warning",
          "message": "Constant values should appear on the right-hand side of comparisons",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DateTimeParser.cs",
                "region": {
                  "startLine": 244,
                  "startColumn": 24,
                  "endLine": 244,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1131",
          "level": "warning",
          "message": "Constant values should appear on the right-hand side of comparisons",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DateTimeParser.cs",
                "region": {
                  "startLine": 245,
                  "startColumn": 24,
                  "endLine": 245,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1500",
          "level": "warning",
          "message": "Braces for multi-line statements must not share line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 271,
                  "startColumn": 17,
                  "endLine": 271,
                  "endColumn": 18
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1027",
          "level": "warning",
          "message": "Tabs must not be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonProperty.cs",
                "region": {
                  "startLine": 203,
                  "startColumn": 12,
                  "endLine": 203,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 702,
                  "startColumn": 64,
                  "endLine": 702,
                  "endColumn": 66
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1500",
          "level": "warning",
          "message": "Braces for multi-line statements must not share line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 338,
                  "startColumn": 13,
                  "endLine": 338,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1111",
          "level": "warning",
          "message": "Closing parenthesis must be on line of last parameter",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 123,
                  "startColumn": 17,
                  "endLine": 123,
                  "endColumn": 18
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "action": "remove",
              "layout": "pack",
              "location": "preceding"
            }
          }
        },
        {
          "ruleId": "SA1111",
          "level": "warning",
          "message": "Closing parenthesis must be on line of last parameter",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 121,
                  "startColumn": 21,
                  "endLine": 121,
                  "endColumn": 22
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "action": "remove",
              "layout": "pack",
              "location": "preceding"
            }
          }
        },
        {
          "ruleId": "SA1118",
          "level": "warning",
          "message": "The parameter spans multiple lines",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicUtils.cs",
                "region": {
                  "startLine": 133,
                  "startColumn": 60,
                  "endLine": 137,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1127",
          "level": "warning",
          "message": "Generic type constraints must be on their own line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/EnumUtils.cs",
                "region": {
                  "startLine": 75,
                  "startColumn": 59,
                  "endLine": 75,
                  "endColumn": 75
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 890,
                  "startColumn": 24,
                  "endLine": 890,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 890,
                  "startColumn": 67,
                  "endLine": 890,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 902,
                  "startColumn": 24,
                  "endLine": 902,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 902,
                  "startColumn": 67,
                  "endLine": 902,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1615",
          "level": "warning",
          "message": "Element return value must be documented",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 214,
                  "startColumn": 17,
                  "endLine": 214,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1611",
          "level": "warning",
          "message": "The documentation for parameter 'methodName' is missing",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 214,
                  "startColumn": 63,
                  "endLine": 214,
                  "endColumn": 73
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1611",
          "level": "warning",
          "message": "The documentation for parameter 'binder' is missing",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 214,
                  "startColumn": 99,
                  "endLine": 214,
                  "endColumn": 105
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1611",
          "level": "warning",
          "message": "The documentation for parameter 'args' is missing",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 214,
                  "startColumn": 120,
                  "endLine": 214,
                  "endColumn": 124
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1611",
          "level": "warning",
          "message": "The documentation for parameter 'fallback' is missing",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 214,
                  "startColumn": 135,
                  "endLine": 214,
                  "endColumn": 143
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1611",
          "level": "warning",
          "message": "The documentation for parameter 'fallbackInvoke' is missing",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 214,
                  "startColumn": 154,
                  "endLine": 214,
                  "endColumn": 168
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/DefaultSerializationBinder.cs",
                "region": {
                  "startLine": 128,
                  "startColumn": 43,
                  "endLine": 128,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/DefaultSerializationBinder.cs",
                "region": {
                  "startLine": 128,
                  "startColumn": 82,
                  "endLine": 128,
                  "endColumn": 84
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1618",
          "level": "warning",
          "message": "The documentation for type parameter 'T' is missing",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/EnumUtils.cs",
                "region": {
                  "startLine": 110,
                  "startColumn": 65,
                  "endLine": 110,
                  "endColumn": 66
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1127",
          "level": "warning",
          "message": "Generic type constraints must be on their own line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/EnumUtils.cs",
                "region": {
                  "startLine": 110,
                  "startColumn": 70,
                  "endLine": 110,
                  "endColumn": 86
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1618",
          "level": "warning",
          "message": "The documentation for type parameter 'TUnderlyingType' is missing",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/EnumUtils.cs",
                "region": {
                  "startLine": 120,
                  "startColumn": 75,
                  "endLine": 120,
                  "endColumn": 90
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1616",
          "level": "warning",
          "message": "Element return value documentation must have text",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/EnumUtils.cs",
                "region": {
                  "startLine": 109,
                  "startColumn": 13,
                  "endLine": 109,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1127",
          "level": "warning",
          "message": "Generic type constraints must be on their own line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/EnumUtils.cs",
                "region": {
                  "startLine": 120,
                  "startColumn": 107,
                  "endLine": 120,
                  "endColumn": 137
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1117",
          "level": "warning",
          "message": "The parameters must all be placed on the same line or each parameter must be placed on its own line.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/EnumUtils.cs",
                "region": {
                  "startLine": 147,
                  "startColumn": 29,
                  "endLine": 147,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1616",
          "level": "warning",
          "message": "Element return value documentation must have text",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/EnumUtils.cs",
                "region": {
                  "startLine": 119,
                  "startColumn": 13,
                  "endLine": 119,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/EnumUtils.cs",
                "region": {
                  "startLine": 195,
                  "startColumn": 26,
                  "endLine": 195,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonArrayContract.cs",
                "region": {
                  "startLine": 210,
                  "startColumn": 82,
                  "endLine": 210,
                  "endColumn": 84
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1111",
          "level": "warning",
          "message": "Closing parenthesis must be on line of last parameter",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 284,
                  "startColumn": 17,
                  "endLine": 284,
                  "endColumn": 18
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "action": "remove",
              "layout": "pack",
              "location": "preceding"
            }
          }
        },
        {
          "ruleId": "SA1111",
          "level": "warning",
          "message": "Closing parenthesis must be on line of last parameter",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 282,
                  "startColumn": 21,
                  "endLine": 282,
                  "endColumn": 22
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "action": "remove",
              "layout": "pack",
              "location": "preceding"
            }
          }
        },
        {
          "ruleId": "SA1111",
          "level": "warning",
          "message": "Closing parenthesis must be on line of last parameter",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 281,
                  "startColumn": 25,
                  "endLine": 281,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "action": "remove",
              "layout": "pack",
              "location": "preceding"
            }
          }
        },
        {
          "ruleId": "SA1111",
          "level": "warning",
          "message": "Closing parenthesis must be on line of last parameter",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 277,
                  "startColumn": 29,
                  "endLine": 277,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "action": "remove",
              "layout": "pack",
              "location": "preceding"
            }
          }
        },
        {
          "ruleId": "SA1407",
          "level": "warning",
          "message": "Arithmetic expressions must declare precedence",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 800,
                  "startColumn": 46,
                  "endLine": 800,
                  "endColumn": 52
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1407",
          "level": "warning",
          "message": "Arithmetic expressions must declare precedence",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 800,
                  "startColumn": 20,
                  "endLine": 800,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1407",
          "level": "warning",
          "message": "Arithmetic expressions must declare precedence",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 800,
                  "startColumn": 33,
                  "endLine": 800,
                  "endColumn": 43
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1407",
          "level": "warning",
          "message": "Arithmetic expressions must declare precedence",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 811,
                  "startColumn": 26,
                  "endLine": 811,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1615",
          "level": "warning",
          "message": "Element return value must be documented",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 294,
                  "startColumn": 17,
                  "endLine": 294,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1611",
          "level": "warning",
          "message": "The documentation for parameter 'methodName' is missing",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 294,
                  "startColumn": 63,
                  "endLine": 294,
                  "endColumn": 73
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1611",
          "level": "warning",
          "message": "The documentation for parameter 'binder' is missing",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 294,
                  "startColumn": 99,
                  "endLine": 294,
                  "endColumn": 105
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1611",
          "level": "warning",
          "message": "The documentation for parameter 'args' is missing",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 294,
                  "startColumn": 120,
                  "endLine": 294,
                  "endColumn": 124
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1611",
          "level": "warning",
          "message": "The documentation for parameter 'fallback' is missing",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 294,
                  "startColumn": 135,
                  "endLine": 294,
                  "endColumn": 143
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1111",
          "level": "warning",
          "message": "Closing parenthesis must be on line of last parameter",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 332,
                  "startColumn": 17,
                  "endLine": 332,
                  "endColumn": 18
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "action": "remove",
              "layout": "pack",
              "location": "preceding"
            }
          }
        },
        {
          "ruleId": "SA1111",
          "level": "warning",
          "message": "Closing parenthesis must be on line of last parameter",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 330,
                  "startColumn": 21,
                  "endLine": 330,
                  "endColumn": 22
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "action": "remove",
              "layout": "pack",
              "location": "preceding"
            }
          }
        },
        {
          "ruleId": "SA1111",
          "level": "warning",
          "message": "Closing parenthesis must be on line of last parameter",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 329,
                  "startColumn": 25,
                  "endLine": 329,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "action": "remove",
              "layout": "pack",
              "location": "preceding"
            }
          }
        },
        {
          "ruleId": "SA1111",
          "level": "warning",
          "message": "Closing parenthesis must be on line of last parameter",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 325,
                  "startColumn": 29,
                  "endLine": 325,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "action": "remove",
              "layout": "pack",
              "location": "preceding"
            }
          }
        },
        {
          "ruleId": "SA1615",
          "level": "warning",
          "message": "Element return value must be documented",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 350,
                  "startColumn": 17,
                  "endLine": 350,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1611",
          "level": "warning",
          "message": "The documentation for parameter 'methodName' is missing",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 350,
                  "startColumn": 61,
                  "endLine": 350,
                  "endColumn": 71
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1611",
          "level": "warning",
          "message": "The documentation for parameter 'binder' is missing",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 350,
                  "startColumn": 97,
                  "endLine": 350,
                  "endColumn": 103
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1611",
          "level": "warning",
          "message": "The documentation for parameter 'args' is missing",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 350,
                  "startColumn": 118,
                  "endLine": 350,
                  "endColumn": 122
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1611",
          "level": "warning",
          "message": "The documentation for parameter 'fallback' is missing",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 350,
                  "startColumn": 133,
                  "endLine": 350,
                  "endColumn": 141
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1111",
          "level": "warning",
          "message": "Closing parenthesis must be on line of last parameter",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 379,
                  "startColumn": 17,
                  "endLine": 379,
                  "endColumn": 18
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "action": "remove",
              "layout": "pack",
              "location": "preceding"
            }
          }
        },
        {
          "ruleId": "SA1111",
          "level": "warning",
          "message": "Closing parenthesis must be on line of last parameter",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 377,
                  "startColumn": 21,
                  "endLine": 377,
                  "endColumn": 22
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "action": "remove",
              "layout": "pack",
              "location": "preceding"
            }
          }
        },
        {
          "ruleId": "SA1111",
          "level": "warning",
          "message": "Closing parenthesis must be on line of last parameter",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 373,
                  "startColumn": 25,
                  "endLine": 373,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "action": "remove",
              "layout": "pack",
              "location": "preceding"
            }
          }
        },
        {
          "ruleId": "SA1615",
          "level": "warning",
          "message": "Element return value must be documented",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 396,
                  "startColumn": 17,
                  "endLine": 396,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 649,
                  "startColumn": 58,
                  "endLine": 649,
                  "endColumn": 60
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1309",
          "level": "warning",
          "message": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonDictionaryContract.cs",
                "region": {
                  "startLine": 178,
                  "startColumn": 82,
                  "endLine": 178,
                  "endColumn": 84
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1128",
          "level": "warning",
          "message": "Put constructor initializers on their own line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 414,
                  "startColumn": 66,
                  "endLine": 415,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1612",
          "level": "warning",
          "message": "The parameter documentation for 'memberSerialization' should be at position 2.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 1336,
                  "startColumn": 26,
                  "endLine": 1336,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1612",
          "level": "warning",
          "message": "The parameter documentation for 'member' should be at position 1.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 1337,
                  "startColumn": 26,
                  "endLine": 1337,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1500",
          "level": "warning",
          "message": "Braces for multi-line statements must not share line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 765,
                  "startColumn": 21,
                  "endLine": 765,
                  "endColumn": 22
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1625",
          "level": "warning",
          "message": "Element documentation must not be copied and pasted",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/DefaultContractResolver.cs",
                "region": {
                  "startLine": 1563,
                  "startColumn": 13,
                  "endLine": 1563,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1500",
          "level": "warning",
          "message": "Braces for multi-line statements must not share line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1662,
                  "startColumn": 13,
                  "endLine": 1662,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1500",
          "level": "warning",
          "message": "Braces for multi-line statements must not share line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1416,
                  "startColumn": 13,
                  "endLine": 1416,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1500",
          "level": "warning",
          "message": "Braces for multi-line statements must not share line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1862,
                  "startColumn": 13,
                  "endLine": 1862,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1500",
          "level": "warning",
          "message": "Braces for multi-line statements must not share line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 1545,
                  "startColumn": 13,
                  "endLine": 1545,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1500",
          "level": "warning",
          "message": "Braces for multi-line statements must not share line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2187,
                  "startColumn": 13,
                  "endLine": 2187,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1515",
          "level": "warning",
          "message": "Single-line comment must be preceded by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 469,
                  "startColumn": 21,
                  "endLine": 469,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1515",
          "level": "warning",
          "message": "Single-line comment must be preceded by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 490,
                  "startColumn": 21,
                  "endLine": 490,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1500",
          "level": "warning",
          "message": "Braces for multi-line statements must not share line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonSerializerInternalReader.cs",
                "region": {
                  "startLine": 2395,
                  "startColumn": 13,
                  "endLine": 2395,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1515",
          "level": "warning",
          "message": "Single-line comment must be preceded by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 580,
                  "startColumn": 13,
                  "endLine": 580,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1515",
          "level": "warning",
          "message": "Single-line comment must be preceded by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 679,
                  "startColumn": 13,
                  "endLine": 679,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1515",
          "level": "warning",
          "message": "Single-line comment must be preceded by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/JsonSerializerInternalWriter.cs",
                "region": {
                  "startLine": 807,
                  "startColumn": 13,
                  "endLine": 807,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1515",
          "level": "warning",
          "message": "Single-line comment must be preceded by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/TraceJsonReader.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 13,
                  "endLine": 20,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1515",
          "level": "warning",
          "message": "Single-line comment must be preceded by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/TraceJsonWriter.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 13,
                  "endLine": 23,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1517",
          "level": "warning",
          "message": "Code must not contain blank lines at start of file",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/TraceLevel.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 2,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1027",
          "level": "warning",
          "message": "Tabs must not be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/CollectionUtils.cs",
                "region": {
                  "startLine": 49,
                  "startColumn": 12,
                  "endLine": 49,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1649",
          "level": "warning",
          "message": "File name must match first type name.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/CollectionWrapper.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 24,
                  "endLine": 40,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedFileName": "IWrappedCollection.cs"
            }
          }
        },
        {
          "ruleId": "SA1649",
          "level": "warning",
          "message": "File name must match first type name.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 93,
                  "startColumn": 20,
                  "endLine": 93,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedFileName": "TypeInformation.cs"
            }
          }
        },
        {
          "ruleId": "SA1402",
          "level": "warning",
          "message": "File may only contain a single class",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/ConvertUtils.cs",
                "region": {
                  "startLine": 93,
                  "startColumn": 20,
                  "endLine": 93,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1515",
          "level": "warning",
          "message": "Single-line comment must be preceded by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 773,
                  "startColumn": 13,
                  "endLine": 773,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1515",
          "level": "warning",
          "message": "Single-line comment must be preceded by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 775,
                  "startColumn": 13,
                  "endLine": 775,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1515",
          "level": "warning",
          "message": "Single-line comment must be preceded by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 777,
                  "startColumn": 13,
                  "endLine": 777,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1515",
          "level": "warning",
          "message": "Single-line comment must be preceded by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 779,
                  "startColumn": 13,
                  "endLine": 779,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1515",
          "level": "warning",
          "message": "Single-line comment must be preceded by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 781,
                  "startColumn": 13,
                  "endLine": 781,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1515",
          "level": "warning",
          "message": "Single-line comment must be preceded by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 786,
                  "startColumn": 13,
                  "endLine": 786,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1515",
          "level": "warning",
          "message": "Single-line comment must be preceded by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 788,
                  "startColumn": 13,
                  "endLine": 788,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1515",
          "level": "warning",
          "message": "Single-line comment must be preceded by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 790,
                  "startColumn": 13,
                  "endLine": 790,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1515",
          "level": "warning",
          "message": "Single-line comment must be preceded by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 792,
                  "startColumn": 13,
                  "endLine": 792,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1515",
          "level": "warning",
          "message": "Single-line comment must be preceded by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 794,
                  "startColumn": 13,
                  "endLine": 794,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1515",
          "level": "warning",
          "message": "Single-line comment must be preceded by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 809,
                  "startColumn": 13,
                  "endLine": 809,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1515",
          "level": "warning",
          "message": "Single-line comment must be preceded by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DateTimeUtils.cs",
                "region": {
                  "startLine": 812,
                  "startColumn": 13,
                  "endLine": 812,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1649",
          "level": "warning",
          "message": "File name must match first type name.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DictionaryWrapper.cs",
                "region": {
                  "startLine": 39,
                  "startColumn": 24,
                  "endLine": 39,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedFileName": "IWrappedDictionary.cs"
            }
          }
        },
        {
          "ruleId": "SA1512",
          "level": "warning",
          "message": "Single-line comments must not be followed by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 231,
                  "startColumn": 13,
                  "endLine": 231,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1512",
          "level": "warning",
          "message": "Single-line comments must not be followed by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 259,
                  "startColumn": 17,
                  "endLine": 259,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1120",
          "level": "warning",
          "message": "Comments must contain text",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 93,
                  "startColumn": 13,
                  "endLine": 93,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1120",
          "level": "warning",
          "message": "Comments must contain text",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 108,
                  "startColumn": 13,
                  "endLine": 108,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1120",
          "level": "warning",
          "message": "Comments must contain text",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 216,
                  "startColumn": 13,
                  "endLine": 216,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1120",
          "level": "warning",
          "message": "Comments must contain text",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 219,
                  "startColumn": 13,
                  "endLine": 219,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1120",
          "level": "warning",
          "message": "Comments must contain text",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 224,
                  "startColumn": 13,
                  "endLine": 224,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1120",
          "level": "warning",
          "message": "Comments must contain text",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 231,
                  "startColumn": 13,
                  "endLine": 231,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1120",
          "level": "warning",
          "message": "Comments must contain text",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 238,
                  "startColumn": 13,
                  "endLine": 238,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1120",
          "level": "warning",
          "message": "Comments must contain text",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 244,
                  "startColumn": 13,
                  "endLine": 244,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1120",
          "level": "warning",
          "message": "Comments must contain text",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 296,
                  "startColumn": 13,
                  "endLine": 296,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1120",
          "level": "warning",
          "message": "Comments must contain text",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 299,
                  "startColumn": 13,
                  "endLine": 299,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1120",
          "level": "warning",
          "message": "Comments must contain text",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 302,
                  "startColumn": 13,
                  "endLine": 302,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1120",
          "level": "warning",
          "message": "Comments must contain text",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 308,
                  "startColumn": 13,
                  "endLine": 308,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1120",
          "level": "warning",
          "message": "Comments must contain text",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 334,
                  "startColumn": 13,
                  "endLine": 334,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1120",
          "level": "warning",
          "message": "Comments must contain text",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 341,
                  "startColumn": 13,
                  "endLine": 341,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1120",
          "level": "warning",
          "message": "Comments must contain text",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 352,
                  "startColumn": 13,
                  "endLine": 352,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1120",
          "level": "warning",
          "message": "Comments must contain text",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 355,
                  "startColumn": 13,
                  "endLine": 355,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1120",
          "level": "warning",
          "message": "Comments must contain text",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 363,
                  "startColumn": 13,
                  "endLine": 363,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1120",
          "level": "warning",
          "message": "Comments must contain text",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 366,
                  "startColumn": 13,
                  "endLine": 366,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1120",
          "level": "warning",
          "message": "Comments must contain text",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 381,
                  "startColumn": 13,
                  "endLine": 381,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1120",
          "level": "warning",
          "message": "Comments must contain text",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 388,
                  "startColumn": 13,
                  "endLine": 388,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1515",
          "level": "warning",
          "message": "Single-line comment must be preceded by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicProxyMetaObject.cs",
                "region": {
                  "startLine": 259,
                  "startColumn": 17,
                  "endLine": 259,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1402",
          "level": "warning",
          "message": "File may only contain a single class",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicUtils.cs",
                "region": {
                  "startLine": 149,
                  "startColumn": 20,
                  "endLine": 149,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1402",
          "level": "warning",
          "message": "File may only contain a single class",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicUtils.cs",
                "region": {
                  "startLine": 171,
                  "startColumn": 20,
                  "endLine": 171,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1402",
          "level": "warning",
          "message": "File may only contain a single class",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DynamicUtils.cs",
                "region": {
                  "startLine": 193,
                  "startColumn": 20,
                  "endLine": 193,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1649",
          "level": "warning",
          "message": "File name must match first type name.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/FSharpUtils.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 20,
                  "endLine": 37,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedFileName": "FSharpFunction.cs"
            }
          }
        },
        {
          "ruleId": "SA1402",
          "level": "warning",
          "message": "File may only contain a single class",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/FSharpUtils.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 20,
                  "endLine": 37,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1649",
          "level": "warning",
          "message": "File name must match first type name.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 42,
                  "startColumn": 27,
                  "endLine": 42,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedFileName": "BufferUtils.cs"
            }
          }
        },
        {
          "ruleId": "SA1402",
          "level": "warning",
          "message": "File may only contain a single class",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/JavaScriptUtils.cs",
                "region": {
                  "startLine": 42,
                  "startColumn": 27,
                  "endLine": 42,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1517",
          "level": "warning",
          "message": "Code must not contain blank lines at start of file",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/LinqBridge.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 2,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1649",
          "level": "warning",
          "message": "File name must match first type name.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/ReflectionObject.cs",
                "region": {
                  "startLine": 41,
                  "startColumn": 20,
                  "endLine": 41,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ExpectedFileName": "ReflectionMember.cs"
            }
          }
        },
        {
          "ruleId": "SA1402",
          "level": "warning",
          "message": "File may only contain a single class",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/ReflectionObject.cs",
                "region": {
                  "startLine": 41,
                  "startColumn": 20,
                  "endLine": 41,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1512",
          "level": "warning",
          "message": "Single-line comments must not be followed by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 999,
                  "startColumn": 13,
                  "endLine": 999,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1027",
          "level": "warning",
          "message": "Tabs must not be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 470,
                  "startColumn": 12,
                  "endLine": 470,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1027",
          "level": "warning",
          "message": "Tabs must not be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 493,
                  "startColumn": 12,
                  "endLine": 493,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1027",
          "level": "warning",
          "message": "Tabs must not be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 561,
                  "startColumn": 12,
                  "endLine": 561,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1027",
          "level": "warning",
          "message": "Tabs must not be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 603,
                  "startColumn": 12,
                  "endLine": 603,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1515",
          "level": "warning",
          "message": "Single-line comment must be preceded by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 1019,
                  "startColumn": 29,
                  "endLine": 1019,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1515",
          "level": "warning",
          "message": "Single-line comment must be preceded by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/ReflectionUtils.cs",
                "region": {
                  "startLine": 1063,
                  "startColumn": 21,
                  "endLine": 1063,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1027",
          "level": "warning",
          "message": "Tabs must not be used.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/StringUtils.cs",
                "region": {
                  "startLine": 82,
                  "startColumn": 12,
                  "endLine": 82,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SA1515",
          "level": "warning",
          "message": "Single-line comment must be preceded by blank line",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/TypeExtensions.cs",
                "region": {
                  "startLine": 368,
                  "startColumn": 17,
                  "endLine": 368,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2213",
          "level": "warning",
          "message": "Disposable fields should be disposed",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/TraceJsonWriter.cs",
                "region": {
                  "startLine": 16,
                  "startColumn": 39,
                  "endLine": 16,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2213",
          "level": "warning",
          "message": "Disposable fields should be disposed",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Schema/JsonSchemaWriter.cs",
                "region": {
                  "startLine": 43,
                  "startColumn": 37,
                  "endLine": 43,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2213",
          "level": "warning",
          "message": "Disposable fields should be disposed",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/TraceJsonReader.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 39,
                  "endLine": 13,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2213",
          "level": "warning",
          "message": "Disposable fields should be disposed",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/TraceJsonWriter.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 41,
                  "endLine": 15,
                  "endColumn": 52
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2213",
          "level": "warning",
          "message": "Disposable fields should be disposed",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/TraceJsonReader.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 41,
                  "endLine": 12,
                  "endColumn": 52
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2213",
          "level": "warning",
          "message": "Disposable fields should be disposed",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/DictionaryWrapper.cs",
                "region": {
                  "startLine": 477,
                  "startColumn": 90,
                  "endLine": 477,
                  "endColumn": 92
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2213",
          "level": "warning",
          "message": "Disposable fields should be disposed",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/TraceJsonReader.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 37,
                  "endLine": 11,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2213",
          "level": "warning",
          "message": "Disposable fields should be disposed",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Serialization/TraceJsonWriter.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 37,
                  "endLine": 14,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2213",
          "level": "warning",
          "message": "Disposable fields should be disposed",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/Utilities/Base64Encoder.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 37,
                  "endLine": 37,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2213",
          "level": "warning",
          "message": "Disposable fields should be disposed",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/Src/roslyn-internal/Closed/Test/Solutions/Newtonsoft.Json/Newtonsoft.Json/JsonValidatingReader.cs",
                "region": {
                  "startLine": 109,
                  "startColumn": 37,
                  "endLine": 109,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "CA1001": {
          "id": "CA1001",
          "shortDescription": "Types that own disposable fields should be disposable",
          "defaultLevel": "warning",
          "helpUri": "http://msdn.microsoft.com/library/ms182172.aspx",
          "properties": {
            "category": "Design",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry"
            ]
          }
        },
        "CA1036": {
          "id": "CA1036",
          "shortDescription": "Overload operator Equals and comparison operators when implementing System.IComparable",
          "fullDescription": "Types that implement IComparable should redefine Equals and comparison operators to keep the meanings of less than, greater than, and equals consistent throughout the type.",
          "defaultLevel": "warning",
          "helpUri": "http://msdn.microsoft.com/library/ms182163.aspx",
          "properties": {
            "category": "Design",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry"
            ]
          }
        },
        "CA1309": {
          "id": "CA1309",
          "shortDescription": "String comparison should use StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase",
          "fullDescription": "For non-linguistic comparisons, StringComparison.Ordinal or StringComparison.OrdinalIgnoreCase should be used instead of the linguistically-sensitive StringComparison.InvariantCulture.",
          "defaultLevel": "warning",
          "helpUri": "http://msdn.microsoft.com/library/bb385972.aspx",
          "properties": {
            "category": "Globalization",
            "isEnabledByDefault": false,
            "tags": [
              "Telemetry"
            ]
          }
        },
        "CA2213": {
          "id": "CA2213",
          "shortDescription": "Disposable fields should be disposed",
          "defaultLevel": "warning",
          "helpUri": "http://msdn.microsoft.com/library/ms182328.aspx",
          "properties": {
            "category": "Usage",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry"
            ]
          }
        },
        "CA2231": {
          "id": "CA2231",
          "shortDescription": "Overload operator equals on overriding ValueType.Equals",
          "fullDescription": "Value types that redefine System.ValueType.Equals should redefine the equality operator as well to ensure that these members return the same results. This helps ensure that types that rely on Equals (such as ArrayList and Hashtable) behave in a manner that is expected and consistent with the equality operator.",
          "defaultLevel": "warning",
          "helpUri": "http://msdn.microsoft.com/library/ms182359.aspx",
          "properties": {
            "category": "Usage",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry"
            ]
          }
        },
        "CS0618": {
          "id": "CS0618",
          "shortDescription": "Type or member is obsolete",
          "defaultLevel": "warning",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS1574": {
          "id": "CS1574",
          "shortDescription": "XML comment has cref attribute that could not be resolved",
          "defaultLevel": "warning",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "SA1027": {
          "id": "SA1027",
          "shortDescription": "Tabs must not be used",
          "fullDescription": "The C# code contains a tab character",
          "defaultLevel": "warning",
          "helpUri": "https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1027.md",
          "properties": {
            "category": "StyleCop.CSharp.SpacingRules",
            "isEnabledByDefault": true
          }
        },
        "SA1111": {
          "id": "SA1111",
          "shortDescription": "Closing parenthesis must be on line of last parameter",
          "fullDescription": "The closing parenthesis or bracket in a call to or declaration of a C# method/indexer/attribute/array/constructor/delegate is not placed on the same line as the last parameter.",
          "defaultLevel": "warning",
          "helpUri": "https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1111.md",
          "properties": {
            "category": "StyleCop.CSharp.ReadabilityRules",
            "isEnabledByDefault": true
          }
        },
        "SA1116": {
          "id": "SA1116",
          "shortDescription": "Split parameters must start on line after declaration",
          "fullDescription": "The parameters to a C# method or indexer call or declaration span across multiple lines, but the first parameter does not start on the line after the opening bracket.",
          "defaultLevel": "warning",
          "helpUri": "https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1116.md",
          "properties": {
            "category": "StyleCop.CSharp.ReadabilityRules",
            "isEnabledByDefault": true
          }
        },
        "SA1117": {
          "id": "SA1117",
          "shortDescription": "Parameters must be on same line or separate lines",
          "fullDescription": "The parameters to a C# method or indexer call or declaration are not all on the same line or each on a separate line.",
          "defaultLevel": "warning",
          "helpUri": "https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1117.md",
          "properties": {
            "category": "StyleCop.CSharp.ReadabilityRules",
            "isEnabledByDefault": true
          }
        },
        "SA1118": {
          "id": "SA1118",
          "shortDescription": "Parameter must not span multiple lines",
          "fullDescription": "A parameter to a C# method/indexer/attribute/array, other than the first parameter, spans across multiple lines. If the parameter is short, place the entire parameter on a single line. Otherwise, save the contents of the parameter in a temporary variable and pass the temporary variable as a parameter.",
          "defaultLevel": "warning",
          "helpUri": "https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1118.md",
          "properties": {
            "category": "StyleCop.CSharp.ReadabilityRules",
            "isEnabledByDefault": true
          }
        },
        "SA1120": {
          "id": "SA1120",
          "shortDescription": "Comments must contain text",
          "fullDescription": "The C# comment does not contain any comment text.",
          "defaultLevel": "warning",
          "helpUri": "https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1120.md",
          "properties": {
            "category": "StyleCop.CSharp.ReadabilityRules",
            "isEnabledByDefault": true
          }
        },
        "SA1122": {
          "id": "SA1122",
          "shortDescription": "Use string.Empty for empty strings",
          "fullDescription": "The C# code includes an empty string, written as \"\".",
          "defaultLevel": "warning",
          "helpUri": "https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1122.md",
          "properties": {
            "category": "StyleCop.CSharp.ReadabilityRules",
            "isEnabledByDefault": true
          }
        },
        "SA1127": {
          "id": "SA1127",
          "shortDescription": "Generic type constraints must be on their own line",
          "fullDescription": "Each type constraint clause for a generic type parameter should be listed on a line of code by itself.",
          "defaultLevel": "warning",
          "helpUri": "https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1127.md",
          "properties": {
            "category": "StyleCop.CSharp.ReadabilityRules",
            "isEnabledByDefault": true
          }
        },
        "SA1128": {
          "id": "SA1128",
          "shortDescription": "Put constructor initializers on their own line",
          "fullDescription": "A constructor initializer, including the colon character, should be on its own line.",
          "defaultLevel": "warning",
          "helpUri": "https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1128.md",
          "properties": {
            "category": "StyleCop.CSharp.ReadabilityRules",
            "isEnabledByDefault": true
          }
        },
        "SA1129": {
          "id": "SA1129",
          "shortDescription": "Do not use default value type constructor",
          "fullDescription": "When creating a new instance of a value type T, the syntax 'default(T)' is functionally equivalent to the syntax 'new T()'. To avoid confusion regarding the behavior of the resulting instance, the first form is preferred.",
          "defaultLevel": "warning",
          "helpUri": "https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1129.md",
          "properties": {
            "category": "StyleCop.CSharp.ReadabilityRules",
            "isEnabledByDefault": true
          }
        },
        "SA1131": {
          "id": "SA1131",
          "shortDescription": "Use readable conditions",
          "fullDescription": "When a comparison is made between a variable and a literal, the variable should be placed on the left-hand-side to maximize readability.",
          "defaultLevel": "warning",
          "helpUri": "https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1131.md",
          "properties": {
            "category": "StyleCop.CSharp.ReadabilityRules",
            "isEnabledByDefault": true
          }
        },
        "SA1203": {
          "id": "SA1203",
          "shortDescription": "Constants must appear before fields",
          "fullDescription": "A constant field is placed beneath a non-constant field.",
          "defaultLevel": "warning",
          "helpUri": "https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1203.md",
          "properties": {
            "category": "StyleCop.CSharp.OrderingRules",
            "isEnabledByDefault": true
          }
        },
        "SA1204": {
          "id": "SA1204",
          "shortDescription": "Static elements must appear before instance elements",
          "fullDescription": "A static element is positioned beneath an instance element.",
          "defaultLevel": "warning",
          "helpUri": "https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1204.md",
          "properties": {
            "category": "StyleCop.CSharp.OrderingRules",
            "isEnabledByDefault": true
          }
        },
        "SA1206": {
          "id": "SA1206",
          "shortDescription": "Declaration keywords must follow order",
          "fullDescription": "The keywords within the declaration of an element do not follow a standard ordering scheme.",
          "defaultLevel": "warning",
          "helpUri": "https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1206.md",
          "properties": {
            "category": "StyleCop.CSharp.OrderingRules",
            "isEnabledByDefault": true
          }
        },
        "SA1208": {
          "id": "SA1208",
          "shortDescription": "System using directives must be placed before other using directives",
          "fullDescription": "A using directive which declares a member of the 'System' namespace appears after a using directive which declares a member of a different namespace, within a C# code file.",
          "defaultLevel": "warning",
          "helpUri": "https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1208.md",
          "properties": {
            "category": "StyleCop.CSharp.OrderingRules",
            "isEnabledByDefault": true
          }
        },
        "SA1210": {
          "id": "SA1210",
          "shortDescription": "Using directives must be ordered alphabetically by namespace",
          "fullDescription": "The using directives within a C# code file are not sorted alphabetically by namespace.",
          "defaultLevel": "warning",
          "helpUri": "https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1210.md",
          "properties": {
            "category": "StyleCop.CSharp.OrderingRules",
            "isEnabledByDefault": true
          }
        },
        "SA1214": {
          "id": "SA1214",
          "shortDescription": "Readonly fields must appear before non-readonly fields",
          "fullDescription": "A readonly field is positioned beneath a non-readonly field.",
          "defaultLevel": "warning",
          "helpUri": "https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1214.md",
          "properties": {
            "category": "StyleCop.CSharp.OrderingRules",
            "isEnabledByDefault": true
          }
        },
        "SA1306": {
          "id": "SA1306",
          "shortDescription": "Field names must begin with lower-case letter",
          "fullDescription": "The name of a field in C# does not begin with a lower-case letter.",
          "defaultLevel": "warning",
          "helpUri": "https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1306.md",
          "properties": {
            "category": "StyleCop.CSharp.NamingRules",
            "isEnabledByDefault": true
          }
        },
        "SA1310": {
          "id": "SA1310",
          "shortDescription": "Field names must not contain underscore",
          "fullDescription": "A field name in C# contains an underscore.",
          "defaultLevel": "warning",
          "helpUri": "https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1310.md",
          "properties": {
            "category": "StyleCop.CSharp.NamingRules",
            "isEnabledByDefault": true
          }
        },
        "SA1402": {
          "id": "SA1402",
          "shortDescription": "File may only contain a single class",
          "fullDescription": "A C# code file contains more than one unique class.",
          "defaultLevel": "warning",
          "helpUri": "https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1402.md",
          "properties": {
            "category": "StyleCop.CSharp.MaintainabilityRules",
            "isEnabledByDefault": true
          }
        },
        "SA1407": {
          "id": "SA1407",
          "shortDescription": "Arithmetic expressions must declare precedence",
          "fullDescription": "A C# statement contains a complex arithmetic expression which omits parenthesis around operators.",
          "defaultLevel": "warning",
          "helpUri": "https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1407.md",
          "properties": {
            "category": "StyleCop.CSharp.MaintainabilityRules",
            "isEnabledByDefault": true
          }
        },
        "SA1500": {
          "id": "SA1500",
          "shortDescription": "Braces for multi-line statements must not share line",
          "fullDescription": "The opening or closing brace within a C# statement, element, or expression is not placed on its own line.",
          "defaultLevel": "warning",
          "helpUri": "https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1500.md",
          "properties": {
            "category": "StyleCop.CSharp.LayoutRules",
            "isEnabledByDefault": true
          }
        },
        "SA1504": {
          "id": "SA1504",
          "shortDescription": "All accessors must be single-line or multi-line",
          "fullDescription": "Within a C# property, indexer or event, at least one of the child accessors is written on a single line, and at least one of the child accessors is written across multiple lines.",
          "defaultLevel": "warning",
          "helpUri": "https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1504.md",
          "properties": {
            "category": "StyleCop.CSharp.LayoutRules",
            "isEnabledByDefault": true
          }
        },
        "SA1505": {
          "id": "SA1505",
          "shortDescription": "Opening braces must not be followed by blank line",
          "fullDescription": "An opening brace within a C# element, statement, or expression is followed by a blank line.",
          "defaultLevel": "warning",
          "helpUri": "https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1505.md",
          "properties": {
            "category": "StyleCop.CSharp.LayoutRules",
            "isEnabledByDefault": true
          }
        },
        "SA1512": {
          "id": "SA1512",
          "shortDescription": "Single-line comments must not be followed by blank line",
          "fullDescription": "A single-line comment within C# code is followed by a blank line.",
          "defaultLevel": "warning",
          "helpUri": "https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1512.md",
          "properties": {
            "category": "StyleCop.CSharp.LayoutRules",
            "isEnabledByDefault": true
          }
        },
        "SA1514": {
          "id": "SA1514",
          "shortDescription": "Element documentation header must be preceded by blank line",
          "fullDescription": "An element documentation header above a C# element is not preceded by a blank line.",
          "defaultLevel": "warning",
          "helpUri": "https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1514.md",
          "properties": {
            "category": "StyleCop.CSharp.LayoutRules",
            "isEnabledByDefault": true
          }
        },
        "SA1515": {
          "id": "SA1515",
          "shortDescription": "Single-line comment must be preceded by blank line",
          "fullDescription": "A single-line comment within C# code is not preceded by a blank line.",
          "defaultLevel": "warning",
          "helpUri": "https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1515.md",
          "properties": {
            "category": "StyleCop.CSharp.LayoutRules",
            "isEnabledByDefault": true
          }
        },
        "SA1517": {
          "id": "SA1517",
          "shortDescription": "Code must not contain blank lines at start of file",
          "fullDescription": "The code file has blank lines at the start.",
          "defaultLevel": "warning",
          "helpUri": "https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1517.md",
          "properties": {
            "category": "StyleCop.CSharp.LayoutRules",
            "isEnabledByDefault": true
          }
        },
        "SA1610": {
          "id": "SA1610",
          "shortDescription": "Property documentation must have value text",
          "fullDescription": "The XML header documentation for a C# property contains an empty <value> tag.",
          "defaultLevel": "warning",
          "helpUri": "https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1610.md",
          "properties": {
            "category": "StyleCop.CSharp.DocumentationRules",
            "isEnabledByDefault": true
          }
        },
        "SA1611": {
          "id": "SA1611",
          "shortDescription": "Element parameters must be documented",
          "fullDescription": "A C# method, constructor, delegate or indexer element is missing documentation for one or more of its parameters.",
          "defaultLevel": "warning",
          "helpUri": "https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1611.md",
          "properties": {
            "category": "StyleCop.CSharp.DocumentationRules",
            "isEnabledByDefault": true
          }
        },
        "SA1612": {
          "id": "SA1612",
          "shortDescription": "Element parameter documentation must match element parameters",
          "fullDescription": "The documentation describing the parameters to a C# method, constructor, delegate or indexer element does not match the actual parameters on the element.",
          "defaultLevel": "warning",
          "helpUri": "https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1612.md",
          "properties": {
            "category": "StyleCop.CSharp.DocumentationRules",
            "isEnabledByDefault": true
          }
        },
        "SA1615": {
          "id": "SA1615",
          "shortDescription": "Element return value must be documented",
          "fullDescription": "A C# element is missing documentation for its return value.",
          "defaultLevel": "warning",
          "helpUri": "https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1615.md",
          "properties": {
            "category": "StyleCop.CSharp.DocumentationRules",
            "isEnabledByDefault": true
          }
        },
        "SA1616": {
          "id": "SA1616",
          "shortDescription": "Element return value documentation must have text",
          "fullDescription": "The <returns> tag within a C# element's documentation header is empty.",
          "defaultLevel": "warning",
          "helpUri": "https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1616.md",
          "properties": {
            "category": "StyleCop.CSharp.DocumentationRules",
            "isEnabledByDefault": true
          }
        },
        "SA1618": {
          "id": "SA1618",
          "shortDescription": "Generic type parameters must be documented",
          "fullDescription": "A generic C# element is missing documentation for one or more of its generic type parameters.",
          "defaultLevel": "warning",
          "helpUri": "https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1618.md",
          "properties": {
            "category": "StyleCop.CSharp.DocumentationRules",
            "isEnabledByDefault": true
          }
        },
        "SA1620": {
          "id": "SA1620",
          "shortDescription": "Generic type parameter documentation must match type parameters",
          "fullDescription": "The <typeparam> tags within the Xml header documentation for a generic C# element do not match the generic type parameters on the element.",
          "defaultLevel": "warning",
          "helpUri": "https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1620.md",
          "properties": {
            "category": "StyleCop.CSharp.DocumentationRules",
            "isEnabledByDefault": true
          }
        },
        "SA1623": {
          "id": "SA1623",
          "shortDescription": "Property summary documentation must match accessors",
          "fullDescription": "The documentation text within a C# property’s <summary> tag does not match the accessors within the property.",
          "defaultLevel": "warning",
          "helpUri": "https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1623.md",
          "properties": {
            "category": "StyleCop.CSharp.DocumentationRules",
            "isEnabledByDefault": true
          }
        },
        "SA1624": {
          "id": "SA1624",
          "shortDescription": "Property summary documentation must omit accessor with restricted access",
          "fullDescription": "The documentation text within a C# property’s <summary> tag takes into account all of the accessors within the property, but one of the accessors has limited access.",
          "defaultLevel": "warning",
          "helpUri": "https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1624.md",
          "properties": {
            "category": "StyleCop.CSharp.DocumentationRules",
            "isEnabledByDefault": true
          }
        },
        "SA1625": {
          "id": "SA1625",
          "shortDescription": "Element documentation must not be copied and pasted",
          "fullDescription": "The Xml documentation for a C# element contains two or more identical entries, indicating that the documentation has been copied and pasted. This can sometimes indicate invalid or poorly written documentation.",
          "defaultLevel": "warning",
          "helpUri": "https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1625.md",
          "properties": {
            "category": "StyleCop.CSharp.DocumentationRules",
            "isEnabledByDefault": true
          }
        },
        "SA1642": {
          "id": "SA1642",
          "shortDescription": "Constructor summary documentation must begin with standard text",
          "fullDescription": "The XML documentation header for a C# constructor does not contain the appropriate summary text.",
          "defaultLevel": "warning",
          "helpUri": "https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1642.md",
          "properties": {
            "category": "StyleCop.CSharp.DocumentationRules",
            "isEnabledByDefault": true
          }
        },
        "SA1649": {
          "id": "SA1649",
          "shortDescription": "File name must match first type name",
          "fullDescription": "The file name of a C# code file does not match the first type declared in the file.",
          "defaultLevel": "warning",
          "helpUri": "https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1649.md",
          "properties": {
            "category": "StyleCop.CSharp.DocumentationRules",
            "isEnabledByDefault": true
          }
        }
      }
    }
  ]
}