{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Semmle",
        "version": "1.15.2"
      },
      "files": {
        "file:///C:/corefx/src/System.Net.Http.WinHttpHandler/tests/UnitTests/ClientCertificateHelper.cs": {
          "mimeType": "text/x-csharp",
          "contents": ""
        },
        "file:///C:/corefx/src/System.Net.Http.WinHttpHandler/tests/UnitTests/WinHttpHandlerTest.cs": {
          "mimeType": "text/x-csharp",
          "contents": ""
        }
      },
      "results": [
        {
          "ruleId": "cs/hardcoded-credentials",
          "level": "warning",
          "message": "The hard-coded value \"MIIKTgIBAzCCCgoGCSqGSIb3DQEHAaCCCfsEggn3MIIJ8zCCBgwGCSqGSIb3DQEHAaCCBf0EggX5\r\n                    MIIF9TCCBfEGCyqGSIb3DQEMCgECoIIE/jCCBPowHAYKKoZIhvcNAQwBAzAOBAiSNi65ZF5ZTQIC\r\n                    B9AEggTYRTivDtzHOWRR+MobtGFEUu6d1PiIlF1Ic84FWvmFCcJShkBmg3cBqDilqtamAkDkga4h\r\n                    A1nwCrlx/lzkpI03hUbM7+hJrC9mB2pQrPi33ZHacIe2aunvFnMAoBcHv7xEn8XSRTx+TgIDAKwS\r\n                    UqCIsgRSUYPQvR0kxgBYAC9XG7JeuxTrbV9F/VNOMbP4NumER0Ym4R668x8KpJkMjNuVH5/+CAxt\r\n                    TKpLBav1wSj1qkrRtJRyPB+x8Pz7L0qP/3HZ1Ett05z1uUjBT8GSloO7OvwshFHeXlqG1I8CYRXE\r\n                    f/NaXYw+Qm/sYWetkOhX4RWHFlzrKXi+nQRJLYnNdoK6dmWcj8ZnHfz0zAimTp16CL+qg8KegRUV\r\n                    J8vz+CrZcsIKIvj+/Ys6m30b9htbwvdubb1hf1sF/xD5sfJHN0lR44ALzzH5AGIyVXFIhvGIHKWa\r\n                    UywBJcnCHQHl/5IGsKQJBXHAfxCsmpxfTts1iTDCglNnxkkdNzST/ndcBFRPr1o88lPXNUl1dlMY\r\n                    yGuSSUbHSzyodd7TZaQYcoDWZIjOQYkdtPGXizeWv0zDY6Qbf8g0rYIAg+iBBb1pHeqkBTdLG92z\r\n                    QmRk8KSxxQkUivzQQZH2xIz0BEGMBWTl7uK7J+tnPq4U8FLRU8e5/eRQbfKsQJHheWkmCJseZhSW\r\n                    puG32l8Bpr3KOE5bJI+A+In/XHNvbgWrQUZNh8a5Z0W+x3+I8EJisBqzl1AI/MTuM6BqEgQPtJhQ\r\n                    X81PilHGNTTK1+VDJWJB+Uun0Luw0kcl45d4nK/WCVfZ6BC9CYxgexodMJfDZmuxG00w+HI6pldV\r\n                    yXUlTW4cPQQyNRPZL8BUvW/wGNNzS+iMEqjQ9OolfIyx9hx31qZPvixfpZlUH8xUwNPHjmC0DKSn\r\n                    RUhyOQ2ukxyvkvwcNkn3Uq9jqByvVBXeBOs8XyMjQkGpzh7snSh5Tx9xI0uKQwoFPmK6bNj2P2Sj\r\n                    j1TstdWNWVIogLd+vrwuNPSfQP5V1L2LjvgkDNhWK6tVo82dDi0eBlQpIFMNtFLYk2GhEdkjBwt/\r\n                    +ajFF17fqyS+DHwTUrYxtA2CTwjpeFWpyN/KV63nUUbVtCdWgvMIGuycgvZ4IjvfQbkLewPe+YtZ\r\n                    EiyyJYoE6hU/XyN0GmV9wjLz6qutVL0g3qEhmv1M9B6CfyDhwQMywJsYt0fT2PEkPZsy/84Nmj/M\r\n                    tYzYeQEsQ+uHSKA/H6x4ogah1irLwStOmoQhcAQNi0B4gU/dGekGKOmAV9ch82HpH7EMZWSGN/kd\r\n                    6hutGtHdFG/h4pUGR1MbikoT+C+UDmM+qilXvtFLxZFUkR3zgVzXPTW4Cl4SX5dkh72j5D7nX01o\r\n                    Q8xTkDGF0d85zsjqK7jMlBSZZGyz4qQXwWICaCAWI3KugB4nuyD33BpTRPWQbCFx6Xu+qqbKYffR\r\n                    QPI4psNr1tjounYRXyO+b0dy6P0JaayfA3A4A+nTi6bQTA/g2G6WdpzUkl9NsPYeRLqie0LrQt7A\r\n                    M96K7oZqqr0Kwr/EHJOunbL7hf0MQyF4B5rNS1SC/BkUPVm05VTsPoQ/fZRnh4joR5/Pf2hJiiZ9\r\n                    cj3FHJAgxJa4AybONWYHZndXxAmz4qXd/0lEGcDQolID8wAhzHkrxtoDkhGFe8wvpjGB3zATBgkq\r\n                    hkiG9w0BCRUxBgQEAQAAADBdBgkqhkiG9w0BCRQxUB5OAGwAcAAtAGYANgBlAGMAYgAzAGUAMQAt\r\n                    ADAAMQAwADQALQA0ADAANABjAC0AYQAxAGYAMAAtADgAMAA1ADgAZAA5ADIAYgBkADYANAA4MGkG\r\n                    CSsGAQQBgjcRATFcHloATQBpAGMAcgBvAHMAbwBmAHQAIABSAFMAQQAgAFMAQwBoAGEAbgBuAGUA\r\n                    bAAgAEMAcgB5AHAAdABvAGcAcgBhAHAAaABpAGMAIABQAHIAbwB2AGkAZABlAHIwggPfBgkqhkiG\r\n                    9w0BBwagggPQMIIDzAIBADCCA8UGCSqGSIb3DQEHATAcBgoqhkiG9w0BDAEGMA4ECFm0XVHjzmaN\r\n                    AgIH0ICCA5hT8Uv6jXhh/mHFb2p4XctoZH3gU3uf+MXFkzO9rzRPjgpKqVt1CYDbGHMqI+PypZL+\r\n                    Ppy9cHnw7ChKy/qGJ02q9Tjn2m5IQI024Qo1GRBh0P5ibNWeb1ILxuJi5Xb/LZUc+buMXQhNZPuh\r\n                    KvImzd/6Uigr8RrZCdBdbuAu8qtkWwq+WUBBLt/gY1arVV6Tkbquz+LbJQhxa8nIL2hntCZlayL1\r\n                    CtQe87NZ+Kuh8jxjxRyPIlQvYTyksqPxZbP4iaFa3C45QksELuzg3HpqIPocMTP9SETaj5KX7ZPm\r\n                    ziK8B3aa3LcUH5wonbU9zpVa9Zkr3IJJz5rlnoStdIrkK+4c8pCGJGvYTg6rypKcBi037b9U16p5\r\n                    pmn4nh9nz2Ys0+bh6FNAL9rt5naRd3TlpjmPQHhx+m5jwUvLVMcvtJq2Tq2bSqHJd7owNPheEqQY\r\n                    9DQ6NKuj9lTRgKvoL5ok8zjZYcgUW0Ev/kjZ27Qin1AS90eoLCC3gELqxIlZbADt1H/cyIr96M6Q\r\n                    bkDS+CzP9RXgDJ9xdGx2wwIscNCPCncTTe8mabpBocERcjN0i42ylrlD6P3aHWt2Ngx9rYNlvbwQ\r\n                    8RrDwW5b9WF/2BLETgKly3DXp0ClhRdWrmSbso1w0y99AZPQEM1aCLdqTmgY48+7zTrKttfeD/F6\r\n                    ugPmhxpyA+Wu/DlxZP7JqMrH0v9XoN0VJ5L/UuQOEowVx2P/8RgqtMB1MJ3WRaUnd/BC8w/sFKHl\r\n                    xpeH0aoheSqeW5LEHSYB/XLb7PfBwLVqgttNqid+dkPfrLfpb5ZRfm8z9icf7gUl6CbIj+KbdeUV\r\n                    x+9KT52Oym3+A9z/Fz01w3Z63WkG1YBx70tV8qj8x9SfHaG7S1pS9PeCgbdzwZLeY9XNaR5349Pq\r\n                    CX7rArkC3kHe+v+jdQ0MP/91InaQpJLoHeIL+Otp2bLLLIgGLoZvkavOQjNay/HLNujohtHx3gns\r\n                    7HiMJCQiWCCwRpe3j4lK1/jT+xAAfdhP/cJj9MMdO1/ANkytSAD+0SS5zs4aBu3cXrXCH7ZN4X7Q\r\n                    QZWC9/2TJnPvzTMtTKrgu9azNjEQw8T2d6uHtEV+qyKm6QR4fs2l25OqH167/StAlpTohOahwzO1\r\n                    6ZzUabYI5B+4pji7A1fn+aQa8u0kX3qyYNCeEpFoX0FVI6G7VfeFus+91a/sVVa1EkGQrdFE/xBA\r\n                    gOxmB9mCYydeLzMbYUa7KTA7MB8wBwYFKw4DAhoEFP7GyT09gJP2TcfZRvC4S5rTPsRjBBSWQf3f\r\n                    BXH9IG0V641MICnWmHeUhQICB9A=\" flows to the [rawData] parameter in [object creation of type X509Certificate2].",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/corefx/src/System.Net.Http.WinHttpHandler/tests/UnitTests/ClientCertificateHelper.cs",
                "region": {
                  "startLine": 69,
                  "startColumn": 1,
                  "length": 4539
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/corefx/src/System.Net.Http.WinHttpHandler/tests/UnitTests/ClientCertificateHelper.cs",
                "region": {
                  "startLine": 68,
                  "startColumn": 1,
                  "length": 4585
                }
              },
              "message": "rawData"
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/corefx/src/System.Net.Http.WinHttpHandler/tests/UnitTests/ClientCertificateHelper.cs",
                "region": {
                  "startLine": 67,
                  "startColumn": 1,
                  "length": 4654
                }
              },
              "message": "object creation of type X509Certificate2"
            }
          ]
        },
        {
          "ruleId": "cs/hardcoded-credentials",
          "level": "warning",
          "message": "The hard-coded value \"password\" flows to the [password] parameter in [object creation of type X509Certificate2].",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/corefx/src/System.Net.Http.WinHttpHandler/tests/UnitTests/ClientCertificateHelper.cs",
                "region": {
                  "startLine": 116,
                  "startColumn": 1,
                  "length": 10
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/corefx/src/System.Net.Http.WinHttpHandler/tests/UnitTests/ClientCertificateHelper.cs",
                "region": {
                  "startLine": 116,
                  "startColumn": 1,
                  "length": 10
                }
              },
              "message": "password"
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/corefx/src/System.Net.Http.WinHttpHandler/tests/UnitTests/ClientCertificateHelper.cs",
                "region": {
                  "startLine": 67,
                  "startColumn": 1,
                  "length": 4654
                }
              },
              "message": "object creation of type X509Certificate2"
            }
          ]
        },
        {
          "ruleId": "cs/hardcoded-credentials",
          "level": "warning",
          "message": "The hard-coded value \"MIIKRgIBAzCCCgIGCSqGSIb3DQEHAaCCCfMEggnvMIIJ6zCCBgQGCSqGSIb3DQEHAaCCBfUEggXx\r\n                    MIIF7TCCBekGCyqGSIb3DQEMCgECoIIE9jCCBPIwHAYKKoZIhvcNAQwBAzAOBAhCUuNQ0RqfZQIC\r\n                    B9AEggTQHCQRSiCiNI7egTvUaI1Z3tfeLwFWvG7B/za5v9fb97MExoyVQSDmUyUDTlVEcg3gVqJZ\r\n                    MKGD6U1pmJsnTB+tH53Ho8L9GIrmZKq1L4Y9Wxu/VfIgub4I54UK8LZylpcIkb+OXBn46HnhDBu/\r\n                    fknsBWLWUbtuOGp7PDHQLvoEu5rvmvTDWTWQr4S7S2cqrR0RIXThKObgKCjJ+/y9YCBZfX8jbZvq\r\n                    r7vedpoFS0P0mDOk8aILefNADdoALfHzrrxYl0hp31sHrnDHJ0I/j6xFtsKBFmDigtPhHb9+c9PC\r\n                    Bi/QJ5vmfECiHsw+dwBFH7m50ZbRFllDY6vIOjXRCeixMkq+18GZirX9l042RCijChCIbiaQI9O8\r\n                    Eejnvkf41+KiVQAoaC42s1yQtmmDDIqJZD6N5X9wx7NgnfjxpuUvq91O/iBN0yzVzep5nQ4CDGmF\r\n                    ljFc50beI5uOcSNOiO7Zn40h6MkPcecIMlI7sUFlo3IglzQGLvGL3OqsQ+dYqBGLD21x1ItmQOyH\r\n                    zRIe+u5zytQVux6L47caPVR05k7ge7py0P+trh0UZimh7udh2l1a6GahNtKhU28cbJa3GFj+AlWa\r\n                    tSD6LzPdsMhoDooSMKpWcz8YogO4gueZkTL+ZI/WE6uGIOfbg70aSPc+k1xMNu8jnkdeOOUHzy7l\r\n                    V9raeUuSCLsh9mOEhSD9sVRVgpPz9bU72vWO4nYuGoENDuMVpiOQZ+2+LOv54TJVeJB+niSx/z6+\r\n                    YGcGTHa8rSY25hv0wHF6Ws1B/M68ScmJ1YKAL5yWptiOZPqoPcHaqZcPRNKJ5sK8s77K8r6uU00F\r\n                    49i6QWGVcLN+4oTis2HEA4YZQXWxeM08iTpzA7LqRrPuhfeqpb4mfWcnfkZUiVFGp245bP0MtCLm\r\n                    i7yBcztQ9NXexCEhszYHBkPJub76h6Du/98xSmDfqYXA0u2b242TrF0pK2kkYbDFIzBu49G75uL/\r\n                    22jOwrB5XgqxISmSHG0aVoYnh6XLN7Mec0dg9guwCeN58/0LoDfoR5OSlVwd94Yx/R89gAbFVPp5\r\n                    aWNVwHio0TrlBuyQSlIARlkO37yXJq85JOjnaa1EdyH/zwGrVE6j6xG3P/z4Lz2QybpfKWyaGjZ9\r\n                    nML8YPCVRMrCln9M1Fe+hw66KDDnw3N9YD4fLzIk67AeEjf+uXHIas14aKZLaFHvBax5GPfoZ59X\r\n                    nDajL2+f85aDWyG/yt4Zx9cdURSbhDna7MArn+fz/4y+KLYoFvdiU0mf9xp1CVormfp+iIJrmsEy\r\n                    Yb3TDDFimQbI1LhR6c+D+UGxjAbbqEbCdaY+3sLRpbWyEEyEA317A3v3gFWQQQjAUxrFQb1hOyit\r\n                    SmrcFg13XKmO5sEgfZi5zf4i3UOOron6NskmgvrSptXv/6Dndk4tEnsYPk/L7LvGUwfBninVsP96\r\n                    8ifZ8It3H3A26fOhSpbv7DWJih5wXS1Cq0UehciuhMaYjNoXEKcyd4PMghuYKBJpoZMGCUUCunZy\r\n                    upL3uOt/GvThtjv+ZyGnEZ8aQHO1iXlDg7gqmvmfr/RM3jwuBU4cthm4jzzSukj4rJltSVKPnOKb\r\n                    YG0QBKKYB7PUA9puYAVLvXCDyCN6Rc6EuNlX023d+TPQXXfkRPwbw9Axgd8wEwYJKoZIhvcNAQkV\r\n                    MQYEBAEAAAAwXQYJKoZIhvcNAQkUMVAeTgBsAHAALQBhADQANwA3ADYAZQBhAGQALQAxADUANwAz\r\n                    AC0ANABiAGEAYwAtAGIANQA5ADQALQAxADIAYgBkADYAYQAxAGYAMAA4ADYAZTBpBgkrBgEEAYI3\r\n                    EQExXB5aAE0AaQBjAHIAbwBzAG8AZgB0ACAAUgBTAEEAIABTAEMAaABhAG4AbgBlAGwAIABDAHIA\r\n                    eQBwAHQAbwBnAHIAYQBwAGgAaQBjACAAUAByAG8AdgBpAGQAZQByMIID3wYJKoZIhvcNAQcGoIID\r\n                    0DCCA8wCAQAwggPFBgkqhkiG9w0BBwEwHAYKKoZIhvcNAQwBBjAOBAgvllSbyRotdwICB9CAggOY\r\n                    V1o4hQ6elS5118RFmTFOCR0+m6htp9L5oljwV2ULh8bloOHZVt91WT9jfI/E8SQ12dyCKC3YsZoQ\r\n                    BQI4g8FUk6AcAhSKVXJim/9WG7dcVxWv0TClcl2TtNwFs97nkBlurIdUIx49frWdfmhBj+O8P8vq\r\n                    3b3GxmiJgEhcg2KmhsRB+mzXUK9frJqF9hMqB/Pb5Txa15vmHl5vh+oIYK89aDKeQ+Waqqm4ioY9\r\n                    MsrlNP4BJLsMA1IccQpl9DNq7N31QvkD855sw4BARkDAMu+MmhxS2IXGWmioHLvOzvyU36bXykh9\r\n                    g1XeH1h3L6PKQaeOcDBDcwwy6Rh/CBRAe0jWLMaSObLxnupSp6Wv5ft/hd9sAoZ6mMOosOwtbfeP\r\n                    2ZpVtpYikU0Zt0EYjC+lPHqhsc1GThLLJjOvPtLMJV9TDJDpjVlE/b4xYbjkA2uTVWH3PkObME3P\r\n                    fXcYvl6KxrHfWMw4GQPQPRnG63QlxWnXpNbmhcr5BdYg0kLaVgzV9z1KeDH7q7z0Qvd8Zl+4Grsz\r\n                    sUJz6UJzo4CCqhtLQ6IbOyqtBTWSomW9dSD0nI4q+ZlIgL6sS8sfpPekWAqcsud/TUIQ3FbX5Ble\r\n                    LCkAcU5dUwH9vzAXKE/pUFaeJUpYXg26jhgonQa7ODi8L+cBu4tCjef7NQqe+4I5SOrCDlo04d3S\r\n                    V38Crywjz7YyC1wSYmxCzMZSAXZZ0K6wWsDnUjpxcuKSjZ98B3SIyNWIitQvlrzv0eo29PYlp4Rz\r\n                    WPLrPG5y09o8MCtonHfwoKjqjQ5k/4qorwxfHoLwNdQpEEyldaiA14VRcpQukdMr4Y6cDKPU92Tm\r\n                    iENC3eecBBTPgzaftHPt4A5v8TUiH7NhK1TJTn6qjzLpSONUKe0SSs1me6qqvdOcen+koey7XMTi\r\n                    +CwJ2pH7QFK3ImxJ4jcTrXIUb0nzRabeAy1fMQv4jBMMqEpBQLpy+NOosME7NhHn9ijM0i0TPImT\r\n                    Iw3MD5cLB1f2jHlyrviC3gGtIjACb61WLp1g2nkOyXgoq61aBOYQCuE0Ej8tcqbBMwOSV5BdGuAX\r\n                    4+4wKQm5gN/A61E53rXWbC94KYInPE+cOr520WYXa5A2EBLeD2zFJmPLKRWtcYQ68TpO5CXwv3Vf\r\n                    PJSfxLpKGbEzJwTVym+e8/wV6rIMenN2wDc3lPUD0BYeQNSthGyb8Lxx7QGIh9n2tv69xCjGX0Q2\r\n                    XsK7XDeFDEowOzAfMAcGBSsOAwIaBBSRhbklb9VyYh3HUjX0soZDQ4LQYQQUUNfB0Xe9MmRurnYX\r\n                    KMyIoz+dMXUCAgfQ\" flows to the [rawData] parameter in [object creation of type X509Certificate2].",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/corefx/src/System.Net.Http.WinHttpHandler/tests/UnitTests/ClientCertificateHelper.cs",
                "region": {
                  "startLine": 121,
                  "startColumn": 1,
                  "length": 4527
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/corefx/src/System.Net.Http.WinHttpHandler/tests/UnitTests/ClientCertificateHelper.cs",
                "region": {
                  "startLine": 120,
                  "startColumn": 1,
                  "length": 4573
                }
              },
              "message": "rawData"
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/corefx/src/System.Net.Http.WinHttpHandler/tests/UnitTests/ClientCertificateHelper.cs",
                "region": {
                  "startLine": 119,
                  "startColumn": 1,
                  "length": 4642
                }
              },
              "message": "object creation of type X509Certificate2"
            }
          ]
        },
        {
          "ruleId": "cs/hardcoded-credentials",
          "level": "warning",
          "message": "The hard-coded value \"password\" flows to the [password] parameter in [object creation of type X509Certificate2].",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/corefx/src/System.Net.Http.WinHttpHandler/tests/UnitTests/ClientCertificateHelper.cs",
                "region": {
                  "startLine": 168,
                  "startColumn": 1,
                  "length": 10
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/corefx/src/System.Net.Http.WinHttpHandler/tests/UnitTests/ClientCertificateHelper.cs",
                "region": {
                  "startLine": 168,
                  "startColumn": 1,
                  "length": 10
                }
              },
              "message": "password"
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/corefx/src/System.Net.Http.WinHttpHandler/tests/UnitTests/ClientCertificateHelper.cs",
                "region": {
                  "startLine": 119,
                  "startColumn": 1,
                  "length": 4642
                }
              },
              "message": "object creation of type X509Certificate2"
            }
          ]
        },
        {
          "ruleId": "cs/hardcoded-credentials",
          "level": "warning",
          "message": "The hard-coded value \"MIIKPgIBAzCCCfoGCSqGSIb3DQEHAaCCCesEggnnMIIJ4zCCBgwGCSqGSIb3DQEHAaCCBf0EggX5\r\n                    MIIF9TCCBfEGCyqGSIb3DQEMCgECoIIE/jCCBPowHAYKKoZIhvcNAQwBAzAOBAijQh1kbOZOYQIC\r\n                    B9AEggTY+wDp3V31Lh7f8YrsqEsyGZ+GlYvFhLWvDASjisYJi5NlQ0ONbf0KOXHVSvBj3tVyuHm4\r\n                    5j6PlwF8nLiANmvnNyr+tmnLLx8Fa8XGmi4ggs3YGPJEw6u41qTnPGlT7goQaylT+XudRTMgB1lQ\r\n                    tAGW12P2kQX2laJFqK/KF1YGaUC7dTxPnRQg+qzfP3+omlx6kqt38YvVjoc1toYGo/Jc1GuEUQ++\r\n                    HrarLzVUJvAzD22Q8fX0Tjp5EVezYhb/aSiqd7d7VLVHoukaYJxKJW3JKTVHI76+pyNv+HnTwlHC\r\n                    gfY8DI6NekwtXEHf9W1XPaTMyFYyamWAsH5FeM1EyLh/bTmvoCNZtVx2UiUD1MbSnYO/KNGHcl74\r\n                    6A92sFXhzSXdkxLCMEiHTD5LZ8SFJCh7b3LeTHsdRb6C3SlkPsji5mCbacy6femW9Q1RyPO08Td3\r\n                    vZtPB4fambMXLTaVaSnT/+F8Vd/seGrGsfON1okSIz34M6kH9GzHtbeQV3BuO6YxIJqljAlM+I1u\r\n                    ItcXKGwv5vtzmGFIRVBxmgkErtO+dWeocee/du3VPA8MyuIEumCKVTeiM5OOPPHDxdOxieKYqC01\r\n                    T8TvLFuTSqQg008s2BcGCW3dsbOc8jyKg4tp8J7XnaCYv7toyB4A8fzc3fx+mquBmc1ehMQKJHN1\r\n                    Cx3nVV//gEEbq2ZSNrhuEKw2D85rA1XZX1zwhHy1T5bGNgC4sAwmRszUSeCrUAlGMLxXv+Cu4G1j\r\n                    U+kwvG+MuKuK4Z22lMAwm7mNEK1vi7wmuoFPWOolPVCoxvCIGGDT0eLjL3YmePCkifwYrbDgWmWB\r\n                    OElG1E7LtpCYDqTgsBwo/Vp47l/RQFYRAcxishKjn5Bi4AURagaFdVrFI+7XyjG5ZYijy39uKWJN\r\n                    lquP5yHg9wjMsYeBjDIfZhkPFMPUou2DDuI3VimnW6SETXkitY6knjPl8T9kVYEHiDj4n2hZxymj\r\n                    sXCPjO673zK4IB887KoOUpmzaGkfA5Gqw1JkE/HK/ghEJQpnkBs+SMWSwY200+UJWWSCeVI0ZY0T\r\n                    sihWT7cd/o3LdFDNNKok9qA6lpREOv3+5l23McBM7y6sxtjXL/+GwbN3XiTGNY5yjJ0+bVUob2E6\r\n                    L9JRc2+3Jlcg9xAV9YCvdjd1LkPo0aRm+oZKFWCv4mgoATBlJGImkIp/HcukEeaiuCQplDLapk+a\r\n                    6ZwV4YfpZluoSoMaXzGZEr+qFUAzhEJ/WXLBQI9qEkf5Lf9Kdh6iKSqnV8wordvu24rGynYkM3TO\r\n                    Ni/8IjeZRCE2CqcQ9coAzXgSJdM1vC+1AJm0mpsvlHocHnJoF305OtFUALTFCHkrZMxqVGMq2DlX\r\n                    cXw6KEEheVZGZs7QD5eYf47YcSFCGsSEhcP+syt0UgAi2p5Y8Ym8AFotTMT8opwJ9LwjaCwBMQkH\r\n                    xKPwcSg7Q9SXb4NNTAL1nGxOU5ZNW0QRcwbJQzVfVTMwQ7nRtSjc/Qg3ST1fVuIiqsTSu2AL3bSn\r\n                    24I3Zi8idaf69c2MNhc03UTgMNCh9T4QNVf7bSXznPl8hd9G3cekPuQY1b5YzB8DOU5cyD+pLuOa\r\n                    43oQ6V0WVceUHe+Lw0aKelCI+6dYa7C8RerOTgOaDyuBxG+qouBk5LvxCNWLh7nMyTGB3zATBgkq\r\n                    hkiG9w0BCRUxBgQEAQAAADBdBgkqhkiG9w0BCRQxUB5OAGwAcAAtADYANwBkAGYAZgA0ADIAOAAt\r\n                    ADEAZQAxADEALQA0ADYAYwA5AC0AOABlADkAMgAtAGIAZQBmAGIANwAzAGUANAA4ADIAOAA1MGkG\r\n                    CSsGAQQBgjcRATFcHloATQBpAGMAcgBvAHMAbwBmAHQAIABSAFMAQQAgAFMAQwBoAGEAbgBuAGUA\r\n                    bAAgAEMAcgB5AHAAdABvAGcAcgBhAHAAaABpAGMAIABQAHIAbwB2AGkAZABlAHIwggPPBgkqhkiG\r\n                    9w0BBwagggPAMIIDvAIBADCCA7UGCSqGSIb3DQEHATAcBgoqhkiG9w0BDAEGMA4ECKd3W1PCnIYL\r\n                    AgIH0ICCA4g+xQnikaqVknam03UPBunLcbc4vM5elTihZjvuQHjcQWOr/GeLDWSkIqJAf7f/6jRM\r\n                    D8nlgx/YM1z6aZfYeU/kfY7T58yS5glTscFEY0sitH4Dt8bN6jGz9B5MG6afKYsIT3IcgM52EbzJ\r\n                    1RiHU6KHSagaBmAvSv75npvg/gV+UpqSMmWyUm3Wq1vJcmm58dzYrxSMdvPtnDeFIvSK6GH1Okpz\r\n                    8B63JDjPPUFCv/4cdZyRpDmz4RIlfM1fH89koQ0sX5tZHxFSZcy7RPlRfCAxo65AF78WGWPAHxIC\r\n                    11OesbIlv6O/ZECZIxmRC02LdTUr4DAF2vVZy3x3Fn24d2KHAotykvn8ENpSvs9DTedGAjlKvEFO\r\n                    hP5DJHqbK2WPacD8hrCQatxyWBRmMhC5/fvm6ACb/HSL+EDZgZ5Zr294RUH9QXJd+IPUJI5AQaqj\r\n                    Br2u699hv0rlaf4j+NAbneDLn8M5M3wJHGD2rG3Q1xpNC30s9/v68rtKJFVKndtVXmzQi33GnC4P\r\n                    EQU/FyL/Jwal+NnJO68aHQ2D9Ai3DMqsRvKNznpxXp9kiUuSgKWsdSbMoRzs/BfdbeCOIyzxV1BZ\r\n                    UvWCzSZu4YE8UYGVxOIfrSILp7NFQD2rQSpdI831OPLeE9+QJHULiV8mzf6svCyTn+s0m0dIBIO0\r\n                    K9oqUpdWcjDdbSHANOPRYlUWgZHwJ6Sh4ZCpKmvU3FeS4yL5en+jW/1JsvBNq1mWVQTIIM5q8onG\r\n                    FloYvQpRxZb6QJ4sITLbk1rdlRMxDwzcUZYQeFZhQbFk8MSuiZKGfdSpij0UEIUbLjO4HDFcdw4j\r\n                    FzKe3k4gNiwtN5KKR4fT2DaHJehXuOrzHWmkBhXbsSMItPUmaHbbILYrhNYS8lDgEBtzgCJo/kZh\r\n                    jUdMfnL5SdHsHV05mWuDhvDjhzaSFIkPlPJ4xxNhuC6ecUemm51846uw6O/iFHl1WHE5kaxoLNfY\r\n                    fU7xHeYkvovsZwKrwFKKFiVnlstG+XqCgul1v7jhPcAvc9nDmHVoPwXwZEhPXhx46j61/TSmZboU\r\n                    35iV7s5brC67ChbRIJk2cq/odioWyxVoKjAIZmH+e08QYc6mZRRgce6VVbk8R9Lh9/wkd2u9IIbd\r\n                    NP5hynCdo85eTjJ4RaF8LGJwK45Jkw3jIghcKePkLzQIN03OGKm2+YjQV18M3UtlB7cti4JwZJCL\r\n                    MDswHzAHBgUrDgMCGgQUvUM7Kw/8NN+1PlObSrj4zZwINasEFNL9LO5HLwrmwm/xDlNMw1KASQOL\r\n                    AgIH0A==\" flows to the [rawData] parameter in [object creation of type X509Certificate2].",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/corefx/src/System.Net.Http.WinHttpHandler/tests/UnitTests/ClientCertificateHelper.cs",
                "region": {
                  "startLine": 173,
                  "startColumn": 1,
                  "length": 4519
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/corefx/src/System.Net.Http.WinHttpHandler/tests/UnitTests/ClientCertificateHelper.cs",
                "region": {
                  "startLine": 172,
                  "startColumn": 1,
                  "length": 4565
                }
              },
              "message": "rawData"
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/corefx/src/System.Net.Http.WinHttpHandler/tests/UnitTests/ClientCertificateHelper.cs",
                "region": {
                  "startLine": 171,
                  "startColumn": 1,
                  "length": 4634
                }
              },
              "message": "object creation of type X509Certificate2"
            }
          ]
        },
        {
          "ruleId": "cs/hardcoded-credentials",
          "level": "warning",
          "message": "The hard-coded value \"password\" flows to the [password] parameter in [object creation of type X509Certificate2].",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/corefx/src/System.Net.Http.WinHttpHandler/tests/UnitTests/ClientCertificateHelper.cs",
                "region": {
                  "startLine": 220,
                  "startColumn": 1,
                  "length": 10
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/corefx/src/System.Net.Http.WinHttpHandler/tests/UnitTests/ClientCertificateHelper.cs",
                "region": {
                  "startLine": 220,
                  "startColumn": 1,
                  "length": 10
                }
              },
              "message": "password"
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/corefx/src/System.Net.Http.WinHttpHandler/tests/UnitTests/ClientCertificateHelper.cs",
                "region": {
                  "startLine": 171,
                  "startColumn": 1,
                  "length": 4634
                }
              },
              "message": "object creation of type X509Certificate2"
            }
          ]
        },
        {
          "ruleId": "cs/hardcoded-credentials",
          "level": "warning",
          "message": "The hard-coded value \"MIIDFjCCAf6gAwIBAgIQTm8+EF94L4FJ0nBFl5LICzANBgkqhkiG9w0BAQsFADAb\r\n                    MRkwFwYDVQQDDBB1c2VyQGV4YW1wbGUuY29tMCAXDTE1MTAwNTEwMDMwMFoYDzIx\r\n                    MTUxMDA1MTAwMzAwWjAbMRkwFwYDVQQDDBB1c2VyQGV4YW1wbGUuY29tMIIBIjAN\r\n                    BgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA2Cl/rbhWRnypVnNyS48iWanKR0em\r\n                    y0t8aDLe6OF2PUabmDdP/Xu7rREM19mB9c2eYC3U21lbCdNlksZS8pWKizcXpCtY\r\n                    KpcBuyudFcSGRDcPSMPaXouBpow9WzxiOQ30qY72pAj6HZZXn5W+t6oJnzFOzD8u\r\n                    vcptvc6sAEMRrdq7NTfSuW5pfaZMfkXM5lbBDdgbZrBptaNErYoHl/hIKCGiHauE\r\n                    pWpUP1tpyGPxt2r8xjht2BHV6gFK582Wn8IuIGXag/9oBvFEavjpqbbYOrC6qraa\r\n                    vTGoaWgraQHyGvWKbROFCpX46Wxjn+PMFhtwsFF/F93iNrzs6A2B2WPz0QIDAQAB\r\n                    o1QwUjAOBgNVHQ8BAf8EBAMCBLAwEwYDVR0lBAwwCgYIKwYBBQUHAwIwDAYDVR0T\r\n                    AQH/BAIwADAdBgNVHQ4EFgQUMgZRdUW5s+sgh7EC2pHpvOGQzUgwDQYJKoZIhvcN\r\n                    AQELBQADggEBAJDi3pmzVvjJdTQCwFJEZvem9y64jHN+9MxM2rpwem0ZdQj+Cqst\r\n                    iTRJZ7zW4alBec76qA0/BXN7kI2zm5+AtoDxUIUi18jUK8Y6b3qq7lInykE2al9e\r\n                    xSgnRhaEJUxN2V5kkmhbdXBip70jazQZZbxQgYAZXhsX2rC39spt5Jz6NG24q4Eg\r\n                    egBBHhV8p9mvaYUXLJUnL98ZSz2Zplw8YSR3LxJsko6uKYnJl0WRnt+O3eNodj7Y\r\n                    3TKeUdX+KE01n8/QjJCiDd6QyyqDxtIfCVdvrlMbBGGNBY4TZ39RIpGunbe/zuLC\r\n                    5hx0nLLS6LB2x2UaYdSkKnIlM5BCDnCt/38=\" flows to the [rawData] parameter in [object creation of type X509Certificate2].",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/corefx/src/System.Net.Http.WinHttpHandler/tests/UnitTests/ClientCertificateHelper.cs",
                "region": {
                  "startLine": 225,
                  "startColumn": 1,
                  "length": 1415
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/corefx/src/System.Net.Http.WinHttpHandler/tests/UnitTests/ClientCertificateHelper.cs",
                "region": {
                  "startLine": 224,
                  "startColumn": 1,
                  "length": 1461
                }
              },
              "message": "rawData"
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/corefx/src/System.Net.Http.WinHttpHandler/tests/UnitTests/ClientCertificateHelper.cs",
                "region": {
                  "startLine": 223,
                  "startColumn": 1,
                  "length": 1501
                }
              },
              "message": "object creation of type X509Certificate2"
            }
          ]
        },
        {
          "ruleId": "cs/hardcoded-credentials",
          "level": "warning",
          "message": "The hard-coded value \"MIIKTgIBAzCCCgoGCSqGSIb3DQEHAaCCCfsEggn3MIIJ8zCCBgwGCSqGSIb3DQEHAaCCBf0EggX5\r\n                    MIIF9TCCBfEGCyqGSIb3DQEMCgECoIIE/jCCBPowHAYKKoZIhvcNAQwBAzAOBAiHDatvDr8QBQIC\r\n                    B9AEggTYv1r4ckwt7o6f6DCMHlb/zv4t7rPju+PP0PjoJ8kzPfj419aSeyPuE+65YH9WFDqafJed\r\n                    uzBSDaTXIabKapWN5NLnNYsyjCM3xHuP2N6QVa9irHmXE0BsB+3pfJW/aqIeDpHok/qc6xKxQhx0\r\n                    jvfSNGkm6dqGpLX67o5ADGRTInmQc8EuLk11I75gJhRgZfsuaHEOaIj8+xbBQprmkDTEtjO/COVu\r\n                    +FSksIBbQzi8Uyf778zNkvOZNdyOvLBLC4rOnJH1taCTr/9Rd03cf5U2F03GMTppJeoexMQZn/Ue\r\n                    9F8yeZR20RLXXrgq+jD7a4IIpHhVenuF1+GQjwST3UQiS2QJRs0c4VH45Cmv7diWPtJ5qb/66XP7\r\n                    g1gKpSc+bM24MvawUOm54dvnLjTqCGYKMVsSMv7UFFmMQIfbRU03XyAvC2uQXD85xx3iBLa5HNX9\r\n                    sZ30p+Bi5nc38DtQhvefhG0sA62fUTJNinSqp6gZ0DeXLRGlKlrRAc/MmLA1vHx6ntHf5R4KluJH\r\n                    uh8i02ibTGdtNL/IQ3VmE1c7MXxfGVx22P8CxyDCKaI9ko/2+gbTdmbvBJDqhiWvMOUqC1eczH5a\r\n                    AgtOdmxozjt0Ep+t3901BFjvbQcBkrHHnjPleUXGfDmKsbxZ3BzFwUQAlcU59iD+5lqxGXcOOBFG\r\n                    lsFRhD1RK5RJ+35uwS/7Wao5L4j5BeNJQHPb8tj7+t/LxW5FJhjX2hrcmQdCzEuuVsdRf+VVgW5G\r\n                    2h++cfvwUOqpdy0g1JT5s70H4AGk21Q2kIVpkEqOnByQUThg9AEnyEB7Tc08+xCw5KsG9t/YryNE\r\n                    qN6kVCpngpOwMYYW5Xu7zv7XTKiEjqs4TfNer3QUon1Ks3kfln1kK7IP5YzvnyIXS2bnVIqGffb2\r\n                    P495QGTMnCy/8OykvsgO7vHjn0aw603/5xGIoxYDYFgDDmqOz0HLCbGg8VLM1KhaMVT7areTiKmx\r\n                    RUticaGZ0xvxeXSUEVPohlxzOy0chb+yifdLbhaQZWeweVJzaYxk7PXjIU/rpONKgd8EKnCsqyFk\r\n                    Mvpm334X7WIlAhwWhHrYDnEdENFAhqTe948/GNf0aRkB7/JlbRijAQkoVrmrWHODvq0IiC2SD/8C\r\n                    cZhwEGb4YP9Ua8XL0EMAe4nMPCDSFqNKsdSQ4TB0YWyfGW8sk+hf6hfjEwKnjqItH4NWjwV5GoxP\r\n                    wMvXJa/41+7RGtZwY5pMcjR771r93MBSkZmrKKpUcoD5RNr/kQyVD547kT/NTt5wIEGkwnxFlmiC\r\n                    ctDAuBfIbS+gOv5MlOjZt+44Lz4+GkgZhHNFj8+e0zaZnkzSTnjJa5+2VNHhH6k7+xid0VDvyPhu\r\n                    iCRQo2REApSsyCAwX/oE5xJ/BN/g1gr2UQ57iNyDG3SNsxqdATYZ6u79iR8ZHu8wRtNVLSYQ3bof\r\n                    hOax/Ti4vTProc/hxVbO0qB6KApMhR2AJmDRmY2WnWofc4ZsM8pXihgasYkzJdplU0tepKDmy4cu\r\n                    Jrafx/lexIhpmeIoewQue10Hm+hrk170uwOsfcx5RLw1RrsJKJUJqAIqNWUeAttYkOvIsRtxeoVl\r\n                    W4mp2rnUET/ictDRAEZzUm13lvdK+tiDpNxLzPp0YifaJYGPNAJuy3wRKM+U0WtLNDGB3zATBgkq\r\n                    hkiG9w0BCRUxBgQEAQAAADBdBgkqhkiG9w0BCRQxUB5OAGwAcAAtADgAYgAwADgAZQBhAGIANAAt\r\n                    AGMAMQBmADIALQA0ADcAOABkAC0AOQAxAGIAYQAtADEAZQBjAGYAMwBlAGMAOQAwADQAYgAwMGkG\r\n                    CSsGAQQBgjcRATFcHloATQBpAGMAcgBvAHMAbwBmAHQAIABSAFMAQQAgAFMAQwBoAGEAbgBuAGUA\r\n                    bAAgAEMAcgB5AHAAdABvAGcAcgBhAHAAaABpAGMAIABQAHIAbwB2AGkAZABlAHIwggPfBgkqhkiG\r\n                    9w0BBwagggPQMIIDzAIBADCCA8UGCSqGSIb3DQEHATAcBgoqhkiG9w0BDAEGMA4ECFVqFR0l+H6e\r\n                    AgIH0ICCA5iU8LSe69nRL14pZKgOrnzXZXdUrC7McluguhjVbFCLXKWL1p87vR8fTqPBv8xapXGa\r\n                    zmU++6gWhPEl8xWbAd090E2IcsOOlnYclm0Zqs2cW2Jpo0LM1f4MTDI67hC9IOCAJr/YYZzex/I1\r\n                    r0Eqi3pz2ioFvcy62ShNeEFKTJMzPBZ/3dLRfPpG8ILgArPoFw/K5Z2Yis7k/mOIs9YBAB8L5w+T\r\n                    sCqD1nfVVGijjdAeVNTbWystIMKtg9npaMYd6aKbnP7otyviDBTeRnCc34n5QxHontxNAfVdNgE8\r\n                    prRWMZgEjE1sqmmDG34u0R0dscL3yTBz5v4pyEgqjzDXtjjLGvQ2G2awuw6ylcle9iXMOw3AUer/\r\n                    ev0BPfkltG45j/FPe6MLXC78ZctOddlMxcfby6d+bCh+tplk/BbkAgzNk6z4uVWPpaNzcwEBhS+g\r\n                    ARlFuGtfZes2Gky/ZpfxCG8GCuCilqcyV8T1ak0L97Q8JMmYSNcr+DElQdkl9kVgMqiXuHvx1SAQ\r\n                    7sKxk/eITj7cXon036m30jh7T7CyeIC7S8e++2GMzV4UFQU3OqCkJKOsnvY9Gn/8yrTHGz62oZtY\r\n                    1DaDg3m47jD9McR1NMhWOSNVcVfZcCzpJ+8yFX58qg2/uiAx9oigEY4Lms5kYCp4AO2VXtrRrp2B\r\n                    pu7IEDmlF8eqrCUK6t5FqUY50xwgMVqPdW/cbn8YEoBU2TeSjEGXAFapuYDmAgDGUQTseHFXsd+D\r\n                    wnKlj1xHeDYqBWFKkKt7GDSgq1pPvQVDIDvJbQCeVmYWMzplqPd5NHUojEwwc4jaln0g1M3YRN+w\r\n                    vEVCG8mH4YtYp4fXCpEsapIn7tfWHPRAYARCwEEMsOuTruE4yPyhLEntVMw7UZlFgt5OuKDmHB6Q\r\n                    phyJUN/UCnC+hfdTtvfGBzceKB/CAVPPLYmTYIAGfeJiZ+ED43rq1Vru6bIE3H6Bugxen+ZMvBXA\r\n                    8uCGAHlVTHkmfS3egT8KUIeFLGSj2NBlUuE+lTfSmJcYyE8ptknKpE0PFNoVhtM+7Rc6C+hObBt2\r\n                    S3POmJhVbUFXX0MoXQU7CfLZgRDNtFuj67izmcnqdfHcLViRPxqYl5uk9KY8UBgo5Gg5qjdv8Csx\r\n                    3lKowEBJ0mf5/SO8e0jrsngnnBMnzhbH63DpvbMkew9JzYniO/qqbTYTb5Se9xGNaZMeCq9s0Ktn\r\n                    eGzaLVeL3KuDXTcykeSrMzA7MB8wBwYFKw4DAhoEFFyWxw+sBYjg+u+FZOpcB22jW37XBBTa1n71\r\n                    1STYVQ5YhCJvstItqyExlAICB9A=\" flows to the [rawData] parameter in [object creation of type X509Certificate2].",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/corefx/src/System.Net.Http.WinHttpHandler/tests/UnitTests/ClientCertificateHelper.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 1,
                  "length": 4539
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/corefx/src/System.Net.Http.WinHttpHandler/tests/UnitTests/ClientCertificateHelper.cs",
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "length": 4585
                }
              },
              "message": "rawData"
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/corefx/src/System.Net.Http.WinHttpHandler/tests/UnitTests/ClientCertificateHelper.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 1,
                  "length": 4654
                }
              },
              "message": "object creation of type X509Certificate2"
            }
          ]
        },
        {
          "ruleId": "cs/hardcoded-credentials",
          "level": "warning",
          "message": "The hard-coded value \"password\" flows to the [password] parameter in [object creation of type X509Certificate2].",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/corefx/src/System.Net.Http.WinHttpHandler/tests/UnitTests/ClientCertificateHelper.cs",
                "region": {
                  "startLine": 64,
                  "startColumn": 1,
                  "length": 10
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/corefx/src/System.Net.Http.WinHttpHandler/tests/UnitTests/ClientCertificateHelper.cs",
                "region": {
                  "startLine": 64,
                  "startColumn": 1,
                  "length": 10
                }
              },
              "message": "password"
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/corefx/src/System.Net.Http.WinHttpHandler/tests/UnitTests/ClientCertificateHelper.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 1,
                  "length": 4654
                }
              },
              "message": "object creation of type X509Certificate2"
            }
          ]
        },
        {
          "ruleId": "cs/hardcoded-credentials",
          "level": "warning",
          "message": "The hard-coded value \"username\" flows to the [userName] parameter in [object creation of type NetworkCredential].",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/corefx/src/System.Net.Http.WinHttpHandler/tests/UnitTests/WinHttpHandlerTest.cs",
                "region": {
                  "startLine": 938,
                  "startColumn": 39,
                  "length": 10
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/corefx/src/System.Net.Http.WinHttpHandler/tests/UnitTests/WinHttpHandlerTest.cs",
                "region": {
                  "startLine": 946,
                  "startColumn": 47,
                  "length": 27
                }
              },
              "message": "userName"
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/corefx/src/System.Net.Http.WinHttpHandler/tests/UnitTests/WinHttpHandlerTest.cs",
                "region": {
                  "startLine": 946,
                  "startColumn": 25,
                  "length": 106
                }
              },
              "message": "object creation of type NetworkCredential"
            }
          ]
        },
        {
          "ruleId": "cs/hardcoded-credentials",
          "level": "warning",
          "message": "The hard-coded value \"password\" flows to the [password] parameter in [object creation of type NetworkCredential].",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/corefx/src/System.Net.Http.WinHttpHandler/tests/UnitTests/WinHttpHandlerTest.cs",
                "region": {
                  "startLine": 939,
                  "startColumn": 39,
                  "length": 10
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/corefx/src/System.Net.Http.WinHttpHandler/tests/UnitTests/WinHttpHandlerTest.cs",
                "region": {
                  "startLine": 946,
                  "startColumn": 76,
                  "length": 27
                }
              },
              "message": "password"
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/corefx/src/System.Net.Http.WinHttpHandler/tests/UnitTests/WinHttpHandlerTest.cs",
                "region": {
                  "startLine": 946,
                  "startColumn": 25,
                  "length": 106
                }
              },
              "message": "object creation of type NetworkCredential"
            }
          ]
        }
      ],
      "rules": {
        "cs/ldap-injection": {
          "id": "cs/ldap-injection",
          "name": "cs/ldap-injection",
          "shortDescription": "LDAP query built from user-controlled sources",
          "fullDescription": "Building an LDAP query from user-controlled sources is vulnerable to insertion of malicious LDAP code by the user.",
          "defaultLevel": "error",
          "properties": {
            "tags": [
  "security",
  "external/cwe/cwe-090"
],
            "kind": "problem",
            "precision": "medium",
            "name": "LDAP query built from user-controlled sources",
            "description": "Building an LDAP query from user-controlled sources is vulnerable to insertion of malicious LDAP code by the user.",
            "id": "cs/ldap-injection",
            "query-path": "/semmlecode-csharp-queries/Security Features/CWE-090/LDAPInjection.ql",
            "problem.severity": "error"
          }
        },
        "cs/xml/xpath-injection": {
          "id": "cs/xml/xpath-injection",
          "name": "cs/xml/xpath-injection",
          "shortDescription": "XPath injection",
          "fullDescription": "Building an XPath expression from user-controlled sources is vulnerable to insertion of malicious code by the user.",
          "defaultLevel": "error",
          "properties": {
            "tags": [
  "security",
  "external/cwe/cwe-643"
],
            "kind": "problem",
            "precision": "medium",
            "name": "XPath injection",
            "description": "Building an XPath expression from user-controlled sources is vulnerable to insertion of malicious code by the user.",
            "id": "cs/xml/xpath-injection",
            "query-path": "/semmlecode-csharp-queries/Security Features/CWE-643/XPathInjection.ql",
            "problem.severity": "error"
          }
        },
        "cs/command-line-injection": {
          "id": "cs/command-line-injection",
          "name": "cs/command-line-injection",
          "shortDescription": "Uncontrolled command line",
          "fullDescription": "Using externally controlled strings in a command line may allow a malicious user to change the meaning of the command.",
          "defaultLevel": "error",
          "properties": {
            "tags": [
  "correctness",
  "security",
  "external/cwe/cwe-078",
  "external/cwe/cwe-088"
],
            "kind": "problem",
            "precision": "medium",
            "name": "Uncontrolled command line",
            "description": "Using externally controlled strings in a command line may allow a malicious user to change the meaning of the command.",
            "id": "cs/command-line-injection",
            "query-path": "/semmlecode-csharp-queries/Security Features/CWE-078/CommandInjection.ql",
            "problem.severity": "error"
          }
        },
        "cs/web/directory-browse-enabled": {
          "id": "cs/web/directory-browse-enabled",
          "name": "cs/web/directory-browse-enabled",
          "shortDescription": "ASP.NET config file enables directory browsing",
          "fullDescription": "Directory browsing should not be enabled in production as it can leak sensitive information.",
          "defaultLevel": "warning",
          "properties": {
            "tags": [
  "security",
  "external/cwe/cwe-548"
],
            "kind": "problem",
            "precision": "very-high",
            "name": "ASP.NET config file enables directory browsing",
            "description": "Directory browsing should not be enabled in production as it can leak sensitive information.",
            "id": "cs/web/directory-browse-enabled",
            "query-path": "/semmlecode-csharp-queries/Security Features/CWE-548/ASPNetDirectoryListing.ql",
            "problem.severity": "warning"
          }
        },
        "cs/web/unvalidated-url-redirection": {
          "id": "cs/web/unvalidated-url-redirection",
          "name": "cs/web/unvalidated-url-redirection",
          "shortDescription": "URL redirection from remote source",
          "fullDescription": "URL redirection based on unvalidated user input may cause redirection to malicious web sites.",
          "defaultLevel": "error",
          "properties": {
            "tags": [
  "security",
  "external/cwe/cwe-601"
],
            "kind": "problem",
            "precision": "medium",
            "name": "URL redirection from remote source",
            "description": "URL redirection based on unvalidated user input may cause redirection to malicious web sites.",
            "id": "cs/web/unvalidated-url-redirection",
            "query-path": "/semmlecode-csharp-queries/Security Features/CWE-601/UrlRedirect.ql",
            "problem.severity": "error"
          }
        },
        "cs/path-injection": {
          "id": "cs/path-injection",
          "name": "cs/path-injection",
          "shortDescription": "Uncontrolled data used in path expression",
          "fullDescription": "Accessing paths influenced by users can allow an attacker to access unexpected resources.",
          "defaultLevel": "error",
          "properties": {
            "tags": [
  "security",
  "external/cwe/cwe-022",
  "external/cwe/cwe-023",
  "external/cwe/cwe-036",
  "external/cwe/cwe-073",
  "external/cwe/cwe-099"
],
            "kind": "problem",
            "precision": "medium",
            "name": "Uncontrolled data used in path expression",
            "description": "Accessing paths influenced by users can allow an attacker to access unexpected resources.",
            "id": "cs/path-injection",
            "query-path": "/semmlecode-csharp-queries/Security Features/CWE-022/TaintedPath.ql",
            "problem.severity": "error"
          }
        },
        "cs/user-controlled-bypass": {
          "id": "cs/user-controlled-bypass",
          "name": "cs/user-controlled-bypass",
          "shortDescription": "User-controlled bypass of sensitive method",
          "fullDescription": "User-controlled bypassing of sensitive methods may allow attackers to avoid passing through authentication systems.",
          "defaultLevel": "error",
          "properties": {
            "tags": [
  "security",
  "external/cwe/cwe-807",
  "external/cwe/cwe-247",
  "external/cwe/cwe-350"
],
            "kind": "problem",
            "precision": "medium",
            "name": "User-controlled bypass of sensitive method",
            "description": "User-controlled bypassing of sensitive methods may allow attackers to avoid passing through authentication systems.",
            "id": "cs/user-controlled-bypass",
            "query-path": "/semmlecode-csharp-queries/Security Features/CWE-807/ConditionalBypass.ql",
            "problem.severity": "error"
          }
        },
        "cs/sensitive-data-transmission": {
          "id": "cs/sensitive-data-transmission",
          "name": "cs/sensitive-data-transmission",
          "shortDescription": "Information exposure through transmitted data",
          "fullDescription": "Transmitting sensitive information to the user is a potential security risk.",
          "defaultLevel": "error",
          "properties": {
            "tags": [
  "security",
  "external/cwe/cwe-201"
],
            "kind": "problem",
            "precision": "medium",
            "name": "Information exposure through transmitted data",
            "description": "Transmitting sensitive information to the user is a potential security risk.",
            "id": "cs/sensitive-data-transmission",
            "query-path": "/semmlecode-csharp-queries/Security Features/CWE-201/ExposureInTransmittedData.ql",
            "problem.severity": "error"
          }
        },
        "cs/inappropriate-encoding": {
          "id": "cs/inappropriate-encoding",
          "name": "cs/inappropriate-encoding",
          "shortDescription": "Inappropriate encoding",
          "fullDescription": "Using an inappropriate encoding may give unintended results and may pose a security risk.",
          "defaultLevel": "error",
          "properties": {
            "tags": [
  "security",
  "external/cwe/cwe-838"
],
            "kind": "problem",
            "precision": "low",
            "name": "Inappropriate encoding",
            "description": "Using an inappropriate encoding may give unintended results and may pose a security risk.",
            "id": "cs/inappropriate-encoding",
            "query-path": "/semmlecode-csharp-queries/Security Features/CWE-838/InappropriateEncoding.ql",
            "problem.severity": "error"
          }
        },
        "cs/hardcoded-credentials": {
          "id": "cs/hardcoded-credentials",
          "name": "cs/hardcoded-credentials",
          "shortDescription": "Hard-coded credentials",
          "fullDescription": "Credentials are hard coded in the source code of the application.",
          "defaultLevel": "error",
          "properties": {
            "tags": [
  "security",
  "external/cwe/cwe-259",
  "external/cwe/cwe-321",
  "external/cwe/cwe-798"
],
            "kind": "problem",
            "precision": "medium",
            "name": "Hard-coded credentials",
            "description": "Credentials are hard coded in the source code of the application.",
            "id": "cs/hardcoded-credentials",
            "query-path": "/semmlecode-csharp-queries/Security Features/CWE-798/HardcodedCredentials.ql",
            "problem.severity": "error"
          }
        },
        "cs/insecure-randomness": {
          "id": "cs/insecure-randomness",
          "name": "cs/insecure-randomness",
          "shortDescription": "Insecure randomness",
          "fullDescription": "Using a cryptographically weak pseudo-random number generator to generate a security sensitive value may allow an attacker to predict what sensitive value will be generated.",
          "defaultLevel": "warning",
          "properties": {
            "tags": [
  "security",
  "external/cwe/cwe-338"
],
            "kind": "problem",
            "precision": "medium",
            "name": "Insecure randomness",
            "description": "Using a cryptographically weak pseudo-random number generator to generate a security sensitive value may allow an attacker to predict what sensitive value will be generated.",
            "id": "cs/insecure-randomness",
            "query-path": "/semmlecode-csharp-queries/Security Features/InsecureRandomness.ql",
            "problem.severity": "warning"
          }
        },
        "cs/empty-password-in-configuration": {
          "id": "cs/empty-password-in-configuration",
          "name": "cs/empty-password-in-configuration",
          "shortDescription": "Empty password in configuration file",
          "fullDescription": "Finds empty passwords in configuration files.",
          "defaultLevel": "warning",
          "properties": {
            "tags": [
  "security",
  "external/cwe/cwe-258",
  "external/cwe/cwe-862"
],
            "kind": "problem",
            "precision": "medium",
            "name": "Empty password in configuration file",
            "description": "Finds empty passwords in configuration files.",
            "id": "cs/empty-password-in-configuration",
            "query-path": "/semmlecode-csharp-queries/Configuration/EmptyPasswordInConfigurationFile.ql",
            "problem.severity": "warning"
          }
        },
        "cs/information-exposure-through-exception": {
          "id": "cs/information-exposure-through-exception",
          "name": "cs/information-exposure-through-exception",
          "shortDescription": "Information exposure through an exception",
          "fullDescription": "Leaking information about an exception, such as messages and stack traces, to an external user can expose implementation details that are useful to an attacker for developing a subsequent exploit.",
          "defaultLevel": "error",
          "properties": {
            "tags": [
  "security",
  "external/cwe/cwe-209",
  "external/cwe/cwe-497"
],
            "kind": "problem",
            "precision": "medium",
            "name": "Information exposure through an exception",
            "description": "Leaking information about an exception, such as messages and stack traces, to an external user can expose implementation details that are useful to an attacker for developing a subsequent exploit.",
            "id": "cs/information-exposure-through-exception",
            "query-path": "/semmlecode-csharp-queries/Security Features/CWE-209/ExceptionInformationExposure.ql",
            "problem.severity": "error"
          }
        },
        "cs/web/missing-token-validation": {
          "id": "cs/web/missing-token-validation",
          "name": "cs/web/missing-token-validation",
          "shortDescription": "Missing cross-site request forgery token validation",
          "fullDescription": "Handling a POST request without verifying that the request came from the user allows a malicious attacker to submit a request on behalf of the user.",
          "defaultLevel": "error",
          "properties": {
            "tags": [
  "security",
  "external/cwe/cwe-352"
],
            "kind": "problem",
            "precision": "medium",
            "name": "Missing cross-site request forgery token validation",
            "description": "Handling a POST request without verifying that the request came from the user allows a malicious attacker to submit a request on behalf of the user.",
            "id": "cs/web/missing-token-validation",
            "query-path": "/semmlecode-csharp-queries/Security Features/CWE-352/MissingAntiForgeryTokenValidation.ql",
            "problem.severity": "error"
          }
        },
        "cs/second-order-sql-injection": {
          "id": "cs/second-order-sql-injection",
          "name": "cs/second-order-sql-injection",
          "shortDescription": "SQL query built from stored user-controlled sources",
          "fullDescription": "Building a SQL query from stored user-controlled sources is vulnerable to insertion of malicious SQL code by the user.",
          "defaultLevel": "error",
          "properties": {
            "tags": [
  "security",
  "external/cwe/cwe-089"
],
            "kind": "problem",
            "precision": "medium",
            "name": "SQL query built from stored user-controlled sources",
            "description": "Building a SQL query from stored user-controlled sources is vulnerable to insertion of malicious SQL code by the user.",
            "id": "cs/second-order-sql-injection",
            "query-path": "/semmlecode-csharp-queries/Security Features/CWE-089/SecondOrderSqlInjection.ql",
            "problem.severity": "error"
          }
        },
        "cs/unsynchronized-static-access": {
          "id": "cs/unsynchronized-static-access",
          "name": "cs/unsynchronized-static-access",
          "shortDescription": "Unsynchronized access to static collection member in non-static context",
          "fullDescription": "If an unsynchronized access to a static collection member occurs during an addition or resizing operation, an infinite loop can occur.",
          "defaultLevel": "error",
          "properties": {
            "tags": [
  "concurrency",
  "external/cwe/cwe-362",
  "external/cwe/cwe-567"
],
            "kind": "problem",
            "precision": "medium",
            "name": "Unsynchronized access to static collection member in non-static context",
            "description": "If an unsynchronized access to a static collection member occurs during an addition or resizing operation, an infinite loop can occur.",
            "id": "cs/unsynchronized-static-access",
            "query-path": "/semmlecode-csharp-queries/Concurrency/UnsynchronizedStaticAccess.ql",
            "problem.severity": "error"
          }
        },
        "cs/insufficient-key-size": {
          "id": "cs/insufficient-key-size",
          "name": "cs/insufficient-key-size",
          "shortDescription": "Weak encryption: Insufficient key size",
          "fullDescription": "Finds uses of encryption algorithms with too small a key size",
          "defaultLevel": "warning",
          "properties": {
            "tags": [
  "security",
  "external/cwe/cwe-327"
],
            "kind": "problem",
            "precision": "high",
            "name": "Weak encryption: Insufficient key size",
            "description": "Finds uses of encryption algorithms with too small a key size",
            "id": "cs/insufficient-key-size",
            "query-path": "/semmlecode-csharp-queries/Security Features/InsufficientKeySize.ql",
            "problem.severity": "warning"
          }
        },
        "cs/stored-command-line-injection": {
          "id": "cs/stored-command-line-injection",
          "name": "cs/stored-command-line-injection",
          "shortDescription": "Uncontrolled command line from stored user input",
          "fullDescription": "Using externally controlled strings in a command line may allow a malicious user to change the meaning of the command.",
          "defaultLevel": "error",
          "properties": {
            "tags": [
  "correctness",
  "security",
  "external/cwe/cwe-078",
  "external/cwe/cwe-088"
],
            "kind": "problem",
            "precision": "medium",
            "name": "Uncontrolled command line from stored user input",
            "description": "Using externally controlled strings in a command line may allow a malicious user to change the meaning of the command.",
            "id": "cs/stored-command-line-injection",
            "query-path": "/semmlecode-csharp-queries/Security Features/CWE-078/StoredCommandInjection.ql",
            "problem.severity": "error"
          }
        },
        "cs/ecb-encryption": {
          "id": "cs/ecb-encryption",
          "name": "cs/ecb-encryption",
          "shortDescription": "Encryption using ECB",
          "fullDescription": "Highlights uses of the encryption mode 'CipherMode.ECB'. This mode should normally not be used because it is vulnerable to replay attacks.",
          "defaultLevel": "warning",
          "properties": {
            "tags": [
  "security",
  "external/cwe/cwe-327"
],
            "kind": "problem",
            "precision": "high",
            "name": "Encryption using ECB",
            "description": "Highlights uses of the encryption mode \u0027CipherMode.ECB\u0027. This mode should normally not be used because it is vulnerable to replay attacks.",
            "id": "cs/ecb-encryption",
            "query-path": "/semmlecode-csharp-queries/Security Features/Encryption using ECB.ql",
            "problem.severity": "warning"
          }
        },
        "cs/inadequate-rsa-padding": {
          "id": "cs/inadequate-rsa-padding",
          "name": "cs/inadequate-rsa-padding",
          "shortDescription": "Weak encryption: inadequate RSA padding",
          "fullDescription": "Finds uses of RSA encryption with inadequate padding.",
          "defaultLevel": "warning",
          "properties": {
            "tags": [
  "security",
  "external/cwe/cwe-327",
  "external/cwe/cwe-780"
],
            "kind": "problem",
            "precision": "high",
            "name": "Weak encryption: inadequate RSA padding",
            "description": "Finds uses of RSA encryption with inadequate padding.",
            "id": "cs/inadequate-rsa-padding",
            "query-path": "/semmlecode-csharp-queries/Security Features/InadequateRSAPadding.ql",
            "problem.severity": "warning"
          }
        },
        "cs/cleartext-storage-of-sensitive-information": {
          "id": "cs/cleartext-storage-of-sensitive-information",
          "name": "cs/cleartext-storage-of-sensitive-information",
          "shortDescription": "Clear text storage of sensitive information",
          "fullDescription": "Sensitive information stored without encryption or hashing can expose it to an attacker.",
          "defaultLevel": "error",
          "properties": {
            "tags": [
  "security",
  "external/cwe/cwe-312",
  "external/cwe/cwe-315",
  "external/cwe/cwe-359"
],
            "kind": "problem",
            "precision": "medium",
            "name": "Clear text storage of sensitive information",
            "description": "Sensitive information stored without encryption or hashing can expose it to an attacker.",
            "id": "cs/cleartext-storage-of-sensitive-information",
            "query-path": "/semmlecode-csharp-queries/Security Features/CWE-312/CleartextStorage.ql",
            "problem.severity": "error"
          }
        },
        "cs/web/missing-global-error-handler": {
          "id": "cs/web/missing-global-error-handler",
          "name": "cs/web/missing-global-error-handler",
          "shortDescription": "Missing global error handler",
          "fullDescription": "ASP.NET applications should not set the 'customError' mode to \"off\" without providing a global error handler, otherwise they may leak exception information.",
          "defaultLevel": "warning",
          "properties": {
            "tags": [
  "security",
  "external/cwe/cwe-12",
  "external/cwe/cwe-248"
],
            "kind": "problem",
            "precision": "high",
            "name": "Missing global error handler",
            "description": "ASP.NET applications should not set the \u0027customError\u0027 mode to \"off\" without providing a global error handler, otherwise they may leak exception information.",
            "id": "cs/web/missing-global-error-handler",
            "query-path": "/semmlecode-csharp-queries/Security Features/CWE-248/MissingASPNETGlobalErrorHandler.ql",
            "problem.severity": "warning"
          }
        },
        "cs/session-reuse": {
          "id": "cs/session-reuse",
          "name": "cs/session-reuse",
          "shortDescription": "Failure to abandon session",
          "fullDescription": "Reusing an existing session as a different user could allow an attacker to access someone else's account by using their session.",
          "defaultLevel": "error",
          "properties": {
            "tags": [
  "security",
  "external/cwe/cwe-384"
],
            "kind": "problem",
            "precision": "medium",
            "name": "Failure to abandon session",
            "description": "Reusing an existing session as a different user could allow an attacker to access someone else\u0027s account by using their session.",
            "id": "cs/session-reuse",
            "query-path": "/semmlecode-csharp-queries/Security Features/CWE-384/AbandonSession.ql",
            "problem.severity": "error"
          }
        },
        "cs/password-in-configuration": {
          "id": "cs/password-in-configuration",
          "name": "cs/password-in-configuration",
          "shortDescription": "Password in configuration file",
          "fullDescription": "Finds passwords in configuration files.",
          "defaultLevel": "warning",
          "properties": {
            "tags": [
  "security",
  "external/cwe/cwe-13",
  "external/cwe/cwe-256",
  "external/cwe/cwe-313"
],
            "kind": "problem",
            "precision": "medium",
            "name": "Password in configuration file",
            "description": "Finds passwords in configuration files.",
            "id": "cs/password-in-configuration",
            "query-path": "/semmlecode-csharp-queries/Configuration/PasswordInConfigurationFile.ql",
            "problem.severity": "warning"
          }
        },
        "cs/xml/missing-validation": {
          "id": "cs/xml/missing-validation",
          "name": "cs/xml/missing-validation",
          "shortDescription": "Missing XML validation",
          "fullDescription": "User input should not be processed as XML without validating it against a known schema.",
          "defaultLevel": "warning",
          "properties": {
            "tags": [
  "security",
  "external/cwe/cwe-112"
],
            "kind": "problem",
            "precision": "medium",
            "name": "Missing XML validation",
            "description": "User input should not be processed as XML without validating it against a known schema.",
            "id": "cs/xml/missing-validation",
            "query-path": "/semmlecode-csharp-queries/Security Features/CWE-112/MissingXMLValidation.ql",
            "problem.severity": "recommendation"
          }
        },
        "cs/web/broad-cookie-domain": {
          "id": "cs/web/broad-cookie-domain",
          "name": "cs/web/broad-cookie-domain",
          "shortDescription": "Cookie security: overly broad domain",
          "fullDescription": "Finds cookies with an overly broad domain.",
          "defaultLevel": "warning",
          "properties": {
            "tags": [
  "security",
  "external/cwe/cwe-287"
],
            "kind": "problem",
            "precision": "high",
            "name": "Cookie security: overly broad domain",
            "description": "Finds cookies with an overly broad domain.",
            "id": "cs/web/broad-cookie-domain",
            "query-path": "/semmlecode-csharp-queries/Security Features/CookieWithOverlyBroadDomain.ql",
            "problem.severity": "warning"
          }
        },
        "cs/web/persistent-cookie": {
          "id": "cs/web/persistent-cookie",
          "name": "cs/web/persistent-cookie",
          "shortDescription": "Cookie security: persistent cookie",
          "fullDescription": "Persistent cookies are vulnerable to attacks.",
          "defaultLevel": "warning",
          "properties": {
            "tags": [
  "security",
  "external/cwe/cwe-539"
],
            "kind": "problem",
            "precision": "medium",
            "name": "Cookie security: persistent cookie",
            "description": "Persistent cookies are vulnerable to attacks.",
            "id": "cs/web/persistent-cookie",
            "query-path": "/semmlecode-csharp-queries/Security Features/PersistentCookie.ql",
            "problem.severity": "warning"
          }
        },
        "cs/insecure-xml-read": {
          "id": "cs/insecure-xml-read",
          "name": "cs/insecure-xml-read",
          "shortDescription": "XML is read insecurely",
          "fullDescription": "XML may include dangerous external references, which should be restricted using a secure resolver or disabling DTD processing.",
          "defaultLevel": "warning",
          "properties": {
            "tags": [
  "security",
  "external/cwe/cwe-611",
  "external/cwe/cwe-827",
  "external/cwe/cwe-776"
],
            "kind": "problem",
            "precision": "medium",
            "name": "XML is read insecurely",
            "description": "XML may include dangerous external references, which should be restricted using a secure resolver or disabling DTD processing.",
            "id": "cs/insecure-xml-read",
            "query-path": "/semmlecode-csharp-queries/Security Features/CWE-611/UseXmlSecureResolver.ql",
            "problem.severity": "warning"
          }
        },
        "cs/web/xss": {
          "id": "cs/web/xss",
          "name": "cs/web/xss",
          "shortDescription": "Cross-site scripting",
          "fullDescription": "Writing user input directly to a web page allows for a cross-site scripting vulnerability.",
          "defaultLevel": "error",
          "properties": {
            "tags": [
  "security",
  "external/cwe/cwe-079",
  "external/cwe/cwe-116"
],
            "kind": "problem",
            "precision": "medium",
            "name": "Cross-site scripting",
            "description": "Writing user input directly to a web page allows for a cross-site scripting vulnerability.",
            "id": "cs/web/xss",
            "query-path": "/semmlecode-csharp-queries/Security Features/CWE-079/XSS.ql",
            "problem.severity": "error"
          }
        },
        "cs/xml/stored-xpath-injection": {
          "id": "cs/xml/stored-xpath-injection",
          "name": "cs/xml/stored-xpath-injection",
          "shortDescription": "Stored XPath injection",
          "fullDescription": "Building an XPath expression from stored data which may have been provided by the user is vulnerable to insertion of malicious code by the user.",
          "defaultLevel": "error",
          "properties": {
            "tags": [
  "security",
  "external/cwe/cwe-643"
],
            "kind": "problem",
            "precision": "medium",
            "name": "Stored XPath injection",
            "description": "Building an XPath expression from stored data which may have been provided by the user is vulnerable to insertion of malicious code by the user.",
            "id": "cs/xml/stored-xpath-injection",
            "query-path": "/semmlecode-csharp-queries/Security Features/CWE-643/StoredXPathInjection.ql",
            "problem.severity": "error"
          }
        },
        "cs/web/stored-xss": {
          "id": "cs/web/stored-xss",
          "name": "cs/web/stored-xss",
          "shortDescription": "Stored cross-site scripting",
          "fullDescription": "Writing input from the database directly to a web page indicates a cross-site scripting vulnerability if the data was originally user-provided.",
          "defaultLevel": "error",
          "properties": {
            "tags": [
  "security",
  "external/cwe/cwe-079",
  "external/cwe/cwe-116"
],
            "kind": "problem",
            "precision": "medium",
            "name": "Stored cross-site scripting",
            "description": "Writing input from the database directly to a web page indicates a cross-site scripting vulnerability if the data was originally user-provided.",
            "id": "cs/web/stored-xss",
            "query-path": "/semmlecode-csharp-queries/Security Features/CWE-079/StoredXSS.ql",
            "problem.severity": "error"
          }
        },
        "cs/resource-injection": {
          "id": "cs/resource-injection",
          "name": "cs/resource-injection",
          "shortDescription": "Resource injection",
          "fullDescription": "Building a resource descriptor from untrusted user input is vulnerable to a malicious user providing an unintended resource.",
          "defaultLevel": "error",
          "properties": {
            "tags": [
  "security",
  "external/cwe/cwe-099"
],
            "kind": "problem",
            "precision": "medium",
            "name": "Resource injection",
            "description": "Building a resource descriptor from untrusted user input is vulnerable to a malicious user providing an unintended resource.",
            "id": "cs/resource-injection",
            "query-path": "/semmlecode-csharp-queries/Security Features/CWE-099/ResourceInjection.ql",
            "problem.severity": "error"
          }
        },
        "cs/web/debug-binary": {
          "id": "cs/web/debug-binary",
          "name": "cs/web/debug-binary",
          "shortDescription": "Creating an ASP.NET debug binary may reveal sensitive information",
          "fullDescription": "ASP.NET projects should not produce debug binaries when deploying to production as debug builds provide additional information useful to a malicious attacker.",
          "defaultLevel": "warning",
          "properties": {
            "tags": [
  "security",
  "maintainability",
  "frameworks/asp.net",
  "external/cwe/cwe-11"
],
            "kind": "problem",
            "precision": "very-high",
            "name": "Creating an ASP.NET debug binary may reveal sensitive information",
            "description": "ASP.NET projects should not produce debug binaries when deploying to production as debug builds provide additional information useful to a malicious attacker.",
            "id": "cs/web/debug-binary",
            "query-path": "/semmlecode-csharp-queries/Security Features/CWE-011/ASPNetDebug.ql",
            "problem.severity": "warning"
          }
        },
        "cs/stored-ldap-injection": {
          "id": "cs/stored-ldap-injection",
          "name": "cs/stored-ldap-injection",
          "shortDescription": "LDAP query built from stored user-controlled sources",
          "fullDescription": "Building an LDAP query from stored user-controlled sources is vulnerable to insertion of malicious LDAP code by the user.",
          "defaultLevel": "error",
          "properties": {
            "tags": [
  "security",
  "external/cwe/cwe-090"
],
            "kind": "problem",
            "precision": "medium",
            "name": "LDAP query built from stored user-controlled sources",
            "description": "Building an LDAP query from stored user-controlled sources is vulnerable to insertion of malicious LDAP code by the user.",
            "id": "cs/stored-ldap-injection",
            "query-path": "/semmlecode-csharp-queries/Security Features/CWE-090/StoredLDAPInjection.ql",
            "problem.severity": "error"
          }
        },
        "cs/code-injection": {
          "id": "cs/code-injection",
          "name": "cs/code-injection",
          "shortDescription": "Improper control of generation of code",
          "fullDescription": "Treating externally controlled strings as code can allow an attacker to execute malicious code.",
          "defaultLevel": "error",
          "properties": {
            "tags": [
  "security",
  "external/cwe/cwe-094",
  "external/cwe/cwe-095",
  "external/cwe/cwe-096"
],
            "kind": "problem",
            "precision": "medium",
            "name": "Improper control of generation of code",
            "description": "Treating externally controlled strings as code can allow an attacker to execute malicious code.",
            "id": "cs/code-injection",
            "query-path": "/semmlecode-csharp-queries/Security Features/CWE-094/CodeInjection.ql",
            "problem.severity": "error"
          }
        },
        "cs/unvalidated-local-pointer-arithmetic": {
          "id": "cs/unvalidated-local-pointer-arithmetic",
          "name": "cs/unvalidated-local-pointer-arithmetic",
          "shortDescription": "Unvalidated local pointer arithmetic",
          "fullDescription": "Using the result of a virtual method call in pointer arithmetic without validation is dangerous because the method may be overridden by a subtype to return any value.",
          "defaultLevel": "warning",
          "properties": {
            "tags": [
  "security",
  "external/cwe/cwe-119",
  "external/cwe/cwe-120",
  "external/cwe/cwe-122",
  "external/cwe/cwe-788"
],
            "kind": "problem",
            "precision": "high",
            "name": "Unvalidated local pointer arithmetic",
            "description": "Using the result of a virtual method call in pointer arithmetic without validation is dangerous because the method may be overridden by a subtype to return any value.",
            "id": "cs/unvalidated-local-pointer-arithmetic",
            "query-path": "/semmlecode-csharp-queries/Security Features/CWE-119/LocalUnvalidatedArithmetic.ql",
            "problem.severity": "warning"
          }
        },
        "cs/web/missing-x-frame-options": {
          "id": "cs/web/missing-x-frame-options",
          "name": "cs/web/missing-x-frame-options",
          "shortDescription": "Missing X-Frame-Options HTTP header",
          "fullDescription": "If the 'X-Frame-Options' setting is not provided, a malicious user may be able to overlay their own UI on top of the site by using an iframe.",
          "defaultLevel": "error",
          "properties": {
            "tags": [
  "security",
  "external/cwe/cwe-451",
  "external/cwe/cwe-829"
],
            "kind": "problem",
            "precision": "high",
            "name": "Missing X-Frame-Options HTTP header",
            "description": "If the \u0027X-Frame-Options\u0027 setting is not provided, a malicious user may be able to overlay their own UI on top of the site by using an iframe.",
            "id": "cs/web/missing-x-frame-options",
            "query-path": "/semmlecode-csharp-queries/Security Features/CWE-451/MissingXFrameOptions.ql",
            "problem.severity": "error"
          }
        },
        "cs/hardcoded-connection-string-credentials": {
          "id": "cs/hardcoded-connection-string-credentials",
          "name": "cs/hardcoded-connection-string-credentials",
          "shortDescription": "Hard-coded connection string with credentials",
          "fullDescription": "Credentials are hard-coded in a connection string in the source code of the application.",
          "defaultLevel": "error",
          "properties": {
            "tags": [
  "security",
  "external/cwe/cwe-259",
  "external/cwe/cwe-321",
  "external/cwe/cwe-798"
],
            "kind": "problem",
            "precision": "medium",
            "name": "Hard-coded connection string with credentials",
            "description": "Credentials are hard-coded in a connection string in the source code of the application.",
            "id": "cs/hardcoded-connection-string-credentials",
            "query-path": "/semmlecode-csharp-queries/Security Features/CWE-798/HardcodedConnectionString.ql",
            "problem.severity": "error"
          }
        },
        "cs/web/broad-cookie-path": {
          "id": "cs/web/broad-cookie-path",
          "name": "cs/web/broad-cookie-path",
          "shortDescription": "Cookie security: overly broad path",
          "fullDescription": "Finds cookies with an overly broad path.",
          "defaultLevel": "warning",
          "properties": {
            "tags": [
  "security",
  "external/cwe/cwe-287"
],
            "kind": "problem",
            "precision": "high",
            "name": "Cookie security: overly broad path",
            "description": "Finds cookies with an overly broad path.",
            "id": "cs/web/broad-cookie-path",
            "query-path": "/semmlecode-csharp-queries/Security Features/CookieWithOverlyBroadPath.ql",
            "problem.severity": "warning"
          }
        },
        "cs/weak-encryption": {
          "id": "cs/weak-encryption",
          "name": "cs/weak-encryption",
          "shortDescription": "Weak encryption",
          "fullDescription": "Finds uses of encryption algorithms that are weak and obsolete",
          "defaultLevel": "warning",
          "properties": {
            "tags": [
  "security",
  "external/cwe/cwe-327"
],
            "kind": "problem",
            "precision": "high",
            "name": "Weak encryption",
            "description": "Finds uses of encryption algorithms that are weak and obsolete",
            "id": "cs/weak-encryption",
            "query-path": "/semmlecode-csharp-queries/Security Features/WeakEncryption.ql",
            "problem.severity": "warning"
          }
        },
        "cs/web/disabled-header-checking": {
          "id": "cs/web/disabled-header-checking",
          "name": "cs/web/disabled-header-checking",
          "shortDescription": "Header checking disabled",
          "fullDescription": "Finds places where header checking is disabled.",
          "defaultLevel": "warning",
          "properties": {
            "tags": [
  "security",
  "external/cwe/cwe-113"
],
            "kind": "problem",
            "precision": "high",
            "name": "Header checking disabled",
            "description": "Finds places where header checking is disabled.",
            "id": "cs/web/disabled-header-checking",
            "query-path": "/semmlecode-csharp-queries/Security Features/HeaderCheckingDisabled.ql",
            "problem.severity": "warning"
          }
        },
        "cs/log-forging": {
          "id": "cs/log-forging",
          "name": "cs/log-forging",
          "shortDescription": "Log entries created from user input",
          "fullDescription": "Building log entries from user-controlled sources is vulnerable to insertion of forged log entries by a malicious user.",
          "defaultLevel": "error",
          "properties": {
            "tags": [
  "security",
  "external/cwe/cwe-117"
],
            "kind": "problem",
            "precision": "medium",
            "name": "Log entries created from user input",
            "description": "Building log entries from user-controlled sources is vulnerable to insertion of forged log entries by a malicious user.",
            "id": "cs/log-forging",
            "query-path": "/semmlecode-csharp-queries/Security Features/CWE-117/LogForging.ql",
            "problem.severity": "error"
          }
        },
        "cs/web/requiressl-not-set": {
          "id": "cs/web/requiressl-not-set",
          "name": "cs/web/requiressl-not-set",
          "shortDescription": "'requireSSL' attribute is not set to true",
          "fullDescription": "Omitting the 'requireSSL' attribute allows data to be transmitted insecurely using HTTP. Always set 'requireSSL' to 'true' to ensure that HTTPS is used at all times.",
          "defaultLevel": "error",
          "properties": {
            "tags": [
  "security",
  "external/cwe/cwe-319",
  "external/cwe/cwe-614"
],
            "kind": "problem",
            "precision": "high",
            "name": "\u0027requireSSL\u0027 attribute is not set to true",
            "description": "Omitting the \u0027requireSSL\u0027 attribute allows data to be transmitted insecurely using HTTP. Always set \u0027requireSSL\u0027 to \u0027true\u0027 to ensure that HTTPS is used at all times.",
            "id": "cs/web/requiressl-not-set",
            "query-path": "/semmlecode-csharp-queries/Security Features/CWE-614/RequireSSL.ql",
            "problem.severity": "error"
          }
        },
        "cs/regex-injection": {
          "id": "cs/regex-injection",
          "name": "cs/regex-injection",
          "shortDescription": "Regular expression injection",
          "fullDescription": "User input should not be used in regular expressions without first being escaped, otherwise a malicious user may be able to provide a regex that could require exponential time on certain inputs.",
          "defaultLevel": "error",
          "properties": {
            "tags": [
  "security",
  "external/cwe/cwe-730",
  "external/cwe/cwe-400"
],
            "kind": "problem",
            "precision": "medium",
            "name": "Regular expression injection",
            "description": "User input should not be used in regular expressions without first being escaped, otherwise a malicious user may be able to provide a regex that could require exponential time on certain inputs.",
            "id": "cs/regex-injection",
            "query-path": "/semmlecode-csharp-queries/Security Features/CWE-730/RegexInjection.ql",
            "problem.severity": "error"
          }
        },
        "cs/xml/insecure-dtd-handling": {
          "id": "cs/xml/insecure-dtd-handling",
          "name": "cs/xml/insecure-dtd-handling",
          "shortDescription": "Untrusted XML is read insecurely",
          "fullDescription": "Untrusted XML is read with an insecure resolver and DTD processing enabled.",
          "defaultLevel": "error",
          "properties": {
            "tags": [
  "security",
  "external/cwe/cwe-611",
  "external/cwe/cwe-827",
  "external/cwe/cwe-776"
],
            "kind": "problem",
            "precision": "medium",
            "name": "Untrusted XML is read insecurely",
            "description": "Untrusted XML is read with an insecure resolver and DTD processing enabled.",
            "id": "cs/xml/insecure-dtd-handling",
            "query-path": "/semmlecode-csharp-queries/Security Features/CWE-611/UntrustedDataInsecureXml.ql",
            "problem.severity": "error"
          }
        },
        "cs/sql-injection": {
          "id": "cs/sql-injection",
          "name": "cs/sql-injection",
          "shortDescription": "SQL query built from user-controlled sources",
          "fullDescription": "Building a SQL query from user-controlled sources is vulnerable to insertion of malicious SQL code by the user.",
          "defaultLevel": "error",
          "properties": {
            "tags": [
  "security",
  "external/cwe/cwe-089"
],
            "kind": "problem",
            "precision": "medium",
            "name": "SQL query built from user-controlled sources",
            "description": "Building a SQL query from user-controlled sources is vulnerable to insertion of malicious SQL code by the user.",
            "id": "cs/sql-injection",
            "query-path": "/semmlecode-csharp-queries/Security Features/CWE-089/SqlInjection.ql",
            "problem.severity": "error"
          }
        },
        "cs/redos": {
          "id": "cs/redos",
          "name": "cs/redos",
          "shortDescription": "Denial of Service from comparison of user input against expensive regex",
          "fullDescription": "User input should not be matched against a regular expression that could require exponential time on certain input.",
          "defaultLevel": "error",
          "properties": {
            "tags": [
  "security",
  "external/cwe/cwe-730",
  "external/cwe/cwe-400"
],
            "kind": "problem",
            "precision": "medium",
            "name": "Denial of Service from comparison of user input against expensive regex",
            "description": "User input should not be matched against a regular expression that could require exponential time on certain input.",
            "id": "cs/redos",
            "query-path": "/semmlecode-csharp-queries/Security Features/CWE-730/ReDoS.ql",
            "problem.severity": "error"
          }
        },
        "cs/exposure-of-sensitive-information": {
          "id": "cs/exposure-of-sensitive-information",
          "name": "cs/exposure-of-sensitive-information",
          "shortDescription": "Exposure of private information",
          "fullDescription": "If private information is written to an external location, it may be accessible by unauthorized persons.",
          "defaultLevel": "error",
          "properties": {
            "tags": [
  "security",
  "external/cwe/cwe-359"
],
            "kind": "problem",
            "precision": "medium",
            "name": "Exposure of private information",
            "description": "If private information is written to an external location, it may be accessible by unauthorized persons.",
            "id": "cs/exposure-of-sensitive-information",
            "query-path": "/semmlecode-csharp-queries/Security Features/CWE-359/ExposureOfPrivateInformation.ql",
            "problem.severity": "error"
          }
        }
      },
      "properties": {
        "originalUriBaseIds": {
  "%SRCROOT%": "file:///C:/corefx/src/System.Net.Http.WinHttpHandler/"
}
      }
    }
  ]
}