<?xml version='1.0' encoding='UTF-8'?>
<DEFECTS><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>20</LINE><COLUMN>12</COLUMN></SFA><DEFECTCODE>26003</DEFECTCODE><DESCRIPTION>Accessing buffer 'a' of unspecified length.  Please annotate.
PREFAST_NEWLINE

PREFAST_NEWLINE
If we assume that the buffer has single element in length, then the checker would report:
PREFAST_NEWLINE
Potential Underflow using expression 'a[succ]'
PREFAST_NEWLINE
Accessing unannotated buffer a
PREFAST_NEWLINE
Buffer is of length 4 bytes [assumed because the buffer is unannotated]
PREFAST_NEWLINE
Accessing 4 bytes starting at byte offset 4*result.f`19a
PREFAST_NEWLINE

PREFAST_NEWLINE
 when function f called at line 19 fails.
PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
Pointer a is at offset 0 bytes from the start of the buffer
PREFAST_NEWLINE
succ = result.f`19a
PREFAST_NEWLINE

PREFAST_NEWLINE
where
PREFAST_NEWLINE
offset(a)`19a == 0
PREFAST_NEWLINE
result.f`19a &lt;= 10
PREFAST_NEWLINE

PREFAST_NEWLINE
Underflow access occurs when
PREFAST_NEWLINE
4*result.f`19a + 1 &lt;= 0
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>g</FUNCTION><DECORATED>?g@@YAXXZ</DECORATED><FUNCLINE>16</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>16</LINE><COLUMN>6</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>18</LINE><COLUMN>9</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>19</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>19</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>19</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>20</LINE><COLUMN>12</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>20</LINE><COLUMN>12</COLUMN></SFA><DEFECTCODE>26000</DEFECTCODE><DESCRIPTION>Overflow using expression 'a[succ]'
PREFAST_NEWLINE
Buffer a created during call to f on line 19
PREFAST_NEWLINE
Buffer is of length 40 bytes [from annotation SAL_writableTo(elementCount(10)) at c:\somepath\test043.cpp(7) on function f called at line 19]
PREFAST_NEWLINE
Accessing 4 bytes starting at byte offset 4*result.f`19a
PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
Pointer a is at offset 0 bytes from the start of the buffer
PREFAST_NEWLINE
succ = result.f`19a
PREFAST_NEWLINE

PREFAST_NEWLINE
where
PREFAST_NEWLINE
offset(a)`19a == 0
PREFAST_NEWLINE
result.f`19a &gt;= 11
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>g</FUNCTION><DECORATED>?g@@YAXXZ</DECORATED><FUNCLINE>16</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>16</LINE><COLUMN>6</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>18</LINE><COLUMN>9</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>19</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>19</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>19</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>20</LINE><COLUMN>12</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>28</LINE><COLUMN>8</COLUMN></SFA><DEFECTCODE>26030</DEFECTCODE><DESCRIPTION>Postcondition violation that could result in overflow
PREFAST_NEWLINE
The function has a __success annotation that is satisfied
PREFAST_NEWLINE
Buffer result.new[] created during call to operator new[] on line 27
PREFAST_NEWLINE
Buffer is of length 36 bytes [from annotation _Post_writable_byte_size_(byteCount({parameter 1})) on function operator new[] called at line 27]
PREFAST_NEWLINE
Accessing 40 bytes starting at byte offset 0
PREFAST_NEWLINE
Annotation on function f1 requires that * p is of length &gt;= 10 elements (4 bytes/element)
PREFAST_NEWLINE
[Annotation SAL_writableTo(elementCount(10)) at c:\somepath\test043.cpp(24)]
PREFAST_NEWLINE

PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
Pointer (*p) is at offset 0 bytes from the start of the buffer
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>f1</FUNCTION><DECORATED>?f1@@YAHPAPAH@Z</DECORATED><FUNCLINE>24</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>24</LINE><COLUMN>29</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>25</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>27</LINE><COLUMN>13</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>27</LINE><COLUMN>11</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>28</LINE><COLUMN>8</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>44</LINE><COLUMN>15</COLUMN></SFA><DEFECTCODE>26018</DEFECTCODE><DESCRIPTION>Potential read overflow of null terminated buffer using expression 's[i]'
PREFAST_NEWLINE
This is likely to be due to incorrect or insufficient validation of the buffer access
PREFAST_NEWLINE
Buffer s is a parameter to this function declared on line 40
PREFAST_NEWLINE
Buffer is of length nullpos(s)`40 + 1 bytes [length of zero terminated string]
PREFAST_NEWLINE
Accessing the byte at byte offset 1
PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
Pointer s is at offset 0 bytes from the start of the buffer
PREFAST_NEWLINE
i = 1
PREFAST_NEWLINE

PREFAST_NEWLINE
where
PREFAST_NEWLINE
offset(s)`40 == 0
PREFAST_NEWLINE
{loop iterations}'44 == 0
PREFAST_NEWLINE
nullpos(s)`40 &gt;= 0
PREFAST_NEWLINE

PREFAST_NEWLINE
Overrun access occurs when
PREFAST_NEWLINE
nullpos(s)`40 == 0
PREFAST_NEWLINE

PREFAST_NEWLINE
There are other instances of this error:
PREFAST_NEWLINE
Potential read overflow of null terminated buffer using expression 's[i]' at line 46
PREFAST_NEWLINE
Potential read overflow of null terminated buffer using expression 's[i]' at line 57
PREFAST_NEWLINE
Potential read overflow of null terminated buffer using expression 's[i]' at line 59
PREFAST_NEWLINE
Potential read overflow of null terminated buffer using expression 's[i]' at line 60
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>foo</FUNCTION><DECORATED>?foo@@YA_NPAH0PAD@Z</DECORATED><FUNCLINE>40</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>40</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>42</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>42</LINE><COLUMN>15</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>43</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>43</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>44</LINE><COLUMN>15</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>44</LINE><COLUMN>15</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>46</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>46</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>48</LINE><COLUMN>9</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>44</LINE><COLUMN>15</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>53</LINE><COLUMN>8</COLUMN></SFA><DEFECTCODE>26030</DEFECTCODE><DESCRIPTION>Postcondition violation that could result in overflow
PREFAST_NEWLINE
The function has a __success annotation that is satisfied
PREFAST_NEWLINE
Buffer buf is a parameter to this function declared on line 40
PREFAST_NEWLINE
Buffer is of length offset(buf)`40 + 4*(*size)`40 bytes [from annotation SAL_writableTo(elementCount(* size)) at c:\somepath\test043.cpp(40)]
PREFAST_NEWLINE
Accessing 4*reqd`44 bytes starting at byte offset 0
PREFAST_NEWLINE
Annotation on function foo requires that buf is of length &gt;= * size elements (4 bytes/element)
PREFAST_NEWLINE
[Annotation SAL_readableTo(elementCount(* size)) at c:\somepath\test043.cpp(40)]
PREFAST_NEWLINE

PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
(*size) = reqd`44
PREFAST_NEWLINE
Pointer buf is at offset 0 bytes from the start of the buffer
PREFAST_NEWLINE

PREFAST_NEWLINE
where
PREFAST_NEWLINE
offset(buf)`40 == 0
PREFAST_NEWLINE
(*size)`40 &gt;= 1
PREFAST_NEWLINE
reqd`44 &lt;= {loop iterations}'44 + 1
PREFAST_NEWLINE
reqd`44 &gt;= (*size)`40 + 1
PREFAST_NEWLINE
{loop iterations}'44 &gt;= 0
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>foo</FUNCTION><DECORATED>?foo@@YA_NPAH0PAD@Z</DECORATED><FUNCLINE>40</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>40</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>42</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>42</LINE><COLUMN>15</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>43</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>43</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>44</LINE><COLUMN>15</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>44</LINE><COLUMN>15</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>46</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>46</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>48</LINE><COLUMN>9</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>44</LINE><COLUMN>15</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>44</LINE><COLUMN>15</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>46</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>46</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>47</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>48</LINE><COLUMN>9</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>44</LINE><COLUMN>15</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>44</LINE><COLUMN>15</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>46</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>46</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>48</LINE><COLUMN>9</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>44</LINE><COLUMN>15</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>44</LINE><COLUMN>15</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>50</LINE><COLUMN>13</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>52</LINE><COLUMN>14</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>53</LINE><COLUMN>8</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>60</LINE><COLUMN>21</COLUMN></SFA><DEFECTCODE>26011</DEFECTCODE><DESCRIPTION>Potential Underflow using expression 'buf[j ++]'
PREFAST_NEWLINE
Buffer buf is a parameter to this function declared on line 40
PREFAST_NEWLINE
Buffer is of length offset(buf)`40 + 4*(*size)`40 bytes [from annotation SAL_writableTo(elementCount(* size)) at c:\somepath\test043.cpp(40)]
PREFAST_NEWLINE
Accessing 4 bytes starting at byte offset 4*j`57
PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
Pointer buf is at offset 0 bytes from the start of the buffer
PREFAST_NEWLINE
j = j`57 + 1
PREFAST_NEWLINE

PREFAST_NEWLINE
where
PREFAST_NEWLINE
offset(buf)`40 == 0
PREFAST_NEWLINE
(*size)`40 &gt;= 1
PREFAST_NEWLINE
j`57 &lt;= {loop iterations}'57 + 1
PREFAST_NEWLINE
reqd`44 &lt;= (*size)`40
PREFAST_NEWLINE
reqd`44 &lt;= {loop iterations}'44 + 1
PREFAST_NEWLINE
reqd`44 &gt;= {loop iterations}'57 + 2
PREFAST_NEWLINE
{loop iterations}'44 &gt;= 0
PREFAST_NEWLINE
{loop iterations}'57 &gt;= 0
PREFAST_NEWLINE

PREFAST_NEWLINE
Underflow access occurs when
PREFAST_NEWLINE
4*j`57 + 1 &lt;= 0
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>foo</FUNCTION><DECORATED>?foo@@YA_NPAH0PAD@Z</DECORATED><FUNCLINE>40</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>40</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>42</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>42</LINE><COLUMN>15</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>43</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>43</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>44</LINE><COLUMN>15</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>44</LINE><COLUMN>15</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>46</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>46</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>48</LINE><COLUMN>9</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>44</LINE><COLUMN>15</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>44</LINE><COLUMN>15</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>46</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>46</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>47</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>48</LINE><COLUMN>9</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>44</LINE><COLUMN>15</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>44</LINE><COLUMN>15</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>46</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>46</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>48</LINE><COLUMN>9</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>44</LINE><COLUMN>15</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>44</LINE><COLUMN>15</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>50</LINE><COLUMN>13</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>55</LINE><COLUMN>6</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>56</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>56</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>57</LINE><COLUMN>15</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>57</LINE><COLUMN>15</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>57</LINE><COLUMN>27</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>59</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>59</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>61</LINE><COLUMN>9</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>57</LINE><COLUMN>15</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>57</LINE><COLUMN>15</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>57</LINE><COLUMN>27</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>59</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>59</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>60</LINE><COLUMN>21</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>61</LINE><COLUMN>9</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>57</LINE><COLUMN>15</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>57</LINE><COLUMN>15</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>57</LINE><COLUMN>27</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>59</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>59</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>60</LINE><COLUMN>21</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>74</LINE><COLUMN>11</COLUMN></SFA><DEFECTCODE>26006</DEFECTCODE><DESCRIPTION>Possibly incorrect single element annotation on string buffer
PREFAST_NEWLINE
Possible precondition violation due to failure to null terminate string 's'
PREFAST_NEWLINE
Buffer s is a parameter to this function declared on line 67
PREFAST_NEWLINE
Buffer lengths are from an assumed __inout annotation on the parameter
PREFAST_NEWLINE
Buffer is of length offset(s)`67 + 1 bytes [from annotation valid(elementCount(1)) at c:\somepath\test043.cpp(67)]
PREFAST_NEWLINE
Annotation on function foo requires that {parameter 3} is null terminated
PREFAST_NEWLINE
  where {parameter 3} is s [Annotation SAL_nullTerminated at c:\somepath\test043.cpp(40)]
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>bar</FUNCTION><DECORATED>?bar@@YADPAD@Z</DECORATED><FUNCLINE>67</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>67</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>69</LINE><COLUMN>9</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>69</LINE><COLUMN>14</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>71</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>72</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>72</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>74</LINE><COLUMN>11</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>76</LINE><COLUMN>23</COLUMN></SFA><DEFECTCODE>26014</DEFECTCODE><DESCRIPTION>Potential read overflow using expression 'a[n]'
PREFAST_NEWLINE
This is likely to be due to incorrect or insufficient validation of the buffer access
PREFAST_NEWLINE
Buffer accessed is a
PREFAST_NEWLINE
Buffer is of length 10 elements (4 bytes/element) [size of variable]
PREFAST_NEWLINE
Accessing the element (4 bytes/element) at element offset n`74a
PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
n = n`74a
PREFAST_NEWLINE

PREFAST_NEWLINE
where
PREFAST_NEWLINE
n`74a &lt;= 10
PREFAST_NEWLINE
n`74a &gt;= 0
PREFAST_NEWLINE

PREFAST_NEWLINE
Overrun access occurs when
PREFAST_NEWLINE
n`74a == 10
PREFAST_NEWLINE

PREFAST_NEWLINE
There are other instances of this error:
PREFAST_NEWLINE
Potential read overflow using expression 'a[n - 1]' at line 77
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>bar</FUNCTION><DECORATED>?bar@@YADPAD@Z</DECORATED><FUNCLINE>67</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>67</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>69</LINE><COLUMN>9</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>69</LINE><COLUMN>14</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>71</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>72</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>72</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>74</LINE><COLUMN>11</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>74</LINE><COLUMN>11</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>76</LINE><COLUMN>13</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>76</LINE><COLUMN>23</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>76</LINE><COLUMN>23</COLUMN></SFA><DEFECTCODE>26011</DEFECTCODE><DESCRIPTION>Potential read underflow using expression 'a[n]'
PREFAST_NEWLINE
Buffer accessed is a
PREFAST_NEWLINE
Buffer is of length 10 elements (4 bytes/element) [size of variable]
PREFAST_NEWLINE
Accessing the element (4 bytes/element) at element offset n`74a
PREFAST_NEWLINE

PREFAST_NEWLINE
 when function foo called at line 74 fails.
PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
n = n`74a
PREFAST_NEWLINE

PREFAST_NEWLINE
Underflow access occurs when
PREFAST_NEWLINE
n`74a + 1 &lt;= 0
PREFAST_NEWLINE

PREFAST_NEWLINE
There are other instances of this error:
PREFAST_NEWLINE
Potential read underflow using expression 'a[n - 1]' at line 77
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>bar</FUNCTION><DECORATED>?bar@@YADPAD@Z</DECORATED><FUNCLINE>67</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>67</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>69</LINE><COLUMN>9</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>69</LINE><COLUMN>14</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>71</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>72</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>72</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>74</LINE><COLUMN>11</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>74</LINE><COLUMN>11</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>76</LINE><COLUMN>13</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>76</LINE><COLUMN>23</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>91</LINE><COLUMN>4</COLUMN></SFA><DEFECTCODE>26045</DEFECTCODE><DESCRIPTION>Potential postcondition violation that could result in overflow
PREFAST_NEWLINE
The function has a __success annotation that is satisfied
PREFAST_NEWLINE
Buffer access is apparently unbounded by the buffer size.  
PREFAST_NEWLINE

PREFAST_NEWLINE
In particular: n`88 is not constrained by any constant
PREFAST_NEWLINE

PREFAST_NEWLINE
Buffer result.new[] created during call to operator new[] on line 90
PREFAST_NEWLINE
Buffer is of length 10 bytes [from annotation _Post_writable_byte_size_(byteCount({parameter 1})) on function operator new[] called at line 90]
PREFAST_NEWLINE
Accessing n`88 bytes starting at byte offset 0
PREFAST_NEWLINE
Annotation on function SuccessSatisfied requires that * p is of length &gt;= n elements (1 bytes/element)
PREFAST_NEWLINE
[Annotation SAL_writableTo(elementCount(n)) at c:\somepath\test043.cpp(88)]
PREFAST_NEWLINE

PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
Pointer (*p) is at offset 0 bytes from the start of the buffer
PREFAST_NEWLINE
n = n`88
PREFAST_NEWLINE

PREFAST_NEWLINE
where
PREFAST_NEWLINE
offset(result.new[])`90a == 0
PREFAST_NEWLINE
n`88 &gt;= 0
PREFAST_NEWLINE

PREFAST_NEWLINE
Overrun access occurs when
PREFAST_NEWLINE
n`88 &gt;= 11
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>SuccessSatisfied</FUNCTION><DECORATED>?SuccessSatisfied@@YAJPAPADI@Z</DECORATED><FUNCLINE>88</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>88</LINE><COLUMN>24</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>90</LINE><COLUMN>9</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>90</LINE><COLUMN>7</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>91</LINE><COLUMN>4</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>97</LINE><COLUMN>4</COLUMN></SFA><DEFECTCODE>26045</DEFECTCODE><DESCRIPTION>Potential postcondition violation that could result in overflow
PREFAST_NEWLINE
Buffer access is apparently unbounded by the buffer size.  
PREFAST_NEWLINE

PREFAST_NEWLINE
In particular: n`94 is not constrained by any constant
PREFAST_NEWLINE

PREFAST_NEWLINE
Buffer result.new[] created during call to operator new[] on line 96
PREFAST_NEWLINE
Buffer is of length 10 bytes [from annotation _Post_writable_byte_size_(byteCount({parameter 1})) on function operator new[] called at line 96]
PREFAST_NEWLINE
Accessing n`94 bytes starting at byte offset 0
PREFAST_NEWLINE
Annotation on function NoSuccess requires that * p is of length &gt;= n elements (1 bytes/element)
PREFAST_NEWLINE
[Annotation SAL_writableTo(elementCount(n)) at c:\somepath\test043.cpp(94)]
PREFAST_NEWLINE

PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
Pointer (*p) is at offset 0 bytes from the start of the buffer
PREFAST_NEWLINE
n = n`94
PREFAST_NEWLINE

PREFAST_NEWLINE
where
PREFAST_NEWLINE
offset(result.new[])`96a == 0
PREFAST_NEWLINE
n`94 &gt;= 0
PREFAST_NEWLINE

PREFAST_NEWLINE
Overrun access occurs when
PREFAST_NEWLINE
n`94 &gt;= 11
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>NoSuccess</FUNCTION><DECORATED>?NoSuccess@@YAHPAPADI@Z</DECORATED><FUNCLINE>94</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>94</LINE><COLUMN>13</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>96</LINE><COLUMN>9</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>96</LINE><COLUMN>7</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>97</LINE><COLUMN>4</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>111</LINE><COLUMN>4</COLUMN></SFA><DEFECTCODE>26045</DEFECTCODE><DESCRIPTION>Potential postcondition violation that could result in overflow
PREFAST_NEWLINE
The function has a __success annotation that may be satisfied
PREFAST_NEWLINE
Buffer access is apparently unbounded by the buffer size.  
PREFAST_NEWLINE

PREFAST_NEWLINE
In particular: n`105 is not constrained by any constant
PREFAST_NEWLINE

PREFAST_NEWLINE
Buffer result.new[] created during call to operator new[] on line 108
PREFAST_NEWLINE
Buffer is of length 10 bytes [from annotation _Post_writable_byte_size_(byteCount({parameter 1})) on function operator new[] called at line 108]
PREFAST_NEWLINE
Accessing n`105 bytes starting at byte offset 0
PREFAST_NEWLINE
Annotation on function SuccessMaybeSatisified requires that * p is of length &gt;= n elements (1 bytes/element)
PREFAST_NEWLINE
[Annotation SAL_writableTo(elementCount(n)) at c:\somepath\test043.cpp(105)]
PREFAST_NEWLINE

PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
Pointer (*p) is at offset 0 bytes from the start of the buffer
PREFAST_NEWLINE
n = n`105
PREFAST_NEWLINE

PREFAST_NEWLINE
where
PREFAST_NEWLINE
offset(result.new[])`108a == 0
PREFAST_NEWLINE
n`105 &gt;= 0
PREFAST_NEWLINE

PREFAST_NEWLINE
Overrun access occurs when
PREFAST_NEWLINE
n`105 &gt;= 11
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>SuccessMaybeSatisified</FUNCTION><DECORATED>?SuccessMaybeSatisified@@YAJPAPADI@Z</DECORATED><FUNCLINE>105</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>105</LINE><COLUMN>30</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>108</LINE><COLUMN>9</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>108</LINE><COLUMN>7</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>109</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>110</LINE><COLUMN>13</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>111</LINE><COLUMN>4</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>145</LINE><COLUMN>27</COLUMN></SFA><DEFECTCODE>26015</DEFECTCODE><DESCRIPTION>Potential overflow using expression '&amp; buf'
PREFAST_NEWLINE
Buffer access is apparently unbounded by the buffer size.  
PREFAST_NEWLINE

PREFAST_NEWLINE
In particular: size`142a is not constrained by any constant
PREFAST_NEWLINE

PREFAST_NEWLINE
Buffer accessed is buf
PREFAST_NEWLINE
Buffer is of length 256 bytes [size of variable]
PREFAST_NEWLINE
Accessing size`142a bytes starting at byte offset 0
PREFAST_NEWLINE
Annotation on function Stream::GetData requires that {parameter 2} is of length &gt;= * {parameter 3} elements (1 bytes/element)
PREFAST_NEWLINE
  where {parameter 2} is &amp; buf; {parameter 3} is &amp; size
PREFAST_NEWLINE
[Annotation SAL_writableTo(elementCount(* {parameter 3})) at c:\somepath\test043.cpp(122)]
PREFAST_NEWLINE

PREFAST_NEWLINE

PREFAST_NEWLINE
 when function Stream::GetData called at line 142 fails.
PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
size = size`142a
PREFAST_NEWLINE

PREFAST_NEWLINE
where
PREFAST_NEWLINE
size`142a &gt;= 0
PREFAST_NEWLINE

PREFAST_NEWLINE
Overrun access occurs when
PREFAST_NEWLINE
size`142a &gt;= 257
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>GetStreamData</FUNCTION><DECORATED>?GetStreamData@@YAJPAVStream@@@Z</DECORATED><FUNCLINE>138</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>138</LINE><COLUMN>21</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>140</LINE><COLUMN>9</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>141</LINE><COLUMN>11</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>141</LINE><COLUMN>24</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>142</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>142</LINE><COLUMN>33</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>142</LINE><COLUMN>33</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>143</LINE><COLUMN>11</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test043.cpp</FILENAME><LINE>145</LINE><COLUMN>27</COLUMN></SFA></PATH></DEFECT></DEFECTS>
