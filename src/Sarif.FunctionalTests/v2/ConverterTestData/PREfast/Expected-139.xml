<?xml version='1.0' encoding='UTF-8'?>
<DEFECTS><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test139.cpp</FILENAME><LINE>20</LINE><COLUMN>4</COLUMN></SFA><DEFECTCODE>26061</DEFECTCODE><DESCRIPTION>Range postcondition violation
PREFAST_NEWLINE
The function has a __success annotation that is satisfied
PREFAST_NEWLINE
Annotation on function TestFailOnImpl requires that result.TestFailOnImpl is == 0
PREFAST_NEWLINE
[Annotation SAL_relop("==", 0) at c:\somepath\test139.cpp(14)]
PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
result.TestFailOnImpl = 3
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>TestFailOnImpl</FUNCTION><DECORATED>?TestFailOnImpl@@YAHPBD@Z</DECORATED><FUNCLINE>14</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test139.cpp</FILENAME><LINE>14</LINE><COLUMN>4</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test139.cpp</FILENAME><LINE>16</LINE><COLUMN>18</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test139.cpp</FILENAME><LINE>16</LINE><COLUMN>18</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test139.cpp</FILENAME><LINE>18</LINE><COLUMN>18</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test139.cpp</FILENAME><LINE>18</LINE><COLUMN>18</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test139.cpp</FILENAME><LINE>20</LINE><COLUMN>4</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test139.cpp</FILENAME><LINE>28</LINE><COLUMN>34</COLUMN></SFA><DEFECTCODE>26001</DEFECTCODE><DESCRIPTION>Underflow using expression 'buf[result.TestFailOnImpl - 1]'
PREFAST_NEWLINE
Buffer accessed is buf
PREFAST_NEWLINE
Buffer is of length 2 elements (4 bytes/element) [size of variable]
PREFAST_NEWLINE
Accessing the element (4 bytes/element) at element offset -1
PREFAST_NEWLINE

PREFAST_NEWLINE
 when function TestFailOnImpl called at line 28 fails.
PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
result.TestFailOnImpl = 0
PREFAST_NEWLINE

PREFAST_NEWLINE
where
PREFAST_NEWLINE
result.TestFailOnImpl`28a == 0
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>TestFailOnCaller</FUNCTION><DECORATED>?TestFailOnCaller@@YAXXZ</DECORATED><FUNCLINE>23</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test139.cpp</FILENAME><LINE>23</LINE><COLUMN>5</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test139.cpp</FILENAME><LINE>25</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test139.cpp</FILENAME><LINE>27</LINE><COLUMN>22</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test139.cpp</FILENAME><LINE>27</LINE><COLUMN>30</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test139.cpp</FILENAME><LINE>28</LINE><COLUMN>22</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test139.cpp</FILENAME><LINE>28</LINE><COLUMN>34</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test139.cpp</FILENAME><LINE>62</LINE><COLUMN>23</COLUMN></SFA><DEFECTCODE>26000</DEFECTCODE><DESCRIPTION>Overflow using expression 'buffer[10]'
PREFAST_NEWLINE
Buffer result.WeirdAlloc created during call to WeirdAlloc on line 51
PREFAST_NEWLINE
Buffer is of length 10 bytes [from annotation SAL_writableTo(byteCount({parameter 1})) at c:\somepath\test139.cpp(36) on function WeirdAlloc called at line 51]
PREFAST_NEWLINE
Accessing the byte at byte offset 10
PREFAST_NEWLINE

PREFAST_NEWLINE
 when function WeirdAlloc called at line 51 fails.
PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
Pointer buffer is at offset 0 bytes from the start of the buffer
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>TestWeirdAlloc</FUNCTION><DECORATED>?TestWeirdAlloc@@YAXXZ</DECORATED><FUNCLINE>48</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test139.cpp</FILENAME><LINE>48</LINE><COLUMN>5</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test139.cpp</FILENAME><LINE>50</LINE><COLUMN>9</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test139.cpp</FILENAME><LINE>51</LINE><COLUMN>10</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test139.cpp</FILENAME><LINE>51</LINE><COLUMN>37</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test139.cpp</FILENAME><LINE>51</LINE><COLUMN>19</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test139.cpp</FILENAME><LINE>53</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test139.cpp</FILENAME><LINE>55</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test139.cpp</FILENAME><LINE>61</LINE><COLUMN>22</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test139.cpp</FILENAME><LINE>62</LINE><COLUMN>23</COLUMN></SFA></PATH></DEFECT></DEFECTS>