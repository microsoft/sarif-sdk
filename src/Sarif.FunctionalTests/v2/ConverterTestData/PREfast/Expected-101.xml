<?xml version='1.0' encoding='UTF-8'?>
<DEFECTS><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test101.cpp</FILENAME><LINE>12</LINE><COLUMN>10</COLUMN></SFA><DEFECTCODE>26015</DEFECTCODE><DESCRIPTION>Potential overflow using expression '(void *)(&amp; f-&gt;arr)'
PREFAST_NEWLINE
Buffer access is apparently unbounded by the buffer size.  
PREFAST_NEWLINE

PREFAST_NEWLINE
In particular: cnt`10 is not constrained by (f-&gt;_FLEXARRAY::count)`10
PREFAST_NEWLINE

PREFAST_NEWLINE
Buffer (f-&gt;_FLEXARRAY::arr) is a parameter to this function declared on line 10
PREFAST_NEWLINE
Buffer lengths are from an assumed __inout annotation on the parameter
PREFAST_NEWLINE
Buffer is of length 4*(f-&gt;_FLEXARRAY::count)`10 bytes [from type annotation SAL_writableTo(elementCount(f-&gt;count)) at c:\somepath\test101.cpp(7)]
PREFAST_NEWLINE
Accessing 4*cnt`10 bytes starting at byte offset 0
PREFAST_NEWLINE
Annotation on function memcpy requires that {parameter 1} is of length &gt;= {parameter 3} bytes
PREFAST_NEWLINE
  where {parameter 1} is (void *)(&amp; f-&gt;arr); {parameter 3} is cnt * 4
PREFAST_NEWLINE
[Annotation _Out_(byteCount({parameter 3}))]
PREFAST_NEWLINE

PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
Pointer f is at offset 0 bytes from the start of f
PREFAST_NEWLINE
cnt = cnt`10
PREFAST_NEWLINE

PREFAST_NEWLINE
where
PREFAST_NEWLINE
(f-&gt;_FLEXARRAY::count)`10 &gt;= 1
PREFAST_NEWLINE
cnt`10 &gt;= 1
PREFAST_NEWLINE

PREFAST_NEWLINE
Overrun access occurs when
PREFAST_NEWLINE
cnt`10 &gt;= (f-&gt;_FLEXARRAY::count)`10 + 1
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>bad1</FUNCTION><DECORATED>?bad1@@YAXPAHIPAU_FLEXARRAY@@@Z</DECORATED><FUNCLINE>10</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test101.cpp</FILENAME><LINE>10</LINE><COLUMN>5</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test101.cpp</FILENAME><LINE>12</LINE><COLUMN>10</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test101.cpp</FILENAME><LINE>31</LINE><COLUMN>4</COLUMN></SFA><DEFECTCODE>26030</DEFECTCODE><DESCRIPTION>Postcondition violation that could result in overflow
PREFAST_NEWLINE
Buffer result.malloc created during call to malloc on line 28
PREFAST_NEWLINE
Buffer is of length 4*cnt`26 + 4 bytes [from annotation _Post_writable_byte_size_(byteCount({parameter 1})) on function malloc called at line 28]
PREFAST_NEWLINE
Accessing 4*cnt`26 + 8 bytes starting at byte offset 0
PREFAST_NEWLINE
Annotation on function bad2 requires that result.bad2 is of length &gt;= result.bad2-&gt;count * 4 + 4 bytes
PREFAST_NEWLINE
[Type annotation SAL_writableTo(byteCount(result.bad2-&gt;count * 4 + 4)) at c:\somepath\test101.cpp(7)]
PREFAST_NEWLINE

PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
(f-&gt;_FLEXARRAY::count) = cnt`26 + 1
PREFAST_NEWLINE
Pointer f is at offset 0 bytes from the start of the buffer
PREFAST_NEWLINE
result.bad2 = f
PREFAST_NEWLINE

PREFAST_NEWLINE
where
PREFAST_NEWLINE
offset(result.malloc)`28a == 0
PREFAST_NEWLINE
cnt`26 &gt;= 1
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>bad2</FUNCTION><DECORATED>?bad2@@YAPAU_FLEXARRAY@@I@Z</DECORATED><FUNCLINE>26</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test101.cpp</FILENAME><LINE>26</LINE><COLUMN>19</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test101.cpp</FILENAME><LINE>28</LINE><COLUMN>15</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test101.cpp</FILENAME><LINE>28</LINE><COLUMN>37</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test101.cpp</FILENAME><LINE>28</LINE><COLUMN>19</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test101.cpp</FILENAME><LINE>29</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test101.cpp</FILENAME><LINE>30</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test101.cpp</FILENAME><LINE>31</LINE><COLUMN>4</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test101.cpp</FILENAME><LINE>38</LINE><COLUMN>14</COLUMN></SFA><DEFECTCODE>26015</DEFECTCODE><DESCRIPTION>Potential overflow using expression '(void *)(&amp; f-&gt;arr)'
PREFAST_NEWLINE
Buffer access is apparently unbounded by the buffer size.  
PREFAST_NEWLINE

PREFAST_NEWLINE
In particular: cnt`36 is not constrained by (f-&gt;_FLEXARRAY::count)`36
PREFAST_NEWLINE

PREFAST_NEWLINE
Buffer (f-&gt;_FLEXARRAY::arr) is a parameter to this function declared on line 36
PREFAST_NEWLINE
Buffer lengths are from an assumed __inout annotation on the parameter
PREFAST_NEWLINE
Buffer is of length 4*(f-&gt;_FLEXARRAY::count)`36 bytes [from type annotation SAL_writableTo(elementCount(f-&gt;count)) at c:\somepath\test101.cpp(7)]
PREFAST_NEWLINE
Accessing 4*cnt`36 bytes starting at byte offset 0
PREFAST_NEWLINE
Annotation on function memcpy requires that {parameter 1} is of length &gt;= {parameter 3} bytes
PREFAST_NEWLINE
  where {parameter 1} is (void *)(&amp; f-&gt;arr); {parameter 3} is cnt * 4
PREFAST_NEWLINE
[Annotation _Out_(byteCount({parameter 3}))]
PREFAST_NEWLINE

PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
Pointer f is at offset 0 bytes from the start of f
PREFAST_NEWLINE
cnt = cnt`36
PREFAST_NEWLINE

PREFAST_NEWLINE
where
PREFAST_NEWLINE
(f-&gt;_FLEXARRAY::count)`36 &gt;= 1
PREFAST_NEWLINE
cnt`36 &gt;= 1
PREFAST_NEWLINE

PREFAST_NEWLINE
Overrun access occurs when
PREFAST_NEWLINE
cnt`36 &gt;= (f-&gt;_FLEXARRAY::count)`36 + 1
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>Foo::what</FUNCTION><DECORATED>?what@Foo@@QAEXPAU_FLEXARRAY@@PAHI@Z</DECORATED><FUNCLINE>36</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test101.cpp</FILENAME><LINE>36</LINE><COLUMN>9</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test101.cpp</FILENAME><LINE>38</LINE><COLUMN>14</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test101.cpp</FILENAME><LINE>59</LINE><COLUMN>11</COLUMN></SFA><DEFECTCODE>26015</DEFECTCODE><DESCRIPTION>Potential overflow using expression '&amp; f1'
PREFAST_NEWLINE
Buffer access is apparently unbounded by the buffer size.  
PREFAST_NEWLINE

PREFAST_NEWLINE
In particular: f1._FLEXARRAY::count`48 is not constrained by any constant
PREFAST_NEWLINE

PREFAST_NEWLINE
Buffer accessed is f1
PREFAST_NEWLINE
Buffer is of length 8 bytes [size of variable]
PREFAST_NEWLINE
Accessing 4*f1._FLEXARRAY::count`48 + 4 bytes starting at byte offset 0
PREFAST_NEWLINE
Assumed __inout annotation on function Foo::what requires that {parameter 2} is of length &gt;= {parameter 2}-&gt;count * 4 + 4 bytes
PREFAST_NEWLINE
  where {parameter 2} is &amp; f1; {parameter 2} is &amp; f1
PREFAST_NEWLINE
[Type annotation SAL_writableTo(byteCount({parameter 2}-&gt;count * 4 + 4)) at c:\somepath\test101.cpp(7)]
PREFAST_NEWLINE

PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
f1._FLEXARRAY::count = f1._FLEXARRAY::count`48
PREFAST_NEWLINE

PREFAST_NEWLINE
where
PREFAST_NEWLINE
f1._FLEXARRAY::count`48 &gt;= 1
PREFAST_NEWLINE

PREFAST_NEWLINE
Overrun access occurs when
PREFAST_NEWLINE
f1._FLEXARRAY::count`48 &gt;= 2
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>main</FUNCTION><DECORATED>main</DECORATED><FUNCLINE>42</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test101.cpp</FILENAME><LINE>42</LINE><COLUMN>5</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test101.cpp</FILENAME><LINE>44</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test101.cpp</FILENAME><LINE>44</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test101.cpp</FILENAME><LINE>45</LINE><COLUMN>14</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test101.cpp</FILENAME><LINE>46</LINE><COLUMN>13</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test101.cpp</FILENAME><LINE>47</LINE><COLUMN>14</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test101.cpp</FILENAME><LINE>48</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test101.cpp</FILENAME><LINE>50</LINE><COLUMN>15</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test101.cpp</FILENAME><LINE>50</LINE><COLUMN>24</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test101.cpp</FILENAME><LINE>50</LINE><COLUMN>24</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test101.cpp</FILENAME><LINE>51</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test101.cpp</FILENAME><LINE>54</LINE><COLUMN>15</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test101.cpp</FILENAME><LINE>54</LINE><COLUMN>24</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test101.cpp</FILENAME><LINE>54</LINE><COLUMN>24</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test101.cpp</FILENAME><LINE>55</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test101.cpp</FILENAME><LINE>58</LINE><COLUMN>8</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test101.cpp</FILENAME><LINE>59</LINE><COLUMN>11</COLUMN></SFA></PATH></DEFECT></DEFECTS>