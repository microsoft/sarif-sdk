{
  "$schema": "http://json.schemastore.org/sarif-2.0.0-csd.2.beta.2018-09-26",
  "version": "2.0.0-csd.2.beta.2018-09-26",
  "runs": [
    {
      "tool": {
        "name": "PREfast",
        "fullName": "PREfast Code Analysis"
      },
      "files": {
        "file:///c:/somepath/test079.cpp": {
          "mimeType": "text/x-cpp"
        }
      },
      "logicalLocations": {
        "f": {
          "decoratedName": "?f@@YAXPAUS@@@Z"
        },
        "foo": {
          "decoratedName": "?foo@@YAXPAD000US1@@@Z"
        },
        "bar": {
          "decoratedName": "?bar@@YAXPAD000ABUS1@@@Z"
        },
        "C::f": {
          "name": "f",
          "decoratedName": "?f@C@@QAGXPAD@Z"
        },
        "fieldSameAsParam1": {
          "decoratedName": "?fieldSameAsParam1@@YAXPADAAUS@@H@Z"
        },
        "main": {
          "decoratedName": "main"
        }
      },
      "results": [
        {
          "ruleId": "26000",
          "message": {
            "text": "Overflow using expression 's->arr[s->elts]'\nBuffer s is a parameter to this function declared on line 10\nBuffer is of length offset(s)`10 + 4*(s->S::elts)`10 + 4 bytes [from annotation SAL_readableTo(byteCount(4 + s->elts * 4)) at c:\\somepath\\test079.cpp(10)]\nAccessing 4 bytes starting at byte offset 4*(s->S::elts)`10 + 4\n\nValues of variables:\n(s->S::elts) = (s->S::elts)`10\nPointer s is at offset 0 bytes from the start of the buffer\n\nwhere\noffset(s)`10 == 0\n(s->S::elts)`10 >= 0\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/somepath/test079.cpp"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 21
                }
              },
              "fullyQualifiedLogicalName": "f",
              "properties": {
                "funcline": "10"
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "step": 1,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/somepath/test079.cpp"
                          },
                          "region": {
                            "startLine": 10,
                            "startColumn": 6
                          }
                        }
                      }
                    },
                    {
                      "step": 2,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/somepath/test079.cpp"
                          },
                          "region": {
                            "startLine": 12,
                            "startColumn": 21
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "26015",
          "message": {
            "text": "Potential overflow using expression '(void *)pData3'\nBuffer access is apparently unbounded by the buffer size.  \n\nIn particular: (s1.S1::ctx1->Context::len1)`34 is not constrained by (s1.S1::ctx2->Context::len1)`34\n\nBuffer pData3 is a parameter to this function declared on line 34\nBuffer is of length offset(pData3)`34 + (s1.S1::ctx2->Context::len1)`34 bytes [from annotation SAL_writableTo(elementCount((& s1)->ctx2->len1)) at c:\\somepath\\test079.cpp(34)]\nAccessing (s1.S1::ctx1->Context::len1)`34 bytes starting at byte offset 0\nAnnotation on function memcpy requires that {parameter 1} is of length >= {parameter 3} bytes\n  where {parameter 1} is (void *)pData3; {parameter 3} is s1.ctx1->len1\n[Annotation _Out_(byteCount({parameter 3}))]\n\n\nValues of variables:\n(s1.S1::ctx1->Context::len1) = (s1.S1::ctx1->Context::len1)`34\nPointer pData3 is at offset 0 bytes from the start of the buffer\nPointer s1.S1::ctx1 is at offset 0 bytes from the start of s1.S1::ctx1\n\nwhere\noffset(pData3)`34 == 0\n(s1.S1::ctx1->Context::len1)`34 >= 1\n(s1.S1::ctx2->Context::len1)`34 >= 1\n\nOverrun access occurs when\n(s1.S1::ctx1->Context::len1)`34 >= (s1.S1::ctx2->Context::len1)`34 + 1\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/somepath/test079.cpp"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 11
                }
              },
              "fullyQualifiedLogicalName": "foo",
              "properties": {
                "funcline": "34"
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "step": 1,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/somepath/test079.cpp"
                          },
                          "region": {
                            "startLine": 34,
                            "startColumn": 6
                          }
                        }
                      }
                    },
                    {
                      "step": 2,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/somepath/test079.cpp"
                          },
                          "region": {
                            "startLine": 39,
                            "startColumn": 11
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "26015",
          "message": {
            "text": "Potential overflow using expression '(void *)pData3'\nBuffer access is apparently unbounded by the buffer size.  \n\nIn particular: ((s1->S1::ctx1)->Context::len1)`43 is not constrained by ((s1->S1::ctx2)->Context::len1)`43\n\nBuffer pData3 is a parameter to this function declared on line 43\nBuffer is of length offset(pData3)`43 + ((s1->S1::ctx2)->Context::len1)`43 bytes [from annotation SAL_writableTo(elementCount(s1->ctx2->len1)) at c:\\somepath\\test079.cpp(43)]\nAccessing ((s1->S1::ctx1)->Context::len1)`43 bytes starting at byte offset 0\nAnnotation on function memcpy requires that {parameter 1} is of length >= {parameter 3} bytes\n  where {parameter 1} is (void *)pData3; {parameter 3} is s1->ctx1->len1\n[Annotation _Out_(byteCount({parameter 3}))]\n\n\nValues of variables:\n((s1->S1::ctx1)->Context::len1) = ((s1->S1::ctx1)->Context::len1)`43\nPointer (s1->S1::ctx1) is at offset 0 bytes from the start of (s1->S1::ctx1)\nPointer pData3 is at offset 0 bytes from the start of the buffer\nPointer s1 is at offset 0 bytes from the start of s1\n\nwhere\noffset(pData3)`43 == 0\n((s1->S1::ctx1)->Context::len1)`43 >= 1\n((s1->S1::ctx2)->Context::len1)`43 >= 1\n\nOverrun access occurs when\n((s1->S1::ctx1)->Context::len1)`43 >= ((s1->S1::ctx2)->Context::len1)`43 + 1\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/somepath/test079.cpp"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 11
                }
              },
              "fullyQualifiedLogicalName": "bar",
              "properties": {
                "funcline": "43"
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "step": 1,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/somepath/test079.cpp"
                          },
                          "region": {
                            "startLine": 43,
                            "startColumn": 6
                          }
                        }
                      }
                    },
                    {
                      "step": 2,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/somepath/test079.cpp"
                          },
                          "region": {
                            "startLine": 48,
                            "startColumn": 11
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "26017",
          "message": {
            "text": "Potential read overflow using expression '(const void *)(& this->x)'\nBuffer access is apparently unbounded by the buffer size.  \n\nIn particular: (this->C::n)`65 is not constrained by any constant\n\nBuffer accessed is C::x\nBuffer is of length 100 bytes [size of field]\nAccessing (this->C::n)`65 + 1 bytes starting at byte offset 0\nAnnotation on function memcpy requires that {parameter 2} is of length >= {parameter 3} bytes\n  where {parameter 2} is (const void *)(& this->x); {parameter 3} is (size_t)(this->n + 1)\n[Annotation _In_(byteCount({parameter 3}))]\n\n\nValues of variables:\n(this->C::n) = (this->C::n)`65\nPointer this is at offset 0 bytes from the start of this\n\nwhere\n(this->C::n)`65 >= 1\n\nOverrun access occurs when\n(this->C::n)`65 >= 100\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/somepath/test079.cpp"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 11
                }
              },
              "fullyQualifiedLogicalName": "C::f",
              "properties": {
                "funcline": "65"
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "step": 1,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/somepath/test079.cpp"
                          },
                          "region": {
                            "startLine": 65,
                            "startColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "step": 2,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/somepath/test079.cpp"
                          },
                          "region": {
                            "startLine": 67,
                            "startColumn": 11
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "26000",
          "message": {
            "text": "Overflow using expression '(void *)a'\nBuffer a is a parameter to this function declared on line 65\nBuffer is of length offset(a)`65 + (this->C::n)`65 bytes [from annotation SAL_writableTo(elementCount(this->n)) at c:\\somepath\\test079.cpp(62)]\nAccessing (this->C::n)`65 + 1 bytes starting at byte offset 0\nAnnotation on function memcpy requires that {parameter 1} is of length >= {parameter 3} bytes\n  where {parameter 1} is (void *)a; {parameter 3} is (size_t)(this->n + 1)\n[Annotation _Out_(byteCount({parameter 3}))]\n\n\nValues of variables:\n(this->C::n) = (this->C::n)`65\nPointer a is at offset 0 bytes from the start of the buffer\nPointer this is at offset 0 bytes from the start of this\n\nwhere\noffset(a)`65 == 0\n(this->C::n)`65 >= 1\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/somepath/test079.cpp"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 11
                }
              },
              "fullyQualifiedLogicalName": "C::f",
              "properties": {
                "funcline": "65"
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "step": 1,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/somepath/test079.cpp"
                          },
                          "region": {
                            "startLine": 65,
                            "startColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "step": 2,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/somepath/test079.cpp"
                          },
                          "region": {
                            "startLine": 67,
                            "startColumn": 11
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "26000",
          "message": {
            "text": "Overflow using expression 'buf[p->elts]'\nBuffer buf is a parameter to this function declared on line 70\nBuffer is of length offset(buf)`70 + (p->S::elts)`70 bytes [from annotation SAL_writableTo(elementCount(p->elts)) at c:\\somepath\\test079.cpp(70)]\nAccessing the byte at byte offset (p->S::elts)`70\n\nValues of variables:\n(p->S::elts) = (p->S::elts)`70\nPointer buf is at offset 0 bytes from the start of the buffer\nPointer p is at offset 0 bytes from the start of p\n\nwhere\noffset(buf)`70 == 0\n(p->S::elts)`70 >= 1\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/somepath/test079.cpp"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 17
                }
              },
              "fullyQualifiedLogicalName": "fieldSameAsParam1",
              "properties": {
                "funcline": "70"
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "step": 1,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/somepath/test079.cpp"
                          },
                          "region": {
                            "startLine": 70,
                            "startColumn": 6
                          }
                        }
                      }
                    },
                    {
                      "step": 2,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/somepath/test079.cpp"
                          },
                          "region": {
                            "startLine": 72,
                            "startColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "26015",
          "message": {
            "text": "Potential overflow using expression '& cC1'\nBuffer access is apparently unbounded by the buffer size.  \n\nIn particular: c1.C::n`117 is not constrained by any constant\n\nBuffer accessed is cC1\nBuffer is of length 100 bytes [size of variable]\nAccessing c1.C::n`117 bytes starting at byte offset 0\nAnnotation on function C::f requires that {parameter 2} is of length >= {parameter 1}->n elements (1 bytes/element)\n  where {parameter 2} is & cC1; {parameter 1} is & c1\n[Annotation SAL_writableTo(elementCount({parameter 1}->n)) at c:\\somepath\\test079.cpp(62)]\n\n\nValues of variables:\nc1.C::n = c1.C::n`117\n\nOverrun access occurs when\nc1.C::n`117 >= 101\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///c:/somepath/test079.cpp"
                },
                "region": {
                  "startLine": 117,
                  "startColumn": 9
                }
              },
              "fullyQualifiedLogicalName": "main",
              "properties": {
                "funcline": "84"
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "step": 1,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/somepath/test079.cpp"
                          },
                          "region": {
                            "startLine": 84,
                            "startColumn": 6
                          }
                        }
                      }
                    },
                    {
                      "step": 2,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/somepath/test079.cpp"
                          },
                          "region": {
                            "startLine": 88,
                            "startColumn": 7
                          }
                        }
                      }
                    },
                    {
                      "step": 3,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/somepath/test079.cpp"
                          },
                          "region": {
                            "startLine": 89,
                            "startColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "step": 4,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/somepath/test079.cpp"
                          },
                          "region": {
                            "startLine": 90,
                            "startColumn": 6
                          }
                        }
                      }
                    },
                    {
                      "step": 5,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/somepath/test079.cpp"
                          },
                          "region": {
                            "startLine": 92,
                            "startColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "step": 6,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/somepath/test079.cpp"
                          },
                          "region": {
                            "startLine": 92,
                            "startColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "step": 7,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/somepath/test079.cpp"
                          },
                          "region": {
                            "startLine": 93,
                            "startColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "step": 8,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/somepath/test079.cpp"
                          },
                          "region": {
                            "startLine": 93,
                            "startColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "step": 9,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/somepath/test079.cpp"
                          },
                          "region": {
                            "startLine": 94,
                            "startColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "step": 10,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/somepath/test079.cpp"
                          },
                          "region": {
                            "startLine": 95,
                            "startColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "step": 11,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/somepath/test079.cpp"
                          },
                          "region": {
                            "startLine": 97,
                            "startColumn": 8
                          }
                        }
                      }
                    },
                    {
                      "step": 12,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/somepath/test079.cpp"
                          },
                          "region": {
                            "startLine": 98,
                            "startColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "step": 13,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/somepath/test079.cpp"
                          },
                          "region": {
                            "startLine": 99,
                            "startColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "step": 14,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/somepath/test079.cpp"
                          },
                          "region": {
                            "startLine": 100,
                            "startColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "step": 15,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/somepath/test079.cpp"
                          },
                          "region": {
                            "startLine": 101,
                            "startColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "step": 16,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/somepath/test079.cpp"
                          },
                          "region": {
                            "startLine": 103,
                            "startColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "step": 17,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/somepath/test079.cpp"
                          },
                          "region": {
                            "startLine": 104,
                            "startColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "step": 18,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/somepath/test079.cpp"
                          },
                          "region": {
                            "startLine": 105,
                            "startColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "step": 19,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/somepath/test079.cpp"
                          },
                          "region": {
                            "startLine": 106,
                            "startColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "step": 20,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/somepath/test079.cpp"
                          },
                          "region": {
                            "startLine": 107,
                            "startColumn": 8
                          }
                        }
                      }
                    },
                    {
                      "step": 21,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/somepath/test079.cpp"
                          },
                          "region": {
                            "startLine": 109,
                            "startColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "step": 22,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/somepath/test079.cpp"
                          },
                          "region": {
                            "startLine": 110,
                            "startColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "step": 23,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/somepath/test079.cpp"
                          },
                          "region": {
                            "startLine": 111,
                            "startColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "step": 24,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/somepath/test079.cpp"
                          },
                          "region": {
                            "startLine": 112,
                            "startColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "step": 25,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/somepath/test079.cpp"
                          },
                          "region": {
                            "startLine": 113,
                            "startColumn": 8
                          }
                        }
                      }
                    },
                    {
                      "step": 26,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/somepath/test079.cpp"
                          },
                          "region": {
                            "startLine": 115,
                            "startColumn": 7
                          }
                        }
                      }
                    },
                    {
                      "step": 27,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/somepath/test079.cpp"
                          },
                          "region": {
                            "startLine": 115,
                            "startColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "step": 28,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/somepath/test079.cpp"
                          },
                          "region": {
                            "startLine": 116,
                            "startColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "step": 29,
                      "location": {
                        "physicalLocation": {
                          "fileLocation": {
                            "uri": "file:///c:/somepath/test079.cpp"
                          },
                          "region": {
                            "startLine": 117,
                            "startColumn": 9
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}