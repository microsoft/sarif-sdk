<?xml version='1.0' encoding='UTF-8'?>
<DEFECTS><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>23</LINE><COLUMN>28</COLUMN></SFA><DEFECTCODE>26035</DEFECTCODE><DESCRIPTION>Possible precondition violation due to failure to null terminate string 'this'
PREFAST_NEWLINE
Accessing unannotated buffer (this-&gt;Class::buffer)
PREFAST_NEWLINE
Assumed __inout annotation on function Class::OtherMemberFunc requires that {parameter 1}-&gt;buffer is null terminated
PREFAST_NEWLINE
  where {parameter 1}-&gt;buffer is this [Field annotation SAL_nullTerminated at c:\somepath\test163.cpp(11)]
PREFAST_NEWLINE

PREFAST_NEWLINE
 when function Class::OtherMemberFunc called at line 29 fails.
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>Class::MemberFunc</FUNCTION><DECORATED>?MemberFunc@Class@@QAEJXZ</DECORATED><FUNCLINE>17</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>17</LINE><COLUMN>25</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>19</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>19</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>21</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>23</LINE><COLUMN>28</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>23</LINE><COLUMN>11</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>25</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>27</LINE><COLUMN>24</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>27</LINE><COLUMN>24</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>21</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>23</LINE><COLUMN>28</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>23</LINE><COLUMN>11</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>25</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>27</LINE><COLUMN>24</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>27</LINE><COLUMN>24</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>29</LINE><COLUMN>36</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>29</LINE><COLUMN>19</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>21</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>23</LINE><COLUMN>28</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>23</LINE><COLUMN>28</COLUMN></SFA><DEFECTCODE>26018</DEFECTCODE><DESCRIPTION>Potential overflow of null terminated buffer using expression 'this'
PREFAST_NEWLINE
Buffer access is apparently unbounded by the buffer size.  
PREFAST_NEWLINE

PREFAST_NEWLINE
In particular: offset((this-&gt;Class::buffer))`23a is not constrained by (this-&gt;Class::bufferSize)`29
PREFAST_NEWLINE
offset((this-&gt;Class::buffer))`23a is not constrained by nullpos((this-&gt;Class::buffer)'29)`29
PREFAST_NEWLINE

PREFAST_NEWLINE
Buffer (this-&gt;Class::buffer) created during call to Class::OtherMemberFunc on line 29
PREFAST_NEWLINE
Buffer lengths are from an assumed __inout annotation on the parameter
PREFAST_NEWLINE
Buffer is of length (this-&gt;Class::bufferSize)`29 bytes [from field annotation SAL_writableTo(byteCount({parameter 1}-&gt;bufferSize)) at c:\somepath\test163.cpp(11) on function Class::OtherMemberFunc called at line 29] OR
PREFAST_NEWLINE
  nullpos((this-&gt;Class::buffer)'29)`29 bytes [length of zero terminated string]
PREFAST_NEWLINE
Accessing (this-&gt;Class::bufferSize)`21 bytes starting at byte offset 0
PREFAST_NEWLINE
Assumed __inout annotation on function Class::OtherMemberFunc requires that {parameter 1}-&gt;buffer is of length &gt;= {parameter 1}-&gt;bufferSize bytes
PREFAST_NEWLINE
  where {parameter 1}-&gt;buffer is this; {parameter 1} is this
PREFAST_NEWLINE
[Field annotation SAL_writableTo(byteCount({parameter 1}-&gt;bufferSize)) at c:\somepath\test163.cpp(11)]
PREFAST_NEWLINE

PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
(this-&gt;Class::bufferSize) = (this-&gt;Class::bufferSize)`21
PREFAST_NEWLINE
Pointer (this-&gt;Class::buffer) is at offset 0 bytes from the start of the buffer
PREFAST_NEWLINE

PREFAST_NEWLINE
where
PREFAST_NEWLINE
offset((this-&gt;Class::buffer))`23a == 0
PREFAST_NEWLINE
(this-&gt;Class::bufferSize)`21 &gt;= 0
PREFAST_NEWLINE
(this-&gt;Class::bufferSize)`29 &gt;= 2
PREFAST_NEWLINE
nullpos((this-&gt;Class::buffer)'29)`29 &gt;= 0
PREFAST_NEWLINE

PREFAST_NEWLINE
Overrun access occurs when
PREFAST_NEWLINE
(this-&gt;Class::bufferSize)`21 &gt;= (this-&gt;Class::bufferSize)`29 + 1
PREFAST_NEWLINE
(this-&gt;Class::bufferSize)`21 &gt;= nullpos((this-&gt;Class::buffer)'29)`29 + 1
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>Class::MemberFunc</FUNCTION><DECORATED>?MemberFunc@Class@@QAEJXZ</DECORATED><FUNCLINE>17</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>17</LINE><COLUMN>25</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>19</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>19</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>21</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>23</LINE><COLUMN>28</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>23</LINE><COLUMN>11</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>25</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>27</LINE><COLUMN>24</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>27</LINE><COLUMN>24</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>21</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>23</LINE><COLUMN>28</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>23</LINE><COLUMN>11</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>25</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>27</LINE><COLUMN>24</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>27</LINE><COLUMN>24</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>29</LINE><COLUMN>36</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>29</LINE><COLUMN>19</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>21</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>23</LINE><COLUMN>28</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>23</LINE><COLUMN>28</COLUMN></SFA><DEFECTCODE>26018</DEFECTCODE><DESCRIPTION>Potential overflow of null terminated buffer using expression 'this'
PREFAST_NEWLINE
Buffer access is apparently unbounded by the buffer size.  
PREFAST_NEWLINE

PREFAST_NEWLINE
In particular: offset((this-&gt;Class::buffer))`29a is not constrained by (this-&gt;Class::bufferSize)`23
PREFAST_NEWLINE
offset((this-&gt;Class::buffer))`29a is not constrained by nullpos((this-&gt;Class::buffer)'23)`23
PREFAST_NEWLINE

PREFAST_NEWLINE
Buffer (this-&gt;Class::buffer) created during call to Class::OtherMemberFunc on line 23
PREFAST_NEWLINE
Buffer lengths are from an assumed __inout annotation on the parameter
PREFAST_NEWLINE
Buffer is of length (this-&gt;Class::bufferSize)`23 bytes [from field annotation SAL_writableTo(byteCount({parameter 1}-&gt;bufferSize)) at c:\somepath\test163.cpp(11) on function Class::OtherMemberFunc called at line 23] OR
PREFAST_NEWLINE
  nullpos((this-&gt;Class::buffer)'23)`23 bytes [length of zero terminated string]
PREFAST_NEWLINE
Accessing (this-&gt;Class::bufferSize)`21 bytes starting at byte offset 0
PREFAST_NEWLINE
Assumed __inout annotation on function Class::OtherMemberFunc requires that {parameter 1}-&gt;buffer is of length &gt;= {parameter 1}-&gt;bufferSize bytes
PREFAST_NEWLINE
  where {parameter 1}-&gt;buffer is this; {parameter 1} is this
PREFAST_NEWLINE
[Field annotation SAL_writableTo(byteCount({parameter 1}-&gt;bufferSize)) at c:\somepath\test163.cpp(11)]
PREFAST_NEWLINE

PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
(this-&gt;Class::bufferSize) = (this-&gt;Class::bufferSize)`21
PREFAST_NEWLINE
Pointer (this-&gt;Class::buffer) is at offset 0 bytes from the start of the buffer
PREFAST_NEWLINE

PREFAST_NEWLINE
where
PREFAST_NEWLINE
offset((this-&gt;Class::buffer))`29a == 0
PREFAST_NEWLINE
(this-&gt;Class::bufferSize)`21 &gt;= 0
PREFAST_NEWLINE
(this-&gt;Class::bufferSize)`23 &gt;= 2
PREFAST_NEWLINE
nullpos((this-&gt;Class::buffer)'23)`23 &gt;= 0
PREFAST_NEWLINE

PREFAST_NEWLINE
Overrun access occurs when
PREFAST_NEWLINE
(this-&gt;Class::bufferSize)`21 &gt;= (this-&gt;Class::bufferSize)`23 + 1
PREFAST_NEWLINE
(this-&gt;Class::bufferSize)`21 &gt;= nullpos((this-&gt;Class::buffer)'23)`23 + 1
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>Class::MemberFunc</FUNCTION><DECORATED>?MemberFunc@Class@@QAEJXZ</DECORATED><FUNCLINE>17</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>17</LINE><COLUMN>25</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>19</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>19</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>21</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>23</LINE><COLUMN>28</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>23</LINE><COLUMN>11</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>25</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>27</LINE><COLUMN>24</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>27</LINE><COLUMN>24</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>29</LINE><COLUMN>36</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>29</LINE><COLUMN>19</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>21</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>23</LINE><COLUMN>28</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>23</LINE><COLUMN>11</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>25</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>21</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>23</LINE><COLUMN>28</COLUMN></SFA></PATH></DEFECT><DEFECT><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>23</LINE><COLUMN>28</COLUMN></SFA><DEFECTCODE>26003</DEFECTCODE><DESCRIPTION>Writing to buffer '(this-&gt;Class::buffer)' of unspecified length.  Please annotate.
PREFAST_NEWLINE

PREFAST_NEWLINE
If we assume that the buffer has single element in length, then the checker would report:
PREFAST_NEWLINE
Potential overflow using expression 'this'
PREFAST_NEWLINE
Accessing unannotated buffer (this-&gt;Class::buffer)
PREFAST_NEWLINE
Buffer is of length 2 bytes [assumed because the buffer is unannotated]
PREFAST_NEWLINE
Accessing (this-&gt;Class::bufferSize)`21 bytes starting at byte offset 0
PREFAST_NEWLINE
Assumed __inout annotation on function Class::OtherMemberFunc requires that {parameter 1}-&gt;buffer is of length &gt;= {parameter 1}-&gt;bufferSize bytes
PREFAST_NEWLINE
  where {parameter 1}-&gt;buffer is this; {parameter 1} is this
PREFAST_NEWLINE
[Field annotation SAL_writableTo(byteCount({parameter 1}-&gt;bufferSize)) at c:\somepath\test163.cpp(11)]
PREFAST_NEWLINE

PREFAST_NEWLINE

PREFAST_NEWLINE
 when function Class::OtherMemberFunc called at line 23 fails.
PREFAST_NEWLINE

PREFAST_NEWLINE
Values of variables:
PREFAST_NEWLINE
(this-&gt;Class::bufferSize) = (this-&gt;Class::bufferSize)`21
PREFAST_NEWLINE
Pointer (this-&gt;Class::buffer) is at offset 0 bytes from the start of the buffer
PREFAST_NEWLINE

PREFAST_NEWLINE
where
PREFAST_NEWLINE
offset((this-&gt;Class::buffer))`23a == 0
PREFAST_NEWLINE
(this-&gt;Class::bufferSize)`21 &gt;= 0
PREFAST_NEWLINE
nullpos((this-&gt;Class::buffer))`23 &gt;= 0
PREFAST_NEWLINE

PREFAST_NEWLINE
Overrun access occurs when
PREFAST_NEWLINE
(this-&gt;Class::bufferSize)`21 &gt;= 3
PREFAST_NEWLINE
(this-&gt;Class::bufferSize)`21 &gt;= nullpos((this-&gt;Class::buffer))`23 + 1
PREFAST_NEWLINE
</DESCRIPTION><FUNCTION>Class::MemberFunc</FUNCTION><DECORATED>?MemberFunc@Class@@QAEJXZ</DECORATED><FUNCLINE>17</FUNCLINE><PATH><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>17</LINE><COLUMN>25</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>19</LINE><COLUMN>12</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>19</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>21</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>23</LINE><COLUMN>28</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>23</LINE><COLUMN>11</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>25</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>27</LINE><COLUMN>24</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>27</LINE><COLUMN>24</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>21</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>23</LINE><COLUMN>28</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>23</LINE><COLUMN>11</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>25</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>27</LINE><COLUMN>24</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>27</LINE><COLUMN>24</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>29</LINE><COLUMN>36</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>29</LINE><COLUMN>19</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>21</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>23</LINE><COLUMN>28</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>23</LINE><COLUMN>11</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>25</LINE><COLUMN>17</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>21</LINE><COLUMN>16</COLUMN></SFA><SFA><FILEPATH>c:\somepath\</FILEPATH><FILENAME>test163.cpp</FILENAME><LINE>23</LINE><COLUMN>28</COLUMN></SFA></PATH></DEFECT></DEFECTS>