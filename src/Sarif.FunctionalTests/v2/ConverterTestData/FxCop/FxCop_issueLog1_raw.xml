<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft\fxcop 14.0 for sdl 7.0\Xml\FxCopReport.xsl"?>
<FxCopReport Version="14.0">
 <Namespaces>
  <Namespace Name="FxCopUnsafeXml">
   <Messages>
    <Message TypeName="DeclareTypesInMicrosoftOrSystemNamespace" Category="Microsoft.MSInternal" CheckId="CA904" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="Breaking">
     <Issue Certainty="75" Level="Error">Redefine the types in namespace 'FxCopUnsafeXml' in the Microsoft or System namespace. Public types that will never ship externally can be defined in the MS namespace. Consider disabling this rule when analyzing code that does not ship externally.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="SecurityCryptographyRuleTests">
   <Messages>
    <Message TypeName="DeclareTypesInMicrosoftOrSystemNamespace" Category="Microsoft.MSInternal" CheckId="CA904" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="Breaking">
     <Issue Certainty="75" Level="Error">Redefine the types in namespace 'SecurityCryptographyRuleTests' in the Microsoft or System namespace. Public types that will never ship externally can be defined in the MS namespace. Consider disabling this rule when analyzing code that does not ship externally.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="SecurityXmlRuleTests">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'SecurityXmlRuleTests' with another namespace.</Issue>
    </Message>
    <Message TypeName="DeclareTypesInMicrosoftOrSystemNamespace" Category="Microsoft.MSInternal" CheckId="CA904" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="Breaking">
     <Issue Certainty="75" Level="Error">Redefine the types in namespace 'SecurityXmlRuleTests' in the Microsoft or System namespace. Public types that will never ship externally can be defined in the MS namespace. Consider disabling this rule when analyzing code that does not ship externally.</Issue>
    </Message>
   </Messages>
  </Namespace>
 </Namespaces>
 <Targets>
  <Target Name="C:\MSECTools\SecDevMain\src\Shared\OneMicrosoftStaticAnalysisResults\Sarif.Test.Functional\SarifConverterTestData\FxCop\src\SecurityCryptographyRuleTests.dll">
   <Modules>
    <Module Name="securitycryptographyruletests.dll">
     <Messages>
      <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">Mark 'SecurityCryptographyRuleTests.dll' with CLSCompliant(true) because it exposes externally visible types.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="SecurityCryptographyRuleTests">
       <Types>
        <Type Name="DESCannotBeUsed" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="DES" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'DES' in type name 'DESCannotBeUsed' by changing it to 'Des'.</Issue>
          </Message>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="Breaking">
           <Issue Name="CSharp2_0" Certainty="90" Level="Error">Because type 'DESCannotBeUsed' contains only 'static' members, mark it as 'static' to prevent the compiler from adding a default public constructor.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#EncryptData(System.String,System.String,System.Byte[],System.Byte[])" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="DESCannotBeUsed.cs" Line="14">'DESCannotBeUsed.EncryptData(string, string, byte[], byte[])' appears to have no upstream public or protected callers.</Issue>
            </Message>
            <Message TypeName="DESCannotBeUsed" Category="Microsoft.Security.Cryptography" CheckId="CA5351" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="100" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="DESCannotBeUsed.cs" Line="26">'DESCannotBeUsed.EncryptData(string, string, byte[], byte[])' calls into an instance of the System.Security.Cryptography.DESCryptoServiceProvider type, which implements a cryptographically insecure encryption algorithm that is banned by the SDL. Replace this usage with an AES encryption algorithm (AES-256, AES-192 and AES-128 are acceptable) with a key length greater than or equal to 128 bits.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="DESCannotBeUsed.cs" Line="16">In method 'DESCannotBeUsed.EncryptData(string, string, byte[], byte[])', object 'fin' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'fin' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="DESCannotBeUsed.cs" Line="17">In method 'DESCannotBeUsed.EncryptData(string, string, byte[], byte[])', object 'fout' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'fout' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="DESCannotBeUsed.cs" Line="26">In method 'DESCannotBeUsed.EncryptData(string, string, byte[], byte[])', call System.IDisposable.Dispose on object 'des' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="DESCannotBeUsed.cs" Line="41">Object 'fout' can be disposed more than once in method 'DESCannotBeUsed.EncryptData(string, string, byte[], byte[])'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 41</Issue>
            </Message>
            <Message Id="System.Console.WriteLine(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="DESCannotBeUsed.cs" Line="29">Method 'DESCannotBeUsed.EncryptData(string, string, byte[], byte[])' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "Encrypting...".</Issue>
            </Message>
            <Message Id="System.Console.WriteLine(System.String,System.Object)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="DESCannotBeUsed.cs" Line="37">Method 'DESCannotBeUsed.EncryptData(string, string, byte[], byte[])' passes a literal string as parameter 'format' of a call to 'Console.WriteLine(string, object)'. Retrieve the following string(s) from a resource table instead: "{0} bytes processed".</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DSACannotBeUsed" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="DSA" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'DSA' in type name 'DSACannotBeUsed' by changing it to 'Dsa'.</Issue>
          </Message>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="Breaking">
           <Issue Name="CSharp2_0" Certainty="90" Level="Error">Because type 'DSACannotBeUsed' contains only 'static' members, mark it as 'static' to prevent the compiler from adding a default public constructor.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#DSASignHash(System.Byte[],System.Security.Cryptography.DSAParameters,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DSACannotBeUsed" Category="Microsoft.Security.Cryptography" CheckId="CA5356" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="100" Level="CriticalWarning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="DSACannotBeUsed.cs" Line="69">'DSACannotBeUsed.DSASignHash(byte[], DSAParameters, string)' calls into an instance of the System.Security.Cryptography.DSA type, which implements a cryptographically insecure signature-creation mechanism that is banned by the SDL. Replace this usage with RSA or Diffie-Hellman with a key length greater than or equal to 2048-bits, or ECDSA or ECDH with a key length greater than or equal 256 bits.</Issue>
             <Issue Certainty="100" Level="CriticalWarning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="DSACannotBeUsed.cs" Line="73">'DSACannotBeUsed.DSASignHash(byte[], DSAParameters, string)' calls into an instance of the System.Security.Cryptography.DSASignatureFormatter type, which implements a cryptographically insecure signature-creation mechanism that is banned by the SDL. Replace this usage with RSA or Diffie-Hellman with a key length greater than or equal to 2048-bits, or ECDSA or ECDH with a key length greater than or equal 256 bits.</Issue>
            </Message>
            <Message Id="DSA" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="DSACannotBeUsed.cs" Line="58">Correct the casing of 'DSA' in member name 'DSACannotBeUsed.DSASignHash(byte[], DSAParameters, string)' by changing it to 'Dsa'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="DSACannotBeUsed.cs" Line="58">In member 'DSACannotBeUsed.DSASignHash(byte[], DSAParameters, string)', correct the casing of 'DSA' in parameter name 'DSAKeyInfo' by changing it to 'dsa'.</Issue>
            </Message>
            <Message Id="Hash" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="DSACannotBeUsed.cs" Line="58">In member 'DSACannotBeUsed.DSASignHash(byte[], DSAParameters, string)', correct the casing of 'Hash' in parameter name 'HashAlg' by changing it to 'hash'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="DSACannotBeUsed.cs" Line="58">In member 'DSACannotBeUsed.DSASignHash(byte[], DSAParameters, string)', correct the casing of 'Hash' in parameter name 'HashToSign' by changing it to 'hash'.</Issue>
            </Message>
            <Message Id="Alg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="DSACannotBeUsed.cs" Line="58">In method 'DSACannotBeUsed.DSASignHash(byte[], DSAParameters, string)', correct the spelling of 'Alg' in parameter name 'HashAlg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DSAVerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.DSAParameters,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DSA" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="DSACannotBeUsed.cs" Line="92">Correct the casing of 'DSA' in member name 'DSACannotBeUsed.DSAVerifyHash(byte[], byte[], DSAParameters, string)' by changing it to 'Dsa'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="DSACannotBeUsed.cs" Line="92">In member 'DSACannotBeUsed.DSAVerifyHash(byte[], byte[], DSAParameters, string)', correct the casing of 'DSA' in parameter name 'DSAKeyInfo' by changing it to 'dsa'.</Issue>
            </Message>
            <Message Id="Hash" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="DSACannotBeUsed.cs" Line="92">In member 'DSACannotBeUsed.DSAVerifyHash(byte[], byte[], DSAParameters, string)', correct the casing of 'Hash' in parameter name 'HashAlg' by changing it to 'hash'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="DSACannotBeUsed.cs" Line="92">In member 'DSACannotBeUsed.DSAVerifyHash(byte[], byte[], DSAParameters, string)', correct the casing of 'Hash' in parameter name 'HashValue' by changing it to 'hash'.</Issue>
            </Message>
            <Message Id="Signed" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="DSACannotBeUsed.cs" Line="92">In member 'DSACannotBeUsed.DSAVerifyHash(byte[], byte[], DSAParameters, string)', correct the casing of 'Signed' in parameter name 'SignedHashValue' by changing it to 'signed'.</Issue>
            </Message>
            <Message Id="Alg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="DSACannotBeUsed.cs" Line="92">In method 'DSACannotBeUsed.DSAVerifyHash(byte[], byte[], DSAParameters, string)', correct the spelling of 'Alg' in parameter name 'HashAlg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Main()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Console.WriteLine(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="DSACannotBeUsed.cs" Line="47">Method 'DSACannotBeUsed.Main()' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "The hash value was not verified.".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="DSACannotBeUsed.cs" Line="43">Method 'DSACannotBeUsed.Main()' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "The hash value was verified.".</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MD5CannotBeUsed" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="Breaking">
           <Issue Name="CSharp2_0" Certainty="90" Level="Error">Because type 'MD5CannotBeUsed' contains only 'static' members, mark it as 'static' to prevent the compiler from adding a default public constructor.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#GetMd5Hash(System.Security.Cryptography.MD5,System.String)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="MD5CannotBeUsed.cs" Line="35">'MD5CannotBeUsed.GetMd5Hash(MD5, string)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Main(System.String[])" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="MD5CannotBeUsed.cs" Line="14">'MD5CannotBeUsed.Main(string[])' appears to have no upstream public or protected callers.</Issue>
            </Message>
            <Message Id="System.Console.WriteLine(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="MD5CannotBeUsed.cs" Line="20">Method 'MD5CannotBeUsed.Main(string[])' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "The MD5 hash of , Hello World!,  is: , .".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="MD5CannotBeUsed.cs" Line="30">Method 'MD5CannotBeUsed.Main(string[])' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "The hashes are not same.".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="MD5CannotBeUsed.cs" Line="26">Method 'MD5CannotBeUsed.Main(string[])' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "The hashes are the same.".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="MD5CannotBeUsed.cs" Line="22">Method 'MD5CannotBeUsed.Main(string[])' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "Verifying the hash...".</Issue>
            </Message>
            <Message TypeName="MD5CannotBeUsed" Category="Microsoft.Security.Cryptography" CheckId="CA5350" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="100" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="MD5CannotBeUsed.cs" Line="16">'MD5CannotBeUsed.Main(string[])' calls into an instance of the System.Security.Cryptography.MD5 type, which implements a cryptographically insecure hashing function. Hash collisions are computationally feasible for the MD5 and HMACMD5 algorithms and are banned by the SDL. Replace this usage with a SHA-2 family hash algorithm (SHA512, SHA384, SHA256).</Issue>
            </Message>
            <Message Id="args" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="MD5CannotBeUsed.cs" Line="14">Parameter 'args' of 'MD5CannotBeUsed.Main(string[])' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#VerifyMd5Hash(System.Security.Cryptography.MD5,System.String,System.String)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="MD5CannotBeUsed.cs" Line="57">'MD5CannotBeUsed.VerifyMd5Hash(MD5, string, string)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RC2CannotBeUsed" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="Breaking">
           <Issue Name="CSharp2_0" Certainty="90" Level="Error">Because type 'RC2CannotBeUsed' contains only 'static' members, mark it as 'static' to prevent the compiler from adding a default public constructor.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#DecryptBytes(System.Security.Cryptography.SymmetricAlgorithm,System.Byte[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Alg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="RC2CannotBeUsed.cs" Line="48">In method 'RC2CannotBeUsed.DecryptBytes(SymmetricAlgorithm, byte[])', correct the spelling of 'Alg' in parameter name 'symAlg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="sym" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="RC2CannotBeUsed.cs" Line="48">In method 'RC2CannotBeUsed.DecryptBytes(SymmetricAlgorithm, byte[])', correct the spelling of 'sym' in parameter name 'symAlg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="bytes" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="RC2CannotBeUsed.cs" Line="48">In member 'RC2CannotBeUsed.DecryptBytes(SymmetricAlgorithm, byte[])', consider replacing the data type identifier 'Bytes' in parameter name 'inBytes' with a more generic term, such as 'value'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="RC2CannotBeUsed.cs" Line="49">In externally visible method 'RC2CannotBeUsed.DecryptBytes(SymmetricAlgorithm, byte[])', validate parameter 'symAlg' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="RC2CannotBeUsed.cs" Line="50">In externally visible method 'RC2CannotBeUsed.DecryptBytes(SymmetricAlgorithm, byte[])', validate parameter 'inBytes' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EncryptString(System.Security.Cryptography.SymmetricAlgorithm,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Alg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="RC2CannotBeUsed.cs" Line="39">In method 'RC2CannotBeUsed.EncryptString(SymmetricAlgorithm, string)', correct the spelling of 'Alg' in parameter name 'symAlg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="sym" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="RC2CannotBeUsed.cs" Line="39">In method 'RC2CannotBeUsed.EncryptString(SymmetricAlgorithm, string)', correct the spelling of 'sym' in parameter name 'symAlg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="RC2CannotBeUsed.cs" Line="39">In member 'RC2CannotBeUsed.EncryptString(SymmetricAlgorithm, string)', consider replacing the data type identifier 'String' in parameter name 'inString' with a more generic term, such as 'value'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="RC2CannotBeUsed.cs" Line="41">In externally visible method 'RC2CannotBeUsed.EncryptString(SymmetricAlgorithm, string)', validate parameter 'symAlg' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Main()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="RC2CannotBeUsed.cs" Line="18">In method 'RC2CannotBeUsed.Main()', call System.IDisposable.Dispose on object 'aesCSP' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Console.WriteLine(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="RC2CannotBeUsed.cs" Line="31">Method 'RC2CannotBeUsed.Main()' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "Encrypted Quote:\n".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="RC2CannotBeUsed.cs" Line="34">Method 'RC2CannotBeUsed.Main()' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "\nDecrypted Quote:\n".</Issue>
            </Message>
            <Message TypeName="RC2CannotBeUsed" Category="Microsoft.Security.Cryptography" CheckId="CA5352" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="100" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="RC2CannotBeUsed.cs" Line="18">'RC2CannotBeUsed.Main()' calls into an instance of the SecurityCryptographyRuleTests.RC2Impl type, which implements a cryptographically insecure encryption algorithm that is banned by the SDL. Replace this usage with an AES encryption algorithm (AES-256, AES-192 and AES-128 are acceptable) with a key length greater than or equal to 128 bits.</Issue>
             <Issue Certainty="100" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="RC2CannotBeUsed.cs" Line="24">'RC2CannotBeUsed.Main()' calls into an instance of the System.Security.Cryptography.RC2CryptoServiceProvider type, which implements a cryptographically insecure encryption algorithm that is banned by the SDL. Replace this usage with an AES encryption algorithm (AES-256, AES-192 and AES-128 are acceptable) with a key length greater than or equal to 128 bits.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RC2Impl" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#.ctor()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RC2CannotBeUsed" Category="Microsoft.Security.Cryptography" CheckId="CA5352" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="100" Level="Error">'RC2Impl.RC2Impl()' calls into an instance of the System.Security.Cryptography.RC2 type, which implements a cryptographically insecure encryption algorithm that is banned by the SDL. Replace this usage with an AES encryption algorithm (AES-256, AES-192 and AES-128 are acceptable) with a key length greater than or equal to 128 bits.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RijndaelCannotBeUsed" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="Breaking">
           <Issue Name="CSharp2_0" Certainty="90" Level="Error">Because type 'RijndaelCannotBeUsed' contains only 'static' members, mark it as 'static' to prevent the compiler from adding a default public constructor.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#DecryptStringFromBytes(System.Byte[],System.Byte[],System.Byte[])" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="RijndaelCannotBeUsed.cs" Line="117">Object 'csDecrypt' can be disposed more than once in method 'RijndaelCannotBeUsed.DecryptStringFromBytes(byte[], byte[], byte[])'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 117</Issue>
             <Issue Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="RijndaelCannotBeUsed.cs" Line="117">Object 'msDecrypt' can be disposed more than once in method 'RijndaelCannotBeUsed.DecryptStringFromBytes(byte[], byte[], byte[])'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 117, 118</Issue>
            </Message>
            <Message TypeName="RijndaelCannotBeUsed" Category="Microsoft.Security.Cryptography" CheckId="CA5357" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="100" Level="CriticalWarning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="RijndaelCannotBeUsed.cs" Line="97">'RijndaelCannotBeUsed.DecryptStringFromBytes(byte[], byte[], byte[])' calls into an instance of the System.Security.Cryptography.RijndaelManaged type, which implements a cryptographically insecure encryption algorithm that is banned by the SDL. Replace this usage with an AES encryption algorithm (AES-256, AES-192 and AES-128 are acceptable) with a key length greater than or equal to 128 bits.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EncryptStringToBytes(System.String,System.Byte[],System.Byte[])" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="RijndaelCannotBeUsed.cs" Line="73">Object 'csEncrypt' can be disposed more than once in method 'RijndaelCannotBeUsed.EncryptStringToBytes(string, byte[], byte[])'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 73</Issue>
             <Issue Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="RijndaelCannotBeUsed.cs" Line="73">Object 'msEncrypt' can be disposed more than once in method 'RijndaelCannotBeUsed.EncryptStringToBytes(string, byte[], byte[])'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 73, 74</Issue>
            </Message>
            <Message TypeName="RijndaelCannotBeUsed" Category="Microsoft.Security.Cryptography" CheckId="CA5357" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="100" Level="CriticalWarning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="RijndaelCannotBeUsed.cs" Line="53">'RijndaelCannotBeUsed.EncryptStringToBytes(string, byte[], byte[])' calls into an instance of the System.Security.Cryptography.RijndaelManaged type, which implements a cryptographically insecure encryption algorithm that is banned by the SDL. Replace this usage with an AES encryption algorithm (AES-256, AES-192 and AES-128 are acceptable) with a key length greater than or equal to 128 bits.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Main()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Console.WriteLine(System.String,System.Object)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="RijndaelCannotBeUsed.cs" Line="37">Method 'RijndaelCannotBeUsed.Main()' passes a literal string as parameter 'format' of a call to 'Console.WriteLine(string, object)'. Retrieve the following string(s) from a resource table instead: "Error: {0}".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="RijndaelCannotBeUsed.cs" Line="31">Method 'RijndaelCannotBeUsed.Main()' passes a literal string as parameter 'format' of a call to 'Console.WriteLine(string, object)'. Retrieve the following string(s) from a resource table instead: "Original:   {0}".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="RijndaelCannotBeUsed.cs" Line="32">Method 'RijndaelCannotBeUsed.Main()' passes a literal string as parameter 'format' of a call to 'Console.WriteLine(string, object)'. Retrieve the following string(s) from a resource table instead: "Round Trip: {0}".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="RijndaelCannotBeUsed.cs" Line="35">Modify 'RijndaelCannotBeUsed.Main()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="RijndaelCannotBeUsed" Category="Microsoft.Security.Cryptography" CheckId="CA5357" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="100" Level="CriticalWarning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="RijndaelCannotBeUsed.cs" Line="22">'RijndaelCannotBeUsed.Main()' calls into an instance of the System.Security.Cryptography.RijndaelManaged type, which implements a cryptographically insecure encryption algorithm that is banned by the SDL. Replace this usage with an AES encryption algorithm (AES-256, AES-192 and AES-128 are acceptable) with a key length greater than or equal to 128 bits.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RIPEMD160IsNotRecommended" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="RIPEMD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'RIPEMD' in type name 'RIPEMD160IsNotRecommended' by changing it to 'Ripemd'.</Issue>
          </Message>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="Breaking">
           <Issue Name="CSharp2_0" Certainty="90" Level="Error">Because type 'RIPEMD160IsNotRecommended' contains only 'static' members, mark it as 'static' to prevent the compiler from adding a default public constructor.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Main(System.String[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="RIPEMD160IsNotRecommended.cs" Line="25">In method 'RIPEMD160IsNotRecommended.Main(string[])', call System.IDisposable.Dispose on object 'myRIPEMD160' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Console.Write(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="RIPEMD160IsNotRecommended.cs" Line="37">Method 'RIPEMD160IsNotRecommended.Main(string[])' passes a literal string as parameter 'value' of a call to 'Console.Write(string)'. Retrieve the following string(s) from a resource table instead: ": ".</Issue>
            </Message>
            <Message Id="System.Console.WriteLine(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="RIPEMD160IsNotRecommended.cs" Line="51">Method 'RIPEMD160IsNotRecommended.Main(string[])' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "Error: A file in the directory could not be accessed.".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="RIPEMD160IsNotRecommended.cs" Line="47">Method 'RIPEMD160IsNotRecommended.Main(string[])' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "Error: The directory specified could not be found.".</Issue>
            </Message>
            <Message TypeName="RIPEMD160IsNotRecommended" Category="Microsoft.Security.Cryptography" CheckId="CA5355" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="100" Level="CriticalWarning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="RIPEMD160IsNotRecommended.cs" Line="25">'RIPEMD160IsNotRecommended.Main(string[])' calls into an instance of the System.Security.Cryptography.RIPEMD160 type, which implements a cryptographically insecure hashing function. Hash collisions are computationally feasible for the RIPEMD hash algorithms and are banned by the SDL. Replace this usage with a SHA-2 family hash algorithm (SHA512, SHA384, SHA256).</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="RIPEMD160IsNotRecommended.cs" Line="16">In externally visible method 'RIPEMD160IsNotRecommended.Main(string[])', validate parameter 'args' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PrintByteArray(System.Byte[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Console.Write(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="RIPEMD160IsNotRecommended.cs" Line="62">Method 'RIPEMD160IsNotRecommended.PrintByteArray(byte[])' passes a literal string as parameter 'value' of a call to 'Console.Write(string)'. Retrieve the following string(s) from a resource table instead: " ".</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'RIPEMD160IsNotRecommended.PrintByteArray(byte[])', validate parameter 'array' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RSAProviderNeeds2048bitKey" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="RSA" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'RSA' in type name 'RSAProviderNeeds2048bitKey' by changing it to 'Rsa'.</Issue>
          </Message>
          <Message Id="bit" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'bit' in type name 'RSAProviderNeeds2048bitKey' by changing it to 'Bit'.</Issue>
          </Message>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="Breaking">
           <Issue Name="CSharp2_0" Certainty="90" Level="Error">Because type 'RSAProviderNeeds2048bitKey' contains only 'static' members, mark it as 'static' to prevent the compiler from adding a default public constructor.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Main()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="RSAProviderNeeds2048bitKey.cs" Line="13">'RSAProviderNeeds2048bitKey.Main()' appears to have no upstream public or protected callers.</Issue>
            </Message>
            <Message Id="System.Console.WriteLine(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="RSAProviderNeeds2048bitKey.cs" Line="47">Method 'RSAProviderNeeds2048bitKey.Main()' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "Encryption failed.".</Issue>
            </Message>
            <Message Id="System.Console.WriteLine(System.String,System.Object)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="RSAProviderNeeds2048bitKey.cs" Line="40">Method 'RSAProviderNeeds2048bitKey.Main()' passes a literal string as parameter 'format' of a call to 'Console.WriteLine(string, object)'. Retrieve the following string(s) from a resource table instead: "Decrypted plaintext: {0}".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RSADecrypt(System.Byte[],System.Security.Cryptography.RSAParameters,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Data" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="RSAProviderNeeds2048bitKey.cs" Line="83">In member 'RSAProviderNeeds2048bitKey.RSADecrypt(byte[], RSAParameters, bool)', correct the casing of 'Data' in parameter name 'DataToDecrypt' by changing it to 'data'.</Issue>
            </Message>
            <Message Id="Do" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="RSAProviderNeeds2048bitKey.cs" Line="83">In member 'RSAProviderNeeds2048bitKey.RSADecrypt(byte[], RSAParameters, bool)', correct the casing of 'Do' in parameter name 'DoOAEPPadding' by changing it to 'do'.</Issue>
            </Message>
            <Message Id="OAEP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="RSAProviderNeeds2048bitKey.cs" Line="83">In member 'RSAProviderNeeds2048bitKey.RSADecrypt(byte[], RSAParameters, bool)', correct the casing of 'OAEP' in parameter name 'DoOAEPPadding' by changing it to 'Oaep'.</Issue>
            </Message>
            <Message Id="RSA" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="RSAProviderNeeds2048bitKey.cs" Line="83">Correct the casing of 'RSA' in member name 'RSAProviderNeeds2048bitKey.RSADecrypt(byte[], RSAParameters, bool)' by changing it to 'Rsa'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="RSAProviderNeeds2048bitKey.cs" Line="83">In member 'RSAProviderNeeds2048bitKey.RSADecrypt(byte[], RSAParameters, bool)', correct the casing of 'RSA' in parameter name 'RSAKeyInfo' by changing it to 'rsa'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RSAEncrypt(System.Byte[],System.Security.Cryptography.RSAParameters,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Data" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="RSAProviderNeeds2048bitKey.cs" Line="53">In member 'RSAProviderNeeds2048bitKey.RSAEncrypt(byte[], RSAParameters, bool)', correct the casing of 'Data' in parameter name 'DataToEncrypt' by changing it to 'data'.</Issue>
            </Message>
            <Message Id="Do" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="RSAProviderNeeds2048bitKey.cs" Line="53">In member 'RSAProviderNeeds2048bitKey.RSAEncrypt(byte[], RSAParameters, bool)', correct the casing of 'Do' in parameter name 'DoOAEPPadding' by changing it to 'do'.</Issue>
            </Message>
            <Message Id="OAEP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="RSAProviderNeeds2048bitKey.cs" Line="53">In member 'RSAProviderNeeds2048bitKey.RSAEncrypt(byte[], RSAParameters, bool)', correct the casing of 'OAEP' in parameter name 'DoOAEPPadding' by changing it to 'Oaep'.</Issue>
            </Message>
            <Message Id="RSA" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="RSAProviderNeeds2048bitKey.cs" Line="53">Correct the casing of 'RSA' in member name 'RSAProviderNeeds2048bitKey.RSAEncrypt(byte[], RSAParameters, bool)' by changing it to 'Rsa'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="RSAProviderNeeds2048bitKey.cs" Line="53">In member 'RSAProviderNeeds2048bitKey.RSAEncrypt(byte[], RSAParameters, bool)', correct the casing of 'RSA' in parameter name 'RSAKeyInfo' by changing it to 'rsa'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SHA1CannotBeUsed" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="SHA" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'SHA' in type name 'SHA1CannotBeUsed' by changing it to 'Sha'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Main()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="SHA1CannotBeUsed.cs" Line="17">In method 'SHA1CannotBeUsed.Main()', call System.IDisposable.Dispose on object 'sha' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="SHA1CannotBeUsed.cs" Line="13">The 'this' parameter (or 'Me' in Visual Basic) of 'SHA1CannotBeUsed.Main()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="result" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="SHA1CannotBeUsed.cs" Line="19">'SHA1CannotBeUsed.Main()' declares a variable, 'result', of type 'byte[]', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message TypeName="SHA1CannotBeUsed" Category="Microsoft.Security.Cryptography" CheckId="CA5354" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="100" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="SHA1CannotBeUsed.cs" Line="17">'SHA1CannotBeUsed.Main()' calls into an instance of the System.Security.Cryptography.SHA1CryptoServiceProvider type, which implements a cryptographically insecure hashing function. Hash collisions are computationally feasible for the SHA-1 and SHA-0 algorithms and are banned by the SDL. Replace this usage with a SHA-2 family hash algorithm (SHA512, SHA384, SHA256).</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TripleDESCannotBeUsed" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="DES" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'DES' in type name 'TripleDESCannotBeUsed' by changing it to 'Des'.</Issue>
          </Message>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="Breaking">
           <Issue Name="CSharp2_0" Certainty="90" Level="Error">Because type 'TripleDESCannotBeUsed' contains only 'static' members, mark it as 'static' to prevent the compiler from adding a default public constructor.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#DecryptStringFromBytes(System.Byte[],System.Byte[],System.Byte[])" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="TripleDESCannotBeUsed.cs" Line="119">Object 'csDecrypt' can be disposed more than once in method 'TripleDESCannotBeUsed.DecryptStringFromBytes(byte[], byte[], byte[])'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 119</Issue>
             <Issue Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="TripleDESCannotBeUsed.cs" Line="119">Object 'msDecrypt' can be disposed more than once in method 'TripleDESCannotBeUsed.DecryptStringFromBytes(byte[], byte[], byte[])'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 119, 120</Issue>
            </Message>
            <Message TypeName="TripleDESCannotBeUsed" Category="Microsoft.Security.Cryptography" CheckId="CA5353" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="100" Level="CriticalWarning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="TripleDESCannotBeUsed.cs" Line="99">'TripleDESCannotBeUsed.DecryptStringFromBytes(byte[], byte[], byte[])' calls into an instance of the System.Security.Cryptography.TripleDESCryptoServiceProvider type, which implements a cryptographically insecure encryption algorithm that is banned by the SDL. Replace this usage with an AES encryption algorithm (AES-256, AES-192 and AES-128 are acceptable) with a key length greater than or equal to 128 bits.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EncryptStringToBytes(System.String,System.Byte[],System.Byte[])" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="TripleDESCannotBeUsed.cs" Line="75">Object 'csEncrypt' can be disposed more than once in method 'TripleDESCannotBeUsed.EncryptStringToBytes(string, byte[], byte[])'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 75</Issue>
             <Issue Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="TripleDESCannotBeUsed.cs" Line="75">Object 'msEncrypt' can be disposed more than once in method 'TripleDESCannotBeUsed.EncryptStringToBytes(string, byte[], byte[])'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 75, 76</Issue>
            </Message>
            <Message TypeName="TripleDESCannotBeUsed" Category="Microsoft.Security.Cryptography" CheckId="CA5353" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="100" Level="CriticalWarning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="TripleDESCannotBeUsed.cs" Line="55">'TripleDESCannotBeUsed.EncryptStringToBytes(string, byte[], byte[])' calls into an instance of the System.Security.Cryptography.TripleDESCryptoServiceProvider type, which implements a cryptographically insecure encryption algorithm that is banned by the SDL. Replace this usage with an AES encryption algorithm (AES-256, AES-192 and AES-128 are acceptable) with a key length greater than or equal to 128 bits.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Main()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Console.WriteLine(System.String,System.Object)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="TripleDESCannotBeUsed.cs" Line="39">Method 'TripleDESCannotBeUsed.Main()' passes a literal string as parameter 'format' of a call to 'Console.WriteLine(string, object)'. Retrieve the following string(s) from a resource table instead: "Error: {0}".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="TripleDESCannotBeUsed.cs" Line="32">Method 'TripleDESCannotBeUsed.Main()' passes a literal string as parameter 'format' of a call to 'Console.WriteLine(string, object)'. Retrieve the following string(s) from a resource table instead: "Original:   {0}".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="TripleDESCannotBeUsed.cs" Line="33">Method 'TripleDESCannotBeUsed.Main()' passes a literal string as parameter 'format' of a call to 'Console.WriteLine(string, object)'. Retrieve the following string(s) from a resource table instead: "Round Trip: {0}".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="TripleDESCannotBeUsed.cs" Line="37">Modify 'TripleDESCannotBeUsed.Main()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="TripleDESCannotBeUsed" Category="Microsoft.Security.Cryptography" CheckId="CA5353" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="100" Level="CriticalWarning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityCryptographyRuleTests" File="TripleDESCannotBeUsed.cs" Line="23">'TripleDESCannotBeUsed.Main()' calls into an instance of the System.Security.Cryptography.TripleDESCryptoServiceProvider type, which implements a cryptographically insecure encryption algorithm that is banned by the SDL. Replace this usage with an AES encryption algorithm (AES-256, AES-192 and AES-128 are acceptable) with a key length greater than or equal to 128 bits.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\MSECTools\SecDevMain\src\Shared\OneMicrosoftStaticAnalysisResults\Sarif.Test.Functional\SarifConverterTestData\FxCop\src\SecurityXmlRuleTests.dll">
   <Modules>
    <Module Name="securityxmlruletests.dll">
     <Messages>
      <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">Mark 'SecurityXmlRuleTests.dll' with CLSCompliant(true) because it exposes externally visible types.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="FxCopUnsafeXml">
       <Types>
        <Type Name="DoNotAllowDtdOnXmlReader" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Test1(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotAllowDtdOnXmlReader.cs" Line="23">In method 'DoNotAllowDtdOnXmlReader.Test1(string)', call System.IDisposable.Dispose on object 'reader' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotAllowDtdOnXmlReader.cs" Line="21">The 'this' parameter (or 'Me' in Visual Basic) of 'DoNotAllowDtdOnXmlReader.Test1(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="reader" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotAllowDtdOnXmlReader.cs" Line="23">'DoNotAllowDtdOnXmlReader.Test1(string)' declares a variable, 'reader', of type 'XmlReader', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message TypeName="UseXmlSecureResolver" Category="Microsoft.Security.Xml" CheckId="CA3053" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Name="XmlReaderCreateWrongOverload" Certainty="100" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotAllowDtdOnXmlReader.cs" Line="23">'DoNotAllowDtdOnXmlReader.Test1(string)' instantiates an XmlReader instance by calling System.Xml.XmlReader.Create(System.String), an overload which does not accept an explicit XmlReaderSettings argument. This usage is potentially unsafe as untrusted external resources may be resolved during read operations. Provide a XmlReaderSettings instance and set the XmlResolver property to null or an instance of XmlSecureResolver.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Test1206P(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotAllowDtdOnXmlReader.cs" Line="15">In method 'DoNotAllowDtdOnXmlReader.Test1206P(string)', call System.IDisposable.Dispose on object 'reader' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotAllowDtdOnXmlReader" Category="Microsoft.Security.Xml" CheckId="CA3055" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="100" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotAllowDtdOnXmlReader.cs" Line="17">XmlReader by default is safe, but DtdProcessing is set to System.Xml.DtdProcessing.Parse. Review that XML is coming from a trusted source.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotAllowDtdOnXmlReader.cs" Line="13">The 'this' parameter (or 'Me' in Visual Basic) of 'DoNotAllowDtdOnXmlReader.Test1206P(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message TypeName="ReviewDtdProcessingAssignment" Category="Microsoft.Security.Xml" CheckId="CA3069" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="100" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotAllowDtdOnXmlReader.cs" Line="17">Review this assignment to ensure that DTD processing is indeed needed and that inheritance or usage in other .NET classes is all documented and acceptable as not being safe by default</Issue>
            </Message>
            <Message TypeName="UseXmlSecureResolver" Category="Microsoft.Security.Xml" CheckId="CA3053" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Name="XmlReaderCreateWrongOverload" Certainty="100" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotAllowDtdOnXmlReader.cs" Line="15">'DoNotAllowDtdOnXmlReader.Test1206P(string)' instantiates an XmlReader instance by calling System.Xml.XmlReader.Create(System.String), an overload which does not accept an explicit XmlReaderSettings argument. This usage is potentially unsafe as untrusted external resources may be resolved during read operations. Provide a XmlReaderSettings instance and set the XmlResolver property to null or an instance of XmlSecureResolver.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Test2(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotAllowDtdOnXmlReader.cs" Line="29">In method 'DoNotAllowDtdOnXmlReader.Test2(string)', call System.IDisposable.Dispose on object 'reader' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotAllowDtdOnXmlReader.cs" Line="27">The 'this' parameter (or 'Me' in Visual Basic) of 'DoNotAllowDtdOnXmlReader.Test2(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message TypeName="UseXmlSecureResolver" Category="Microsoft.Security.Xml" CheckId="CA3053" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Name="XmlReaderCreateWrongOverload" Certainty="100" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotAllowDtdOnXmlReader.cs" Line="29">'DoNotAllowDtdOnXmlReader.Test2(string)' instantiates an XmlReader instance by calling System.Xml.XmlReader.Create(System.String), an overload which does not accept an explicit XmlReaderSettings argument. This usage is potentially unsafe as untrusted external resources may be resolved during read operations. Provide a XmlReaderSettings instance and set the XmlResolver property to null or an instance of XmlSecureResolver.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Test3(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotAllowDtdOnXmlReader.cs" Line="37">In method 'DoNotAllowDtdOnXmlReader.Test3(string)', call System.IDisposable.Dispose on object 'reader' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotAllowDtdOnXmlReader.cs" Line="35">The 'this' parameter (or 'Me' in Visual Basic) of 'DoNotAllowDtdOnXmlReader.Test3(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message TypeName="UseXmlSecureResolver" Category="Microsoft.Security.Xml" CheckId="CA3053" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Name="XmlReaderCreateWrongOverload" Certainty="100" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotAllowDtdOnXmlReader.cs" Line="37">'DoNotAllowDtdOnXmlReader.Test3(string)' instantiates an XmlReader instance by calling System.Xml.XmlReader.Create(System.String), an overload which does not accept an explicit XmlReaderSettings argument. This usage is potentially unsafe as untrusted external resources may be resolved during read operations. Provide a XmlReaderSettings instance and set the XmlResolver property to null or an instance of XmlSecureResolver.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Test6(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotAllowDtdOnXmlReader.cs" Line="45">In method 'DoNotAllowDtdOnXmlReader.Test6(string)', call System.IDisposable.Dispose on object 'reader' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotAllowDtdOnXmlReader.cs" Line="43">The 'this' parameter (or 'Me' in Visual Basic) of 'DoNotAllowDtdOnXmlReader.Test6(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message TypeName="ReviewDtdProcessingAssignment" Category="Microsoft.Security.Xml" CheckId="CA3069" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="100" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotAllowDtdOnXmlReader.cs" Line="49">Review this assignment to ensure that DTD processing is indeed needed and that inheritance or usage in other .NET classes is all documented and acceptable as not being safe by default</Issue>
            </Message>
            <Message TypeName="UseXmlSecureResolver" Category="Microsoft.Security.Xml" CheckId="CA3053" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Name="XmlReaderCreateWrongOverload" Certainty="100" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotAllowDtdOnXmlReader.cs" Line="45">'DoNotAllowDtdOnXmlReader.Test6(string)' instantiates an XmlReader instance by calling System.Xml.XmlReader.Create(System.String), an overload which does not accept an explicit XmlReaderSettings argument. This usage is potentially unsafe as untrusted external resources may be resolved during read operations. Provide a XmlReaderSettings instance and set the XmlResolver property to null or an instance of XmlSecureResolver.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DoNotAllowDtdOnXmlTextReader" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Test1(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotAllowDtdOnXmlTextReader.cs" Line="23">In method 'DoNotAllowDtdOnXmlTextReader.Test1(string)', call System.IDisposable.Dispose on object 'reader' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotAllowDtdOnXmlTextReader.cs" Line="21">The 'this' parameter (or 'Me' in Visual Basic) of 'DoNotAllowDtdOnXmlTextReader.Test1(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Test1205P(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotAllowDtdOnXmlTextReader.cs" Line="17">In method 'DoNotAllowDtdOnXmlTextReader.Test1205P(string)', call System.IDisposable.Dispose on object 'reader' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotAllowDtdOnXmlTextReader" Category="Microsoft.Security.Xml" CheckId="CA3054" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="100" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotAllowDtdOnXmlTextReader.cs" Line="17">Review that the XML parsed here is from a trusted source, otherwise set settings.DtdProcessing to System.Xml.DtdProcessing.Prohibit or .Ignore</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotAllowDtdOnXmlTextReader.cs" Line="15">The 'this' parameter (or 'Me' in Visual Basic) of 'DoNotAllowDtdOnXmlTextReader.Test1205P(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="reader" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotAllowDtdOnXmlTextReader.cs" Line="17">'DoNotAllowDtdOnXmlTextReader.Test1205P(string)' declares a variable, 'reader', of type 'XmlTextReader', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Test2(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotAllowDtdOnXmlTextReader.cs" Line="30">In method 'DoNotAllowDtdOnXmlTextReader.Test2(string)', call System.IDisposable.Dispose on object 'reader' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotAllowDtdOnXmlTextReader.cs" Line="28">The 'this' parameter (or 'Me' in Visual Basic) of 'DoNotAllowDtdOnXmlTextReader.Test2(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Test3(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotAllowDtdOnXmlTextReader.cs" Line="37">In method 'DoNotAllowDtdOnXmlTextReader.Test3(string)', call System.IDisposable.Dispose on object 'reader' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotAllowDtdOnXmlTextReader.cs" Line="35">The 'this' parameter (or 'Me' in Visual Basic) of 'DoNotAllowDtdOnXmlTextReader.Test3(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Test4(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotAllowDtdOnXmlTextReader.cs" Line="44">In method 'DoNotAllowDtdOnXmlTextReader.Test4(string)', call System.IDisposable.Dispose on object 'reader' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotAllowDtdOnXmlTextReader.cs" Line="42">The 'this' parameter (or 'Me' in Visual Basic) of 'DoNotAllowDtdOnXmlTextReader.Test4(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Test5(System.String,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotAllowDtdOnXmlTextReader.cs" Line="51">In method 'DoNotAllowDtdOnXmlTextReader.Test5(string, bool)', call System.IDisposable.Dispose on object 'reader' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotAllowDtdOnXmlTextReader" Category="Microsoft.Security.Xml" CheckId="CA3054" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="100" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotAllowDtdOnXmlTextReader.cs" Line="51">Review that the XML parsed here is from a trusted source, otherwise set settings.DtdProcessing to System.Xml.DtdProcessing.Prohibit or .Ignore</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotAllowDtdOnXmlTextReader.cs" Line="49">The 'this' parameter (or 'Me' in Visual Basic) of 'DoNotAllowDtdOnXmlTextReader.Test5(string, bool)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Test6(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotAllowDtdOnXmlTextReader.cs" Line="62">In method 'DoNotAllowDtdOnXmlTextReader.Test6(string)', call System.IDisposable.Dispose on object 'reader' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotAllowDtdOnXmlTextReader.cs" Line="60">The 'this' parameter (or 'Me' in Visual Basic) of 'DoNotAllowDtdOnXmlTextReader.Test6(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Test7(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotAllowDtdOnXmlTextReader.cs" Line="78">In method 'DoNotAllowDtdOnXmlTextReader.Test7(string)', object 'new StringReader(s)' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'new StringReader(s)' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="s" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotAllowDtdOnXmlTextReader.cs" Line="75">In method 'DoNotAllowDtdOnXmlTextReader.Test7(string)', consider providing a more meaningful name than parameter name 's'.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotAllowDtdOnXmlTextReader.cs" Line="75">The 'this' parameter (or 'Me' in Visual Basic) of 'DoNotAllowDtdOnXmlTextReader.Test7(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message TypeName="UseXmlSecureResolver" Category="Microsoft.Security.Xml" CheckId="CA3053" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Name="XmlDocument" Certainty="100" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotAllowDtdOnXmlTextReader.cs" Line="77">'DoNotAllowDtdOnXmlTextReader.Test7(string)' instantiates and calls into an XmlDocument instance but does not appear to set its XmlResolver property to a secure value. This usage is potentially unsafe as untrusted external resources may be resolved during read operations. Set the XmlResolver instance to null or an instance of XmlSecureResolver.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DoNotUseLoadXml" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#TestMethod(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotUseLoadXml" Category="Microsoft.Security.Xml" CheckId="CA3057" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="100" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotUseLoadXml.cs" Line="17">Using System.Xml.XmlDocument/XmlDataDocument LoadXml() method is potentially unsafe, replace with the Load() overload that takes an XmlReader instance</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotUseLoadXml.cs" Line="13">The 'this' parameter (or 'Me' in Visual Basic) of 'DoNotUseLoadXml.TestMethod(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message TypeName="UseXmlSecureResolver" Category="Microsoft.Security.Xml" CheckId="CA3053" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Name="XmlDocument" Certainty="100" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotUseLoadXml.cs" Line="14">'DoNotUseLoadXml.TestMethod(string)' instantiates and calls into an XmlDocument instance but does not appear to set its XmlResolver property to a secure value. This usage is potentially unsafe as untrusted external resources may be resolved during read operations. Set the XmlResolver instance to null or an instance of XmlSecureResolver.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TestMethod1(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotUseLoadXml" Category="Microsoft.Security.Xml" CheckId="CA3057" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="100" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotUseLoadXml.cs" Line="25">Using System.Xml.XmlDocument/XmlDataDocument LoadXml() method is potentially unsafe, replace with the Load() overload that takes an XmlReader instance</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotUseLoadXml.cs" Line="21">The 'this' parameter (or 'Me' in Visual Basic) of 'DoNotUseLoadXml.TestMethod1(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message TypeName="UseXmlSecureResolver" Category="Microsoft.Security.Xml" CheckId="CA3053" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Name="XmlDocument" Certainty="100" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotUseLoadXml.cs" Line="22">'DoNotUseLoadXml.TestMethod1(string)' instantiates and calls into an XmlDocument instance but does not appear to set its XmlResolver property to a secure value. This usage is potentially unsafe as untrusted external resources may be resolved during read operations. Set the XmlResolver instance to null or an instance of XmlSecureResolver.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DoNotUseSetInnerXml" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#TestMethod(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotUseSetInnerXml" Category="Microsoft.Security.Xml" CheckId="CA3058" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="100" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotUseSetInnerXml.cs" Line="17">Setting the InnerXml property of System.Xml.XmlDocument/XmlDataDocument is potentially unsafe, replace with a call to the Load() method overload that takes an XmlReader instance</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotUseSetInnerXml.cs" Line="13">The 'this' parameter (or 'Me' in Visual Basic) of 'DoNotUseSetInnerXml.TestMethod(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message TypeName="UseXmlSecureResolver" Category="Microsoft.Security.Xml" CheckId="CA3053" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Name="XmlDocument" Certainty="100" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotUseSetInnerXml.cs" Line="14">'DoNotUseSetInnerXml.TestMethod(string)' instantiates and calls into an XmlDocument instance but does not appear to set its XmlResolver property to a secure value. This usage is potentially unsafe as untrusted external resources may be resolved during read operations. Set the XmlResolver instance to null or an instance of XmlSecureResolver.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TestMethod1(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotUseSetInnerXml" Category="Microsoft.Security.Xml" CheckId="CA3058" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="100" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotUseSetInnerXml.cs" Line="23">Setting the InnerXml property of System.Xml.XmlDocument/XmlDataDocument is potentially unsafe, replace with a call to the Load() method overload that takes an XmlReader instance</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotUseSetInnerXml.cs" Line="21">The 'this' parameter (or 'Me' in Visual Basic) of 'DoNotUseSetInnerXml.TestMethod1(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="doc" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotUseSetInnerXml.cs" Line="23">'DoNotUseSetInnerXml.TestMethod1(string)' declares a variable, 'doc', of type 'XmlDocument', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message TypeName="UseXmlSecureResolver" Category="Microsoft.Security.Xml" CheckId="CA3053" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Name="XmlDocument" Certainty="100" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotUseSetInnerXml.cs" Line="23">'DoNotUseSetInnerXml.TestMethod1(string)' instantiates and calls into an XmlDocument instance but does not appear to set its XmlResolver property to a secure value. This usage is potentially unsafe as untrusted external resources may be resolved during read operations. Set the XmlResolver instance to null or an instance of XmlSecureResolver.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TestMethod2(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotUseSetInnerXml" Category="Microsoft.Security.Xml" CheckId="CA3058" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="100" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotUseSetInnerXml.cs" Line="34">Setting the InnerXml property of System.Xml.XmlDocument/XmlDataDocument is potentially unsafe, replace with a call to the Load() method overload that takes an XmlReader instance</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotUseSetInnerXml.cs" Line="30">The 'this' parameter (or 'Me' in Visual Basic) of 'DoNotUseSetInnerXml.TestMethod2(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message TypeName="UseXmlSecureResolver" Category="Microsoft.Security.Xml" CheckId="CA3053" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Name="XmlDocument" Certainty="100" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotUseSetInnerXml.cs" Line="31">'DoNotUseSetInnerXml.TestMethod2(string)' instantiates and calls into an XmlDocument instance but does not appear to set its XmlResolver property to a secure value. This usage is potentially unsafe as untrusted external resources may be resolved during read operations. Set the XmlResolver instance to null or an instance of XmlSecureResolver.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TestMethod3(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotUseSetInnerXml" Category="Microsoft.Security.Xml" CheckId="CA3058" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="100" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotUseSetInnerXml.cs" Line="40">Setting the InnerXml property of System.Xml.XmlDocument/XmlDataDocument is potentially unsafe, replace with a call to the Load() method overload that takes an XmlReader instance</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotUseSetInnerXml.cs" Line="38">The 'this' parameter (or 'Me' in Visual Basic) of 'DoNotUseSetInnerXml.TestMethod3(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="doc" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotUseSetInnerXml.cs" Line="40">'DoNotUseSetInnerXml.TestMethod3(string)' declares a variable, 'doc', of type 'XmlDataDocument', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message TypeName="UseXmlSecureResolver" Category="Microsoft.Security.Xml" CheckId="CA3053" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Name="XmlDocument" Certainty="100" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotUseSetInnerXml.cs" Line="40">'DoNotUseSetInnerXml.TestMethod3(string)' instantiates and calls into an XmlDocument instance but does not appear to set its XmlResolver property to a secure value. This usage is potentially unsafe as untrusted external resources may be resolved during read operations. Set the XmlResolver instance to null or an instance of XmlSecureResolver.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DoNotUseXslTransform" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotUseXslTransform" Category="Microsoft.Security.Xml" CheckId="CA3050" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="100" Level="CriticalError" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotUseXslTransform.cs" Line="17">System.Xml.Xsl.XslTransform is obsolete and unsafe, replace instances with System.Xml.Xsl.XslCompiledTransform.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#xslTransform" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'DoNotUseXslTransform.xslTransform' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ReviewClassesDerivedFromXmlTextReader" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Method()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="ReviewClassesDerivedFromXmlTextReader.cs" Line="19">In method 'ReviewClassesDerivedFromXmlTextReader.Method()', call System.IDisposable.Dispose on object 'x' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotAllowDtdOnXmlTextReader" Category="Microsoft.Security.Xml" CheckId="CA3054" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="100" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="ReviewClassesDerivedFromXmlTextReader.cs" Line="19">Review that the XML parsed here is from a trusted source, otherwise set settings.DtdProcessing to System.Xml.DtdProcessing.Prohibit or .Ignore</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="ReviewClassesDerivedFromXmlTextReader.cs" Line="18">The 'this' parameter (or 'Me' in Visual Basic) of 'ReviewClassesDerivedFromXmlTextReader.Method()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message TypeName="ReviewClassesDerivedFromXmlTextReader" Category="Microsoft.Security.Xml" CheckId="CA3074" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="100" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="ReviewClassesDerivedFromXmlTextReader.cs" Line="19">FxCopUnsafeXml.ReviewClassesDerivedFromXmlTextReader+TestClass1 is a child of XmlTextReader which is unsafe when used to process untrusted XML, review that the XML parsed by this instance is always from a trusted source, or disable DTD processing on this instance, by setting it’s DtdProcessing to DtdProcessing.Ignore or Prohibit (CLR &gt; 3.5) or set ProhibitDtd to true (CLR &lt;= 3.5)";&#xD;&#xA;    </Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ReviewClassesDerivedFromXmlTextReader+TestClass1" Kind="Class" Accessibility="Private" ExternallyVisible="False">
         <Members>
          <Member Name="#AddOnString" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_AddOnString()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning">'ReviewClassesDerivedFromXmlTextReader.TestClass1.AddOnString.get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="ReviewDataViewConnectionString" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#TestMethod1216(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="ReviewDataViewConnectionString.cs" Line="14">In method 'ReviewDataViewConnectionString.TestMethod1216(string)', call System.IDisposable.Dispose on object 'ds' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="ReviewDataViewConnectionString.cs" Line="15">In method 'ReviewDataViewConnectionString.TestMethod1216(string)', call System.IDisposable.Dispose on object 'manager' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="src" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="ReviewDataViewConnectionString.cs" Line="13">In method 'ReviewDataViewConnectionString.TestMethod1216(string)', correct the spelling of 'src' in parameter name 'src' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="ReviewDataViewConnectionString.cs" Line="13">The 'this' parameter (or 'Me' in Visual Basic) of 'ReviewDataViewConnectionString.TestMethod1216(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message TypeName="ReviewDataViewCollectionString" Category="Microsoft.Security.Xml" CheckId="CA3065" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="100" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="ReviewDataViewConnectionString.cs" Line="18">Review that the value passed in to the System.Data.DataViewManager.DataViewSettingCollectionString setter is from a trusted source, otherwise avoid using this class or sanitize the input value to not contain DTD</Issue>
             <Issue Certainty="100" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="ReviewDataViewConnectionString.cs" Line="21">Review that the value passed in to the System.Data.DataViewManager.DataViewSettingCollectionString setter is from a trusted source, otherwise avoid using this class or sanitize the input value to not contain DTD</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="ReviewDataViewConnectionString.cs" Line="14">Be sure to set the DataSet Locale property wherever 'ReviewDataViewConnectionString.TestMethod1216(string)' creates an instance of that type.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ReviewDtdProcessingAssignment" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Test(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="ReviewDtdProcessingAssignment.cs" Line="21">In method 'ReviewDtdProcessingAssignment.Test(string)', call System.IDisposable.Dispose on object 'reader' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="ReviewDtdProcessingAssignment.cs" Line="19">The 'this' parameter (or 'Me' in Visual Basic) of 'ReviewDtdProcessingAssignment.Test(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="reader" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="ReviewDtdProcessingAssignment.cs" Line="21">'ReviewDtdProcessingAssignment.Test(string)' declares a variable, 'reader', of type 'XmlReader', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message TypeName="UseXmlSecureResolver" Category="Microsoft.Security.Xml" CheckId="CA3053" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Name="XmlReaderCreateWrongOverload" Certainty="100" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="ReviewDtdProcessingAssignment.cs" Line="21">'ReviewDtdProcessingAssignment.Test(string)' instantiates an XmlReader instance by calling System.Xml.XmlReader.Create(System.String), an overload which does not accept an explicit XmlReaderSettings argument. This usage is potentially unsafe as untrusted external resources may be resolved during read operations. Provide a XmlReaderSettings instance and set the XmlResolver property to null or an instance of XmlSecureResolver.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TestMethod(System.Xml.XmlReader)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="ReviewDtdProcessingAssignment.cs" Line="13">The 'this' parameter (or 'Me' in Visual Basic) of 'ReviewDtdProcessingAssignment.TestMethod(XmlReader)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message TypeName="ReviewDtdProcessingAssignment" Category="Microsoft.Security.Xml" CheckId="CA3069" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="100" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="ReviewDtdProcessingAssignment.cs" Line="15">Review this assignment to ensure that DTD processing is indeed needed and that inheritance or usage in other .NET classes is all documented and acceptable as not being safe by default</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="ReviewDtdProcessingAssignment.cs" Line="15">In externally visible method 'ReviewDtdProcessingAssignment.TestMethod(XmlReader)', validate parameter 'reader' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ReviewTrustedXsltUse" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#TestMethod()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="ReviewTrustedXsltUse.cs" Line="13">The 'this' parameter (or 'Me' in Visual Basic) of 'ReviewTrustedXsltUse.TestMethod()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="xsltSettings" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="ReviewTrustedXsltUse.cs" Line="15">'ReviewTrustedXsltUse.TestMethod()' declares a variable, 'xsltSettings', of type 'XsltSettings', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message TypeName="ReviewTrustedXsltUse" Category="Microsoft.Security.Xml" CheckId="CA3073" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="100" Level="CriticalError" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="ReviewTrustedXsltUse.cs" Line="15">Review that the XML and XSL transform is from a trusted source, otherwise revise the XsltSettings to an instance that has disabled document function and script execution</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ReviewWebControlForSet_Data" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="95" Level="Error">Remove the underscores from type name 'ReviewWebControlForSet_Data'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#TestMethod34(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="ReviewWebControlForSet_Data.cs" Line="15">In method 'ReviewWebControlForSet_Data.TestMethod34(string)', call System.IDisposable.Dispose on object 'xmlDS' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="ReviewWebControlForSet_Data.cs" Line="13">The 'this' parameter (or 'Me' in Visual Basic) of 'ReviewWebControlForSet_Data.TestMethod34(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message TypeName="ReviewWebControlForSet_Data" Category="Microsoft.Security.Xml" CheckId="CA3066" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="100" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="ReviewWebControlForSet_Data.cs" Line="17">Review that the XML is from a trusted source, otherwise avoid using this control</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ReviewWebControlForSet_DocumentContent" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="95" Level="Error">Remove the underscores from type name 'ReviewWebControlForSet_DocumentContent'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#TestMethod(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="ReviewWebControlForSet_DocumentContent.cs" Line="14">In method 'ReviewWebControlForSet_DocumentContent.TestMethod(string)', call System.IDisposable.Dispose on object 'xmlControl' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="ReviewWebControlForSet_DocumentContent.cs" Line="12">The 'this' parameter (or 'Me' in Visual Basic) of 'ReviewWebControlForSet_DocumentContent.TestMethod(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message TypeName="ReviewWebControlForSet_DocumentContent" Category="Microsoft.Security.Xml" CheckId="CA3067" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="100" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="ReviewWebControlForSet_DocumentContent.cs" Line="16">Review that the XML is from a trusted source, otherwise avoid using this control</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TextReaderImplNeedsSettingsAndResolver" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Impl" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Impl' in type name 'TextReaderImplNeedsSettingsAndResolver'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#TestMethod(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="TextReaderImplNeedsSettingsAndResolver.cs" Line="13">The 'this' parameter (or 'Me' in Visual Basic) of 'TextReaderImplNeedsSettingsAndResolver.TestMethod(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="content" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="TextReaderImplNeedsSettingsAndResolver.cs" Line="13">Parameter 'content' of 'TextReaderImplNeedsSettingsAndResolver.TestMethod(string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UseXmlReaderForDataSetReadXml" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#TestMethod1214(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForDataSetReadXml.cs" Line="15">In method 'UseXmlReaderForDataSetReadXml.TestMethod1214(string)', call System.IDisposable.Dispose on object 'ds' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForDataSetReadXml.cs" Line="14">The 'this' parameter (or 'Me' in Visual Basic) of 'UseXmlReaderForDataSetReadXml.TestMethod1214(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForDataSetReadXml.cs" Line="15">Be sure to set the DataSet Locale property wherever 'UseXmlReaderForDataSetReadXml.TestMethod1214(string)' creates an instance of that type.</Issue>
            </Message>
            <Message TypeName="UseXmlReaderForDataSetReadXml" Category="Microsoft.Security.Xml" CheckId="CA3063" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="100" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForDataSetReadXml.cs" Line="18">This overload of the System.Data.DataSet.ReadXml method is potentially unsafe, use an overload that takes a XmlReader instance instead</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TestMethod1214Ok(System.Xml.XmlReader)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForDataSetReadXml.cs" Line="23">In method 'UseXmlReaderForDataSetReadXml.TestMethod1214Ok(XmlReader)', call System.IDisposable.Dispose on object 'ds' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForDataSetReadXml.cs" Line="22">The 'this' parameter (or 'Me' in Visual Basic) of 'UseXmlReaderForDataSetReadXml.TestMethod1214Ok(XmlReader)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForDataSetReadXml.cs" Line="23">Be sure to set the DataSet Locale property wherever 'UseXmlReaderForDataSetReadXml.TestMethod1214Ok(XmlReader)' creates an instance of that type.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UseXmlReaderForDataSetReadXmlSchema" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#TestMethod1215(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForDataSetReadXmlSchema.cs" Line="15">In method 'UseXmlReaderForDataSetReadXmlSchema.TestMethod1215(string)', call System.IDisposable.Dispose on object 'ds' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForDataSetReadXmlSchema.cs" Line="14">The 'this' parameter (or 'Me' in Visual Basic) of 'UseXmlReaderForDataSetReadXmlSchema.TestMethod1215(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForDataSetReadXmlSchema.cs" Line="15">Be sure to set the DataSet Locale property wherever 'UseXmlReaderForDataSetReadXmlSchema.TestMethod1215(string)' creates an instance of that type.</Issue>
            </Message>
            <Message TypeName="UseXmlReaderForDataSetReadXmlSchema" Category="Microsoft.Security.Xml" CheckId="CA3064" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="100" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForDataSetReadXmlSchema.cs" Line="18">This overload of the System.Data.DataSet.ReadXmlSchema method is potentially unsafe, use an overload that takes a XmlReader instance instead</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TestMethod1215Ok(System.Xml.XmlReader)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForDataSetReadXmlSchema.cs" Line="23">In method 'UseXmlReaderForDataSetReadXmlSchema.TestMethod1215Ok(XmlReader)', call System.IDisposable.Dispose on object 'ds' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForDataSetReadXmlSchema.cs" Line="22">The 'this' parameter (or 'Me' in Visual Basic) of 'UseXmlReaderForDataSetReadXmlSchema.TestMethod1215Ok(XmlReader)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForDataSetReadXmlSchema.cs" Line="23">Be sure to set the DataSet Locale property wherever 'UseXmlReaderForDataSetReadXmlSchema.TestMethod1215Ok(XmlReader)' creates an instance of that type.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UseXmlReaderForDataTableReadXml" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#TestMethod(System.IO.Stream)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForDataTableReadXml.cs" Line="16">In method 'UseXmlReaderForDataTableReadXml.TestMethod(Stream)', call System.IDisposable.Dispose on object 'table' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForDataTableReadXml.cs" Line="15">The 'this' parameter (or 'Me' in Visual Basic) of 'UseXmlReaderForDataTableReadXml.TestMethod(Stream)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForDataTableReadXml.cs" Line="16">Be sure to set the DataTable Locale property wherever 'UseXmlReaderForDataTableReadXml.TestMethod(Stream)' creates an instance of that type.</Issue>
            </Message>
            <Message TypeName="UseXmlReaderForDataTableReadXml" Category="Microsoft.Security.Xml" CheckId="CA3071" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="100" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForDataTableReadXml.cs" Line="19">This overload of the System.Data.DataTable.ReadXml method is potentially unsafe, use an overload that takes a XmlReader instance instead</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TestMethod1(System.Xml.XmlReader)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForDataTableReadXml.cs" Line="24">In method 'UseXmlReaderForDataTableReadXml.TestMethod1(XmlReader)', call System.IDisposable.Dispose on object 'table' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForDataTableReadXml.cs" Line="23">The 'this' parameter (or 'Me' in Visual Basic) of 'UseXmlReaderForDataTableReadXml.TestMethod1(XmlReader)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForDataTableReadXml.cs" Line="24">Be sure to set the DataTable Locale property wherever 'UseXmlReaderForDataTableReadXml.TestMethod1(XmlReader)' creates an instance of that type.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UseXmlReaderForDataTableReadXmlSchema" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#TestMethod(System.IO.Stream)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForDataTableReadXmlSchema.cs" Line="16">In method 'UseXmlReaderForDataTableReadXmlSchema.TestMethod(Stream)', call System.IDisposable.Dispose on object 'table' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForDataTableReadXmlSchema.cs" Line="15">The 'this' parameter (or 'Me' in Visual Basic) of 'UseXmlReaderForDataTableReadXmlSchema.TestMethod(Stream)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForDataTableReadXmlSchema.cs" Line="16">Be sure to set the DataTable Locale property wherever 'UseXmlReaderForDataTableReadXmlSchema.TestMethod(Stream)' creates an instance of that type.</Issue>
            </Message>
            <Message TypeName="UseXmlReaderForDataTableReadXmlSchema" Category="Microsoft.Security.Xml" CheckId="CA3072" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="100" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForDataTableReadXmlSchema.cs" Line="19">This overload of the System.Data.DataTable.ReadXmlSchema method is potentially unsafe, use an overload that takes a XmlReader instance instead</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TestMethod1(System.Xml.XmlReader)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForDataTableReadXmlSchema.cs" Line="24">In method 'UseXmlReaderForDataTableReadXmlSchema.TestMethod1(XmlReader)', call System.IDisposable.Dispose on object 'table' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForDataTableReadXmlSchema.cs" Line="23">The 'this' parameter (or 'Me' in Visual Basic) of 'UseXmlReaderForDataTableReadXmlSchema.TestMethod1(XmlReader)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForDataTableReadXmlSchema.cs" Line="24">Be sure to set the DataTable Locale property wherever 'UseXmlReaderForDataTableReadXmlSchema.TestMethod1(XmlReader)' creates an instance of that type.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UseXmlReaderForDeserialize" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#TestMethod1221(System.IO.Stream)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForDeserialize.cs" Line="15">The 'this' parameter (or 'Me' in Visual Basic) of 'UseXmlReaderForDeserialize.TestMethod1221(Stream)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message TypeName="UseXmlReaderForDeserialize" Category="Microsoft.Security.Xml" CheckId="CA3070" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="100" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForDeserialize.cs" Line="18">This overload of System.Xml.Serialization.XmlSerializer.Deserialize method is potentially unsafe, use an overload that takes a XmlReader instance instead</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TestMethod1221Ok(System.Xml.XmlTextReader)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForDeserialize.cs" Line="22">Consider changing the type of parameter 'reader' in 'UseXmlReaderForDeserialize.TestMethod1221Ok(XmlTextReader)' from 'XmlTextReader' to its base type 'XmlReader'. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForDeserialize.cs" Line="22">The 'this' parameter (or 'Me' in Visual Basic) of 'UseXmlReaderForDeserialize.TestMethod1221Ok(XmlTextReader)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UseXmlReaderForLoad" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#TestMethod(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForLoad.cs" Line="13">The 'this' parameter (or 'Me' in Visual Basic) of 'UseXmlReaderForLoad.TestMethod(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message TypeName="UseXmlReaderForLoad" Category="Microsoft.Security.Xml" CheckId="CA3056" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="100" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForLoad.cs" Line="17">Using this overload of System.Xml.XmlDocument/XmlDataDocument Load() method is potentially unsafe, replace with the Load() overload that takes an XmlReader instance</Issue>
            </Message>
            <Message TypeName="UseXmlSecureResolver" Category="Microsoft.Security.Xml" CheckId="CA3053" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Name="XmlDocument" Certainty="100" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForLoad.cs" Line="14">'UseXmlReaderForLoad.TestMethod(string)' instantiates and calls into an XmlDocument instance but does not appear to set its XmlResolver property to a secure value. This usage is potentially unsafe as untrusted external resources may be resolved during read operations. Set the XmlResolver instance to null or an instance of XmlSecureResolver.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TestMethod1(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForLoad.cs" Line="21">The 'this' parameter (or 'Me' in Visual Basic) of 'UseXmlReaderForLoad.TestMethod1(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message TypeName="UseXmlReaderForLoad" Category="Microsoft.Security.Xml" CheckId="CA3056" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="100" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForLoad.cs" Line="25">Using this overload of System.Xml.XmlDocument/XmlDataDocument Load() method is potentially unsafe, replace with the Load() overload that takes an XmlReader instance</Issue>
            </Message>
            <Message TypeName="UseXmlSecureResolver" Category="Microsoft.Security.Xml" CheckId="CA3053" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Name="XmlDocument" Certainty="100" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForLoad.cs" Line="22">'UseXmlReaderForLoad.TestMethod1(string)' instantiates and calls into an XmlDocument instance but does not appear to set its XmlResolver property to a secure value. This usage is potentially unsafe as untrusted external resources may be resolved during read operations. Set the XmlResolver instance to null or an instance of XmlSecureResolver.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TestMethod2(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForLoad.cs" Line="33">In method 'UseXmlReaderForLoad.TestMethod2(string)', call System.IDisposable.Dispose on object 'new XmlTextReader(path)' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotAllowDtdOnXmlTextReader" Category="Microsoft.Security.Xml" CheckId="CA3054" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="100" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForLoad.cs" Line="33">Review that the XML parsed here is from a trusted source, otherwise set settings.DtdProcessing to System.Xml.DtdProcessing.Prohibit or .Ignore</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForLoad.cs" Line="29">The 'this' parameter (or 'Me' in Visual Basic) of 'UseXmlReaderForLoad.TestMethod2(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message TypeName="UseXmlSecureResolver" Category="Microsoft.Security.Xml" CheckId="CA3053" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Name="XmlDocument" Certainty="100" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForLoad.cs" Line="30">'UseXmlReaderForLoad.TestMethod2(string)' instantiates and calls into an XmlDocument instance but does not appear to set its XmlResolver property to a secure value. This usage is potentially unsafe as untrusted external resources may be resolved during read operations. Set the XmlResolver instance to null or an instance of XmlSecureResolver.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TestMethod3(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForLoad.cs" Line="41">In method 'UseXmlReaderForLoad.TestMethod3(string)', call System.IDisposable.Dispose on object 'new XmlTextReader(path)' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotAllowDtdOnXmlTextReader" Category="Microsoft.Security.Xml" CheckId="CA3054" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="100" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForLoad.cs" Line="41">Review that the XML parsed here is from a trusted source, otherwise set settings.DtdProcessing to System.Xml.DtdProcessing.Prohibit or .Ignore</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForLoad.cs" Line="37">The 'this' parameter (or 'Me' in Visual Basic) of 'UseXmlReaderForLoad.TestMethod3(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message TypeName="UseXmlSecureResolver" Category="Microsoft.Security.Xml" CheckId="CA3053" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Name="XmlDocument" Certainty="100" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForLoad.cs" Line="38">'UseXmlReaderForLoad.TestMethod3(string)' instantiates and calls into an XmlDocument instance but does not appear to set its XmlResolver property to a secure value. This usage is potentially unsafe as untrusted external resources may be resolved during read operations. Set the XmlResolver instance to null or an instance of XmlSecureResolver.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UseXmlReaderForSchemaRead" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#TestMethod18(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForSchemaRead.cs" Line="16">In method 'UseXmlReaderForSchemaRead.TestMethod18(string)', call System.IDisposable.Dispose on object 'tr' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForSchemaRead.cs" Line="15">The 'this' parameter (or 'Me' in Visual Basic) of 'UseXmlReaderForSchemaRead.TestMethod18(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="schema" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForSchemaRead.cs" Line="19">'UseXmlReaderForSchemaRead.TestMethod18(string)' declares a variable, 'schema', of type 'XmlSchema', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message TypeName="UseXmlReaderForSchemaRead" Category="Microsoft.Security.Xml" CheckId="CA3060" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="100" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForSchemaRead.cs" Line="19">This overload of System.Xml.Schema.XmlSchema.Read method is potentially unsafe, use the overload that takes a XmlReader instance instead</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TestMethod19(System.Xml.XmlTextReader)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForSchemaRead.cs" Line="23">Consider changing the type of parameter 'reader' in 'UseXmlReaderForSchemaRead.TestMethod19(XmlTextReader)' from 'XmlTextReader' to its base type 'XmlReader'. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForSchemaRead.cs" Line="23">The 'this' parameter (or 'Me' in Visual Basic) of 'UseXmlReaderForSchemaRead.TestMethod19(XmlTextReader)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="schema" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForSchemaRead.cs" Line="25">'UseXmlReaderForSchemaRead.TestMethod19(XmlTextReader)' declares a variable, 'schema', of type 'XmlSchema', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UseXmlReaderForValidatingReader" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#TestMethod1213(System.IO.Stream)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForValidatingReader.cs" Line="14">The 'this' parameter (or 'Me' in Visual Basic) of 'UseXmlReaderForValidatingReader.TestMethod1213(Stream)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="vr" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForValidatingReader.cs" Line="16">'UseXmlReaderForValidatingReader.TestMethod1213(Stream)' declares a variable, 'vr', of type 'XmlValidatingReader', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message TypeName="UseXmlReaderForValidatingReader" Category="Microsoft.Security.Xml" CheckId="CA3062" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="100" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForValidatingReader.cs" Line="16">Review that the XML to be parsed here is from a trusted source, otherwise use the constructor overload that takes a XmlReader instance instead and pass in a XmlTextReader with a null XmlResolver and ideally DTD processing disabled</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TestMethod1213Ok(System.Xml.XmlReader)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForValidatingReader.cs" Line="21">In method 'UseXmlReaderForValidatingReader.TestMethod1213Ok(XmlReader)', call System.IDisposable.Dispose on object 'vr' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForValidatingReader.cs" Line="20">The 'this' parameter (or 'Me' in Visual Basic) of 'UseXmlReaderForValidatingReader.TestMethod1213Ok(XmlReader)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="vr" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForValidatingReader.cs" Line="21">'UseXmlReaderForValidatingReader.TestMethod1213Ok(XmlReader)' declares a variable, 'vr', of type 'XmlValidatingReader', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UseXmlReaderForXPathDocument" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#TestMethod16(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForXPathDocument.cs" Line="14">The 'this' parameter (or 'Me' in Visual Basic) of 'UseXmlReaderForXPathDocument.TestMethod16(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="doc" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForXPathDocument.cs" Line="16">'UseXmlReaderForXPathDocument.TestMethod16(string)' declares a variable, 'doc', of type 'XPathDocument', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message TypeName="UseXmlReaderForXPathDocument" Category="Microsoft.Security.Xml" CheckId="CA3059" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="100" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForXPathDocument.cs" Line="16">This overload of the constructor for System.Xml.XPath.Xpath.XPathDocument results in an object instance that is potentially unsafe, use a constructor overload that takes a XmlReader instance instead</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TestMethod17(System.Xml.XmlReader)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForXPathDocument.cs" Line="20">The 'this' parameter (or 'Me' in Visual Basic) of 'UseXmlReaderForXPathDocument.TestMethod17(XmlReader)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="doc" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlReaderForXPathDocument.cs" Line="22">'UseXmlReaderForXPathDocument.TestMethod17(XmlReader)' declares a variable, 'doc', of type 'XPathDocument', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UseXmlSecureResolver" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'UseXmlSecureResolver' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#LoadTest1()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="17">The 'this' parameter (or 'Me' in Visual Basic) of 'UseXmlSecureResolver.LoadTest1()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message TypeName="UseXmlSecureResolver" Category="Microsoft.Security.Xml" CheckId="CA3053" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Name="XslCompiledTransformLoadWrongOverload" Certainty="100" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="21">'UseXmlSecureResolver.LoadTest1()' calls System.Xml.Xsl.XslCompiledTransform.Load(System.String), an overload which does not accept explicit XsltSettings and XmlResolver arguments. This usage is potentially unsafe as untrusted external XML resources may be resolved during the load operation. Replace this usage with a call to an XslCompiledTransform.Load overload that accepts XslSettings and XmlResolver arguments. Specifcy XslSettings.Default as the XslSettings argument or provide an XmlSecureResolver instance or null as the XmlResolver argument. This message may be suppressed if the input is known to be from a trusted source and external resource resolution from locations that are not known in advance must be supported.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LoadTest2()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="25">The 'this' parameter (or 'Me' in Visual Basic) of 'UseXmlSecureResolver.LoadTest2()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message TypeName="ReviewTrustedXsltUse" Category="Microsoft.Security.Xml" CheckId="CA3073" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="100" Level="CriticalError" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="28">Review that the XML and XSL transform is from a trusted source, otherwise revise the XsltSettings to an instance that has disabled document function and script execution</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LoadTest3()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="36">The 'this' parameter (or 'Me' in Visual Basic) of 'UseXmlSecureResolver.LoadTest3()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LoadTest4()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="46">The 'this' parameter (or 'Me' in Visual Basic) of 'UseXmlSecureResolver.LoadTest4()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LoadTest5()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="57">The 'this' parameter (or 'Me' in Visual Basic) of 'UseXmlSecureResolver.LoadTest5()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message TypeName="UseXmlSecureResolver" Category="Microsoft.Security.Xml" CheckId="CA3053" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Name="XslCompiledTransformLoadInsecureXmlResolve" Certainty="100" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="64">'UseXmlSecureResolver.LoadTest5()' calls System.Xml.Xsl.XslCompiledTransform.Load(System.String,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver) and provides an insecure XsltSettings instance and an XmlResolver instance as arguments. This usage is potentially unsafe as untrusted external XML resources may be resolved during the load operation. Either replace the use of XsltSettings.Trusted with XsltSettings.Default (as secure instance of the type) or replace the XmlResolver argurment with null or an XmlSecureResolver instance. This message may be suppressed if the input is known to be from a trusted source and external resource resolution from locations that are not known in advance must be supported.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LoadTest6()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="68">The 'this' parameter (or 'Me' in Visual Basic) of 'UseXmlSecureResolver.LoadTest6()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message TypeName="ReviewTrustedXsltUse" Category="Microsoft.Security.Xml" CheckId="CA3073" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="100" Level="CriticalError" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="71">Review that the XML and XSL transform is from a trusted source, otherwise revise the XsltSettings to an instance that has disabled document function and script execution</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SuppresionTest1()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="310">The 'this' parameter (or 'Me' in Visual Basic) of 'UseXmlSecureResolver.SuppresionTest1()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SuppresionTest2(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="319">The 'this' parameter (or 'Me' in Visual Basic) of 'UseXmlSecureResolver.SuppresionTest2(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SuppresionTest3(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="333">In method 'UseXmlSecureResolver.SuppresionTest3(string)', call System.IDisposable.Dispose on object 'new XmlTextReader(path)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="333">In method 'UseXmlSecureResolver.SuppresionTest3(string)', call System.IDisposable.Dispose on object 'new XmlTextWriter("result2.out", Encoding.ASCII)' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotAllowDtdOnXmlTextReader" Category="Microsoft.Security.Xml" CheckId="CA3054" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="100" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="333">Review that the XML parsed here is from a trusted source, otherwise set settings.DtdProcessing to System.Xml.DtdProcessing.Prohibit or .Ignore</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="328">The 'this' parameter (or 'Me' in Visual Basic) of 'UseXmlSecureResolver.SuppresionTest3(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TransformTest1(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="87">In method 'UseXmlSecureResolver.TransformTest1(string)', call System.IDisposable.Dispose on object 'new XmlTextReader(path)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="87">In method 'UseXmlSecureResolver.TransformTest1(string)', call System.IDisposable.Dispose on object 'new XmlTextWriter("results0.out", Encoding.ASCII)' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotAllowDtdOnXmlTextReader" Category="Microsoft.Security.Xml" CheckId="CA3054" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="100" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="87">Review that the XML parsed here is from a trusted source, otherwise set settings.DtdProcessing to System.Xml.DtdProcessing.Prohibit or .Ignore</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="83">The 'this' parameter (or 'Me' in Visual Basic) of 'UseXmlSecureResolver.TransformTest1(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TransformTest2(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="95">In method 'UseXmlSecureResolver.TransformTest2(string)', call System.IDisposable.Dispose on object 'new XmlTextReader(path)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="95">In method 'UseXmlSecureResolver.TransformTest2(string)', call System.IDisposable.Dispose on object 'new XmlTextWriter("result2.out", Encoding.ASCII)' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotAllowDtdOnXmlTextReader" Category="Microsoft.Security.Xml" CheckId="CA3054" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="100" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="95">Review that the XML parsed here is from a trusted source, otherwise set settings.DtdProcessing to System.Xml.DtdProcessing.Prohibit or .Ignore</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="91">The 'this' parameter (or 'Me' in Visual Basic) of 'UseXmlSecureResolver.TransformTest2(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message TypeName="UseXmlSecureResolver" Category="Microsoft.Security.Xml" CheckId="CA3053" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Name="XslCompiledTransformTransformInsecureXmlResolver" Certainty="100" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="95">'UseXmlSecureResolver.TransformTest2(string)' calls System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver) and passes an instance of XmlResolver as argument. This usage is potentially unsafe as untrusted external XML resources may be resolved during the transform operation. Replace this usage with an instance of XmlSecureResolver or null as the argument. This message may be suppressed if the input is known to be from a trusted source and external resource resolution from locations that are not known in advance must be supported.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TransformTest3(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="104">In method 'UseXmlSecureResolver.TransformTest3(string)', call System.IDisposable.Dispose on object 'new XmlTextReader(path)' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="104">In method 'UseXmlSecureResolver.TransformTest3(string)', call System.IDisposable.Dispose on object 'new XmlTextWriter("results0.out", Encoding.ASCII)' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotAllowDtdOnXmlTextReader" Category="Microsoft.Security.Xml" CheckId="CA3054" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="100" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="104">Review that the XML parsed here is from a trusted source, otherwise set settings.DtdProcessing to System.Xml.DtdProcessing.Prohibit or .Ignore</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="100">The 'this' parameter (or 'Me' in Visual Basic) of 'UseXmlSecureResolver.TransformTest3(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TransformTest4(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="108">The 'this' parameter (or 'Me' in Visual Basic) of 'UseXmlSecureResolver.TransformTest4(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message TypeName="UseXmlSecureResolver" Category="Microsoft.Security.Xml" CheckId="CA3053" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Name="XslCompiledTransformTransformWrongOverload" Certainty="100" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="112">'UseXmlSecureResolver.TransformTest4(string)' calls System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.String), an overload which does not accept an explicit XmlResolver argument. This usage is potentially unsafe as untrusted external XML resources may be resolved during the transform operation. Replace this usage with a call to an XslCompiledTransform.Transform overload that accepts an XmlResolver argument and provide an instance of XmlSecureResolver or null as the argument. This message may be suppressed if the input is known to be from a trusted source and external resource resolution from locations that are not known in advance must be supported.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TransformTest5(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="120">In method 'UseXmlSecureResolver.TransformTest5(string)', call System.IDisposable.Dispose on object 'new XmlTextWriter("result2.out", Encoding.ASCII)' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="116">The 'this' parameter (or 'Me' in Visual Basic) of 'UseXmlSecureResolver.TransformTest5(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message TypeName="UseXmlSecureResolver" Category="Microsoft.Security.Xml" CheckId="CA3053" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Name="XslCompiledTransformTransformWrongOverload" Certainty="100" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="120">'UseXmlSecureResolver.TransformTest5(string)' calls System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter), an overload which does not accept an explicit XmlResolver argument. This usage is potentially unsafe as untrusted external XML resources may be resolved during the transform operation. Replace this usage with a call to an XslCompiledTransform.Transform overload that accepts an XmlResolver argument and provide an instance of XmlSecureResolver or null as the argument. This message may be suppressed if the input is known to be from a trusted source and external resource resolution from locations that are not known in advance must be supported.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#XmlDocumentTest1()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="226">The 'this' parameter (or 'Me' in Visual Basic) of 'UseXmlSecureResolver.XmlDocumentTest1()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="doc" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="228">'UseXmlSecureResolver.XmlDocumentTest1()' declares a variable, 'doc', of type 'XmlDocument', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message TypeName="UseXmlSecureResolver" Category="Microsoft.Security.Xml" CheckId="CA3053" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Name="XmlDocument" Certainty="100" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="228">'UseXmlSecureResolver.XmlDocumentTest1()' instantiates and calls into an XmlDocument instance but does not appear to set its XmlResolver property to a secure value. This usage is potentially unsafe as untrusted external resources may be resolved during read operations. Set the XmlResolver instance to null or an instance of XmlSecureResolver.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#XmlDocumentTest2()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="232">The 'this' parameter (or 'Me' in Visual Basic) of 'UseXmlSecureResolver.XmlDocumentTest2()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#XmlDocumentTest3()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="239">The 'this' parameter (or 'Me' in Visual Basic) of 'UseXmlSecureResolver.XmlDocumentTest3()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message TypeName="UseXmlSecureResolver" Category="Microsoft.Security.Xml" CheckId="CA3053" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Name="XmlDocument" Certainty="100" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="241">'UseXmlSecureResolver.XmlDocumentTest3()' instantiates and calls into an XmlDocument instance but does not appear to set its XmlResolver property to a secure value. This usage is potentially unsafe as untrusted external resources may be resolved during read operations. Set the XmlResolver instance to null or an instance of XmlSecureResolver.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#XmlDocumentTest4(System.Xml.XmlSecureResolver)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="246">The 'this' parameter (or 'Me' in Visual Basic) of 'UseXmlSecureResolver.XmlDocumentTest4(XmlSecureResolver)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#XmlDocumentTest5()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="253">The 'this' parameter (or 'Me' in Visual Basic) of 'UseXmlSecureResolver.XmlDocumentTest5()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#XmlDocumentTest6()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="267">The 'this' parameter (or 'Me' in Visual Basic) of 'UseXmlSecureResolver.XmlDocumentTest6()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message TypeName="UseXmlSecureResolver" Category="Microsoft.Security.Xml" CheckId="CA3053" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Name="XmlDocument" Certainty="100" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="269">'UseXmlSecureResolver.XmlDocumentTest6()' instantiates and calls into an XmlDocument instance but does not appear to set its XmlResolver property to a secure value. This usage is potentially unsafe as untrusted external resources may be resolved during read operations. Set the XmlResolver instance to null or an instance of XmlSecureResolver.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#XmlDocumentTest7()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="278">The 'this' parameter (or 'Me' in Visual Basic) of 'UseXmlSecureResolver.XmlDocumentTest7()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#XmlDocumentTest8()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="289">The 'this' parameter (or 'Me' in Visual Basic) of 'UseXmlSecureResolver.XmlDocumentTest8()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message TypeName="UseXmlSecureResolver" Category="Microsoft.Security.Xml" CheckId="CA3053" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Name="XmlDocument" Certainty="100" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="292">'UseXmlSecureResolver.XmlDocumentTest8()' instantiates and calls into an XmlDocument instance but does not appear to set its XmlResolver property to a secure value. This usage is potentially unsafe as untrusted external resources may be resolved during read operations. Set the XmlResolver instance to null or an instance of XmlSecureResolver.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#XmlReaderTest1()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="130">In method 'UseXmlSecureResolver.XmlReaderTest1()', call System.IDisposable.Dispose on object 'reader' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="128">The 'this' parameter (or 'Me' in Visual Basic) of 'UseXmlSecureResolver.XmlReaderTest1()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="reader" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="130">'UseXmlSecureResolver.XmlReaderTest1()' declares a variable, 'reader', of type 'XmlReader', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message TypeName="UseXmlSecureResolver" Category="Microsoft.Security.Xml" CheckId="CA3053" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Name="XmlReaderCreateWrongOverload" Certainty="100" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="130">'UseXmlSecureResolver.XmlReaderTest1()' instantiates an XmlReader instance by calling System.Xml.XmlReader.Create(System.String), an overload which does not accept an explicit XmlReaderSettings argument. This usage is potentially unsafe as untrusted external resources may be resolved during read operations. Provide a XmlReaderSettings instance and set the XmlResolver property to null or an instance of XmlSecureResolver.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#XmlReaderTest10()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="212">In method 'UseXmlSecureResolver.XmlReaderTest10()', call System.IDisposable.Dispose on object 'reader' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="206">The 'this' parameter (or 'Me' in Visual Basic) of 'UseXmlSecureResolver.XmlReaderTest10()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="reader" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="212">'UseXmlSecureResolver.XmlReaderTest10()' declares a variable, 'reader', of type 'XmlReader', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#XmlReaderTest2()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="138">In method 'UseXmlSecureResolver.XmlReaderTest2()', call System.IDisposable.Dispose on object 'reader' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="134">The 'this' parameter (or 'Me' in Visual Basic) of 'UseXmlSecureResolver.XmlReaderTest2()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="reader" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="138">'UseXmlSecureResolver.XmlReaderTest2()' declares a variable, 'reader', of type 'XmlReader', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#XmlReaderTest3(System.Xml.XmlSecureResolver)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="146">In method 'UseXmlSecureResolver.XmlReaderTest3(XmlSecureResolver)', call System.IDisposable.Dispose on object 'reader' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="142">The 'this' parameter (or 'Me' in Visual Basic) of 'UseXmlSecureResolver.XmlReaderTest3(XmlSecureResolver)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="reader" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="146">'UseXmlSecureResolver.XmlReaderTest3(XmlSecureResolver)' declares a variable, 'reader', of type 'XmlReader', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#XmlReaderTest4(System.Xml.XmlSecureResolver)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="154">In method 'UseXmlSecureResolver.XmlReaderTest4(XmlSecureResolver)', call System.IDisposable.Dispose on object 'reader' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="150">The 'this' parameter (or 'Me' in Visual Basic) of 'UseXmlSecureResolver.XmlReaderTest4(XmlSecureResolver)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="reader" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="154">'UseXmlSecureResolver.XmlReaderTest4(XmlSecureResolver)' declares a variable, 'reader', of type 'XmlReader', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="resolver" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="150">Parameter 'resolver' of 'UseXmlSecureResolver.XmlReaderTest4(XmlSecureResolver)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message TypeName="UseXmlSecureResolver" Category="Microsoft.Security.Xml" CheckId="CA3053" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Name="XmlReaderCreateInsecureXmlResolver" Certainty="100" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="154">'UseXmlSecureResolver.XmlReaderTest4(XmlSecureResolver)' instantiates an XmlReader instance by calling System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings) and provided an XmlReaderSettings instance with an insecure XmlResolver property value. This usage is potentially unsafe as untrusted external resources may be resolved during read operations. Provide a XmlReaderSettings instance and set the XmlResolver property to null or an instance of XmlSecureResolver.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#XmlReaderTest5()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="168">In method 'UseXmlSecureResolver.XmlReaderTest5()', call System.IDisposable.Dispose on object 'reader' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="158">The 'this' parameter (or 'Me' in Visual Basic) of 'UseXmlSecureResolver.XmlReaderTest5()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="reader" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="168">'UseXmlSecureResolver.XmlReaderTest5()' declares a variable, 'reader', of type 'XmlReader', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#XmlReaderTest6()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="177">In method 'UseXmlSecureResolver.XmlReaderTest6()', call System.IDisposable.Dispose on object 'reader' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="172">The 'this' parameter (or 'Me' in Visual Basic) of 'UseXmlSecureResolver.XmlReaderTest6()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="reader" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="177">'UseXmlSecureResolver.XmlReaderTest6()' declares a variable, 'reader', of type 'XmlReader', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#XmlReaderTest7()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="186">In method 'UseXmlSecureResolver.XmlReaderTest7()', call System.IDisposable.Dispose on object 'reader' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="181">The 'this' parameter (or 'Me' in Visual Basic) of 'UseXmlSecureResolver.XmlReaderTest7()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="reader" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="186">'UseXmlSecureResolver.XmlReaderTest7()' declares a variable, 'reader', of type 'XmlReader', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message TypeName="UseXmlSecureResolver" Category="Microsoft.Security.Xml" CheckId="CA3053" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Name="XmlReaderCreateInsecureXmlResolver" Certainty="100" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="186">'UseXmlSecureResolver.XmlReaderTest7()' instantiates an XmlReader instance by calling System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings) and provided an XmlReaderSettings instance with an insecure XmlResolver property value. This usage is potentially unsafe as untrusted external resources may be resolved during read operations. Provide a XmlReaderSettings instance and set the XmlResolver property to null or an instance of XmlSecureResolver.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#XmlReaderTest8()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="196">In method 'UseXmlSecureResolver.XmlReaderTest8()', call System.IDisposable.Dispose on object 'reader' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="190">The 'this' parameter (or 'Me' in Visual Basic) of 'UseXmlSecureResolver.XmlReaderTest8()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="reader" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="196">'UseXmlSecureResolver.XmlReaderTest8()' declares a variable, 'reader', of type 'XmlReader', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message TypeName="UseXmlSecureResolver" Category="Microsoft.Security.Xml" CheckId="CA3053" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Name="XmlReaderCreateInsecureXmlResolver" Certainty="100" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="196">'UseXmlSecureResolver.XmlReaderTest8()' instantiates an XmlReader instance by calling System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings) and provided an XmlReaderSettings instance with an insecure XmlResolver property value. This usage is potentially unsafe as untrusted external resources may be resolved during read operations. Provide a XmlReaderSettings instance and set the XmlResolver property to null or an instance of XmlSecureResolver.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#XmlReaderTest9(System.Xml.XmlReaderSettings)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="202">In method 'UseXmlSecureResolver.XmlReaderTest9(XmlReaderSettings)', call System.IDisposable.Dispose on object 'reader' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="200">The 'this' parameter (or 'Me' in Visual Basic) of 'UseXmlSecureResolver.XmlReaderTest9(XmlReaderSettings)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="reader" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="202">'UseXmlSecureResolver.XmlReaderTest9(XmlReaderSettings)' declares a variable, 'reader', of type 'XmlReader', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message TypeName="UseXmlSecureResolver" Category="Microsoft.Security.Xml" CheckId="CA3053" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Name="XmlReaderCreateInsecureXmlResolver" Certainty="100" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="UseXmlSecureResolver.cs" Line="202">'UseXmlSecureResolver.XmlReaderTest9(XmlReaderSettings)' instantiates an XmlReader instance by calling System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings) and provided an XmlReaderSettings instance with an insecure XmlResolver property value. This usage is potentially unsafe as untrusted external resources may be resolved during read operations. Provide a XmlReaderSettings instance and set the XmlResolver property to null or an instance of XmlSecureResolver.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="SecurityXmlRuleTests">
       <Types>
        <Type Name="DoNotAddStringsToXmlSchema" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#TestMethod(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotAddStringsToXmlSchema" Category="Microsoft.Security.Xml" CheckId="CA3061" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="NonBreaking">
             <Issue Certainty="100" Level="Error" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotAddStringsToXmlSchema.cs" Line="17">This overload of System.Xml.Schema.XmlSchemaCollection.Add method is potentially unsafe, use any other overload that takes a XmlReader instance or a XmlResolver instance, resolver should either be set to null or an instance of XmlSecureResolver</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotAddStringsToXmlSchema.cs" Line="13">The 'this' parameter (or 'Me' in Visual Basic) of 'DoNotAddStringsToXmlSchema.TestMethod(string, string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TestMethod(System.Xml.Schema.XmlSchema)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-10-31 18:45:20Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="c:\MSECTools\SecDevMain\src\FxCop\Source\FxCopTestData\SecurityXmlRuleTests" File="DoNotAddStringsToXmlSchema.cs" Line="21">The 'this' parameter (or 'Me' in Visual Basic) of 'DoNotAddStringsToXmlSchema.TestMethod(XmlSchema)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020">
   <Name>Avoid namespaces with few types</Name>
   <Description>A namespace should generally have more than five types.</Description>
   <Resolution Name="Default">Consider merging the types defined in '{0}' with another namespace.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182130.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="DesignRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811">
   <Name>Avoid uncalled private code</Name>
   <Description>There is uncalled code that is not externally visible and is not a known runtime entry point. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</Description>
   <Resolution Name="Default">{0} appears to have no upstream public or protected callers.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182264.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="PerformanceRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812">
   <Name>Avoid uninstantiated internal classes</Name>
   <Description>An internal class was detected that is apparently never instantiated. This rule does not attempt to detect late-bound creation and will generate false positives if instances of a type are only created in this way (for example, by means of Activator.CreateInstance or by passing the type as an argument to a TypeConverter constructor).</Description>
   <Resolution Name="Default">{0} is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182265.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="PerformanceRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823">
   <Name>Avoid unused private fields</Name>
   <Description>Private fields were detected that do not appear to be accessed within the assembly. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</Description>
   <Resolution Name="Default">It appears that field {0} is never used or is only ever assigned to. Use this field or remove it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245042.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="PerformanceRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011">
   <Name>Consider passing base types as parameters</Name>
   <Description>Using base types as parameters to methods improves re-use of these methods if you only use methods &amp; properties from the parameter's base class. E.g. use Stream instead of FileStream as a parameter when only calling Stream.Read(), this makes the method work on all kind of streams instead of just File streams.</Description>
   <Resolution Name="Default">Consider changing the type of parameter {0} in {1} from {2} to its base type {3}. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/3hk32yyz.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Error</MessageLevel>
   <File Name="DesignRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DESCannotBeUsed" Category="Microsoft.Security.Cryptography" CheckId="CA5351">
   <Name>Do not use DES</Name>
   <Description>DES is banned by SDL</Description>
   <Resolution Name="Default">{0} calls into an instance of the {1} type, which implements a cryptographically insecure encryption algorithm that is banned by the SDL. Replace this usage with an AES encryption algorithm (AES-256, AES-192 and AES-128 are acceptable) with a key length greater than or equal to 128 bits.</Resolution>
   <Owner />
   <Url>http://go.microsoft.com/fwlink/?LinkId=282614&amp;clcid=0x409</Url>
   <Email>cbdpm@microsoft.com</Email>
   <MessageLevel Certainty="100">Error</MessageLevel>
   <File Name="SecurityCryptographyRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DSACannotBeUsed" Category="Microsoft.Security.Cryptography" CheckId="CA5356">
   <Name>Do not use DSA</Name>
   <Description>DSA is banned by SDL</Description>
   <Resolution Name="Default">{0} calls into an instance of the {1} type, which implements a cryptographically insecure signature-creation mechanism that is banned by the SDL. Replace this usage with RSA or Diffie-Hellman with a key length greater than or equal to 2048-bits, or ECDSA or ECDH with a key length greater than or equal 256 bits.</Resolution>
   <Owner />
   <Url>http://go.microsoft.com/fwlink/?LinkId=282614&amp;clcid=0x409</Url>
   <Email>cbdpm@microsoft.com</Email>
   <MessageLevel Certainty="100">CriticalWarning</MessageLevel>
   <File Name="SecurityCryptographyRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DeclareTypesInMicrosoftOrSystemNamespace" Category="Microsoft.MSInternal" CheckId="CA904">
   <Name>Declare types in microsoft or system namespace</Name>
   <Description>Microsoft namespaces must start with 'Microsoft' or 'System'. Internal assemblies (those that will not be shipped outside of Microsoft) should contain namespaces prefixed with 'MS'.</Description>
   <Resolution Name="Default">Redefine the types in namespace '{0}' in the Microsoft or System namespace. Public types that will never ship externally can be defined in the MS namespace. Consider disabling this rule when analyzing code that does not ship externally.</Resolution>
   <Owner />
   <Url>http://sharepoint/sites/codeanalysis/Wiki Pages/Rule - Declare Types In Microsoft Or System Namespace.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="MSInternalRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000">
   <Name>Dispose objects before losing scope</Name>
   <Description>If a disposable object is not explicitly disposed before all references to it are out of scope, the object will be disposed at some indeterminate time when the garbage collector runs the finalizer of the object. Because an exceptional event might occur that will prevent the finalizer of the object from running, the object should be explicitly disposed instead.</Description>
   <Resolution Name="ExceptionEdge">In method {0}, object {1} is not disposed along all exception paths. Call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Resolution Name="NonExceptionEdge">In method {0}, call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182289.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="DataflowRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202">
   <Name>Do not dispose objects multiple times</Name>
   <Description>A correctly implemented Dispose method can be called multiple times without throwing an exception. However, this is not guaranteed and to avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.</Description>
   <Resolution Name="Default">Object {0} can be disposed more than once in method {1}. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 41</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182334.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="DataflowRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303">
   <Name>Do not pass literals as localized parameters</Name>
   <Description>Literal strings that are embedded in source code are difficult to localize. Avoid passing literal strings as arguments in circumstances where a localized string is generally expected.</Description>
   <Resolution Name="KnownValue">Method {0} passes a literal string as parameter '{1}' of a call to {2}. Retrieve the following string(s) from a resource table instead: {3}.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182187.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="DataflowRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotAddStringsToXmlSchema" Category="Microsoft.Security.Xml" CheckId="CA3061">
   <Name>Do not add strings to Xml schema</Name>
   <Description>Do not use unsafe overloads of System.Xml.Schema.XmlSchemaCollection.Add. This API internally enables DTD processing on the XML reader instance used, and uses UrlResolver for resolving external XML entities. The outcome is information disclosure. Content from file system or network shares for the machine processing the XML can be exposed to attacker. In addition, an attacker can use this as a DoS vector.</Description>
   <Resolution Name="Default">This overload of System.Xml.Schema.XmlSchemaCollection.Add method is potentially unsafe, use any other overload that takes a XmlReader instance or a XmlResolver instance, resolver should either be set to null or an instance of XmlSecureResolver</Resolution>
   <Owner />
   <Url>http://go.microsoft.com/fwlink/?LinkId=282614&amp;clcid=0x409</Url>
   <Email>cbdpm@microsoft.com</Email>
   <MessageLevel Certainty="100">Error</MessageLevel>
   <File Name="SecurityXmlRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotAllowDtdOnXmlReader" Category="Microsoft.Security.Xml" CheckId="CA3055">
   <Name>Do not allow Dtd on XmlReader</Name>
   <Description>Prohibit DTD processing when using XmlReader on untrusted sources. Enabling DTD processing on the XML reader and using UrlResolver for resolving external XML entities may lead to information disclosure. Content from file system or network shares for the machine processing the XML can be exposed to attacker. In addition, an attacker can use this as a DoS vector.</Description>
   <Resolution Name="Default">XmlReader by default is safe, but DtdProcessing is set to System.Xml.DtdProcessing.Parse. Review that XML is coming from a trusted source.</Resolution>
   <Owner />
   <Url>http://go.microsoft.com/fwlink/?LinkId=282614&amp;clcid=0x409</Url>
   <Email>cbdpm@microsoft.com</Email>
   <MessageLevel Certainty="100">Error</MessageLevel>
   <File Name="SecurityXmlRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotAllowDtdOnXmlTextReader" Category="Microsoft.Security.Xml" CheckId="CA3054">
   <Name>Do not allow Dtd on XmlTextReader</Name>
   <Description>Prohibit DTD processing when using XmlTextReader on untrusted sources. Enabling DTD processing on the XML reader and using UrlResolver for resolving external XML entities may lead to information disclosure. Content from file system or network shares for the machine processing the XML can be exposed to attacker. In addition, an attacker can use this as a DoS vector.</Description>
   <Resolution Name="Default">Review that the XML parsed here is from a trusted source, otherwise set settings.DtdProcessing to System.Xml.DtdProcessing.Prohibit or .Ignore</Resolution>
   <Owner />
   <Url>http://go.microsoft.com/fwlink/?LinkId=282614&amp;clcid=0x409</Url>
   <Email>cbdpm@microsoft.com</Email>
   <MessageLevel Certainty="100">Error</MessageLevel>
   <File Name="SecurityXmlRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031">
   <Name>Do not catch general exception types</Name>
   <Description>You should not catch Exception or SystemException. Catching generic exception types can hide run-time problems from the library user, and can complicate debugging. You should catch only those exceptions that you can handle gracefully.</Description>
   <Resolution Name="Default">Modify {0} to catch a more specific exception than {1} or rethrow the exception.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182137.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="DesignRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotUseLoadXml" Category="Microsoft.Security.Xml" CheckId="CA3057">
   <Name>Do not use LoadXml</Name>
   <Description>Do not use unsafe overloads of System.Xml.XmlDocument/XmlDataDocument LoadXml API. This API internally enables DTD processing on the XML reader instance used, and uses UrlResolver for resolving external XML entities. The outcome is information disclosure. Content from file system or network shares for the machine processing the XML can be exposed to attacker. In addition, an attacker can use this as a DoS vector.</Description>
   <Resolution Name="Default">Using System.Xml.XmlDocument/XmlDataDocument LoadXml() method is potentially unsafe, replace with the Load() overload that takes an XmlReader instance</Resolution>
   <Owner />
   <Url>http://go.microsoft.com/fwlink/?LinkId=282614&amp;clcid=0x409</Url>
   <Email>cbdpm@microsoft.com</Email>
   <MessageLevel Certainty="100">Error</MessageLevel>
   <File Name="SecurityXmlRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotUseSetInnerXml" Category="Microsoft.Security.Xml" CheckId="CA3058">
   <Name>Do not use SetInnerXml</Name>
   <Description>Do not use the unsafe setter of InnerXml property of System.Xml.XmlDocument/XmlDataDocument. This API internally enables DTD processing on the XML reader instance used, and uses UrlResolver for resolving external XML entities. The outcome is information disclosure. Content from file system or network shares for the machine processing the XML can be exposed to attacker. In addition, an attacker can use this as a DoS vector.</Description>
   <Resolution Name="Default">Setting the InnerXml property of System.Xml.XmlDocument/XmlDataDocument is potentially unsafe, replace with a call to the Load() method overload that takes an XmlReader instance</Resolution>
   <Owner />
   <Url>http://go.microsoft.com/fwlink/?LinkId=282614&amp;clcid=0x409</Url>
   <Email>cbdpm@microsoft.com</Email>
   <MessageLevel Certainty="100">Error</MessageLevel>
   <File Name="SecurityXmlRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotUseXslTransform" Category="Microsoft.Security.Xml" CheckId="CA3050">
   <Name>Do not use XslTransform</Name>
   <Description>Do not use obsolete and unsafe System.Xml.Xsl.XslTransform API. This API allows processing script within XSL, which, on untrusted XSL input, may lead to malicious code execution.</Description>
   <Resolution Name="Default">System.Xml.Xsl.XslTransform is obsolete and unsafe, replace instances with System.Xml.Xsl.XslCompiledTransform.</Resolution>
   <Owner />
   <Url>http://go.microsoft.com/fwlink/?LinkId=282614&amp;clcid=0x409</Url>
   <Email>cbdpm@microsoft.com</Email>
   <MessageLevel Certainty="100">CriticalError</MessageLevel>
   <File Name="SecurityXmlRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709">
   <Name>Identifiers should be cased correctly</Name>
   <Description>Type, namespace, and member identifiers are Pascal-cased. Parameter identifiers are camel-cased. Two letter acronyms within these identifiers should be upper-cased, for example, use System.IO instead of System.Io. Acronyms of three or more letters should be Pascal-cased, for example, use System.Xml instead of System.XML. The pascal-casing convention capitalizes the first letter of each word, as in BackColor. The camel-casing convention formats the first letter of the first word in lowercase and capitalizes the first letter of all subsequent words, as in backgroundColor. Although it may be common practice for some two letter acronyms to not be fully capitalized, violations of this rule should not be excluded for this reason. For example, 'DbConnection', is common but incorrect; use DBConnection. A violation of this rule might be required for compatibility with existing, non-managed symbol schemes. In general, however, these symbols should not be visible outside the assembly that uses them.</Description>
   <Resolution Name="Member">Correct the casing of '{0}' in member name {1} by changing it to '{2}'.</Resolution>
   <Resolution Name="MemberParameter">In member {0}, correct the casing of '{1}' in parameter name {2} by changing it to '{3}'.</Resolution>
   <Resolution Name="Type">Correct the casing of '{0}' in type name {1} by changing it to '{2}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182240.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="85">Error</MessageLevel>
   <File Name="NamingRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
   <Name>Identifiers should be spelled correctly</Name>
   <Description>The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</Description>
   <Resolution Name="MemberParameter">In method {0}, correct the spelling of '{1}' in parameter name {2} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="MemberParameterMoreMeaningfulName">In method {0}, consider providing a more meaningful name than parameter name {1}.</Resolution>
   <Resolution Name="Type">Correct the spelling of '{0}' in type name {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264492.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="NamingRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720">
   <Name>Identifiers should not contain type names</Name>
   <Description>Avoid using language-specific types name in parameters and members and data type identifiers in parameters. Types names might not be intuitive for all developers. It is recommended that you select a generic name, such as 'value', instead. If this is not sufficient, be sure to use the type name as it is defined in the .NET Framework Library and avoid language-specific type names completely. Some examples of C#-specific type names are 'float' (use 'Single' if a generic name is not sufficient), and 'ulong' (use 'UInt64' if a generic name is not sufficient).</Description>
   <Resolution Name="LanguageIndependentMemberParameter">In member {0}, consider replacing the data type identifier '{1}' in parameter name {2} with a more generic term, such as 'value'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb531486.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="NamingRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707">
   <Name>Identifiers should not contain underscores</Name>
   <Description>Do not use underscores when specifying identifiers. Some generated Visual Studio identifiers for applications contain underscore characters. Underscore characters should generally be avoided in public identifiers.</Description>
   <Resolution Name="Type">Remove the underscores from type name {0}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182245.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="NamingRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="MD5CannotBeUsed" Category="Microsoft.Security.Cryptography" CheckId="CA5350">
   <Name>Do not use MD5</Name>
   <Description>MD5 is banned by SDL</Description>
   <Resolution Name="Default">{0} calls into an instance of the {1} type, which implements a cryptographically insecure hashing function. Hash collisions are computationally feasible for the MD5 and HMACMD5 algorithms and are banned by the SDL. Replace this usage with a SHA-2 family hash algorithm (SHA512, SHA384, SHA256).</Resolution>
   <Owner />
   <Url>http://go.microsoft.com/fwlink/?LinkId=282614&amp;clcid=0x409</Url>
   <Email>cbdpm@microsoft.com</Email>
   <MessageLevel Certainty="100">Error</MessageLevel>
   <File Name="SecurityCryptographyRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014">
   <Name>Mark assemblies with CLSCompliantAttribute</Name>
   <Description>Assemblies should explicitly state their CLS compliance using the CLSCompliant attribute. An assembly without this attribute is not CLS-compliant. Assemblies, modules, and types can be CLS-compliant even if some parts of the assembly, module, or type are not CLS-compliant. The following rules apply: 1) If the element is marked CLSCompliant, any noncompliant members must have the CLSCompliant attribute present with its argument set to false. 2) A comparable CLS-compliant alternative member must be supplied for each member that is not CLS-compliant.</Description>
   <Resolution Name="Default">Mark {0} with CLSCompliant(true) because it exposes externally visible types.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182156.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="DesignRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822">
   <Name>Mark members as static</Name>
   <Description>Methods which do not access instance data or call instance methods can be marked as static (Shared in Visual Basic). After doing so, the compiler will emit non-virtual call sites to these members which will prevent a check at runtime for each call that ensures the current object pointer is non-null. This can result in a measurable performance gain for performance-sensitive code. In some cases, the failure to access the current object instance represents a correctness issue.</Description>
   <Resolution Name="Default">The 'this' parameter (or 'Me' in Visual Basic) of {0} is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245046.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="PerformanceRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="RC2CannotBeUsed" Category="Microsoft.Security.Cryptography" CheckId="CA5352">
   <Name>Do not use RC2</Name>
   <Description>RC2 is banned by SDL</Description>
   <Resolution Name="Default">{0} calls into an instance of the {1} type, which implements a cryptographically insecure encryption algorithm that is banned by the SDL. Replace this usage with an AES encryption algorithm (AES-256, AES-192 and AES-128 are acceptable) with a key length greater than or equal to 128 bits.</Resolution>
   <Owner />
   <Url>http://go.microsoft.com/fwlink/?LinkId=282614&amp;clcid=0x409</Url>
   <Email>cbdpm@microsoft.com</Email>
   <MessageLevel Certainty="100">Error</MessageLevel>
   <File Name="SecurityCryptographyRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="RIPEMD160IsNotRecommended" Category="Microsoft.Security.Cryptography" CheckId="CA5355">
   <Name>Do not use RIPEMD160</Name>
   <Description>RIPEMD-160 is banned by SDL</Description>
   <Resolution Name="Default">{0} calls into an instance of the {1} type, which implements a cryptographically insecure hashing function. Hash collisions are computationally feasible for the RIPEMD hash algorithms and are banned by the SDL. Replace this usage with a SHA-2 family hash algorithm (SHA512, SHA384, SHA256).</Resolution>
   <Owner />
   <Url>http://go.microsoft.com/fwlink/?LinkId=282614&amp;clcid=0x409</Url>
   <Email>cbdpm@microsoft.com</Email>
   <MessageLevel Certainty="100">CriticalWarning</MessageLevel>
   <File Name="SecurityCryptographyRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804">
   <Name>Remove unused locals</Name>
   <Description>Remove locals that are not used or are only assigned to in method implementations.</Description>
   <Resolution Name="Default">{0} declares a variable, {1}, of type {2}, which is never used or is only assigned to. Use this variable or remove it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182278.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="PerformanceRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="ReviewClassesDerivedFromXmlTextReader" Category="Microsoft.Security.Xml" CheckId="CA3074">
   <Name>Review classes derived from XmlTextReader</Name>
   <Description>Review code to insure that  DTD prosessing is disabled on all instances of classes derived from System.Xml.XmlTextReader. Enabling DTD processing on the XML reader and using UrlResolver for resolving external XML entities may lead to information disclosure. Content from file system or network shares for the machine processing the XML can be exposed to attacker. In addition, an attacker can use this as a DoS vector.</Description>
   <Resolution Name="Default">{0} is a child of XmlTextReader which is unsafe when used to process untrusted XML, review that the XML parsed by this instance is always from a trusted source, or disable DTD processing on this instance, by setting it’s DtdProcessing to DtdProcessing.Ignore or Prohibit (CLR &gt; 3.5) or set ProhibitDtd to true (CLR &lt;= 3.5)";&#xD;&#xA;    </Resolution>
   <Owner />
   <Url>http://go.microsoft.com/fwlink/?LinkId=282614&amp;clcid=0x409</Url>
   <Email>cbdpm@microsoft.com</Email>
   <MessageLevel Certainty="100">Error</MessageLevel>
   <File Name="SecurityXmlRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="ReviewDataViewCollectionString" Category="Microsoft.Security.Xml" CheckId="CA3065">
   <Name>Review DataView CollectionString</Name>
   <Description>Review code to insure that usage of System.Data.DataViewManager.DataViewSettingCollectionString input is sanitized to not contain DTD. Enabling DTD processing on the XML reader and using UrlResolver for resolving external XML entities may lead to information disclosure. Content from file system or network shares for the machine processing the XML can be exposed to attacker. In addition, an attacker can use this as a DoS vector.</Description>
   <Resolution Name="Default">Review that the value passed in to the System.Data.DataViewManager.DataViewSettingCollectionString setter is from a trusted source, otherwise avoid using this class or sanitize the input value to not contain DTD</Resolution>
   <Owner />
   <Url>http://go.microsoft.com/fwlink/?LinkId=282614&amp;clcid=0x409</Url>
   <Email>cbdpm@microsoft.com</Email>
   <MessageLevel Certainty="100">Error</MessageLevel>
   <File Name="SecurityXmlRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="ReviewDtdProcessingAssignment" Category="Microsoft.Security.Xml" CheckId="CA3069">
   <Name>Review DtdProcessing assignment</Name>
   <Description>Review all code that enables DtdProcessing to insure that it is necessary and properly documented. Enabling DTD processing on the XML reader and using UrlResolver for resolving external XML entities may lead to information disclosure. Content from file system or network shares for the machine processing the XML can be exposed to attacker. In addition, an attacker can use this as a DoS vector.</Description>
   <Resolution Name="Default">Review this assignment to ensure that DTD processing is indeed needed and that inheritance or usage in other .NET classes is all documented and acceptable as not being safe by default</Resolution>
   <Owner />
   <Url>http://go.microsoft.com/fwlink/?LinkId=282614&amp;clcid=0x409</Url>
   <Email>cbdpm@microsoft.com</Email>
   <MessageLevel Certainty="100">Error</MessageLevel>
   <File Name="SecurityXmlRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="ReviewTrustedXsltUse" Category="Microsoft.Security.Xml" CheckId="CA3073">
   <Name>Review Trusted Xslt use</Name>
   <Description>Review code to insure that System.Xml.Xsl.XsltSettings::TrustedXslt is set from a trusted source. This pattern allows processing script within XSL, which, on untrusted XSL input, may lead to malicious code execution.</Description>
   <Resolution Name="Default">Review that the XML and XSL transform is from a trusted source, otherwise revise the XsltSettings to an instance that has disabled document function and script execution</Resolution>
   <Owner />
   <Url>http://go.microsoft.com/fwlink/?LinkId=282614&amp;clcid=0x409</Url>
   <Email>cbdpm@microsoft.com</Email>
   <MessageLevel Certainty="100">CriticalError</MessageLevel>
   <File Name="SecurityXmlRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801">
   <Name>Review unused parameters</Name>
   <Description>Review parameters in non-virtual methods that are not used in the method body to ensure no correctness exists around failure to access them. Unused parameters incur maintenance and performance costs. Sometimes a violation of this rule can point to an implementation bug in the method (i.e. the parameter should actually have been used in the method body). Exclude warnings of this rule if the parameter has to exist because of backward compatibility.</Description>
   <Resolution Name="Default">Parameter {0} of {1} is never used. Remove the parameter or use it in the method body.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182268.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="UsageRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="ReviewWebControlForSet_Data" Category="Microsoft.Security.Xml" CheckId="CA3066">
   <Name>Review WebControl for set_Data</Name>
   <Description>Review code to insure that System.Web.UI.WebControls.XmlDataSource::Data is set from a trusted source. This pattern allows processing script within XSL, which, on untrusted XSL input, may lead to malicious code execution.</Description>
   <Resolution Name="Default">Review that the XML is from a trusted source, otherwise avoid using this control</Resolution>
   <Owner />
   <Url>http://go.microsoft.com/fwlink/?LinkId=282614&amp;clcid=0x409</Url>
   <Email>cbdpm@microsoft.com</Email>
   <MessageLevel Certainty="100">Error</MessageLevel>
   <File Name="SecurityXmlRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="ReviewWebControlForSet_DocumentContent" Category="Microsoft.Security.Xml" CheckId="CA3067">
   <Name>Review WebControl for set_DocumentContent</Name>
   <Description>Review code to insure that System.Web.UI.WebControls.Xml::DocumentContent is set from a trusted source. This pattern allows processing script within XSL, which, on untrusted XSL input, may lead to malicious code execution.</Description>
   <Resolution Name="Default">Review that the XML is from a trusted source, otherwise avoid using this control</Resolution>
   <Owner />
   <Url>http://go.microsoft.com/fwlink/?LinkId=282614&amp;clcid=0x409</Url>
   <Email>cbdpm@microsoft.com</Email>
   <MessageLevel Certainty="100">Error</MessageLevel>
   <File Name="SecurityXmlRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="RijndaelCannotBeUsed" Category="Microsoft.Security.Cryptography" CheckId="CA5357">
   <Name>Do not use Rijndael</Name>
   <Description>Rijndael is not recommended by SDL</Description>
   <Resolution Name="Default">{0} calls into an instance of the {1} type, which implements a cryptographically insecure encryption algorithm that is banned by the SDL. Replace this usage with an AES encryption algorithm (AES-256, AES-192 and AES-128 are acceptable) with a key length greater than or equal to 128 bits.</Resolution>
   <Owner />
   <Url>http://go.microsoft.com/fwlink/?LinkId=282614&amp;clcid=0x409</Url>
   <Email>cbdpm@microsoft.com</Email>
   <MessageLevel Certainty="100">CriticalWarning</MessageLevel>
   <File Name="SecurityCryptographyRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="SHA1CannotBeUsed" Category="Microsoft.Security.Cryptography" CheckId="CA5354">
   <Name>Do not use SHA1</Name>
   <Description>SHA-1 is banned by SDL</Description>
   <Resolution Name="Default">{0} calls into an instance of the {1} type, which implements a cryptographically insecure hashing function. Hash collisions are computationally feasible for the SHA-1 and SHA-0 algorithms and are banned by the SDL. Replace this usage with a SHA-2 family hash algorithm (SHA512, SHA384, SHA256).</Resolution>
   <Owner />
   <Url>http://go.microsoft.com/fwlink/?LinkId=282614&amp;clcid=0x409</Url>
   <Email>cbdpm@microsoft.com</Email>
   <MessageLevel Certainty="100">Error</MessageLevel>
   <File Name="SecurityCryptographyRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306">
   <Name>Set locale for data types</Name>
   <Description>In most cases, Locale should be explicitly set to CultureInfo.InvariantCulture on DataSet and DataTable instances. Upon creation of a DataSet or DataTable instance, the Locale is set to the current culture. In most cases, the Locale should be set to CultureInfo.InvariantCulture to guarantee proper sorting behavior in all cultures.</Description>
   <Resolution Name="Default">Be sure to set the {0} Locale property wherever {1} creates an instance of that type.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182188.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="GlobalizationRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053">
   <Name>Static holder types should not have constructors</Name>
   <Description>Instances of types that define only static members do not need to be created. Many compilers will automatically add a public default constructor if no constructor is specified. To prevent this, adding an empty private constructor may be required.</Description>
   <Resolution Name="CSharp2_0">Because type {0} contains only 'static' members, mark it as 'static' to prevent the compiler from adding a default public constructor.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182169.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="DesignRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="TripleDESCannotBeUsed" Category="Microsoft.Security.Cryptography" CheckId="CA5353">
   <Name>Do not use TripleDES</Name>
   <Description>TripleDES is not recommended by SDL</Description>
   <Resolution Name="Default">{0} calls into an instance of the {1} type, which implements a cryptographically insecure encryption algorithm that is banned by the SDL. Replace this usage with an AES encryption algorithm (AES-256, AES-192 and AES-128 are acceptable) with a key length greater than or equal to 128 bits.</Resolution>
   <Owner />
   <Url>http://go.microsoft.com/fwlink/?LinkId=282614&amp;clcid=0x409</Url>
   <Email>cbdpm@microsoft.com</Email>
   <MessageLevel Certainty="100">CriticalWarning</MessageLevel>
   <File Name="SecurityCryptographyRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="UseXmlReaderForDataSetReadXml" Category="Microsoft.Security.Xml" CheckId="CA3063">
   <Name>Use XmlReader for DataSet ReadXml</Name>
   <Description>Do not use unsafe overloads of System.Data.DataSet.ReadXml. This API internally enables DTD processing on the XML reader instance used, and uses UrlResolver for resolving external XML entities. The outcome is information disclosure. Content from file system or network shares for the machine processing the XML can be exposed to attacker. In addition, an attacker can use this as a DoS vector.</Description>
   <Resolution Name="Default">This overload of the System.Data.DataSet.ReadXml method is potentially unsafe, use an overload that takes a XmlReader instance instead</Resolution>
   <Owner />
   <Url>http://go.microsoft.com/fwlink/?LinkId=282614&amp;clcid=0x409</Url>
   <Email>cbdpm@microsoft.com</Email>
   <MessageLevel Certainty="100">Error</MessageLevel>
   <File Name="SecurityXmlRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="UseXmlReaderForDataSetReadXmlSchema" Category="Microsoft.Security.Xml" CheckId="CA3064">
   <Name>Use XmlReader for DataSet ReadXmlSchema</Name>
   <Description>Do not use unsafe overloads of System.Data.DataSet.ReadXmlSchema. This API internally enables DTD processing on the XML reader instance used, and uses UrlResolver for resolving external XML entities. The outcome is information disclosure. Content from file system or network shares for the machine processing the XML can be exposed to attacker. In addition, an attacker can use this as a DoS vector.</Description>
   <Resolution Name="Default">This overload of the System.Data.DataSet.ReadXmlSchema method is potentially unsafe, use an overload that takes a XmlReader instance instead</Resolution>
   <Owner />
   <Url>http://go.microsoft.com/fwlink/?LinkId=282614&amp;clcid=0x409</Url>
   <Email>cbdpm@microsoft.com</Email>
   <MessageLevel Certainty="100">Error</MessageLevel>
   <File Name="SecurityXmlRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="UseXmlReaderForDataTableReadXml" Category="Microsoft.Security.Xml" CheckId="CA3071">
   <Name>Use XmlReader for DataTable ReadXml</Name>
   <Description>Do not use unsafe overloads of System.Data.DataTable.ReadXml. This API internally enables DTD processing on the XML reader instance used, and uses UrlResolver for resolving external XML entities. The outcome is information disclosure. Content from file system or network shares for the machine processing the XML can be exposed to attacker. In addition, an attacker can use this as a DoS vector.</Description>
   <Resolution Name="Default">This overload of the System.Data.DataTable.ReadXml method is potentially unsafe, use an overload that takes a XmlReader instance instead</Resolution>
   <Owner />
   <Url>http://go.microsoft.com/fwlink/?LinkId=282614&amp;clcid=0x409</Url>
   <Email>cbdpm@microsoft.com</Email>
   <MessageLevel Certainty="100">Error</MessageLevel>
   <File Name="SecurityXmlRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="UseXmlReaderForDataTableReadXmlSchema" Category="Microsoft.Security.Xml" CheckId="CA3072">
   <Name>Use XmlReader for DataTable ReadXmlSchema</Name>
   <Description>Checks for usage of an unsafe overload of  System.Data.DataTable.ReadXmlSchema. This API internally enables DTD processing on the XML reader instance used, and uses UrlResolver for resolving external XML entities. The outcome is information disclosure. Content from file system or network shares for the machine processing the XML can be exposed to attacker. In addition, an attacker can use this as a DoS vector.</Description>
   <Resolution Name="Default">This overload of the System.Data.DataTable.ReadXmlSchema method is potentially unsafe, use an overload that takes a XmlReader instance instead</Resolution>
   <Owner />
   <Url>http://go.microsoft.com/fwlink/?LinkId=282614&amp;clcid=0x409</Url>
   <Email>cbdpm@microsoft.com</Email>
   <MessageLevel Certainty="100">Error</MessageLevel>
   <File Name="SecurityXmlRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="UseXmlReaderForDeserialize" Category="Microsoft.Security.Xml" CheckId="CA3070">
   <Name>Use XmlReader for Deserialize</Name>
   <Description>Do not use unsafe overloads of System.Xml.Serialization.XmlSerializer.Deserialize. This API internally enables DTD processing on the XML reader instance used but doesn’t allow external entity resolution, enabling the attacker to DoS the machine processing the XML with a single especially crafted XML input.</Description>
   <Resolution Name="Default">This overload of System.Xml.Serialization.XmlSerializer.Deserialize method is potentially unsafe, use an overload that takes a XmlReader instance instead</Resolution>
   <Owner />
   <Url>http://go.microsoft.com/fwlink/?LinkId=282614&amp;clcid=0x409</Url>
   <Email>cbdpm@microsoft.com</Email>
   <MessageLevel Certainty="100">Warning</MessageLevel>
   <File Name="SecurityXmlRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="UseXmlReaderForLoad" Category="Microsoft.Security.Xml" CheckId="CA3056">
   <Name>Use XmlReader for Load</Name>
   <Description>Do not use unsafe overloads of System.Xml.XmlDocument/XmlDataDocument Load. This API internally enables DTD processing on the XML reader instance used, and uses UrlResolver for resolving external XML entities. The outcome is information disclosure. Content from file system or network shares for the machine processing the XML can be exposed to attacker. In addition, an attacker can use this as a DoS vector.</Description>
   <Resolution Name="Default">Using this overload of System.Xml.XmlDocument/XmlDataDocument Load() method is potentially unsafe, replace with the Load() overload that takes an XmlReader instance</Resolution>
   <Owner />
   <Url>http://go.microsoft.com/fwlink/?LinkId=282614&amp;clcid=0x409</Url>
   <Email>cbdpm@microsoft.com</Email>
   <MessageLevel Certainty="100">Error</MessageLevel>
   <File Name="SecurityXmlRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="UseXmlReaderForSchemaRead" Category="Microsoft.Security.Xml" CheckId="CA3060">
   <Name>Use XmlReader for Schema Read</Name>
   <Description>Do not use unsafe overloads of System.Xml.Schema.XmlSchema.Read. This API internally enables DTD processing on the XML reader instance used, and uses UrlResolver for resolving external XML entities. The outcome is information disclosure. Content from file system or network shares for the machine processing the XML can be exposed to attacker. In addition, an attacker can use this as a DoS vector.</Description>
   <Resolution Name="Default">This overload of System.Xml.Schema.XmlSchema.Read method is potentially unsafe, use the overload that takes a XmlReader instance instead</Resolution>
   <Owner />
   <Url>http://go.microsoft.com/fwlink/?LinkId=282614&amp;clcid=0x409</Url>
   <Email>cbdpm@microsoft.com</Email>
   <MessageLevel Certainty="100">Error</MessageLevel>
   <File Name="SecurityXmlRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="UseXmlReaderForValidatingReader" Category="Microsoft.Security.Xml" CheckId="CA3062">
   <Name>Use XmlReader for ValidatingReader</Name>
   <Description>Configure System.Xml.XmlValidatingReader to validate the parsed XML. This API internally enables DTD processing on the XML reader instance used, and uses UrlResolver for resolving external XML entities. The outcome is information disclosure. Content from file system or network shares for the machine processing the XML can be exposed to attacker. In addition, an attacker can use this as a DoS vector.</Description>
   <Resolution Name="Default">Review that the XML to be parsed here is from a trusted source, otherwise use the constructor overload that takes a XmlReader instance instead and pass in a XmlTextReader with a null XmlResolver and ideally DTD processing disabled</Resolution>
   <Owner />
   <Url>http://go.microsoft.com/fwlink/?LinkId=282614&amp;clcid=0x409</Url>
   <Email>cbdpm@microsoft.com</Email>
   <MessageLevel Certainty="100">Error</MessageLevel>
   <File Name="SecurityXmlRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="UseXmlReaderForXPathDocument" Category="Microsoft.Security.Xml" CheckId="CA3059">
   <Name>Use XmlReader for XPathDocument</Name>
   <Description>Do not use unsafe overloads of the constructor for System.Xml.XPath.Xpath.XPathDocument. This API internally enables DTD processing on the XML reader instance used, and uses UrlResolver for resolving external XML entities. The outcome is information disclosure. Content from file system or network shares for the machine processing the XML can be exposed to attacker. In addition, an attacker can use this as a DoS vector.</Description>
   <Resolution Name="Default">This overload of the constructor for System.Xml.XPath.Xpath.XPathDocument results in an object instance that is potentially unsafe, use a constructor overload that takes a XmlReader instance instead</Resolution>
   <Owner />
   <Url>http://go.microsoft.com/fwlink/?LinkId=282614&amp;clcid=0x409</Url>
   <Email>cbdpm@microsoft.com</Email>
   <MessageLevel Certainty="100">Error</MessageLevel>
   <File Name="SecurityXmlRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="UseXmlSecureResolver" Category="Microsoft.Security.Xml" CheckId="CA3053">
   <Name>Use XmlSecureResolver</Name>
   <Description>Review code to ensure that external resource resolution is explicitly disabled or a XmlSecureResolver is used when processing untrusted input (the resolver used internally on some overloaded methods is not safe to use on untrusted input). Using default resolver for resolving external XML entities may lead to information disclosure. Content from file system or network shares for the machine processing the XML can be exposed to attacker. In addition, an attacker can use this as a DoS vector.</Description>
   <Resolution Name="XmlDocument">{0} instantiates and calls into an XmlDocument instance but does not appear to set its XmlResolver property to a secure value. This usage is potentially unsafe as untrusted external resources may be resolved during read operations. Set the XmlResolver instance to null or an instance of XmlSecureResolver.</Resolution>
   <Resolution Name="XmlReaderCreateInsecureXmlResolver">{0} instantiates an XmlReader instance by calling {1} and provided an XmlReaderSettings instance with an insecure XmlResolver property value. This usage is potentially unsafe as untrusted external resources may be resolved during read operations. Provide a XmlReaderSettings instance and set the XmlResolver property to null or an instance of XmlSecureResolver.</Resolution>
   <Resolution Name="XmlReaderCreateWrongOverload">{0} instantiates an XmlReader instance by calling {1}, an overload which does not accept an explicit XmlReaderSettings argument. This usage is potentially unsafe as untrusted external resources may be resolved during read operations. Provide a XmlReaderSettings instance and set the XmlResolver property to null or an instance of XmlSecureResolver.</Resolution>
   <Resolution Name="XslCompiledTransformLoadInsecureXmlResolve">{0} calls {1} and provides an insecure XsltSettings instance and an XmlResolver instance as arguments. This usage is potentially unsafe as untrusted external XML resources may be resolved during the load operation. Either replace the use of XsltSettings.Trusted with XsltSettings.Default (as secure instance of the type) or replace the XmlResolver argurment with null or an XmlSecureResolver instance. This message may be suppressed if the input is known to be from a trusted source and external resource resolution from locations that are not known in advance must be supported.</Resolution>
   <Resolution Name="XslCompiledTransformLoadWrongOverload">{0} calls {1}, an overload which does not accept explicit XsltSettings and XmlResolver arguments. This usage is potentially unsafe as untrusted external XML resources may be resolved during the load operation. Replace this usage with a call to an XslCompiledTransform.Load overload that accepts XslSettings and XmlResolver arguments. Specifcy XslSettings.Default as the XslSettings argument or provide an XmlSecureResolver instance or null as the XmlResolver argument. This message may be suppressed if the input is known to be from a trusted source and external resource resolution from locations that are not known in advance must be supported.</Resolution>
   <Resolution Name="XslCompiledTransformTransformInsecureXmlResolver">{0} calls {1} and passes an instance of XmlResolver as argument. This usage is potentially unsafe as untrusted external XML resources may be resolved during the transform operation. Replace this usage with an instance of XmlSecureResolver or null as the argument. This message may be suppressed if the input is known to be from a trusted source and external resource resolution from locations that are not known in advance must be supported.</Resolution>
   <Resolution Name="XslCompiledTransformTransformWrongOverload">{0} calls {1}, an overload which does not accept an explicit XmlResolver argument. This usage is potentially unsafe as untrusted external XML resources may be resolved during the transform operation. Replace this usage with a call to an XslCompiledTransform.Transform overload that accepts an XmlResolver argument and provide an instance of XmlSecureResolver or null as the argument. This message may be suppressed if the input is known to be from a trusted source and external resource resolution from locations that are not known in advance must be supported.</Resolution>
   <Owner />
   <Url>http://go.microsoft.com/fwlink/?LinkId=282614&amp;clcid=0x409</Url>
   <Email>cbdpm@microsoft.com</Email>
   <MessageLevel Certainty="100">Warning</MessageLevel>
   <File Name="SecurityXmlRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062">
   <Name>Validate arguments of public methods</Name>
   <Description>All reference arguments passed to externally visible methods should be checked against null (Nothing in VB). If appropriate, throw a System.ArgumentNullException when the argument is null.</Description>
   <Resolution Name="Default">In externally visible method {0}, validate parameter '{1}' before using it.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182182.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="DataflowRules.dll" Version="14.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
