<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft\fxcop 14.0 for sdl\Xml\FxCopReport.xsl"?>
<FxCopReport Version="14.0">
 <Namespaces>
  <Namespace Name="Microsoft.CodeAnalysis.Sarif">
   <Messages>
    <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in namespace name 'Microsoft.CodeAnalysis.Sarif'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="Microsoft.CodeAnalysis.Sarif.Baseline">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'Microsoft.CodeAnalysis.Sarif.Baseline' with another namespace.</Issue>
    </Message>
    <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in namespace name 'Microsoft.CodeAnalysis.Sarif.Baseline'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline' with another namespace.</Issue>
    </Message>
    <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in namespace name 'Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="Microsoft.CodeAnalysis.Sarif.Converters">
   <Messages>
    <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in namespace name 'Microsoft.CodeAnalysis.Sarif.Converters'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel">
   <Messages>
    <Message Id="PRE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'PRE' in namespace name 'Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel' by changing it to 'Pre'.</Issue>
    </Message>
    <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in namespace name 'Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="Microsoft.CodeAnalysis.Sarif.Converters.PylintObjectModel">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'Microsoft.CodeAnalysis.Sarif.Converters.PylintObjectModel' with another namespace.</Issue>
    </Message>
    <Message Id="Pylint" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Pylint' in namespace name 'Microsoft.CodeAnalysis.Sarif.Converters.PylintObjectModel'.</Issue>
    </Message>
    <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in namespace name 'Microsoft.CodeAnalysis.Sarif.Converters.PylintObjectModel'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="Microsoft.CodeAnalysis.Sarif.Converters.TSLintObjectModel">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'Microsoft.CodeAnalysis.Sarif.Converters.TSLintObjectModel' with another namespace.</Issue>
    </Message>
    <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in namespace name 'Microsoft.CodeAnalysis.Sarif.Converters.TSLintObjectModel'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="Microsoft.CodeAnalysis.Sarif.Driver">
   <Messages>
    <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in namespace name 'Microsoft.CodeAnalysis.Sarif.Driver'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="Microsoft.CodeAnalysis.Sarif.Multitool">
   <Messages>
    <Message Id="Multitool" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Multitool' in namespace name 'Microsoft.CodeAnalysis.Sarif.Multitool'.</Issue>
    </Message>
    <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in namespace name 'Microsoft.CodeAnalysis.Sarif.Multitool'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="Microsoft.CodeAnalysis.Sarif.Multitool.Rules">
   <Messages>
    <Message Id="Multitool" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Multitool' in namespace name 'Microsoft.CodeAnalysis.Sarif.Multitool.Rules'.</Issue>
    </Message>
    <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in namespace name 'Microsoft.CodeAnalysis.Sarif.Multitool.Rules'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="Microsoft.CodeAnalysis.Sarif.Processors">
   <Messages>
    <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in namespace name 'Microsoft.CodeAnalysis.Sarif.Processors'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="Microsoft.CodeAnalysis.Sarif.Readers">
   <Messages>
    <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in namespace name 'Microsoft.CodeAnalysis.Sarif.Readers'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="Microsoft.CodeAnalysis.Sarif.VersionOne">
   <Messages>
    <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in namespace name 'Microsoft.CodeAnalysis.Sarif.VersionOne'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="Microsoft.CodeAnalysis.Sarif.VersionOne.Readers">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'Microsoft.CodeAnalysis.Sarif.VersionOne.Readers' with another namespace.</Issue>
    </Message>
    <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in namespace name 'Microsoft.CodeAnalysis.Sarif.VersionOne.Readers'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="Microsoft.CodeAnalysis.Sarif.Visitors">
   <Messages>
    <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in namespace name 'Microsoft.CodeAnalysis.Sarif.Visitors'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="Microsoft.CodeAnalysis.Sarif.Writers">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'Microsoft.CodeAnalysis.Sarif.Writers' with another namespace.</Issue>
    </Message>
    <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in namespace name 'Microsoft.CodeAnalysis.Sarif.Writers'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="Microsoft.CodeAnalysisDriver">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'Microsoft.CodeAnalysisDriver' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="Microsoft.Json.Pointer">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'Microsoft.Json.Pointer' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
 </Namespaces>
 <Targets>
  <Target Name="$(ProjectDir)/../../../../../../sarif-sdk-test/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Pointer.dll">
   <Modules>
    <Module Name="microsoft.json.pointer.dll">
     <Messages>
      <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">Mark 'Microsoft.Json.Pointer.dll' with CLSCompliant(true) because it exposes externally visible types.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithNeutralResourcesLanguage" Category="Microsoft.Performance" CheckId="CA1824" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Warning">Because assembly 'Microsoft.Json.Pointer.dll' contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="Microsoft.Json.Pointer">
       <Types>
        <Type Name="JsonPointer" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.String,Microsoft.Json.Pointer.JsonPointerRepresentation)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error">Replace method 'JsonPointer.JsonPointer(string, JsonPointerRepresentation)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Resources" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'Resources' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Culture" Kind="Property" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_Culture()" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning">'Resources.Culture.get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
            <Accessor Name="#set_Culture(System.Globalization.CultureInfo)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning">'Resources.Culture.set(CultureInfo)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="StringExtensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AtIndex(System.String,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="j" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'StringExtensions.AtIndex(this string, int)', correct the spelling of 'j' in parameter name 'jPointer' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'StringExtensions.AtIndex(this string, int)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AtProperty(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="j" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'StringExtensions.AtProperty(this string, string)', correct the spelling of 'j' in parameter name 'jPointer' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'StringExtensions.AtProperty(this string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UnescapeJsonPointer(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="j" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'StringExtensions.UnescapeJsonPointer(this string)', correct the spelling of 'j' in parameter name 'jPointer' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="VersionConstants" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#PreRelease" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="PreRelease" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'PreRelease' in member name 'VersionConstants.PreRelease' exists as a discrete term. If your usage is intended to be single word, case it as 'Prerelease' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="$(ProjectDir)/../../../../../../sarif-sdk-test/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll">
   <Modules>
    <Module Name="microsoft.json.schema.dll">
     <Messages>
      <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">Mark 'Microsoft.Json.Schema.dll' with CLSCompliant(true) because it exposes externally visible types.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithNeutralResourcesLanguage" Category="Microsoft.Performance" CheckId="CA1824" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Warning">Because assembly 'Microsoft.Json.Schema.dll' contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="Microsoft.Json.Schema">
       <Types>
        <Type Name="AdditionalItems" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Microsoft.Json.Schema.AdditionalItems)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'AdditionalItems.AdditionalItems(AdditionalItems)', validate parameter 'other' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="AdditionalProperties" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Microsoft.Json.Schema.AdditionalProperties)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'AdditionalProperties.AdditionalProperties(AdditionalProperties)', validate parameter 'other' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Dependency" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Microsoft.Json.Schema.Dependency)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'Dependency.Dependency(Dependency)', validate parameter 'other' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PropertyDependencies" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Change 'List&lt;string&gt;' in 'Dependency.PropertyDependencies' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DependencyConverter" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'DependencyConverter.WriteJson(JsonWriter, object, JsonSerializer)', validate parameter 'writer' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Error" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Error" TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="95" Level="Error">Rename type 'Error' so that it no longer conflicts with the reserved language keyword 'Error'. Using a reserved keyword as the name of a type makes it harder for consumers in other languages to use the type.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#CreateException(System.String,System.Object[])" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error">'Error.CreateException(string, params object[])' creates an exception of type 'ApplicationException', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Items" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Microsoft.Json.Schema.Items)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'Items.Items(Items)', validate parameter 'other' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Schemas" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">Change 'Items.Schemas' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ItemsConverter" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Instance" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'ItemsConverter.Instance' or change the field to one that is an immutable reference type. If the reference type 'ItemsConverter' is, in fact, immutable, exclude this message.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'ItemsConverter.WriteJson(JsonWriter, object, JsonSerializer)', validate parameter 'writer' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="JsonSchema" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Microsoft.Json.Schema.JsonSchema)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'JsonSchema.JsonSchema(JsonSchema)', validate parameter 'other' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AllOf" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">Change 'JsonSchema.AllOf' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AnyOf" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">Change 'JsonSchema.AnyOf' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Collapse(Microsoft.Json.Schema.JsonSchema,Microsoft.Json.Schema.JsonSchema)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning">'JsonSchema.Collapse(JsonSchema, JsonSchema)' has a cyclomatic complexity of 34. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Definitions" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">Change 'JsonSchema.Definitions' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dependencies" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">Change 'JsonSchema.Dependencies' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Enum" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">Change 'JsonSchema.Enum' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Equals(Microsoft.Json.Schema.JsonSchema)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning">'JsonSchema.Equals(JsonSchema)' has a cyclomatic complexity of 50. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OneOf" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">Change 'JsonSchema.OneOf' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PatternProperties" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">Change 'JsonSchema.PatternProperties' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Properties" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">Change 'JsonSchema.Properties' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Required" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">Change 'JsonSchema.Required' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Type" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">Change 'JsonSchema.Type' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="BaseType" Certainty="95" Level="Error">The property name 'JsonSchema.Type' is confusing given the existence of inherited method 'object.GetType()'. Rename or remove this property.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="JsonSchemaContractResolver" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ResolveContract(System.Type)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">In member 'JsonSchemaContractResolver.ResolveContract(Type)', change parameter name 'objectType' to 'type' in order to match the identifier as it has been declared in 'CamelCasePropertyNamesContractResolver.ResolveContract(Type)'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="JsonSchemaExtensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#SafeGetType(Microsoft.Json.Schema.JsonSchema)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'JsonSchemaExtensions.SafeGetType(this JsonSchema)', validate parameter 'schema' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="JsonSerializerExtensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CaptureError(Newtonsoft.Json.JsonSerializer,Newtonsoft.Json.Linq.JToken,Microsoft.Json.Schema.ErrorNumber,System.Object[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="j" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'JsonSerializerExtensions.CaptureError(this JsonSerializer, JToken, ErrorNumber, params object[])', correct the spelling of 'j' in parameter name 'jToken' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'JsonSerializerExtensions.CaptureError(this JsonSerializer, JToken, ErrorNumber, params object[])', validate parameter 'serializer' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="JsonSyntaxException" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="MarkISerializableTypesWithSerializable" Category="Microsoft.Usage" CheckId="CA2237" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="Error">Add [Serializable] to 'JsonSyntaxException' as this type implements ISerializable.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ImplementStandardExceptionConstructors" Category="Microsoft.Design" CheckId="CA1032" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="Accessibility" Certainty="95" Level="Error">Change the accessibility of 'JsonSyntaxException.JsonSyntaxException(SerializationInfo, StreamingContext)' to protected.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="JTokenTypeExtensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ToSchemaType(Newtonsoft.Json.Linq.JTokenType)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="j" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'JTokenTypeExtensions.ToSchemaType(this JTokenType)', correct the spelling of 'j' in parameter name 'jTokenType' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MustBeStringConverter" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#CanConvert(System.Type)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'MustBeStringConverter.CanConvert(Type)', validate parameter 'objectType' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'MustBeStringConverter.ReadJson(JsonReader, Type, object, JsonSerializer)', validate parameter 'reader' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RefProperty" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#s_inputPattern" Kind="Field" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="UseLiteralsWhereAppropriate" Category="Microsoft.Performance" CheckId="CA1802" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning">Field 'RefProperty.s_inputPattern' is declared as 'static readonly' but is initialized with a constant value '(?&lt;before&gt;[^"]")\$ref(?&lt;after&gt;"\s*:)'. Mark this field as 'const' instead.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#s_outputPattern" Kind="Field" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="UseLiteralsWhereAppropriate" Category="Microsoft.Performance" CheckId="CA1802" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning">Field 'RefProperty.s_outputPattern' is declared as 'static readonly' but is initialized with a constant value '(?&lt;before&gt;[^"]")\$\$ref(?&lt;after&gt;"\s*:)'. Mark this field as 'const' instead.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SchemaReader" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ReadSchema(System.IO.TextReader,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'SchemaReader.ReadSchema(TextReader, string)', validate parameter 'reader' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReadSchema(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning">In method 'SchemaReader.ReadSchema(string, string)', object 'new StringReader(jsonText)' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'new StringReader(jsonText)' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SchemaTypeConverter" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#SchemaTypeFromString(System.String)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Enum.TryParse&lt;Microsoft.Json.Schema.SchemaType&gt;(System.String,Microsoft.Json.Schema.SchemaType@)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="TryParse" Certainty="95" Level="Warning">'SchemaTypeConverter.SchemaTypeFromString(string)' calls 'Enum.TryParse&lt;SchemaType&gt;(string, out SchemaType)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error">In method 'SchemaTypeConverter.WriteJson(JsonWriter, object, JsonSerializer)', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'SchemaTypeConverter.WriteJson(JsonWriter, object, JsonSerializer)', validate parameter 'writer' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SchemaTypeConverter+&lt;&gt;c" Kind="Class" Accessibility="Private" ExternallyVisible="False">
         <Members>
          <Member Name="#&lt;WriteJson&gt;b__3_0(Microsoft.Json.Schema.SchemaType)" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error">In method 'SchemaTypeConverter.WriteJson(JsonWriter, object, JsonSerializer)', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SchemaValidationException" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="MarkISerializableTypesWithSerializable" Category="Microsoft.Usage" CheckId="CA2237" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="Error">Add [Serializable] to 'SchemaValidationException' as this type implements ISerializable.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(Newtonsoft.Json.Linq.JToken,Microsoft.Json.Schema.ErrorNumber,System.Object[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="j" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'SchemaValidationException.SchemaValidationException(JToken, ErrorNumber, params object[])', correct the spelling of 'j' in parameter name 'jToken' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ImplementStandardExceptionConstructors" Category="Microsoft.Design" CheckId="CA1032" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="Accessibility" Certainty="95" Level="Error">Change the accessibility of 'SchemaValidationException.SchemaValidationException(SerializationInfo, StreamingContext)' to protected.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Args" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Change 'SchemaValidationException.Args' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SchemaWriter" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#WriteSchema(Newtonsoft.Json.JsonWriter,Microsoft.Json.Schema.JsonSchema,Newtonsoft.Json.Formatting)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error">Replace method 'SchemaWriter.WriteSchema(JsonWriter, JsonSchema, Formatting)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteSchema(System.IO.TextWriter,Microsoft.Json.Schema.JsonSchema,Newtonsoft.Json.Formatting)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error">Replace method 'SchemaWriter.WriteSchema(TextWriter, JsonSchema, Formatting)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning">In method 'SchemaWriter.WriteSchema(TextWriter, JsonSchema, Formatting)', call System.IDisposable.Dispose on object 'new StringWriter()' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.IO.StringWriter.#ctor" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error">Because the behavior of 'StringWriter.StringWriter()' could vary based on the current user's locale settings, replace this call in 'SchemaWriter.WriteSchema(TextWriter, JsonSchema, Formatting)' with a call to 'StringWriter.StringWriter(IFormatProvider)'. If the result of 'StringWriter.StringWriter(IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'SchemaWriter.WriteSchema(TextWriter, JsonSchema, Formatting)', validate parameter 'writer' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UriOrFragment" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Microsoft.Json.Schema.UriOrFragment)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'UriOrFragment.UriOrFragment(UriOrFragment)', validate parameter 'other' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error">In member 'UriOrFragment.UriOrFragment(string)', consider replacing the data type identifier 'String' in parameter name 'uriString' with a more generic term, such as 'value'.</Issue>
            </Message>
            <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error">Because the behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings, replace this call in 'UriOrFragment.UriOrFragment(string)' with a call to 'string.StartsWith(string, StringComparison)'. If the result of 'string.StartsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
            <Message Id="0#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error">Change the type of parameter 'uriString' of method 'UriOrFragment.UriOrFragment(string)' from string to System.Uri, or provide an overload of 'UriOrFragment.UriOrFragment(string)', that allows 'uriString' to be passed as a System.Uri object.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'UriOrFragment.UriOrFragment(string)', validate parameter 'uriString' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Equals(System.Object)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">In member 'UriOrFragment.Equals(object)', change parameter name 'comparand' to 'obj' in order to match the identifier as it has been declared in 'object.Equals(object)'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UriOrFragmentConverter" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'UriOrFragmentConverter.ReadJson(JsonReader, Type, object, JsonSerializer)', validate parameter 'reader' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'UriOrFragmentConverter.WriteJson(JsonWriter, object, JsonSerializer)', validate parameter 'writer' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UriOrFragmentExtensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetDefinitionName(Microsoft.Json.Schema.UriOrFragment)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'UriOrFragmentExtensions.GetDefinitionName(this UriOrFragment)', validate parameter 'reference' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="VersionConstants" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#PreRelease" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="PreRelease" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'PreRelease' in member name 'VersionConstants.PreRelease' exists as a discrete term. If your usage is intended to be single word, case it as 'Prerelease' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="$(ProjectDir)/../../../../../../sarif-sdk-test/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.Validation.dll">
   <Modules>
    <Module Name="microsoft.json.schema.validation.dll">
     <Messages>
      <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">Mark 'Microsoft.Json.Schema.Validation.dll' with CLSCompliant(true) because it exposes externally visible types.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithNeutralResourcesLanguage" Category="Microsoft.Performance" CheckId="CA1824" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Warning">Because assembly 'Microsoft.Json.Schema.Validation.dll' contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="Microsoft.Json.Schema.Validation">
       <Types>
        <Type Name="JsonSyntaxErrorExceptionExtensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ToSarifResult(Microsoft.Json.Schema.JsonSyntaxException)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in member name 'JsonSyntaxErrorExceptionExtensions.ToSarifResult(this JsonSyntaxException)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'JsonSyntaxErrorExceptionExtensions.ToSarifResult(this JsonSyntaxException)', validate parameter 'ex' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="JTokenEqualityComparer" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#NullEquals(System.Object)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Warning">'obj', a parameter, is cast to type 'JToken' multiple times in method 'JTokenEqualityComparer.NullEquals(object)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ResultFactory" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Because type 'ResultFactory' contains only 'static' ('Shared' in Visual Basic) members, add a default private constructor to prevent the compiler from adding a default public constructor.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#CreateResult(Newtonsoft.Json.Linq.JToken,Microsoft.Json.Schema.ErrorNumber,System.Object[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="j" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'ResultFactory.CreateResult(JToken, ErrorNumber, object[])', correct the spelling of 'j' in parameter name 'jToken' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'ResultFactory.CreateResult(JToken, ErrorNumber, object[])', validate parameter 'jToken' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RuleExtensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#SetResultFile(Microsoft.CodeAnalysis.Sarif.Result,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'RuleExtensions.SetResultFile(this Result, string)', validate parameter 'result' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RuleFactory" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ErrorCodeFormat" Kind="Field" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="UseLiteralsWhereAppropriate" Category="Microsoft.Performance" CheckId="CA1802" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning">Field 'RuleFactory.ErrorCodeFormat' is declared as 'static readonly' but is initialized with a constant value 'JSON{0:D4}'. Mark this field as 'const' instead.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetRuleFromRuleId(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'RuleFactory.GetRuleFromRuleId(string)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning">In externally visible method 'RuleFactory.GetRuleFromRuleId(string)', validate parameter 'ruleId' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RuleResources" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'RuleResources' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Culture" Kind="Property" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_Culture()" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning">'RuleResources.Culture.get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
            <Accessor Name="#set_Culture(System.Globalization.CultureInfo)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning">'RuleResources.Culture.set(CultureInfo)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="Validator" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#FormatBoolean(System.String)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error">In method 'Validator.FormatBoolean(string)', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FormatObject(System.Object)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Warning">'obj', a parameter, is cast to type 'JToken' multiple times in method 'Validator.FormatObject(object)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPropertyNames(Newtonsoft.Json.Linq.JObject)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning">The 'this' parameter (or 'Me' in Visual Basic) of 'Validator.GetPropertyNames(JObject)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TokenMatchesEnum(Newtonsoft.Json.Linq.JToken,System.Collections.Generic.IList`1&lt;System.Object&gt;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning">The 'this' parameter (or 'Me' in Visual Basic) of 'Validator.TokenMatchesEnum(JToken, IList&lt;object&gt;)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UnicodeLength(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning">The 'this' parameter (or 'Me' in Visual Basic) of 'Validator.UnicodeLength(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ValidateAdditionalProperties(Newtonsoft.Json.Linq.JObject,System.Collections.Generic.List`1&lt;System.String&gt;,Microsoft.Json.Schema.AdditionalProperties)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">'Validator.ValidateAdditionalProperties(JObject, List&lt;string&gt;, AdditionalProperties)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ValidateToken(Newtonsoft.Json.Linq.JToken,Microsoft.Json.Schema.JsonSchema)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Warning">'jToken', a parameter, is cast to type 'JValue' multiple times in method 'Validator.ValidateToken(JToken, JsonSchema)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="VersionConstants" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#PreRelease" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="PreRelease" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'PreRelease' in member name 'VersionConstants.PreRelease' exists as a discrete term. If your usage is intended to be single word, case it as 'Prerelease' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="$(ProjectDir)/../../../../../../sarif-sdk-test/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll">
   <Modules>
    <Module Name="sarif.converters.dll">
     <Messages>
      <Message TypeName="AttributeStringLiteralsShouldParseCorrectly" Category="Microsoft.Usage" CheckId="CA2243" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
       <Issue Certainty="75" Level="Warning">In the constructor of 'AssemblyInformationalVersionAttribute', change the value of argument 'informationalVersion', which is currently "2.0.0-csd.1.0.1", to something that can be correctly parsed as 'Version'.</Issue>
      </Message>
      <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
       <Issue Name="Assembly" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in assembly name 'Sarif.Converters.dll'.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="Microsoft.CodeAnalysis.Sarif.Converters">
       <Types>
        <Type Name="AndroidStudioConverter" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#Convert(System.IO.Stream,Microsoft.CodeAnalysis.Sarif.IResultLogWriter,Microsoft.CodeAnalysis.Sarif.OptionallyEmittedData)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="UseXmlSecureResolver" Category="Microsoft.Security.Xml" CheckId="CA3053" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="XmlReaderCreateInsecureXmlResolver" Certainty="100" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="AndroidStudioConverter.cs" Line="63">'AndroidStudioConverter.Convert(Stream, IResultLogWriter, OptionallyEmittedData)' instantiates an XmlReader instance by calling System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings) and provided an XmlReaderSettings instance with an insecure XmlResolver property value. This usage is potentially unsafe as untrusted external resources may be resolved during read operations. Provide a XmlReaderSettings instance and set the XmlResolver property to null or an instance of XmlSecureResolver.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="AssemblyLoadFileDelegate" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Name="TypeNoAlternate" Certainty="95" Level="CriticalError">Rename type name 'AssemblyLoadFileDelegate' so that it does not end in 'Delegate'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="ClangAnalyzerConverter" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Convert(System.IO.Stream,Microsoft.CodeAnalysis.Sarif.IResultLogWriter,Microsoft.CodeAnalysis.Sarif.OptionallyEmittedData)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UseXmlSecureResolver" Category="Microsoft.Security.Xml" CheckId="CA3053" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="XmlReaderCreateInsecureXmlResolver" Certainty="100" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="ClangAnalyzerConverter.cs" Line="48">'ClangAnalyzerConverter.Convert(Stream, IResultLogWriter, OptionallyEmittedData)' instantiates an XmlReader instance by calling System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings) and provided an XmlReaderSettings instance with an insecure XmlResolver property value. This usage is potentially unsafe as untrusted external resources may be resolved during read operations. Provide a XmlReaderSettings instance and set the XmlResolver property to null or an instance of XmlSecureResolver.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReadDictionary(System.Xml.XmlReader)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="ClangAnalyzerConverter.cs" Line="258">'ClangAnalyzerConverter.ReadDictionary(XmlReader)' has a cyclomatic complexity of 30. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ConverterResources" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#.ctor()" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="ExcludedInSource" Created="2018-08-23 13:07:11Z" FixCategory="NonBreaking" LastSeen="0001-01-01 00:00:00Z" />
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CppCheckConverter" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Cpp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Cpp' in type name 'CppCheckConverter'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Convert(System.IO.Stream,Microsoft.CodeAnalysis.Sarif.IResultLogWriter,Microsoft.CodeAnalysis.Sarif.OptionallyEmittedData)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UseXmlSecureResolver" Category="Microsoft.Security.Xml" CheckId="CA3053" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="XmlReaderCreateInsecureXmlResolver" Certainty="100" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="CppCheckConverter.cs" Line="52">'CppCheckConverter.Convert(Stream, IResultLogWriter, OptionallyEmittedData)' instantiates an XmlReader instance by calling System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings) and provided an XmlReaderSettings instance with an insecure XmlResolver property value. This usage is potentially unsafe as untrusted external resources may be resolved during read operations. Provide a XmlReaderSettings instance and set the XmlResolver property to null or an instance of XmlSecureResolver.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Extensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#HasDefaultConstructor(System.Type)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="Extensions.cs" Line="22">In externally visible method 'Extensions.HasDefaultConstructor(this Type)', validate parameter 'type' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MatchesToolFormat(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="Extensions.cs" Line="16">In externally visible method 'Extensions.MatchesToolFormat(this string, string)', validate parameter 'toolFormat' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="FortifyConverter" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#Convert(System.IO.Stream,Microsoft.CodeAnalysis.Sarif.IResultLogWriter,Microsoft.CodeAnalysis.Sarif.OptionallyEmittedData)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="UseXmlSecureResolver" Category="Microsoft.Security.Xml" CheckId="CA3053" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="XmlReaderCreateInsecureXmlResolver" Certainty="100" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="FortifyConverter.cs" Line="57">'FortifyConverter.Convert(Stream, IResultLogWriter, OptionallyEmittedData)' instantiates an XmlReader instance by calling System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings) and provided an XmlReaderSettings instance with an insecure XmlResolver property value. This usage is potentially unsafe as untrusted external resources may be resolved during read operations. Provide a XmlReaderSettings instance and set the XmlResolver property to null or an instance of XmlSecureResolver.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="FortifyFprConverter" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#AddMessagesToResults()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="Microsoft.CodeAnalysis.Sarif.Message.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="FortifyFprConverter.cs" Line="854">Method 'FortifyFprConverter.AddMessagesToResults()' passes a literal string as parameter 'value' of a call to 'Message.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "[, ](1)".</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="FortifyFprConverter.cs" Line="843">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'FortifyFprConverter.AddMessagesToResults()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="FortifyFprConverter.cs" Line="843">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'FortifyFprConverter.AddMessagesToResults()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="FortifyFprConverter.cs" Line="849">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'FortifyFprConverter.AddMessagesToResults()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ParseAuditStream(System.IO.Stream)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="UseXmlSecureResolver" Category="Microsoft.Security.Xml" CheckId="CA3053" Status="ExcludedInSource" Created="2018-08-23 13:07:11Z" FixCategory="NonBreaking" LastSeen="0001-01-01 00:00:00Z" />
           </Messages>
          </Member>
          <Member Name="#ParseFile()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Int32.TryParse(System.String,System.Int32@)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="FortifyFprConverter.cs" Line="276">'FortifyFprConverter.ParseFile()' calls 'int.TryParse(string, out int)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ParseRegion()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Int32.TryParse(System.String,System.Int32@)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="FortifyFprConverter.cs" Line="508">'FortifyFprConverter.ParseRegion()' calls 'int.TryParse(string, out int)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="FortifyFprConverter.cs" Line="515">'FortifyFprConverter.ParseRegion()' calls 'int.TryParse(string, out int)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="FortifyFprConverter.cs" Line="522">'FortifyFprConverter.ParseRegion()' calls 'int.TryParse(string, out int)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="FortifyFprConverter.cs" Line="529">'FortifyFprConverter.ParseRegion()' calls 'int.TryParse(string, out int)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ParseSnippet()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Int32.TryParse(System.String,System.Int32@)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="FortifyFprConverter.cs" Line="659">'FortifyFprConverter.ParseSnippet()' calls 'int.TryParse(string, out int)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="FortifyFprConverter.cs" Line="660">'FortifyFprConverter.ParseSnippet()' calls 'int.TryParse(string, out int)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="FortifyFprConverter.cs" Line="670">'FortifyFprConverter.ParseSnippet()' calls 'int.TryParse(string, out int)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
             <Issue Name="TryParse" Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="FortifyFprConverter.cs" Line="675">'FortifyFprConverter.ParseSnippet()' calls 'int.TryParse(string, out int)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="FxCopConverter" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#BuildFileLocationFromFxCopReference(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="FxCopConverter.cs" Line="193">The 'this' parameter (or 'Me' in Visual Basic) of 'FxCopConverter.BuildFileLocationFromFxCopReference(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="FxCopConverter.cs" Line="196">Because the behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings, replace this call in 'FxCopConverter.BuildFileLocationFromFxCopReference(string)' with a call to 'string.StartsWith(string, StringComparison)'. If the result of 'string.StartsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateRule(Microsoft.CodeAnalysis.Sarif.Converters.FxCopLogReader+Context)" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="FxCopConverter.cs" Line="99">The 'this' parameter (or 'Me' in Visual Basic) of 'FxCopConverter.CreateRule(FxCopLogReader.Context)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="FxCopLogReader" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#Read(Microsoft.CodeAnalysis.Sarif.Converters.FxCopLogReader+Context,System.IO.Stream)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="FxCopConverter.cs" Line="734">Object 'stream' can be disposed more than once in method 'FxCopLogReader.Read(FxCopLogReader.Context, Stream)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 734</Issue>
            </Message>
            <Message TypeName="UseXmlSecureResolver" Category="Microsoft.Security.Xml" CheckId="CA3053" Status="ExcludedInSource" Created="2018-08-23 13:07:11Z" FixCategory="NonBreaking" LastSeen="0001-01-01 00:00:00Z" />
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="LogReader`1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ReadLog(System.String,System.Text.Encoding)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="LogReader.cs" Line="18">In method 'LogReader&lt;TLog&gt;.ReadLog(string, Encoding)', call System.IDisposable.Dispose on object 'new MemoryStream(encoding.GetBytes(input))' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="LogReader.cs" Line="18">In externally visible method 'LogReader&lt;TLog&gt;.ReadLog(string, Encoding)', validate parameter 'encoding' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PluginConverterFactory" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#CreateConverterCore(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="PluginConverterFactory.cs" Line="39">Method 'PluginConverterFactory.CreateConverterCore(string)' passes 'pluginAssemblyPath' as the 'paramName' argument to a 'ArgumentException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="PluginConverterFactory.cs" Line="58">Method 'PluginConverterFactory.CreateConverterCore(string)' passes 'pluginAssemblyPath' as the 'paramName' argument to a 'ArgumentException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PREfastConverter" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Efast" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Efast' in type name 'PREfastConverter'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Convert(System.IO.Stream,Microsoft.CodeAnalysis.Sarif.IResultLogWriter,Microsoft.CodeAnalysis.Sarif.OptionallyEmittedData)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UseXmlSecureResolver" Category="Microsoft.Security.Xml" CheckId="CA3053" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="XmlReaderCreateInsecureXmlResolver" Certainty="100" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="PREFastConverter.cs" Line="50">'PREfastConverter.Convert(Stream, IResultLogWriter, OptionallyEmittedData)' instantiates an XmlReader instance by calling System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings) and provided an XmlReaderSettings instance with an insecure XmlResolver property value. This usage is potentially unsafe as untrusted external resources may be resolved during read operations. Provide a XmlReaderSettings instance and set the XmlResolver property to null or an instance of XmlSecureResolver.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateResult(Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel.Defect)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="PREFastConverter.cs" Line="86">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'PREfastConverter.CreateResult(Defect)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GenerateCodeFlows(Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel.Defect,Microsoft.CodeAnalysis.Sarif.Result)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="PREFastConverter.cs" Line="144">The 'this' parameter (or 'Me' in Visual Basic) of 'PREfastConverter.GenerateCodeFlows(Defect, Result)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="PREFastConverter.cs" Line="163">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'PREfastConverter.GenerateCodeFlows(Defect, Result)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RemovePREfastNewLine(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="PREFastConverter.cs" Line="224">The 'this' parameter (or 'Me' in Visual Basic) of 'PREfastConverter.RemovePREfastNewLine(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetProbability(Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel.Defect,Microsoft.CodeAnalysis.Sarif.Result)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="PREFastConverter.cs" Line="136">The 'this' parameter (or 'Me' in Visual Basic) of 'PREfastConverter.SetProbability(Defect, Result)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetRank(Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel.Defect,Microsoft.CodeAnalysis.Sarif.Result)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="PREFastConverter.cs" Line="128">The 'this' parameter (or 'Me' in Visual Basic) of 'PREfastConverter.SetRank(Defect, Result)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PylintConverter" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Pylint" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Pylint' in type name 'PylintConverter'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#CreateResult(Microsoft.CodeAnalysis.Sarif.Converters.PylintObjectModel.PylintLogEntry)" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="PylintConverter.cs" Line="62">The 'this' parameter (or 'Me' in Visual Basic) of 'PylintConverter.CreateResult(PylintLogEntry)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="PylintConverter.cs" Line="87">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'PylintConverter.CreateResult(PylintLogEntry)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="PylintConverter.cs" Line="87">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'PylintConverter.CreateResult(PylintLogEntry)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="PylintConverter.cs" Line="93">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'PylintConverter.CreateResult(PylintLogEntry)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="PylintConverter.cs" Line="65">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'PylintConverter.CreateResult(PylintLogEntry)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SemmleQLConverter" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Semmle" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Semmle' in type name 'SemmleQLConverter'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#GetResultsFromStream(System.IO.Stream)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="SemmleQlConverter.cs" Line="110">Object 'reader' can be disposed more than once in method 'SemmleQLConverter.GetResultsFromStream(Stream)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 110</Issue>
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="SemmleQlConverter.cs" Line="110">Object 'this' can be disposed more than once in method 'SemmleQLConverter.GetResultsFromStream(Stream)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 110</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NormalizeRawMessage(System.String,System.String&amp;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="SemmleQlConverter.cs" Line="153">The 'this' parameter (or 'Me' in Visual Basic) of 'SemmleQLConverter.NormalizeRawMessage(string, out string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="SemmleQlConverter.cs" Line="207">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'SemmleQLConverter.NormalizeRawMessage(string, out string)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="SemmleQlConverter.cs" Line="207">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'SemmleQLConverter.NormalizeRawMessage(string, out string)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="SemmleQlConverter.cs" Line="207">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'SemmleQLConverter.NormalizeRawMessage(string, out string)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="SemmleQlConverter.cs" Line="224">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'SemmleQLConverter.NormalizeRawMessage(string, out string)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="SemmleQlConverter.cs" Line="224">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'SemmleQLConverter.NormalizeRawMessage(string, out string)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="SemmleQlConverter.cs" Line="224">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'SemmleQLConverter.NormalizeRawMessage(string, out string)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="SemmleQlConverter.cs" Line="250">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'SemmleQLConverter.NormalizeRawMessage(string, out string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="SemmleQlConverter.cs" Line="207">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'SemmleQLConverter.NormalizeRawMessage(string, out string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.IndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="SemmleQlConverter.cs" Line="170">Because the behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings, replace this call in 'SemmleQLConverter.NormalizeRawMessage(string, out string)' with a call to 'string.IndexOf(string, StringComparison)'. If the result of 'string.IndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="SemmleQlConverter.cs" Line="177">Because the behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings, replace this call in 'SemmleQLConverter.NormalizeRawMessage(string, out string)' with a call to 'string.IndexOf(string, StringComparison)'. If the result of 'string.IndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="SemmleQlConverter.cs" Line="253">Because the behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings, replace this call in 'SemmleQLConverter.NormalizeRawMessage(string, out string)' with a call to 'string.IndexOf(string, StringComparison)'. If the result of 'string.IndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#s_delimiters" Kind="Field" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'SemmleQLConverter.s_delimiters' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SemmleError" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Semmle" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Semmle' in member name 'SemmleQLConverter.SemmleError' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SemmleRecommendation" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Semmle" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Semmle' in member name 'SemmleQLConverter.SemmleRecommendation' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SemmleWarning" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Semmle" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Semmle' in member name 'SemmleQLConverter.SemmleWarning' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SparseReader" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CreateFromStream(Microsoft.CodeAnalysis.Sarif.Converters.SparseReaderDispatchTable,System.IO.Stream,System.Xml.Schema.XmlSchemaSet)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UseXmlSecureResolver" Category="Microsoft.Security.Xml" CheckId="CA3053" Status="ExcludedInSource" Created="2018-08-23 13:07:11Z" FixCategory="NonBreaking" LastSeen="0001-01-01 00:00:00Z" />
           </Messages>
          </Member>
          <Member Name="#ReadChildren(System.String,System.Object,System.String&amp;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="2#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="SparseReader.cs" Line="103">Consider a design that does not require that 'innerText' be an out parameter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SparseReaderDispatchTable" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="ExcludedInSource" Created="2018-08-23 13:07:11Z" FixCategory="Breaking" LastSeen="0001-01-01 00:00:00Z" />
         </Messages>
        </Type>
        <Type Name="StaticDriverVerifierConverter" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#_sb" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'StaticDriverVerifierConverter._sb' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsHarnessOrRulesFiles(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="StaticDriverVerifierConverter.cs" Line="288">The 'this' parameter (or 'Me' in Visual Basic) of 'StaticDriverVerifierConverter.IsHarnessOrRulesFiles(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ProcessLine(System.String,System.Int32&amp;,Microsoft.CodeAnalysis.Sarif.Result)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="Microsoft.CodeAnalysis.Sarif.Converters.StaticDriverVerifierConverter.ExtractCallerAndCallee(System.String,System.String@,System.String@)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="StaticDriverVerifierConverter.cs" Line="181">Method 'StaticDriverVerifierConverter.ProcessLine(string, ref int, Result)' passes a literal string as parameter 'text' of a call to 'StaticDriverVerifierConverter.ExtractCallerAndCallee(string, out string, out string)'. Retrieve the following string(s) from a resource table instead: " ".</Issue>
            </Message>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="StaticDriverVerifierConverter.cs" Line="136">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'StaticDriverVerifierConverter.ProcessLine(string, ref int, Result)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="StaticDriverVerifierConverter.cs" Line="177">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'StaticDriverVerifierConverter.ProcessLine(string, ref int, Result)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="StaticDriverVerifierConverter.cs" Line="235">Because the behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings, replace this call in 'StaticDriverVerifierConverter.ProcessLine(string, ref int, Result)' with a call to 'string.StartsWith(string, StringComparison)'. If the result of 'string.StartsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="StringReference" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Equals(System.Object,System.Object)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="unusedA" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="ExcludedInSource" Created="2018-08-23 13:07:11Z" FixCategory="NonBreaking" LastSeen="0001-01-01 00:00:00Z" />
            <Message Id="unusedB" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="ExcludedInSource" Created="2018-08-23 13:07:11Z" FixCategory="NonBreaking" LastSeen="0001-01-01 00:00:00Z" />
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ToolFileConverterBase" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetLogicalLocationName(System.String,System.String,System.String)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.LastIndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="ToolFileConverterBase.cs" Line="90">Because the behavior of 'string.LastIndexOf(string)' could vary based on the current user's locale settings, replace this call in 'ToolFileConverterBase.GetLogicalLocationName(string, string, string)' with a call to 'string.LastIndexOf(string, StringComparison)'. If the result of 'string.LastIndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ToolFormat" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CppCheck" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Cpp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Cpp' in member name 'ToolFormat.CppCheck' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FortifyFpr" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Fpr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Fpr' in member name 'ToolFormat.FortifyFpr' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PREfast" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Efast" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Efast' in member name 'ToolFormat.PREfast' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Pylint" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Pylint" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Pylint' in member name 'ToolFormat.Pylint' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SemmleQL" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Semmle" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Semmle' in member name 'ToolFormat.SemmleQL' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ToolFormatConverter" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Microsoft.CodeAnalysis.Sarif.Converters.AssemblyLoadFileDelegate)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="ToolFormatConverter.cs" Line="19">Replace method 'ToolFormatConverter.ToolFormatConverter(AssemblyLoadFileDelegate)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ConvertToStandardFormat(System.String,System.IO.Stream,Microsoft.CodeAnalysis.Sarif.IResultLogWriter,Microsoft.CodeAnalysis.Sarif.OptionallyEmittedData,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="ToolFormatConverter.cs" Line="90">Replace method 'ToolFormatConverter.ConvertToStandardFormat(string, Stream, IResultLogWriter, OptionallyEmittedData, string)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ConvertToStandardFormat(System.String,System.String,System.String,Microsoft.CodeAnalysis.Sarif.Writers.LoggingOptions,Microsoft.CodeAnalysis.Sarif.OptionallyEmittedData,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="ToolFormatConverter.cs" Line="42">Replace method 'ToolFormatConverter.ConvertToStandardFormat(string, string, string, LoggingOptions, OptionallyEmittedData, string)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="ToolFormatConverter.cs" Line="72">Object 'outputTextStream' can be disposed more than once in method 'ToolFormatConverter.ConvertToStandardFormat(string, string, string, LoggingOptions, OptionallyEmittedData, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 72</Issue>
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="ToolFormatConverter.cs" Line="72">Object 'outputTextWriter' can be disposed more than once in method 'ToolFormatConverter.ConvertToStandardFormat(string, string, string, LoggingOptions, OptionallyEmittedData, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 72</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TSLintConverter" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CreateResult(Microsoft.CodeAnalysis.Sarif.Converters.TSLintObjectModel.TSLintLogEntry)" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="TSLintConverter.cs" Line="62">The 'this' parameter (or 'Me' in Visual Basic) of 'TSLintConverter.CreateResult(TSLintLogEntry)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TSLintLogReader" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#NormalizeEntries(Newtonsoft.Json.Linq.JArray)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="TSLintLogReader.cs" Line="105">'TSLintLogReader.NormalizeEntries(JArray)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="TSLintLogReader.cs" Line="95">The 'this' parameter (or 'Me' in Visual Basic) of 'TSLintLogReader.NormalizeEntries(JArray)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NormalizeFixProperty(Newtonsoft.Json.Linq.JProperty)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="TSLintLogReader.cs" Line="143">'TSLintLogReader.NormalizeFixProperty(JProperty)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NormalizeLog(Newtonsoft.Json.Linq.JToken)" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="TSLintLogReader.cs" Line="84">'TSLintLogReader.NormalizeLog(JToken)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReadLog(System.IO.Stream)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="TSLintLogReader.cs" Line="38">Object 'streamReader' can be disposed more than once in method 'TSLintLogReader.ReadLog(Stream)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 38</Issue>
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="TSLintLogReader.cs" Line="38">Object 'this' can be disposed more than once in method 'TSLintLogReader.ReadLog(Stream)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 38</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Converters" File="TSLintLogReader.cs" Line="27">Change 'TSLintLog' in 'TSLintLogReader.ReadLog(Stream)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel">
       <Types>
        <Type Name="Category" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Rename 'Category' to end in 'Dictionary'.</Issue>
          </Message>
          <Message TypeName="MarkISerializableTypesWithSerializable" Category="Microsoft.Usage" CheckId="CA2237" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">Add [Serializable] to 'Category' as this type implements ISerializable.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#ReadXml(System.Xml.XmlReader)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Converters\PREFastObjectModel" File="Category.cs" Line="19">In externally visible method 'Category.ReadXml(XmlReader)', validate parameter 'reader' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Defect" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Category" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Converters\PREFastObjectModel" File="Defect.cs" Line="35">Change 'Defect.Category' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Funcline" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Funcline" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif.Converters\PREFastObjectModel" File="Defect.cs" Line="23">Correct the spelling of 'Funcline' in member name 'Defect.Funcline' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SFA" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SFA" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Converters\PREFastObjectModel" File="Defect.cs" Line="8">Correct the casing of 'SFA' in member name 'Defect.SFA' by changing it to 'Sfa'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DefectList" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Defects" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Converters\PREFastObjectModel" File="DefectList.cs" Line="10">Change 'DefectList.Defects' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Converters\PREFastObjectModel" File="DefectList.cs" Line="10">Change 'List&lt;Defect&gt;' in 'DefectList.Defects' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PREFastPath" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="PRE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'PRE' in type name 'PREFastPath' by changing it to 'Pre'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#SFAs" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Converters\PREFastObjectModel" File="PREFastPath.cs" Line="9">Change 'PREFastPath.SFAs' to be read-only by removing the property setter.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Converters\PREFastObjectModel" File="PREFastPath.cs" Line="9">Change 'List&lt;SFA&gt;' in 'PREFastPath.SFAs' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="SFAs" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Converters\PREFastObjectModel" File="PREFastPath.cs" Line="9">Correct the casing of 'SFAs' in member name 'PREFastPath.SFAs' by changing it to 'Sfas'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SFA" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="SFA" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'SFA' in type name 'SFA' by changing it to 'Sfa'.</Issue>
          </Message>
         </Messages>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Microsoft.CodeAnalysis.Sarif.Converters.PylintObjectModel">
       <Types>
        <Type Name="PylintLog" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Pylint" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Pylint' in type name 'PylintLog'.</Issue>
          </Message>
          <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Rename 'PylintLog' to end in 'Collection'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="PylintLogEntry" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Pylint" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Pylint' in type name 'PylintLogEntry'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Type" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="BaseType" Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Converters\PylintObjectModel" File="PylintLogEntry.cs" Line="11">The property name 'PylintLogEntry.Type' is confusing given the existence of inherited method 'object.GetType()'. Rename or remove this property.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PylintLogReader" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Pylint" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Pylint' in type name 'PylintLogReader'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#ReadLog(System.IO.Stream)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Converters\PylintObjectModel" File="PylintLogReader.cs" Line="12">Change 'PylintLog' in 'PylintLogReader.ReadLog(Stream)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Microsoft.CodeAnalysis.Sarif.Converters.TSLintObjectModel">
       <Types>
        <Type Name="TSLintLog" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Rename 'TSLintLog' to end in 'Collection'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="TSLintLogEntry" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Fixes" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Converters\TSLintObjectModel" File="TSLintLogEntry.cs" Line="31">Change 'TSLintLogEntry.Fixes' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
     <Resources>
      <Resource Name="Microsoft.CodeAnalysis.Sarif.Converters.ConverterResources.resources">
       <Messages>
        <Message Id="Cpp" TypeName="ResourceStringsShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1703" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
         <Issue Name="StringResource" Certainty="50" Level="CriticalWarning">In resource 'Microsoft.CodeAnalysis.Sarif.Converters.ConverterResources.resx', referenced by name 'CppCheckCppCheckElementMissing', correct the spelling of 'Cpp' in string value 'CppCheck file did not start with "results/cppcheck" element with version information.'.</Issue>
         <Issue Name="StringResource" Certainty="50" Level="CriticalWarning">In resource 'Microsoft.CodeAnalysis.Sarif.Converters.ConverterResources.resx', referenced by name 'CppCheckElementNotError', correct the spelling of 'Cpp' in string value 'Could not parse CppCheck error node; element name was not error.'.</Issue>
         <Issue Name="StringResource" Certainty="50" Level="CriticalWarning">In resource 'Microsoft.CodeAnalysis.Sarif.Converters.ConverterResources.resx', referenced by name 'CppCheckErrorsElementMissing', correct the spelling of 'Cpp' in string value 'CppCheck file did not contain the errors element in the expected location.'.</Issue>
         <Issue Name="StringResource" Certainty="50" Level="CriticalWarning">In resource 'Microsoft.CodeAnalysis.Sarif.Converters.ConverterResources.resx', referenced by name 'CppCheckLocationElementNameIncorrect', correct the spelling of 'Cpp' in string value 'Could not parse CppCheck location node; element name was not 'location'.'.</Issue>
         <Issue Name="StringResource" Certainty="50" Level="CriticalWarning">In resource 'Microsoft.CodeAnalysis.Sarif.Converters.ConverterResources.resx', referenced by name 'CppCheckLocationMissingLine', correct the spelling of 'Cpp' in string value 'The `line` attribute for a CppCheck &lt;location&gt; was not set.'.</Issue>
         <Issue Name="StringResource" Certainty="50" Level="CriticalWarning">In resource 'Microsoft.CodeAnalysis.Sarif.Converters.ConverterResources.resx', referenced by name 'CppCheckLocationMissingName', correct the spelling of 'Cpp' in string value 'The `file` attribute for a CppCheck &lt;location&gt; was not set.'.</Issue>
         <Issue Name="StringResource" Certainty="50" Level="CriticalWarning">In resource 'Microsoft.CodeAnalysis.Sarif.Converters.ConverterResources.resx', referenced by name 'CppCheckLocationNameEmpty', correct the spelling of 'Cpp' in string value 'The `file` value for a CppCheckLocation was empty.'.</Issue>
         <Issue Name="StringResource" Certainty="50" Level="CriticalWarning">In resource 'Microsoft.CodeAnalysis.Sarif.Converters.ConverterResources.resx', referenced by name 'CppCheckLocationNegativeLine', correct the spelling of 'Cpp' in string value 'The `line` value for a CppCheckLocation must be positive.'.</Issue>
         <Issue Name="StringResource" Certainty="50" Level="CriticalWarning">In resource 'Microsoft.CodeAnalysis.Sarif.Converters.ConverterResources.resx', referenced by name 'CppCheckMissingLocation', correct the spelling of 'Cpp' in string value 'A CppCheck entry must have a nonzero number of locations.'.</Issue>
        </Message>
        <Message Id="cppcheck" TypeName="ResourceStringsShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1703" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
         <Issue Name="StringResource" Certainty="50" Level="CriticalWarning">In resource 'Microsoft.CodeAnalysis.Sarif.Converters.ConverterResources.resx', referenced by name 'CppCheckCppCheckElementMissing', correct the spelling of 'cppcheck' in string value 'CppCheck file did not start with "results/cppcheck" element with version information.'.</Issue>
        </Message>
       </Messages>
      </Resource>
     </Resources>
    </Module>
   </Modules>
  </Target>
  <Target Name="$(ProjectDir)/../../../../../../sarif-sdk-test/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll">
   <Modules>
    <Module Name="sarif.dll">
     <Messages>
      <Message TypeName="AttributeStringLiteralsShouldParseCorrectly" Category="Microsoft.Usage" CheckId="CA2243" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
       <Issue Certainty="75" Level="Warning">In the constructor of 'AssemblyInformationalVersionAttribute', change the value of argument 'informationalVersion', which is currently "2.0.0-csd.1.0.1", to something that can be correctly parsed as 'Version'.</Issue>
      </Message>
      <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
       <Issue Name="Assembly" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in assembly name 'Sarif.dll'.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="Microsoft.CodeAnalysis.Sarif">
       <Types>
        <Type Name="Attachment" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Rectangles" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Attachment.cs" Line="56">Change 'Attachment.Rectangles' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Regions" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Attachment.cs" Line="50">Change 'Attachment.Regions' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CodeFlow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Microsoft.CodeAnalysis.Sarif.CodeFlow)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="CodeFlow.cs" Line="86">'CodeFlow.CodeFlow(CodeFlow)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;CodeFlow..ctor(CodeFlow)&#xD;&#xA;CodeFlow.Init(Message, IEnumerable&lt;ThreadFlow&gt;, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(Microsoft.CodeAnalysis.Sarif.Message,System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.ThreadFlow&gt;,System.Collections.Generic.IDictionary`2&lt;System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="CodeFlow.cs" Line="72">'CodeFlow.CodeFlow(Message, IEnumerable&lt;ThreadFlow&gt;, IDictionary&lt;string, SerializedPropertyInfo&gt;)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;CodeFlow..ctor(Message, IEnumerable&lt;ThreadFlow&gt;, IDictionary&lt;String,SerializedPropertyInfo&gt;)&#xD;&#xA;CodeFlow.Init(Message, IEnumerable&lt;ThreadFlow&gt;, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ThreadFlows" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="CodeFlow.cs" Line="45">Change 'CodeFlow.ThreadFlows' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ConsoleLogger" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#FormatNotificationMessage(Microsoft.CodeAnalysis.Sarif.Notification)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif" File="ConsoleLogger.cs" Line="257">The 'this' parameter (or 'Me' in Visual Basic) of 'ConsoleLogger.FormatNotificationMessage(Notification)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NormalizeMessage(System.String,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="enquote" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif" File="ConsoleLogger.cs" Line="212">In method 'ConsoleLogger.NormalizeMessage(string, bool)', correct the spelling of 'enquote' in parameter name 'enquote' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Conversion" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AnalysisToolLogFiles" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Conversion.cs" Line="50">Change 'Conversion.AnalysisToolLogFiles' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Edge" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Microsoft.CodeAnalysis.Sarif.Edge)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Edge.cs" Line="104">'Edge.Edge(Edge)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;Edge..ctor(Edge)&#xD;&#xA;Edge.Init(String, Message, String, String, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,Microsoft.CodeAnalysis.Sarif.Message,System.String,System.String,System.Collections.Generic.IDictionary`2&lt;System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Edge.cs" Line="90">'Edge.Edge(string, Message, string, string, IDictionary&lt;string, SerializedPropertyInfo&gt;)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;Edge..ctor(String, Message, String, String, IDictionary&lt;String,SerializedPropertyInfo&gt;)&#xD;&#xA;Edge.Init(String, Message, String, String, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="EdgeTraversal" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Microsoft.CodeAnalysis.Sarif.EdgeTraversal)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="EdgeTraversal.cs" Line="104">'EdgeTraversal.EdgeTraversal(EdgeTraversal)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;EdgeTraversal..ctor(EdgeTraversal)&#xD;&#xA;EdgeTraversal.Init(String, Message, IDictionary&lt;String,String&gt;, Int32, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,Microsoft.CodeAnalysis.Sarif.Message,System.Collections.Generic.IDictionary`2&lt;System.String,System.String&gt;,System.Int32,System.Collections.Generic.IDictionary`2&lt;System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="EdgeTraversal.cs" Line="90">'EdgeTraversal.EdgeTraversal(string, Message, IDictionary&lt;string, string&gt;, int, IDictionary&lt;string, SerializedPropertyInfo&gt;)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;EdgeTraversal..ctor(String, Message, IDictionary&lt;String,String&gt;, Int32, IDictionary&lt;String,SerializedPropertyInfo&gt;)&#xD;&#xA;EdgeTraversal.Init(String, Message, IDictionary&lt;String,String&gt;, Int32, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FinalState" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="EdgeTraversal.cs" Line="51">Change 'EdgeTraversal.FinalState' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ExceptionData" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Create(System.Exception)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Core" File="ExceptionData.cs" Line="16">In externally visible method 'ExceptionData.Create(Exception)', validate parameter 'exception' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InnerExceptions" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="ExceptionData.cs" Line="53">Change 'ExceptionData.InnerExceptions' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ExtensionMethods" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetFileName(System.Uri)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif" File="ExtensionMethods.cs" Line="46">In externally visible method 'ExtensionMethods.GetFileName(this Uri)', validate parameter 'uri' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToFlags(System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.OptionallyEmittedData&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="MemberNoAlternate" Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif" File="ExtensionMethods.cs" Line="24">Replace the term 'Flags' in member name 'ExtensionMethods.ToFlags(this IEnumerable&lt;OptionallyEmittedData&gt;)' with an appropriate alternate or remove it entirely.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="FileChange" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Replacements" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="FileChange.cs" Line="44">Change 'FileChange.Replacements' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="FileData" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Microsoft.CodeAnalysis.Sarif.FileData)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="FileData.cs" Line="158">'FileData.FileData(FileData)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;FileData..ctor(FileData)&#xD;&#xA;FileData.Init(FileLocation, String, Int32, Int32, FileRoles, String, FileContent, String, IEnumerable&lt;Hash&gt;, DateTime, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(Microsoft.CodeAnalysis.Sarif.FileLocation,System.String,System.Int32,System.Int32,Microsoft.CodeAnalysis.Sarif.FileRoles,System.String,Microsoft.CodeAnalysis.Sarif.FileContent,System.String,System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.Hash&gt;,System.DateTime,System.Collections.Generic.IDictionary`2&lt;System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="FileData.cs" Line="144">'FileData.FileData(FileLocation, string, int, int, FileRoles, string, FileContent, string, IEnumerable&lt;Hash&gt;, DateTime, IDictionary&lt;string, SerializedPropertyInfo&gt;)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;FileData..ctor(FileLocation, String, Int32, Int32, FileRoles, String, FileContent, String, IEnumerable&lt;Hash&gt;, DateTime, IDictionary&lt;String,SerializedPropertyInfo&gt;)&#xD;&#xA;FileData.Init(FileLocation, String, Int32, Int32, FileRoles, String, FileContent, String, IEnumerable&lt;Hash&gt;, DateTime, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Create(System.Uri,Microsoft.CodeAnalysis.Sarif.OptionallyEmittedData,System.String,System.Text.Encoding,Microsoft.CodeAnalysis.Sarif.IFileSystem)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif\Core" File="FileData.cs" Line="23">Replace method 'FileData.Create(Uri, OptionallyEmittedData, string, Encoding, IFileSystem)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Hashes" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="FileData.cs" Line="87">Change 'FileData.Hashes' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="FileDataEqualityComparer" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#Equals(Microsoft.CodeAnalysis.Sarif.FileData,Microsoft.CodeAnalysis.Sarif.FileData)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="FileDataEqualityComparer.cs" Line="20">'FileDataEqualityComparer.Equals(FileData, FileData)' has a cyclomatic complexity of 27. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="FileLocation" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.Uri,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="FileLocation.cs" Line="62">Change the type of parameter 'uriBaseId' of method 'FileLocation.FileLocation(Uri, string)' from string to System.Uri, or provide an overload of 'FileLocation.FileLocation(Uri, string)', that allows 'uriBaseId' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateFromFilesDictionaryKey(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif\Core" File="FileLocation.cs" Line="53">Because the behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings, replace this call in 'FileLocation.CreateFromFilesDictionaryKey(string)' with a call to 'string.StartsWith(string, StringComparison)'. If the result of 'string.StartsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Core" File="FileLocation.cs" Line="53">In externally visible method 'FileLocation.CreateFromFilesDictionaryKey(string)', validate parameter 'key' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TryReconstructAbsoluteUri(System.Collections.Generic.IDictionary`2&lt;System.String,System.Uri&gt;,System.Uri&amp;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PassSystemUriObjectsInsteadOfStrings" Category="Microsoft.Usage" CheckId="CA2234" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Core" File="FileLocation.cs" Line="22">Modify 'FileLocation.TryReconstructAbsoluteUri(IDictionary&lt;string, Uri&gt;, out Uri)' to call 'Uri.Uri(Uri, Uri)' instead of 'Uri.Uri(Uri, string)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UriBaseId" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UriPropertiesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1056" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="FileLocation.cs" Line="44">Change the type of property 'FileLocation.UriBaseId' from string to System.Uri.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="FileRegionsCache" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#_filePathToNewLineIndexMap" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'FileRegionsCache._filePathToNewLineIndexMap' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_run" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'FileRegionsCache._run' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PopulateCharLength(Microsoft.CodeAnalysis.Sarif.NewLineIndex,Microsoft.CodeAnalysis.Sarif.Region)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif" File="FileRegionsCache.cs" Line="259">The 'this' parameter (or 'Me' in Visual Basic) of 'FileRegionsCache.PopulateCharLength(NewLineIndex, Region)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PopulateEndColumn(Microsoft.CodeAnalysis.Sarif.NewLineIndex,Microsoft.CodeAnalysis.Sarif.Region,System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif" File="FileRegionsCache.cs" Line="213">The 'this' parameter (or 'Me' in Visual Basic) of 'FileRegionsCache.PopulateEndColumn(NewLineIndex, Region, string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PopulatePropertiesFromCharOffsetAndLength(Microsoft.CodeAnalysis.Sarif.NewLineIndex,Microsoft.CodeAnalysis.Sarif.Region)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif" File="FileRegionsCache.cs" Line="129">The 'this' parameter (or 'Me' in Visual Basic) of 'FileRegionsCache.PopulatePropertiesFromCharOffsetAndLength(NewLineIndex, Region)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Fix" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#FileChanges" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Fix.cs" Line="44">Change 'Fix.FileChanges' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Graph" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Microsoft.CodeAnalysis.Sarif.Graph)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Graph.cs" Line="104">'Graph.Graph(Graph)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;Graph..ctor(Graph)&#xD;&#xA;Graph.Init(String, Message, IEnumerable&lt;Node&gt;, IEnumerable&lt;Edge&gt;, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,Microsoft.CodeAnalysis.Sarif.Message,System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.Node&gt;,System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.Edge&gt;,System.Collections.Generic.IDictionary`2&lt;System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Graph.cs" Line="90">'Graph.Graph(string, Message, IEnumerable&lt;Node&gt;, IEnumerable&lt;Edge&gt;, IDictionary&lt;string, SerializedPropertyInfo&gt;)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;Graph..ctor(String, Message, IEnumerable&lt;Node&gt;, IEnumerable&lt;Edge&gt;, IDictionary&lt;String,SerializedPropertyInfo&gt;)&#xD;&#xA;Graph.Init(String, Message, IEnumerable&lt;Node&gt;, IEnumerable&lt;Edge&gt;, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Edges" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Graph.cs" Line="57">Change 'Graph.Edges' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Nodes" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Graph.cs" Line="51">Change 'Graph.Nodes' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="GraphEqualityComparer" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#Equals(Microsoft.CodeAnalysis.Sarif.Graph,Microsoft.CodeAnalysis.Sarif.Graph)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="GraphEqualityComparer.cs" Line="20">'GraphEqualityComparer.Equals(Graph, Graph)' has a cyclomatic complexity of 26. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="GraphTraversal" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Microsoft.CodeAnalysis.Sarif.GraphTraversal)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="GraphTraversal.cs" Line="104">'GraphTraversal.GraphTraversal(GraphTraversal)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;GraphTraversal..ctor(GraphTraversal)&#xD;&#xA;GraphTraversal.Init(String, Message, IDictionary&lt;String,String&gt;, IEnumerable&lt;EdgeTraversal&gt;, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,Microsoft.CodeAnalysis.Sarif.Message,System.Collections.Generic.IDictionary`2&lt;System.String,System.String&gt;,System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.EdgeTraversal&gt;,System.Collections.Generic.IDictionary`2&lt;System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="GraphTraversal.cs" Line="90">'GraphTraversal.GraphTraversal(string, Message, IDictionary&lt;string, string&gt;, IEnumerable&lt;EdgeTraversal&gt;, IDictionary&lt;string, SerializedPropertyInfo&gt;)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;GraphTraversal..ctor(String, Message, IDictionary&lt;String,String&gt;, IEnumerable&lt;EdgeTraversal&gt;, IDictionary&lt;String,SerializedPropertyInfo&gt;)&#xD;&#xA;GraphTraversal.Init(String, Message, IDictionary&lt;String,String&gt;, IEnumerable&lt;EdgeTraversal&gt;, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EdgeTraversals" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="GraphTraversal.cs" Line="57">Change 'GraphTraversal.EdgeTraversals' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitialState" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="GraphTraversal.cs" Line="51">Change 'GraphTraversal.InitialState' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="GraphTraversalEqualityComparer" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#Equals(Microsoft.CodeAnalysis.Sarif.GraphTraversal,Microsoft.CodeAnalysis.Sarif.GraphTraversal)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="GraphTraversalEqualityComparer.cs" Line="20">'GraphTraversalEqualityComparer.Equals(GraphTraversal, GraphTraversal)' has a cyclomatic complexity of 28. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HashData" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="sha" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif" File="HashData.cs" Line="8">In method 'HashData.HashData(string, string, string)', correct the spelling of 'sha' in parameter name 'sha1' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif" File="HashData.cs" Line="8">In method 'HashData.HashData(string, string, string)', correct the spelling of 'sha' in parameter name 'sha256' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Sha1" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Sha" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif" File="HashData.cs" Line="17">Correct the spelling of 'Sha' in member name 'HashData.Sha1' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Sha256" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Sha" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif" File="HashData.cs" Line="19">Correct the spelling of 'Sha' in member name 'HashData.Sha256' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HashUtilities" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ComputeHashes(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif" File="HashUtilities.cs" Line="50">Object 'stream' can be disposed more than once in method 'HashUtilities.ComputeHashes(string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 50</Issue>
            </Message>
            <Message TypeName="MD5CannotBeUsed" Category="Microsoft.Security.Cryptography" CheckId="CA5350" Status="ExcludedInSource" Created="2018-08-23 13:07:11Z" FixCategory="NonBreaking" LastSeen="0001-01-01 00:00:00Z" />
            <Message TypeName="SHA1CannotBeUsed" Category="Microsoft.Security.Cryptography" CheckId="CA5354" Status="ExcludedInSource" Created="2018-08-23 13:07:11Z" FixCategory="NonBreaking" LastSeen="0001-01-01 00:00:00Z" />
           </Messages>
          </Member>
          <Member Name="#ComputeMD5Hash(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif" File="HashUtilities.cs" Line="124">Object 'stream' can be disposed more than once in method 'HashUtilities.ComputeMD5Hash(string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 124</Issue>
            </Message>
            <Message TypeName="MD5CannotBeUsed" Category="Microsoft.Security.Cryptography" CheckId="CA5350" Status="ExcludedInSource" Created="2018-08-23 13:07:11Z" FixCategory="NonBreaking" LastSeen="0001-01-01 00:00:00Z" />
           </Messages>
          </Member>
          <Member Name="#ComputeSha1Hash(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif" File="HashUtilities.cs" Line="100">Object 'stream' can be disposed more than once in method 'HashUtilities.ComputeSha1Hash(string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 100</Issue>
            </Message>
            <Message Id="Sha" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif" File="HashUtilities.cs" Line="85">Correct the spelling of 'Sha' in member name 'HashUtilities.ComputeSha1Hash(string)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="SHA1CannotBeUsed" Category="Microsoft.Security.Cryptography" CheckId="CA5354" Status="ExcludedInSource" Created="2018-08-23 13:07:11Z" FixCategory="NonBreaking" LastSeen="0001-01-01 00:00:00Z" />
           </Messages>
          </Member>
          <Member Name="#ComputeSha256Hash(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif" File="HashUtilities.cs" Line="76">Object 'stream' can be disposed more than once in method 'HashUtilities.ComputeSha256Hash(string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 76</Issue>
            </Message>
            <Message Id="Sha" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif" File="HashUtilities.cs" Line="60">Correct the spelling of 'Sha' in member name 'HashUtilities.ComputeSha256Hash(string)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IAnalysisContext" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Policy" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="ExcludedInSource" Created="2018-08-23 13:07:11Z" FixCategory="Breaking" LastSeen="0001-01-01 00:00:00Z" />
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IFileSystem" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#WriteAllBytes(System.String,System.Byte[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="bytes" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error">In member 'IFileSystem.WriteAllBytes(string, byte[])', consider replacing the data type identifier 'bytes' in parameter name 'bytes' with a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IMarker" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidEmptyInterfaces" Category="Microsoft.Design" CheckId="CA1040" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Warning">Define a custom attribute to replace 'IMarker'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="IntegerSet" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Rename 'IntegerSet' to end in 'Collection'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="Invocation" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Microsoft.CodeAnalysis.Sarif.Invocation)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Invocation.cs" Line="284">'Invocation.Invocation(Invocation)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;Invocation..ctor(Invocation)&#xD;&#xA;Invocation.Init(IEnumerable&lt;Attachment&gt;, String, IEnumerable&lt;String&gt;, IEnumerable&lt;FileLocation&gt;, DateTime, DateTime, Int32, IEnumerable&lt;Notification&gt;, IEnumerable&lt;Notification&gt;, String, String, Int32, String, Boolean, String, String, Int32, FileLocation, String, IDictionary&lt;String,String&gt;, FileLocation, FileLocation, FileLocation, FileLocation, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.Attachment&gt;,System.String,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.FileLocation&gt;,System.DateTime,System.DateTime,System.Int32,System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.Notification&gt;,System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.Notification&gt;,System.String,System.String,System.Int32,System.String,System.Boolean,System.String,System.String,System.Int32,Microsoft.CodeAnalysis.Sarif.FileLocation,System.String,System.Collections.Generic.IDictionary`2&lt;System.String,System.String&gt;,Microsoft.CodeAnalysis.Sarif.FileLocation,Microsoft.CodeAnalysis.Sarif.FileLocation,Microsoft.CodeAnalysis.Sarif.FileLocation,Microsoft.CodeAnalysis.Sarif.FileLocation,System.Collections.Generic.IDictionary`2&lt;System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Invocation.cs" Line="270">'Invocation.Invocation(IEnumerable&lt;Attachment&gt;, string, IEnumerable&lt;string&gt;, IEnumerable&lt;FileLocation&gt;, DateTime, DateTime, int, IEnumerable&lt;Notification&gt;, IEnumerable&lt;Notification&gt;, string, string, int, string, bool, string, string, int, FileLocation, string, IDictionary&lt;string, string&gt;, FileLocation, FileLocation, FileLocation, FileLocation, IDictionary&lt;string, SerializedPropertyInfo&gt;)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;Invocation..ctor(IEnumerable&lt;Attachment&gt;, String, IEnumerable&lt;String&gt;, IEnumerable&lt;FileLocation&gt;, DateTime, DateTime, Int32, IEnumerable&lt;Notification&gt;, IEnumerable&lt;Notification&gt;, String, String, Int32, String, Boolean, String, String, Int32, FileLocation, String, IDictionary&lt;String,String&gt;, FileLocation, FileLocation, FileLocation, FileLocation, IDictionary&lt;String,SerializedPropertyInfo&gt;)&#xD;&#xA;Invocation.Init(IEnumerable&lt;Attachment&gt;, String, IEnumerable&lt;String&gt;, IEnumerable&lt;FileLocation&gt;, DateTime, DateTime, Int32, IEnumerable&lt;Notification&gt;, IEnumerable&lt;Notification&gt;, String, String, Int32, String, Boolean, String, String, Int32, FileLocation, String, IDictionary&lt;String,String&gt;, FileLocation, FileLocation, FileLocation, FileLocation, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
            <Message Id="Stderr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Invocation.cs" Line="270">In method 'Invocation.Invocation(IEnumerable&lt;Attachment&gt;, string, IEnumerable&lt;string&gt;, IEnumerable&lt;FileLocation&gt;, DateTime, DateTime, int, IEnumerable&lt;Notification&gt;, IEnumerable&lt;Notification&gt;, string, string, int, string, bool, string, string, int, FileLocation, string, IDictionary&lt;string, string&gt;, FileLocation, FileLocation, FileLocation, FileLocation, IDictionary&lt;string, SerializedPropertyInfo&gt;)', correct the spelling of 'Stderr' in parameter name 'stdoutStderr' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="stderr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Invocation.cs" Line="270">In method 'Invocation.Invocation(IEnumerable&lt;Attachment&gt;, string, IEnumerable&lt;string&gt;, IEnumerable&lt;FileLocation&gt;, DateTime, DateTime, int, IEnumerable&lt;Notification&gt;, IEnumerable&lt;Notification&gt;, string, string, int, string, bool, string, string, int, FileLocation, string, IDictionary&lt;string, string&gt;, FileLocation, FileLocation, FileLocation, FileLocation, IDictionary&lt;string, SerializedPropertyInfo&gt;)', correct the spelling of 'stderr' in parameter name 'stderr' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="stdin" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Invocation.cs" Line="270">In method 'Invocation.Invocation(IEnumerable&lt;Attachment&gt;, string, IEnumerable&lt;string&gt;, IEnumerable&lt;FileLocation&gt;, DateTime, DateTime, int, IEnumerable&lt;Notification&gt;, IEnumerable&lt;Notification&gt;, string, string, int, string, bool, string, string, int, FileLocation, string, IDictionary&lt;string, string&gt;, FileLocation, FileLocation, FileLocation, FileLocation, IDictionary&lt;string, SerializedPropertyInfo&gt;)', correct the spelling of 'stdin' in parameter name 'stdin' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="stdout" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Invocation.cs" Line="270">In method 'Invocation.Invocation(IEnumerable&lt;Attachment&gt;, string, IEnumerable&lt;string&gt;, IEnumerable&lt;FileLocation&gt;, DateTime, DateTime, int, IEnumerable&lt;Notification&gt;, IEnumerable&lt;Notification&gt;, string, string, int, string, bool, string, string, int, FileLocation, string, IDictionary&lt;string, string&gt;, FileLocation, FileLocation, FileLocation, FileLocation, IDictionary&lt;string, SerializedPropertyInfo&gt;)', correct the spelling of 'stdout' in parameter name 'stdout' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Invocation.cs" Line="270">In method 'Invocation.Invocation(IEnumerable&lt;Attachment&gt;, string, IEnumerable&lt;string&gt;, IEnumerable&lt;FileLocation&gt;, DateTime, DateTime, int, IEnumerable&lt;Notification&gt;, IEnumerable&lt;Notification&gt;, string, string, int, string, bool, string, string, int, FileLocation, string, IDictionary&lt;string, string&gt;, FileLocation, FileLocation, FileLocation, FileLocation, IDictionary&lt;string, SerializedPropertyInfo&gt;)', correct the spelling of 'stdout' in parameter name 'stdoutStderr' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Arguments" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Invocation.cs" Line="51">Change 'Invocation.Arguments' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Attachments" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Invocation.cs" Line="39">Change 'Invocation.Attachments' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ConfigurationNotifications" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Invocation.cs" Line="87">Change 'Invocation.ConfigurationNotifications' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Create(System.Boolean,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif\Core" File="Invocation.cs" Line="19">Replace method 'Invocation.Create(bool, IEnumerable&lt;string&gt;)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EnvironmentVariables" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Invocation.cs" Line="153">Change 'Invocation.EnvironmentVariables' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Init(System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.Attachment&gt;,System.String,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.FileLocation&gt;,System.DateTime,System.DateTime,System.Int32,System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.Notification&gt;,System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.Notification&gt;,System.String,System.String,System.Int32,System.String,System.Boolean,System.String,System.String,System.Int32,Microsoft.CodeAnalysis.Sarif.FileLocation,System.String,System.Collections.Generic.IDictionary`2&lt;System.String,System.String&gt;,Microsoft.CodeAnalysis.Sarif.FileLocation,Microsoft.CodeAnalysis.Sarif.FileLocation,Microsoft.CodeAnalysis.Sarif.FileLocation,Microsoft.CodeAnalysis.Sarif.FileLocation,System.Collections.Generic.IDictionary`2&lt;System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo&gt;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Invocation.cs" Line="313">'Invocation.Init(IEnumerable&lt;Attachment&gt;, string, IEnumerable&lt;string&gt;, IEnumerable&lt;FileLocation&gt;, DateTime, DateTime, int, IEnumerable&lt;Notification&gt;, IEnumerable&lt;Notification&gt;, string, string, int, string, bool, string, string, int, FileLocation, string, IDictionary&lt;string, string&gt;, FileLocation, FileLocation, FileLocation, FileLocation, IDictionary&lt;string, SerializedPropertyInfo&gt;)' has a cyclomatic complexity of 27. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ResponseFiles" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Invocation.cs" Line="57">Change 'Invocation.ResponseFiles' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Stderr" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Stderr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Invocation.cs" Line="171">Correct the spelling of 'Stderr' in member name 'Invocation.Stderr' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Stdin" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Stdin" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Invocation.cs" Line="159">Correct the spelling of 'Stdin' in member name 'Invocation.Stdin' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Stdout" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Stdout" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Invocation.cs" Line="165">Correct the spelling of 'Stdout' in member name 'Invocation.Stdout' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StdoutStderr" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Stderr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Invocation.cs" Line="177">Correct the spelling of 'Stderr' in member name 'Invocation.StdoutStderr' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Stdout" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Invocation.cs" Line="177">Correct the spelling of 'Stdout' in member name 'Invocation.StdoutStderr' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToolNotifications" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Invocation.cs" Line="81">Change 'Invocation.ToolNotifications' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="InvocationEqualityComparer" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#Equals(Microsoft.CodeAnalysis.Sarif.Invocation,Microsoft.CodeAnalysis.Sarif.Invocation)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="InvocationEqualityComparer.cs" Line="20">'InvocationEqualityComparer.Equals(Invocation, Invocation)' has a cyclomatic complexity of 68. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="AvoidExcessiveLocals" Category="Microsoft.Performance" CheckId="CA1809" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="Compiler" Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="InvocationEqualityComparer.cs" Line="20">'InvocationEqualityComparer.Equals(Invocation, Invocation)' has 65 local variables, 56 of which were generated by the compiler. Refactor 'InvocationEqualityComparer.Equals(Invocation, Invocation)' so that it uses fewer than 64 local variables.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetHashCode(Microsoft.CodeAnalysis.Sarif.Invocation)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="InvocationEqualityComparer.cs" Line="274">'InvocationEqualityComparer.GetHashCode(Invocation)' has a cyclomatic complexity of 42. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IOptionsProvider" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetOptions()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="ExcludedInSource" Created="2018-08-23 13:07:11Z" FixCategory="Breaking" LastSeen="0001-01-01 00:00:00Z">
             <Notes>
              <User Name="[SuppressMessage]">
               <Note Id="2" />
              </User>
             </Notes>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ISarifNode" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in type name 'ISarifNode'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#SarifNodeKind" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in member name 'ISarifNode.SarifNodeKind' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Location" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Microsoft.CodeAnalysis.Sarif.Location)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Location.cs" Line="104">'Location.Location(Location)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;Location..ctor(Location)&#xD;&#xA;Location.Init(PhysicalLocation, String, Message, IEnumerable&lt;Region&gt;, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(Microsoft.CodeAnalysis.Sarif.PhysicalLocation,System.String,Microsoft.CodeAnalysis.Sarif.Message,System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.Region&gt;,System.Collections.Generic.IDictionary`2&lt;System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Location.cs" Line="90">'Location.Location(PhysicalLocation, string, Message, IEnumerable&lt;Region&gt;, IDictionary&lt;string, SerializedPropertyInfo&gt;)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;Location..ctor(PhysicalLocation, String, Message, IEnumerable&lt;Region&gt;, IDictionary&lt;String,SerializedPropertyInfo&gt;)&#xD;&#xA;Location.Init(PhysicalLocation, String, Message, IEnumerable&lt;Region&gt;, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Annotations" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Location.cs" Line="57">Change 'Location.Annotations' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Message" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Arguments" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Message.cs" Line="62">Change 'Message.Arguments' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MultiplyByPrimesHash" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AddRange(System.Collections.Generic.IEnumerable`1&lt;System.Int32&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="ExcludedInSource" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix" LastSeen="0001-01-01 00:00:00Z" />
           </Messages>
          </Member>
          <Member Name="#AddRange(System.Collections.IEnumerable)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="ExcludedInSource" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix" LastSeen="0001-01-01 00:00:00Z" />
           </Messages>
          </Member>
          <Member Name="#AddRange(System.Int32[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="ExcludedInSource" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix" LastSeen="0001-01-01 00:00:00Z" />
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="NewLineIndex" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="ExcludedInSource" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix" LastSeen="0001-01-01 00:00:00Z" />
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Node" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Microsoft.CodeAnalysis.Sarif.Node)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Node.cs" Line="104">'Node.Node(Node)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;Node..ctor(Node)&#xD;&#xA;Node.Init(String, Message, Location, IEnumerable&lt;Node&gt;, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,Microsoft.CodeAnalysis.Sarif.Message,Microsoft.CodeAnalysis.Sarif.Location,System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.Node&gt;,System.Collections.Generic.IDictionary`2&lt;System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Node.cs" Line="90">'Node.Node(string, Message, Location, IEnumerable&lt;Node&gt;, IDictionary&lt;string, SerializedPropertyInfo&gt;)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;Node..ctor(String, Message, Location, IEnumerable&lt;Node&gt;, IDictionary&lt;String,SerializedPropertyInfo&gt;)&#xD;&#xA;Node.Init(String, Message, Location, IEnumerable&lt;Node&gt;, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Children" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Node.cs" Line="57">Change 'Node.Children' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Notes" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Msg001AnalyzingTarget" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Msg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Msg' in member name 'Notes.Msg001AnalyzingTarget' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Notification" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Microsoft.CodeAnalysis.Sarif.Notification)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Notification.cs" Line="140">'Notification.Notification(Notification)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;Notification..ctor(Notification)&#xD;&#xA;Notification.Init(String, String, PhysicalLocation, Message, FailureLevel, Int32, DateTime, ExceptionData, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.String,Microsoft.CodeAnalysis.Sarif.PhysicalLocation,Microsoft.CodeAnalysis.Sarif.Message,Microsoft.CodeAnalysis.Sarif.FailureLevel,System.Int32,System.DateTime,Microsoft.CodeAnalysis.Sarif.ExceptionData,System.Collections.Generic.IDictionary`2&lt;System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Notification.cs" Line="126">'Notification.Notification(string, string, PhysicalLocation, Message, FailureLevel, int, DateTime, ExceptionData, IDictionary&lt;string, SerializedPropertyInfo&gt;)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;Notification..ctor(String, String, PhysicalLocation, Message, FailureLevel, Int32, DateTime, ExceptionData, IDictionary&lt;String,SerializedPropertyInfo&gt;)&#xD;&#xA;Notification.Init(String, String, PhysicalLocation, Message, FailureLevel, Int32, DateTime, ExceptionData, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="OptionallyEmittedData" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="EnumStorageShouldBeInt32" Category="Microsoft.Design" CheckId="CA1028" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Name="NotIntegral" Certainty="60" Level="Warning">If possible, make the underlying type of 'OptionallyEmittedData' Int32 instead of 'uint'. Otherwise consider Byte, Int16, or Int64.</Issue>
          </Message>
          <Message TypeName="FlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1714" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Error">If enumeration name 'OptionallyEmittedData' is singular, change it to a plural form.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="PerLanguageOption`1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Microsoft.CodeAnalysis.Sarif.IOption.IsPerLanguage" Kind="Property" Static="False" Accessibility="Private" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#Microsoft.CodeAnalysis.Sarif.IOption.get_IsPerLanguage()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="True">
             <Messages>
              <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
               <Issue Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif" File="PerLanguageOption.cs" Line="78">Make 'PerLanguageOption&lt;T&gt;' sealed (a breaking change if this class has previously shipped), implement the method non-explicitly, or implement a new method that exposes the functionality of 'IOption.IsPerLanguage.get()' and is visible to derived classes.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#Microsoft.CodeAnalysis.Sarif.IOption.Type" Kind="Property" Static="False" Accessibility="Private" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#Microsoft.CodeAnalysis.Sarif.IOption.get_Type()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="True">
             <Messages>
              <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
               <Issue Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif" File="PerLanguageOption.cs" Line="68">Make 'PerLanguageOption&lt;T&gt;' sealed (a breaking change if this class has previously shipped), implement the method non-explicitly, or implement a new method that exposes the functionality of 'IOption.Type.get()' and is visible to derived classes.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="PropertiesDictionary" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'PropertiesDictionary'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#LoadFromXml(System.IO.Stream)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UseXmlSecureResolver" Category="Microsoft.Security.Xml" CheckId="CA3053" Status="ExcludedInSource" Created="2018-08-23 13:07:11Z" FixCategory="NonBreaking" LastSeen="0001-01-01 00:00:00Z" />
           </Messages>
          </Member>
          <Member Name="#SaveToJson(System.String,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif" File="PropertiesDictionary.cs" Line="152">Replace method 'PropertiesDictionary.SaveToJson(string, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TryGetProperty`1(System.String,!!0&amp;)" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="Local" Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif" File="PropertiesDictionary.cs" Line="111">'result', a variable, is cast to type 'JToken' multiple times in method 'PropertiesDictionary.TryGetProperty&lt;T&gt;(string, out T)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PropertyBagHolder" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#SetProperty`1(System.String,!!0)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif\Core" File="PropertyBagHolder.cs" Line="130">Because the behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings, replace this call in 'PropertyBagHolder.SetProperty&lt;T&gt;(string, T)' with a call to 'string.StartsWith(string, StringComparison)'. If the result of 'string.StartsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
             <Issue Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif\Core" File="PropertyBagHolder.cs" Line="134">Because the behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings, replace this call in 'PropertyBagHolder.SetProperty&lt;T&gt;(string, T)' with a call to 'string.StartsWith(string, StringComparison)'. If the result of 'string.StartsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Core" File="PropertyBagHolder.cs" Line="130">In externally visible method 'PropertyBagHolder.SetProperty&lt;T&gt;(string, T)', validate parameter 'propertyName' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Region" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.CodeAnalysis.Sarif.FileContent,Microsoft.CodeAnalysis.Sarif.Message)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="byte" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Region.cs" Line="134">In member 'Region.Region(int, int, int, int, int, int, int, int, FileContent, Message)', consider replacing the data type identifier 'byte' in parameter name 'byteLength' with a more generic term, such as 'value'.</Issue>
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Region.cs" Line="134">In member 'Region.Region(int, int, int, int, int, int, int, int, FileContent, Message)', consider replacing the data type identifier 'byte' in parameter name 'byteOffset' with a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Resources" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="TypeNamesShouldNotMatchNamespaces" Category="Microsoft.Naming" CheckId="CA1724" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Name="System" Certainty="95" Level="Error">The type name 'Resources' conflicts in whole or in part with the namespace name 'System.Resources' defined in the .NET Framework. Rename the type to eliminate the conflict.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#MessageStrings" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Resources.cs" Line="39">Change 'Resources.MessageStrings' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Rules" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Resources.cs" Line="45">Change 'Resources.Rules' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Result" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Microsoft.CodeAnalysis.Sarif.Result)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Result.cs" Line="253">'Result.Result(Result)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;Result..ctor(Result)&#xD;&#xA;Result.Init(String, ResultLevel, Message, String, FileLocation, IEnumerable&lt;Location&gt;, String, String, IDictionary&lt;String,String&gt;, IDictionary&lt;String,String&gt;, IEnumerable&lt;Stack&gt;, IEnumerable&lt;CodeFlow&gt;, IEnumerable&lt;Graph&gt;, IEnumerable&lt;GraphTraversal&gt;, IEnumerable&lt;Location&gt;, SuppressionStates, BaselineState, IEnumerable&lt;Attachment&gt;, IEnumerable&lt;Uri&gt;, IEnumerable&lt;PhysicalLocation&gt;, IEnumerable&lt;Fix&gt;, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,Microsoft.CodeAnalysis.Sarif.ResultLevel,Microsoft.CodeAnalysis.Sarif.Message,System.String,Microsoft.CodeAnalysis.Sarif.FileLocation,System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.Location&gt;,System.String,System.String,System.Collections.Generic.IDictionary`2&lt;System.String,System.String&gt;,System.Collections.Generic.IDictionary`2&lt;System.String,System.String&gt;,System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.Stack&gt;,System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.CodeFlow&gt;,System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.Graph&gt;,System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.GraphTraversal&gt;,System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.Location&gt;,Microsoft.CodeAnalysis.Sarif.SuppressionStates,Microsoft.CodeAnalysis.Sarif.BaselineState,System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.Attachment&gt;,System.Collections.Generic.IEnumerable`1&lt;System.Uri&gt;,System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.PhysicalLocation&gt;,System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.Fix&gt;,System.Collections.Generic.IDictionary`2&lt;System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Result.cs" Line="239">'Result.Result(string, ResultLevel, Message, string, FileLocation, IEnumerable&lt;Location&gt;, string, string, IDictionary&lt;string, string&gt;, IDictionary&lt;string, string&gt;, IEnumerable&lt;Stack&gt;, IEnumerable&lt;CodeFlow&gt;, IEnumerable&lt;Graph&gt;, IEnumerable&lt;GraphTraversal&gt;, IEnumerable&lt;Location&gt;, SuppressionStates, BaselineState, IEnumerable&lt;Attachment&gt;, IEnumerable&lt;Uri&gt;, IEnumerable&lt;PhysicalLocation&gt;, IEnumerable&lt;Fix&gt;, IDictionary&lt;string, SerializedPropertyInfo&gt;)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;Result..ctor(String, ResultLevel, Message, String, FileLocation, IEnumerable&lt;Location&gt;, String, String, IDictionary&lt;String,String&gt;, IDictionary&lt;String,String&gt;, IEnumerable&lt;Stack&gt;, IEnumerable&lt;CodeFlow&gt;, IEnumerable&lt;Graph&gt;, IEnumerable&lt;GraphTraversal&gt;, IEnumerable&lt;Location&gt;, SuppressionStates, BaselineState, IEnumerable&lt;Attachment&gt;, IEnumerable&lt;Uri&gt;, IEnumerable&lt;PhysicalLocation&gt;, IEnumerable&lt;Fix&gt;, IDictionary&lt;String,SerializedPropertyInfo&gt;)&#xD;&#xA;Result.Init(String, ResultLevel, Message, String, FileLocation, IEnumerable&lt;Location&gt;, String, String, IDictionary&lt;String,String&gt;, IDictionary&lt;String,String&gt;, IEnumerable&lt;Stack&gt;, IEnumerable&lt;CodeFlow&gt;, IEnumerable&lt;Graph&gt;, IEnumerable&lt;GraphTraversal&gt;, IEnumerable&lt;Location&gt;, SuppressionStates, BaselineState, IEnumerable&lt;Attachment&gt;, IEnumerable&lt;Uri&gt;, IEnumerable&lt;PhysicalLocation&gt;, IEnumerable&lt;Fix&gt;, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Attachments" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Result.cs" Line="137">Change 'Result.Attachments' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CodeFlows" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Result.cs" Line="105">Change 'Result.CodeFlows' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ConversionProvenance" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Result.cs" Line="149">Change 'Result.ConversionProvenance' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Fingerprints" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Result.cs" Line="93">Change 'Result.Fingerprints' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Fixes" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Result.cs" Line="155">Change 'Result.Fixes' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Graphs" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Result.cs" Line="111">Change 'Result.Graphs' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GraphTraversals" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Result.cs" Line="117">Change 'Result.GraphTraversals' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Init(System.String,Microsoft.CodeAnalysis.Sarif.ResultLevel,Microsoft.CodeAnalysis.Sarif.Message,System.String,Microsoft.CodeAnalysis.Sarif.FileLocation,System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.Location&gt;,System.String,System.String,System.Collections.Generic.IDictionary`2&lt;System.String,System.String&gt;,System.Collections.Generic.IDictionary`2&lt;System.String,System.String&gt;,System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.Stack&gt;,System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.CodeFlow&gt;,System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.Graph&gt;,System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.GraphTraversal&gt;,System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.Location&gt;,Microsoft.CodeAnalysis.Sarif.SuppressionStates,Microsoft.CodeAnalysis.Sarif.BaselineState,System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.Attachment&gt;,System.Collections.Generic.IEnumerable`1&lt;System.Uri&gt;,System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.PhysicalLocation&gt;,System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.Fix&gt;,System.Collections.Generic.IDictionary`2&lt;System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo&gt;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Result.cs" Line="282">'Result.Init(string, ResultLevel, Message, string, FileLocation, IEnumerable&lt;Location&gt;, string, string, IDictionary&lt;string, string&gt;, IDictionary&lt;string, string&gt;, IEnumerable&lt;Stack&gt;, IEnumerable&lt;CodeFlow&gt;, IEnumerable&lt;Graph&gt;, IEnumerable&lt;GraphTraversal&gt;, IEnumerable&lt;Location&gt;, SuppressionStates, BaselineState, IEnumerable&lt;Attachment&gt;, IEnumerable&lt;Uri&gt;, IEnumerable&lt;PhysicalLocation&gt;, IEnumerable&lt;Fix&gt;, IDictionary&lt;string, SerializedPropertyInfo&gt;)' has a cyclomatic complexity of 45. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Locations" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Result.cs" Line="69">Change 'Result.Locations' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PartialFingerprints" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Result.cs" Line="87">Change 'Result.PartialFingerprints' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RelatedLocations" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Result.cs" Line="123">Change 'Result.RelatedLocations' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Stacks" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Result.cs" Line="99">Change 'Result.Stacks' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WorkItemUris" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Result.cs" Line="143">Change 'Result.WorkItemUris' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ResultEqualityComparer" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#Equals(Microsoft.CodeAnalysis.Sarif.Result,Microsoft.CodeAnalysis.Sarif.Result)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="ResultEqualityComparer.cs" Line="20">'ResultEqualityComparer.Equals(Result, Result)' has a cyclomatic complexity of 97. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="AvoidExcessiveLocals" Category="Microsoft.Performance" CheckId="CA1809" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="Compiler" Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="ResultEqualityComparer.cs" Line="20">'ResultEqualityComparer.Equals(Result, Result)' has 93 local variables, 77 of which were generated by the compiler. Refactor 'ResultEqualityComparer.Equals(Result, Result)' so that it uses fewer than 64 local variables.</Issue>
            </Message>
            <Message TypeName="AvoidUnmaintainableCode" Category="Microsoft.Maintainability" CheckId="CA1505" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="Method" Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="ResultEqualityComparer.cs" Line="20">'ResultEqualityComparer.Equals(Result, Result)' has a maintainability index of 14. Rewrite or refactor the method to increase its maintainability index (MI). An MI below 10 indicates poor maintainability, an MI between 10 and 20 indicates moderate maintainability, and an MI above 20 indicates good maintainability.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetHashCode(Microsoft.CodeAnalysis.Sarif.Result)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="ResultEqualityComparer.cs" Line="356">'ResultEqualityComparer.GetHashCode(Result)' has a cyclomatic complexity of 60. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="AvoidExcessiveLocals" Category="Microsoft.Performance" CheckId="CA1809" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="Compiler" Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="ResultEqualityComparer.cs" Line="356">'ResultEqualityComparer.GetHashCode(Result)' has 67 local variables, 50 of which were generated by the compiler. Refactor 'ResultEqualityComparer.GetHashCode(Result)' so that it uses fewer than 64 local variables.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Rule" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Microsoft.CodeAnalysis.Sarif.Rule)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Rule.cs" Line="149">'Rule.Rule(Rule)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;Rule..ctor(Rule)&#xD;&#xA;Rule.Init(String, Message, Message, Message, IDictionary&lt;String,String&gt;, IDictionary&lt;String,String&gt;, ReportingConfiguration, Uri, Message, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,Microsoft.CodeAnalysis.Sarif.Message,Microsoft.CodeAnalysis.Sarif.Message,Microsoft.CodeAnalysis.Sarif.Message,System.Collections.Generic.IDictionary`2&lt;System.String,System.String&gt;,System.Collections.Generic.IDictionary`2&lt;System.String,System.String&gt;,Microsoft.CodeAnalysis.Sarif.ReportingConfiguration,System.Uri,Microsoft.CodeAnalysis.Sarif.Message,System.Collections.Generic.IDictionary`2&lt;System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Rule.cs" Line="135">'Rule.Rule(string, Message, Message, Message, IDictionary&lt;string, string&gt;, IDictionary&lt;string, string&gt;, ReportingConfiguration, Uri, Message, IDictionary&lt;string, SerializedPropertyInfo&gt;)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;Rule..ctor(String, Message, Message, Message, IDictionary&lt;String,String&gt;, IDictionary&lt;String,String&gt;, ReportingConfiguration, Uri, Message, IDictionary&lt;String,SerializedPropertyInfo&gt;)&#xD;&#xA;Rule.Init(String, Message, Message, Message, IDictionary&lt;String,String&gt;, IDictionary&lt;String,String&gt;, ReportingConfiguration, Uri, Message, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MessageStrings" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Rule.cs" Line="63">Change 'Rule.MessageStrings' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RichMessageStrings" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Rule.cs" Line="69">Change 'Rule.RichMessageStrings' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ReportingConfiguration" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Parameters" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="ReportingConfiguration.cs" Line="51">Change 'ReportingConfiguration.Parameters' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RuleEqualityComparer" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#Equals(Microsoft.CodeAnalysis.Sarif.Rule,Microsoft.CodeAnalysis.Sarif.Rule)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="RuleEqualityComparer.cs" Line="20">'RuleEqualityComparer.Equals(Rule, Rule)' has a cyclomatic complexity of 35. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RuleUtilities" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#BuildDictionary(System.Resources.ResourceManager,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif" File="RuleUtilities.cs" Line="74">Replace method 'RuleUtilities.BuildDictionary(ResourceManager, IEnumerable&lt;string&gt;, string, string)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NormalizeRuleMessageId(System.String,System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif" File="RuleUtilities.cs" Line="104">Replace method 'RuleUtilities.NormalizeRuleMessageId(string, string, string)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Run" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Microsoft.CodeAnalysis.Sarif.Run)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Run.cs" Line="248">'Run.Run(Run)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;Run..ctor(Run)&#xD;&#xA;Run.Init(Tool, IEnumerable&lt;Invocation&gt;, Conversion, IEnumerable&lt;VersionControlDetails&gt;, IDictionary&lt;String,Uri&gt;, IDictionary&lt;String,FileData&gt;, IDictionary&lt;String,LogicalLocation&gt;, IEnumerable&lt;Graph&gt;, IEnumerable&lt;Result&gt;, Resources, String, String, Message, String, String, String, String, String, String, ColumnKind, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(Microsoft.CodeAnalysis.Sarif.Tool,System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.Invocation&gt;,Microsoft.CodeAnalysis.Sarif.Conversion,System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.VersionControlDetails&gt;,System.Collections.Generic.IDictionary`2&lt;System.String,System.Uri&gt;,System.Collections.Generic.IDictionary`2&lt;System.String,Microsoft.CodeAnalysis.Sarif.FileData&gt;,System.Collections.Generic.IDictionary`2&lt;System.String,Microsoft.CodeAnalysis.Sarif.LogicalLocation&gt;,System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.Graph&gt;,System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.Result&gt;,Microsoft.CodeAnalysis.Sarif.Resources,System.String,System.String,Microsoft.CodeAnalysis.Sarif.Message,System.String,System.String,System.String,System.String,System.String,System.String,Microsoft.CodeAnalysis.Sarif.ColumnKind,System.Collections.Generic.IDictionary`2&lt;System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Run.cs" Line="234">'Run.Run(Tool, IEnumerable&lt;Invocation&gt;, Conversion, IEnumerable&lt;VersionControlDetails&gt;, IDictionary&lt;string, Uri&gt;, IDictionary&lt;string, FileData&gt;, IDictionary&lt;string, LogicalLocation&gt;, IEnumerable&lt;Graph&gt;, IEnumerable&lt;Result&gt;, Resources, string, string, Message, string, string, string, string, string, string, ColumnKind, IDictionary&lt;string, SerializedPropertyInfo&gt;)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;Run..ctor(Tool, IEnumerable&lt;Invocation&gt;, Conversion, IEnumerable&lt;VersionControlDetails&gt;, IDictionary&lt;String,Uri&gt;, IDictionary&lt;String,FileData&gt;, IDictionary&lt;String,LogicalLocation&gt;, IEnumerable&lt;Graph&gt;, IEnumerable&lt;Result&gt;, Resources, String, String, Message, String, String, String, String, String, String, ColumnKind, IDictionary&lt;String,SerializedPropertyInfo&gt;)&#xD;&#xA;Run.Init(Tool, IEnumerable&lt;Invocation&gt;, Conversion, IEnumerable&lt;VersionControlDetails&gt;, IDictionary&lt;String,Uri&gt;, IDictionary&lt;String,FileData&gt;, IDictionary&lt;String,LogicalLocation&gt;, IEnumerable&lt;Graph&gt;, IEnumerable&lt;Result&gt;, Resources, String, String, Message, String, String, String, String, String, String, ColumnKind, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Files" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Run.cs" Line="69">Change 'Run.Files' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Graphs" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Run.cs" Line="81">Change 'Run.Graphs' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Init(Microsoft.CodeAnalysis.Sarif.Tool,System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.Invocation&gt;,Microsoft.CodeAnalysis.Sarif.Conversion,System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.VersionControlDetails&gt;,System.Collections.Generic.IDictionary`2&lt;System.String,System.Uri&gt;,System.Collections.Generic.IDictionary`2&lt;System.String,Microsoft.CodeAnalysis.Sarif.FileData&gt;,System.Collections.Generic.IDictionary`2&lt;System.String,Microsoft.CodeAnalysis.Sarif.LogicalLocation&gt;,System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.Graph&gt;,System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.Result&gt;,Microsoft.CodeAnalysis.Sarif.Resources,System.String,System.String,Microsoft.CodeAnalysis.Sarif.Message,System.String,System.String,System.String,System.String,System.String,System.String,Microsoft.CodeAnalysis.Sarif.ColumnKind,System.Collections.Generic.IDictionary`2&lt;System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo&gt;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Run.cs" Line="277">'Run.Init(Tool, IEnumerable&lt;Invocation&gt;, Conversion, IEnumerable&lt;VersionControlDetails&gt;, IDictionary&lt;string, Uri&gt;, IDictionary&lt;string, FileData&gt;, IDictionary&lt;string, LogicalLocation&gt;, IEnumerable&lt;Graph&gt;, IEnumerable&lt;Result&gt;, Resources, string, string, Message, string, string, string, string, string, string, ColumnKind, IDictionary&lt;string, SerializedPropertyInfo&gt;)' has a cyclomatic complexity of 28. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message Id="originalUriBaseIds" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Run.cs" Line="277">Parameter 'originalUriBaseIds' of 'Run.Init(Tool, IEnumerable&lt;Invocation&gt;, Conversion, IEnumerable&lt;VersionControlDetails&gt;, IDictionary&lt;string, Uri&gt;, IDictionary&lt;string, FileData&gt;, IDictionary&lt;string, LogicalLocation&gt;, IEnumerable&lt;Graph&gt;, IEnumerable&lt;Result&gt;, Resources, string, string, Message, string, string, string, string, string, string, ColumnKind, IDictionary&lt;string, SerializedPropertyInfo&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Invocations" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Run.cs" Line="45">Change 'Run.Invocations' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LogicalLocations" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Run.cs" Line="75">Change 'Run.LogicalLocations' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OriginalUriBaseIds" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Run.cs" Line="63">Change 'Run.OriginalUriBaseIds' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Results" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Run.cs" Line="87">Change 'Run.Results' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#VersionControlProvenance" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Run.cs" Line="57">Change 'Run.VersionControlProvenance' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RunEqualityComparer" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#Equals(Microsoft.CodeAnalysis.Sarif.Run,Microsoft.CodeAnalysis.Sarif.Run)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="RunEqualityComparer.cs" Line="20">'RunEqualityComparer.Equals(Run, Run)' has a cyclomatic complexity of 73. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="AvoidExcessiveLocals" Category="Microsoft.Performance" CheckId="CA1809" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="Compiler" Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="RunEqualityComparer.cs" Line="20">'RunEqualityComparer.Equals(Run, Run)' has 68 local variables, 56 of which were generated by the compiler. Refactor 'RunEqualityComparer.Equals(Run, Run)' so that it uses fewer than 64 local variables.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetHashCode(Microsoft.CodeAnalysis.Sarif.Run)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="RunEqualityComparer.cs" Line="272">'RunEqualityComparer.GetHashCode(Run)' has a cyclomatic complexity of 46. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RuntimeConditions" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="DoNotMarkEnumsWithFlags" Category="Microsoft.Usage" CheckId="CA2217" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
           <Issue Certainty="50" Level="Error">'RuntimeConditions' is marked with FlagsAttribute but a discrete member cannot be found for every settable bit that is used across the range of enum values. Remove FlagsAttribute from the type or define new members for the following (currently missing) values: 0x100000, 0x200000, 0x400000, 0x800000, 0x1000000, 0x2000000</Issue>
          </Message>
          <Message TypeName="EnumStorageShouldBeInt32" Category="Microsoft.Design" CheckId="CA1028" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Name="NotIntegral" Certainty="60" Level="Warning">If possible, make the underlying type of 'RuntimeConditions' Int32 instead of 'uint'. Otherwise consider Byte, Int16, or Int64.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="SarifConstants" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in type name 'SarifConstants'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="SarifLog" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in type name 'SarifLog'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Runs" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="SarifLog.cs" Line="50">Change 'SarifLog.Runs' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SarifNodeKind" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in type name 'SarifNodeKind'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#SarifLog" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in member name 'SarifNodeKind.SarifLog' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SarifRewritingVisitor" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in type name 'SarifRewritingVisitor'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#VisitActual(Microsoft.CodeAnalysis.Sarif.ISarifNode)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="AvoidExcessiveClassCoupling" Category="Microsoft.Maintainability" CheckId="CA1506" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Method" Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="SarifRewritingVisitor.cs" Line="41">'SarifRewritingVisitor.VisitActual(ISarifNode)' is coupled with 39 different types from 2 different namespaces. Rewrite or refactor the method to decrease its class coupling, or consider moving the method to one of the other types it is tightly coupled with. A class coupling above 40 indicates poor maintainability, a class coupling between 40 and 30 indicates moderate maintainability, and a class coupling below 30 indicates good maintainability.</Issue>
            </Message>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="SarifRewritingVisitor.cs" Line="41">'SarifRewritingVisitor.VisitActual(ISarifNode)' has a cyclomatic complexity of 38. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#VisitSarifLog(Microsoft.CodeAnalysis.Sarif.SarifLog)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="SarifRewritingVisitor.cs" Line="697">Correct the spelling of 'Sarif' in member name 'SarifRewritingVisitor.VisitSarifLog(SarifLog)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SarifUtilities" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in type name 'SarifUtilities'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#AddOrUpdateDictionaryEntry`2(System.Collections.Generic.IDictionary`2&lt;!!0,!!1&gt;,!!0,!!1)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="val" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif" File="SarifUtilities.cs" Line="130">In method 'SarifUtilities.AddOrUpdateDictionaryEntry&lt;TKey, TValue&gt;(IDictionary&lt;TKey, TValue&gt;, TKey, TValue)', correct the spelling of 'val' in parameter name 'val' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif" File="SarifUtilities.cs" Line="131">In externally visible method 'SarifUtilities.AddOrUpdateDictionaryEntry&lt;TKey, TValue&gt;(IDictionary&lt;TKey, TValue&gt;, TKey, TValue)', validate parameter 'dictionary' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ConvertToSarifVersion(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif" File="SarifUtilities.cs" Line="40">Correct the spelling of 'Sarif' in member name 'SarifUtilities.ConvertToSarifVersion(this string)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif" File="SarifUtilities.cs" Line="40">In method 'SarifUtilities.ConvertToSarifVersion(this string)', correct the spelling of 'sarif' in parameter name 'sarifVersionText' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ConvertToSchemaUri(Microsoft.CodeAnalysis.Sarif.SarifVersion)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif" File="SarifUtilities.cs" Line="63">In method 'SarifUtilities.ConvertToSchemaUri(this SarifVersion)', correct the spelling of 'sarif' in parameter name 'sarifVersion' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ConvertToText(Microsoft.CodeAnalysis.Sarif.SarifVersion)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif" File="SarifUtilities.cs" Line="52">In method 'SarifUtilities.ConvertToText(this SarifVersion)', correct the spelling of 'sarif' in parameter name 'sarifVersion' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateSingleThreadedCodeFlow(System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.ThreadFlowLocation&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif" File="SarifUtilities.cs" Line="142">Replace method 'SarifUtilities.CreateSingleThreadedCodeFlow(IEnumerable&lt;ThreadFlowLocation&gt;)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DecodeBase64String(System.String,System.Text.Encoding)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif" File="SarifUtilities.cs" Line="167">Replace method 'SarifUtilities.DecodeBase64String(string, Encoding)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="s" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif" File="SarifUtilities.cs" Line="167">In method 'SarifUtilities.DecodeBase64String(string, Encoding)', consider providing a more meaningful name than parameter name 's'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetBase64String(System.String,System.Text.Encoding)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="s" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif" File="SarifUtilities.cs" Line="161">In method 'SarifUtilities.GetBase64String(string, Encoding)', consider providing a more meaningful name than parameter name 's'.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif" File="SarifUtilities.cs" Line="162">In externally visible method 'SarifUtilities.GetBase64String(string, Encoding)', validate parameter 'encoding' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetByteLength(System.Char[],System.Text.Encoding)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="chars" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif" File="SarifUtilities.cs" Line="174">In member 'SarifUtilities.GetByteLength(char[], Encoding)', consider replacing the data type identifier 'chars' in parameter name 'chars' with a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetByteLength(System.String,System.Text.Encoding)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="s" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif" File="SarifUtilities.cs" Line="183">In method 'SarifUtilities.GetByteLength(string, Encoding)', consider providing a more meaningful name than parameter name 's'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetUtf8Base64String(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="s" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif" File="SarifUtilities.cs" Line="156">In method 'SarifUtilities.GetUtf8Base64String(string)', consider providing a more meaningful name than parameter name 's'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SarifDateTimeFormatMillisecondsPrecision" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in member name 'SarifUtilities.SarifDateTimeFormatMillisecondsPrecision' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SarifDateTimeFormatSecondsPrecision" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in member name 'SarifUtilities.SarifDateTimeFormatSecondsPrecision' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SarifUtilitiesVersionOne" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in type name 'SarifUtilitiesVersionOne'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#ConvertToSchemaUri(Microsoft.CodeAnalysis.Sarif.VersionOne.SarifVersionVersionOne)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne" File="SarifUtilitiesVersionOne.cs" Line="25">In method 'SarifUtilitiesVersionOne.ConvertToSchemaUri(this SarifVersionVersionOne)', correct the spelling of 'sarif' in parameter name 'sarifVersion' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ConvertToText(Microsoft.CodeAnalysis.Sarif.VersionOne.SarifVersionVersionOne)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne" File="SarifUtilitiesVersionOne.cs" Line="14">In method 'SarifUtilitiesVersionOne.ConvertToText(this SarifVersionVersionOne)', correct the spelling of 'sarif' in parameter name 'sarifVersion' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SarifVersion" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in type name 'SarifVersion'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="SdkResources" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#.ctor()" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="ExcludedInSource" Created="2018-08-23 13:07:11Z" FixCategory="NonBreaking" LastSeen="0001-01-01 00:00:00Z" />
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Stack" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Name="TypeNoAlternate" Certainty="95" Level="CriticalError">Rename type name 'Stack' so that it does not end in 'Stack'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(Microsoft.CodeAnalysis.Sarif.Message,System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.StackFrame&gt;,System.Collections.Generic.IDictionary`2&lt;System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Stack.cs" Line="72">'Stack.Stack(Message, IEnumerable&lt;StackFrame&gt;, IDictionary&lt;string, SerializedPropertyInfo&gt;)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;Stack..ctor(Message, IEnumerable&lt;StackFrame&gt;, IDictionary&lt;String,SerializedPropertyInfo&gt;)&#xD;&#xA;Stack.Init(Message, IEnumerable&lt;StackFrame&gt;, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(Microsoft.CodeAnalysis.Sarif.Stack)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Stack.cs" Line="86">'Stack.Stack(Stack)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;Stack..ctor(Stack)&#xD;&#xA;Stack.Init(Message, IEnumerable&lt;StackFrame&gt;, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.Diagnostics.StackTrace)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Core" File="Stack.cs" Line="79">In externally visible method 'Stack.Stack(StackTrace)', validate parameter 'stackTrace' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Create(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="current" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Core" File="Stack.cs" Line="113">'Stack.Create(string)' declares a variable, 'current', of type 'string', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif\Core" File="Stack.cs" Line="129">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'Stack.Create(string)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Frames" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Stack.cs" Line="45">Change 'Stack.Frames' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="StackFrame" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Microsoft.CodeAnalysis.Sarif.Location,System.String,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,System.Collections.Generic.IDictionary`2&lt;System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="StackFrame.cs" Line="108">'StackFrame.StackFrame(Location, string, int, int, int, IEnumerable&lt;string&gt;, IDictionary&lt;string, SerializedPropertyInfo&gt;)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;StackFrame..ctor(Location, String, Int32, Int32, Int32, IEnumerable&lt;String&gt;, IDictionary&lt;String,SerializedPropertyInfo&gt;)&#xD;&#xA;StackFrame.Init(Location, String, Int32, Int32, Int32, IEnumerable&lt;String&gt;, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(Microsoft.CodeAnalysis.Sarif.StackFrame)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="StackFrame.cs" Line="122">'StackFrame.StackFrame(StackFrame)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;StackFrame..ctor(StackFrame)&#xD;&#xA;StackFrame.Init(Location, String, Int32, Int32, Int32, IEnumerable&lt;String&gt;, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Create(System.Diagnostics.StackFrame)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Core" File="StackFrame.cs" Line="28">In externally visible method 'StackFrame.Create(StackFrame)', validate parameter 'dotNetStackFrame' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateFullyQualifiedName(System.Reflection.MethodBase)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Core" File="StackFrame.cs" Line="111">'methodBase', a parameter, is cast to type 'MethodInfo' multiple times in method 'StackFrame.CreateFullyQualifiedName(MethodBase)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Core" File="StackFrame.cs" Line="113">'methodBase', a parameter, is cast to type 'MethodInfo' multiple times in method 'StackFrame.CreateFullyQualifiedName(MethodBase)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Parameters" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="StackFrame.cs" Line="69">Change 'StackFrame.Parameters' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="StringSet" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Rename 'StringSet' to end in 'Collection'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="StringToVersionMap" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Rename 'StringToVersionMap' to end in 'Dictionary'.</Issue>
          </Message>
          <Message TypeName="MarkISerializableTypesWithSerializable" Category="Microsoft.Usage" CheckId="CA2237" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">Add [Serializable] to 'StringToVersionMap' as this type implements ISerializable.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="SupportedPlatform" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="EnumsShouldHaveZeroValue" Category="Microsoft.Design" CheckId="CA1008" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Name="FlagsRename" Certainty="95" Level="CriticalError">In enum 'SupportedPlatform', change the name of 'SupportedPlatform.Unknown' to 'None'.</Issue>
          </Message>
          <Message TypeName="FlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1714" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Error">If enumeration name 'SupportedPlatform' is singular, change it to a plural form.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#OSX" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="OSX" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'OSX' in member name 'SupportedPlatform.OSX' by changing it to 'Osx'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ThreadFlow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Microsoft.CodeAnalysis.Sarif.ThreadFlow)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="ThreadFlow.cs" Line="92">'ThreadFlow.ThreadFlow(ThreadFlow)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;ThreadFlow..ctor(ThreadFlow)&#xD;&#xA;ThreadFlow.Init(String, Message, IEnumerable&lt;ThreadFlowLocation&gt;, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,Microsoft.CodeAnalysis.Sarif.Message,System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.ThreadFlowLocation&gt;,System.Collections.Generic.IDictionary`2&lt;System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="ThreadFlow.cs" Line="78">'ThreadFlow.ThreadFlow(string, Message, IEnumerable&lt;ThreadFlowLocation&gt;, IDictionary&lt;string, SerializedPropertyInfo&gt;)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;ThreadFlow..ctor(String, Message, IEnumerable&lt;ThreadFlowLocation&gt;, IDictionary&lt;String,SerializedPropertyInfo&gt;)&#xD;&#xA;ThreadFlow.Init(String, Message, IEnumerable&lt;ThreadFlowLocation&gt;, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Locations" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="ThreadFlow.cs" Line="48">Change 'ThreadFlow.Locations' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ThreadFlowLocation" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Microsoft.CodeAnalysis.Sarif.ThreadFlowLocation)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="ThreadFlowLocation.cs" Line="158">'ThreadFlowLocation.ThreadFlowLocation(ThreadFlowLocation)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;ThreadFlowLocation..ctor(ThreadFlowLocation)&#xD;&#xA;ThreadFlowLocation.Init(Int32, Location, Stack, String, String, IDictionary&lt;String,String&gt;, Int32, Int32, DateTime, ThreadFlowLocationImportance, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.Int32,Microsoft.CodeAnalysis.Sarif.Location,Microsoft.CodeAnalysis.Sarif.Stack,System.String,System.String,System.Collections.Generic.IDictionary`2&lt;System.String,System.String&gt;,System.Int32,System.Int32,System.DateTime,Microsoft.CodeAnalysis.Sarif.ThreadFlowLocationImportance,System.Collections.Generic.IDictionary`2&lt;System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="ThreadFlowLocation.cs" Line="144">'ThreadFlowLocation.ThreadFlowLocation(int, Location, Stack, string, string, IDictionary&lt;string, string&gt;, int, int, DateTime, ThreadFlowLocationImportance, IDictionary&lt;string, SerializedPropertyInfo&gt;)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;ThreadFlowLocation..ctor(Int32, Location, Stack, String, String, IDictionary&lt;String,String&gt;, Int32, Int32, DateTime, ThreadFlowLocationImportance, IDictionary&lt;String,SerializedPropertyInfo&gt;)&#xD;&#xA;ThreadFlowLocation.Init(Int32, Location, Stack, String, String, IDictionary&lt;String,String&gt;, Int32, Int32, DateTime, ThreadFlowLocationImportance, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#State" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="ThreadFlowLocation.cs" Line="69">Change 'ThreadFlowLocation.State' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ThreadFlowLocationEqualityComparer" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#Equals(Microsoft.CodeAnalysis.Sarif.ThreadFlowLocation,Microsoft.CodeAnalysis.Sarif.ThreadFlowLocation)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="ThreadFlowLocationEqualityComparer.cs" Line="20">'ThreadFlowLocationEqualityComparer.Equals(ThreadFlowLocation, ThreadFlowLocation)' has a cyclomatic complexity of 29. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Tool" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Microsoft.CodeAnalysis.Sarif.Tool)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Tool.cs" Line="140">'Tool.Tool(Tool)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;Tool..ctor(Tool)&#xD;&#xA;Tool.Init(String, String, String, String, String, Uri, String, String, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.String,System.String,System.String,System.String,System.Uri,System.String,System.String,System.Collections.Generic.IDictionary`2&lt;System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Tool.cs" Line="126">'Tool.Tool(string, string, string, string, string, Uri, string, string, IDictionary&lt;string, SerializedPropertyInfo&gt;)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;Tool..ctor(String, String, String, String, String, Uri, String, String, IDictionary&lt;String,SerializedPropertyInfo&gt;)&#xD;&#xA;Tool.Init(String, String, String, String, String, Uri, String, String, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
            <Message Id="sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Tool.cs" Line="126">In method 'Tool.Tool(string, string, string, string, string, Uri, string, string, IDictionary&lt;string, SerializedPropertyInfo&gt;)', correct the spelling of 'sarif' in parameter name 'sarifLoggerVersion' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateFromAssemblyData(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif\Core" File="Tool.cs" Line="18">Replace method 'Tool.CreateFromAssemblyData(string)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif\Core" File="Tool.cs" Line="32">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'Tool.CreateFromAssemblyData(string)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif\Core" File="Tool.cs" Line="32">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'Tool.CreateFromAssemblyData(string)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif\Core" File="Tool.cs" Line="32">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'Tool.CreateFromAssemblyData(string)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SarifLoggerVersion" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="Tool.cs" Line="75">Correct the spelling of 'Sarif' in member name 'Tool.SarifLoggerVersion' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TypedPropertiesDictionary`1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
           <Issue Certainty="60" Level="Error">Add an implementation of GetObjectData to type 'TypedPropertiesDictionary&lt;T&gt;'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#SettingNameToDescriptionsMap" Kind="Property" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="ExcludedInSource" Created="2018-08-23 13:07:11Z" FixCategory="Breaking" LastSeen="0001-01-01 00:00:00Z" />
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TypedPropertiesDictionaryConverter" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif" File="TypedPropertiesDictionaryConverter.cs" Line="43">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'TypedPropertiesDictionaryConverter.ReadJson(JsonReader, Type, object, JsonSerializer)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif" File="TypedPropertiesDictionaryConverter.cs" Line="47">In externally visible method 'TypedPropertiesDictionaryConverter.ReadJson(JsonReader, Type, object, JsonSerializer)', validate parameter 'reader' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif" File="TypedPropertiesDictionaryConverter.cs" Line="112">'value', a parameter, is cast to type 'IntegerSet' multiple times in method 'TypedPropertiesDictionaryConverter.WriteJson(JsonWriter, object, JsonSerializer)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
             <Issue Name="Parameter" Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif" File="TypedPropertiesDictionaryConverter.cs" Line="106">'value', a parameter, is cast to type 'StringSet' multiple times in method 'TypedPropertiesDictionaryConverter.WriteJson(JsonWriter, object, JsonSerializer)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</Issue>
            </Message>
            <Message Id="t" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif" File="TypedPropertiesDictionaryConverter.cs" Line="127">'TypedPropertiesDictionaryConverter.WriteJson(JsonWriter, object, JsonSerializer)' declares a variable, 't', of type 'Type', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif" File="TypedPropertiesDictionaryConverter.cs" Line="119">In externally visible method 'TypedPropertiesDictionaryConverter.WriteJson(JsonWriter, object, JsonSerializer)', validate parameter 'writer' before using it.</Issue>
            </Message>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif" File="TypedPropertiesDictionaryConverter.cs" Line="136">In externally visible method 'TypedPropertiesDictionaryConverter.WriteJson(JsonWriter, object, JsonSerializer)', validate parameter 'serializer' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TypedPropertiesDictionaryConverter+&lt;&gt;c" Kind="Class" Accessibility="Private" ExternallyVisible="False">
         <Members>
          <Member Name="#&lt;ReadJson&gt;b__3_1(Newtonsoft.Json.Linq.JToken)" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif" File="TypedPropertiesDictionaryConverter.cs" Line="43">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'TypedPropertiesDictionaryConverter.ReadJson(JsonReader, Type, object, JsonSerializer)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UriHelper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#MakeValidUri(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UriReturnValuesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1055" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif" File="UriHelper.cs" Line="51">Change the return type of 'UriHelper.MakeValidUri(string)' from string to System.Uri.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="VersionControlDetails" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Microsoft.CodeAnalysis.Sarif.VersionControlDetails)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="VersionControlDetails.cs" Line="110">'VersionControlDetails.VersionControlDetails(VersionControlDetails)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;VersionControlDetails..ctor(VersionControlDetails)&#xD;&#xA;VersionControlDetails.Init(Uri, String, String, String, DateTime, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.Uri,System.String,System.String,System.String,System.DateTime,System.Collections.Generic.IDictionary`2&lt;System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Autogenerated" File="VersionControlDetails.cs" Line="96">'VersionControlDetails.VersionControlDetails(Uri, string, string, string, DateTime, IDictionary&lt;string, SerializedPropertyInfo&gt;)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;VersionControlDetails..ctor(Uri, String, String, String, DateTime, IDictionary&lt;String,SerializedPropertyInfo&gt;)&#xD;&#xA;VersionControlDetails.Init(Uri, String, String, String, DateTime, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Warnings" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Wrn997_InvalidTarget" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Wrn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Wrn' in member name 'Warnings.Wrn997_InvalidTarget' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Warnings.Wrn997_InvalidTarget'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Wrn998_UnsupportedPlatform" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Wrn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Wrn' in member name 'Warnings.Wrn998_UnsupportedPlatform' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Warnings.Wrn998_UnsupportedPlatform'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Wrn999_RuleExplicitlyDisabled" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Wrn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Wrn' in member name 'Warnings.Wrn999_RuleExplicitlyDisabled' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Warnings.Wrn999_RuleExplicitlyDisabled'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Microsoft.CodeAnalysis.Sarif.Baseline">
       <Types>
        <Type Name="ISarifLogBaseliner" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in type name 'ISarifLogBaseliner'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#CreateBaselinedRun(Microsoft.CodeAnalysis.Sarif.Run,Microsoft.CodeAnalysis.Sarif.Run)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="baseLine" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeDiscreteTerm" Certainty="80" Level="Error">In member 'ISarifLogBaseliner.CreateBaselinedRun(Run, Run)', the compound word 'baseLine' in parameter name 'baseLine' exists as a discrete term. If your usage is intended to be single word, case it as 'baseline' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Baselined" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Baselined' in member name 'ISarifLogBaseliner.CreateBaselinedRun(Run, Run)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SarifBaselineType" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in type name 'SarifBaselineType'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="SarifLogBaseliner" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#CreateBaselinedRun(Microsoft.CodeAnalysis.Sarif.Run,Microsoft.CodeAnalysis.Sarif.Run)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Baseline" File="SarifLogBaseliner.cs" Line="27">In externally visible method 'SarifLogBaseliner.CreateBaselinedRun(Run, Run)', validate parameter 'baseLine' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Baseline" File="SarifLogBaseliner.cs" Line="20">In externally visible method 'SarifLogBaseliner.CreateBaselinedRun(Run, Run)', validate parameter 'nextLog' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SarifLogBaselinerFactory" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in type name 'SarifLogBaselinerFactory'.</Issue>
          </Message>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Name="CSharp2_0" Certainty="90" Level="Error">Because type 'SarifLogBaselinerFactory' contains only 'static' members, mark it as 'static' to prevent the compiler from adding a default public constructor.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#CreateSarifLogBaseliner(Microsoft.CodeAnalysis.Sarif.Baseline.SarifBaselineType)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Baseline" File="SarifLogBaselinerFactory.cs" Line="9">Correct the spelling of 'Sarif' in member name 'SarifLogBaselinerFactory.CreateSarifLogBaseliner(SarifBaselineType)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline">
       <Types>
        <Type Name="CodeFlowBaselineEqualityComparator" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#Equals(Microsoft.CodeAnalysis.Sarif.CodeFlow,Microsoft.CodeAnalysis.Sarif.CodeFlow)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Baseline\DefaultBaseline" File="CodeFlowBaselineEquals.cs" Line="16">In externally visible method 'CodeFlowBaselineEqualityComparator.Equals(CodeFlow, CodeFlow)', validate parameter 'x' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Baseline\DefaultBaseline" File="CodeFlowBaselineEquals.cs" Line="16">In externally visible method 'CodeFlowBaselineEqualityComparator.Equals(CodeFlow, CodeFlow)', validate parameter 'y' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DefaultBaselineExtensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetNullCheckedHashCode(System.Object)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="obj" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="LanguageIndependentMemberParameter" Certainty="75" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif\Baseline\DefaultBaseline" File="DefaultBaselineExtensions.cs" Line="9">In member 'DefaultBaselineExtensions.GetNullCheckedHashCode(this object)', consider replacing the data type identifier 'obj' in parameter name 'obj' with a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="LocationBaselineEquals" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#Equals(Microsoft.CodeAnalysis.Sarif.Location,Microsoft.CodeAnalysis.Sarif.Location)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Baseline\DefaultBaseline" File="LocationBaselineEquals.cs" Line="17">In externally visible method 'LocationBaselineEquals.Equals(Location, Location)', validate parameter 'x' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Baseline\DefaultBaseline" File="LocationBaselineEquals.cs" Line="17">In externally visible method 'LocationBaselineEquals.Equals(Location, Location)', validate parameter 'y' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ResultBaselineEquals" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#Equals(Microsoft.CodeAnalysis.Sarif.Result,Microsoft.CodeAnalysis.Sarif.Result)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Baseline\DefaultBaseline" File="ResultBaselineEquals.cs" Line="19">In externally visible method 'ResultBaselineEquals.Equals(Result, Result)', validate parameter 'x' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Baseline\DefaultBaseline" File="ResultBaselineEquals.cs" Line="19">In externally visible method 'ResultBaselineEquals.Equals(Result, Result)', validate parameter 'y' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="StackBaselineEquals" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#Equals(Microsoft.CodeAnalysis.Sarif.Stack,Microsoft.CodeAnalysis.Sarif.Stack)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Baseline\DefaultBaseline" File="StackBaselineEquals.cs" Line="16">In externally visible method 'StackBaselineEquals.Equals(Stack, Stack)', validate parameter 'x' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Baseline\DefaultBaseline" File="StackBaselineEquals.cs" Line="16">In externally visible method 'StackBaselineEquals.Equals(Stack, Stack)', validate parameter 'y' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="StackFrameBaselineEquals" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#Equals(Microsoft.CodeAnalysis.Sarif.StackFrame,Microsoft.CodeAnalysis.Sarif.StackFrame)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Baseline\DefaultBaseline" File="StackFrameBaselineEquals.cs" Line="16">In externally visible method 'StackFrameBaselineEquals.Equals(StackFrame, StackFrame)', validate parameter 'x' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Baseline\DefaultBaseline" File="StackFrameBaselineEquals.cs" Line="16">In externally visible method 'StackFrameBaselineEquals.Equals(StackFrame, StackFrame)', validate parameter 'y' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ThreadFlowBaselineEqualityComparator" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#Equals(Microsoft.CodeAnalysis.Sarif.ThreadFlow,Microsoft.CodeAnalysis.Sarif.ThreadFlow)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Baseline\DefaultBaseline" File="ThreadFlowBaselineEquals.cs" Line="16">In externally visible method 'ThreadFlowBaselineEqualityComparator.Equals(ThreadFlow, ThreadFlow)', validate parameter 'x' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Baseline\DefaultBaseline" File="ThreadFlowBaselineEquals.cs" Line="16">In externally visible method 'ThreadFlowBaselineEqualityComparator.Equals(ThreadFlow, ThreadFlow)', validate parameter 'y' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ThreadFlowLocationBaselineEquals" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#Equals(Microsoft.CodeAnalysis.Sarif.ThreadFlowLocation,Microsoft.CodeAnalysis.Sarif.ThreadFlowLocation)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Baseline\DefaultBaseline" File="ThreadFlowLocationBaselineEquals.cs" Line="16">In externally visible method 'ThreadFlowLocationBaselineEquals.Equals(ThreadFlowLocation, ThreadFlowLocation)', validate parameter 'x' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Baseline\DefaultBaseline" File="ThreadFlowLocationBaselineEquals.cs" Line="16">In externally visible method 'ThreadFlowLocationBaselineEquals.Equals(ThreadFlowLocation, ThreadFlowLocation)', validate parameter 'y' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Microsoft.CodeAnalysis.Sarif.Processors">
       <Types>
        <Type Name="GenericActionPipeline`1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.Processors.IActionWrapper`1&lt;!0&gt;&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="E:\src\sarif-sdk-test\src\Sarif\Processors\Generic" File="GenericActionPipeline.cs" Line="12">Consider a design where 'GenericActionPipeline&lt;T&gt;.GenericActionPipeline(IEnumerable&lt;IActionWrapper&lt;T&gt;&gt;)' doesn't nest generic type 'IEnumerable&lt;IActionWrapper&lt;T&gt;&gt;'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="GenericMappingAction`1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Act(System.Collections.Generic.IEnumerable`1&lt;!0&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif\Processors\Generic" File="GenericMappingAction.cs" Line="29">In member 'GenericMappingAction&lt;T&gt;.Act(IEnumerable&lt;T&gt;)', change parameter name 'list' to 'collection' in order to match the identifier as it has been declared in 'IActionWrapper&lt;T&gt;.Act(IEnumerable&lt;T&gt;)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Action" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'GenericMappingAction&lt;T&gt;.Action' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Map(System.Collections.Generic.IEnumerable`1&lt;!0&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Processors\Generic" File="GenericMappingAction.cs" Line="21">In externally visible method 'GenericMappingAction&lt;T&gt;.Map(IEnumerable&lt;T&gt;)', validate parameter 'collection' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SarifLogAction" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in type name 'SarifLogAction'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="SarifLogActionTuple" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in type name 'SarifLogActionTuple'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Action" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'SarifLogActionTuple.Action' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Parameters" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'SarifLogActionTuple.Parameters' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SarifLogExtensionMethods" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in type name 'SarifLogExtensionMethods'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#MakeUrisAbsolute(Microsoft.CodeAnalysis.Sarif.SarifLog)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Processors\Log" File="SarifLogExtensionMethods.cs" Line="36">In method 'SarifLogExtensionMethods.MakeUrisAbsolute(this SarifLog)', correct the spelling of 'sarif' in parameter name 'sarifLog' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MakeUrisAbsolute(System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.SarifLog&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Processors\Log" File="SarifLogExtensionMethods.cs" Line="31">In method 'SarifLogExtensionMethods.MakeUrisAbsolute(this IEnumerable&lt;SarifLog&gt;)', correct the spelling of 'sarif' in parameter name 'sarifLogs' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Merge(System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.SarifLog&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Processors\Log" File="SarifLogExtensionMethods.cs" Line="16">In method 'SarifLogExtensionMethods.Merge(this IEnumerable&lt;SarifLog&gt;)', correct the spelling of 'sarif' in parameter name 'sarifLog' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RebaseUri(Microsoft.CodeAnalysis.Sarif.SarifLog,System.String,System.Boolean,System.Uri)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Processors\Log" File="SarifLogExtensionMethods.cs" Line="26">In method 'SarifLogExtensionMethods.RebaseUri(this SarifLog, string, bool, Uri)', correct the spelling of 'sarif' in parameter name 'sarifLog' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RebaseUri(System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.SarifLog&gt;,System.String,System.Boolean,System.Uri)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Processors\Log" File="SarifLogExtensionMethods.cs" Line="21">In method 'SarifLogExtensionMethods.RebaseUri(this IEnumerable&lt;SarifLog&gt;, string, bool, Uri)', correct the spelling of 'sarif' in parameter name 'sarifLog' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="3" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Processors\Log" File="SarifLogExtensionMethods.cs" Line="22">In externally visible method 'SarifLogExtensionMethods.RebaseUri(this IEnumerable&lt;SarifLog&gt;, string, bool, Uri)', validate parameter 'uri' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SarifLogPipeline" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in type name 'SarifLogPipeline'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Collections.Generic.List`1&lt;Microsoft.CodeAnalysis.Sarif.Processors.SarifLogActionTuple&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif\Processors\Log" File="SarifLogPipeline.cs" Line="27">Change 'List&lt;SarifLogActionTuple&gt;' in 'SarifLogPipeline.SarifLogPipeline(List&lt;SarifLogActionTuple&gt;)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_pipeline" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkAllNonSerializableFields" Category="Microsoft.Usage" CheckId="CA2235" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error">Field 'SarifLogPipeline._pipeline' is a member of type 'SarifLogPipeline', which is serializable, but is of type 'GenericActionPipeline&lt;SarifLog&gt;', which is not serializable. Add the NonSerializedAttribute to 'SarifLogPipeline._pipeline'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Actions" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif\Processors\Log" File="SarifLogPipeline.cs" Line="20">Change 'List&lt;SarifLogActionTuple&gt;' in 'SarifLogPipeline.Actions' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SarifLogProcessorFactory" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in type name 'SarifLogProcessorFactory'.</Issue>
          </Message>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Name="CSharp2_0" Certainty="90" Level="Error">Because type 'SarifLogProcessorFactory' contains only 'static' members, mark it as 'static' to prevent the compiler from adding a default public constructor.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#GetActionStage(Microsoft.CodeAnalysis.Sarif.Processors.SarifLogAction,System.String[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif\Processors\Log" File="SarifLogStageFactory.cs" Line="55">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'SarifLogProcessorFactory.GetActionStage(SarifLogAction, params string[])' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Microsoft.CodeAnalysis.Sarif.Readers">
       <Types>
        <Type Name="DateTimeConverter" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Instance" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'DateTimeConverter.Instance' or change the field to one that is an immutable reference type. If the reference type 'DateTimeConverter' is, in fact, immutable, exclude this message.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="EnumConverter" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ConvertToCamelCase(System.String)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif\Readers" File="EnumConverter.cs" Line="52">In method 'EnumConverter.ConvertToCamelCase(string)', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().</Issue>
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif\Readers" File="EnumConverter.cs" Line="57">In method 'EnumConverter.ConvertToCamelCase(string)', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Instance" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'EnumConverter.Instance' or change the field to one that is an immutable reference type. If the reference type 'EnumConverter' is, in fact, immutable, exclude this message.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="FlagsEnumConverter" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="ExcludedInSource" Created="2018-08-23 13:07:11Z" FixCategory="Breaking" LastSeen="0001-01-01 00:00:00Z" />
         </Messages>
         <Members>
          <Member Name="#Instance" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'FlagsEnumConverter.Instance' or change the field to one that is an immutable reference type. If the reference type 'FlagsEnumConverter' is, in fact, immutable, exclude this message.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Readers" File="FlagsEnumConverter.cs" Line="62">In externally visible method 'FlagsEnumConverter.WriteJson(JsonWriter, object, JsonSerializer)', validate parameter 'value' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PropertyBagConverter" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif\Readers" File="PropertyBagConverter.cs" Line="44">In method 'PropertyBagConverter.ReadJson(JsonReader, Type, object, JsonSerializer)', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ResultDiffingVisitor" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Microsoft.CodeAnalysis.Sarif.SarifLog)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Readers" File="ResultDiffingVisitor.cs" Line="10">'ResultDiffingVisitor.ResultDiffingVisitor(SarifLog)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;ResultDiffingVisitor..ctor(SarifLog)&#xD;&#xA;SarifRewritingVisitor.VisitSarifLog(SarifLog):SarifLog</Issue>
            </Message>
            <Message Id="sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Readers" File="ResultDiffingVisitor.cs" Line="10">In method 'ResultDiffingVisitor.ResultDiffingVisitor(SarifLog)', correct the spelling of 'sarif' in parameter name 'sarifLog' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AbsentResults" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="ExcludedInSource" Created="2018-08-23 13:07:11Z" FixCategory="Breaking" LastSeen="0001-01-01 00:00:00Z" />
           </Messages>
          </Member>
          <Member Name="#NewResults" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="ExcludedInSource" Created="2018-08-23 13:07:11Z" FixCategory="Breaking" LastSeen="0001-01-01 00:00:00Z" />
           </Messages>
          </Member>
          <Member Name="#SharedResults" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="ExcludedInSource" Created="2018-08-23 13:07:11Z" FixCategory="Breaking" LastSeen="0001-01-01 00:00:00Z" />
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RuleDictionaryConverter" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Instance" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'RuleDictionaryConverter.Instance' or change the field to one that is an immutable reference type. If the reference type 'RuleDictionaryConverter' is, in fact, immutable, exclude this message.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SarifContractResolver" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in type name 'SarifContractResolver'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Instance" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'SarifContractResolver.Instance' or change the field to one that is an immutable reference type. If the reference type 'SarifContractResolver' is, in fact, immutable, exclude this message.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SarifContractResolverVersionOne" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in type name 'SarifContractResolverVersionOne'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Instance" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'SarifContractResolverVersionOne.Instance' or change the field to one that is an immutable reference type. If the reference type 'SarifContractResolverVersionOne' is, in fact, immutable, exclude this message.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SarifVersionConverter" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in type name 'SarifVersionConverter'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Instance" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'SarifVersionConverter.Instance' or change the field to one that is an immutable reference type. If the reference type 'SarifVersionConverter' is, in fact, immutable, exclude this message.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UriConverter" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Instance" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'UriConverter.Instance' or change the field to one that is an immutable reference type. If the reference type 'UriConverter' is, in fact, immutable, exclude this message.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="VersionConverter" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Instance" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'VersionConverter.Instance' or change the field to one that is an immutable reference type. If the reference type 'VersionConverter' is, in fact, immutable, exclude this message.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Microsoft.CodeAnalysis.Sarif.VersionOne">
       <Types>
        <Type Name="AlgorithmKindVersionOne" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Authentihash" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Authentihash" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Authentihash' in member name 'AlgorithmKindVersionOne.Authentihash' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Ecoh" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Ecoh" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Ecoh' in member name 'AlgorithmKindVersionOne.Ecoh' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Fsb" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Fsb" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Fsb' in member name 'AlgorithmKindVersionOne.Fsb' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Gost" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Gost" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Gost' in member name 'AlgorithmKindVersionOne.Gost' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Groestl" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Groestl" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Groestl' in member name 'AlgorithmKindVersionOne.Groestl' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Haval" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Haval" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Haval' in member name 'AlgorithmKindVersionOne.Haval' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Sdhash" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Sdhash" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sdhash' in member name 'AlgorithmKindVersionOne.Sdhash' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Sha1" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Sha" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sha' in member name 'AlgorithmKindVersionOne.Sha1' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Sha224" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Sha" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sha' in member name 'AlgorithmKindVersionOne.Sha224' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Sha256" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Sha" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sha' in member name 'AlgorithmKindVersionOne.Sha256' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Sha3" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Sha" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sha' in member name 'AlgorithmKindVersionOne.Sha3' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Sha384" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Sha" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sha' in member name 'AlgorithmKindVersionOne.Sha384' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Sha512" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Sha" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sha' in member name 'AlgorithmKindVersionOne.Sha512' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Snefru" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Snefru" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Snefru' in member name 'AlgorithmKindVersionOne.Snefru' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Ssdeep" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Ssdeep" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Ssdeep' in member name 'AlgorithmKindVersionOne.Ssdeep' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Swifft" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Swifft" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Swifft' in member name 'AlgorithmKindVersionOne.Swifft' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Tlsh" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Tlsh" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Tlsh' in member name 'AlgorithmKindVersionOne.Tlsh' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="AnnotatedCodeLocationVersionOne" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationVersionOne)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="AnnotatedCodeLocationVersionOne.cs" Line="234">'AnnotatedCodeLocationVersionOne.AnnotatedCodeLocationVersionOne(AnnotatedCodeLocationVersionOne)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;AnnotatedCodeLocationVersionOne..ctor(AnnotatedCodeLocationVersionOne)&#xD;&#xA;AnnotatedCodeLocationVersionOne.Init(Int32, Int32, PhysicalLocationVersionOne, String, String, String, Int32, String, AnnotatedCodeLocationKindVersionOne, TaintKindVersionOne, String, IEnumerable&lt;String&gt;, IDictionary&lt;String,String&gt;, String, Boolean, AnnotatedCodeLocationImportanceVersionOne, String, IEnumerable&lt;AnnotationVersionOne&gt;, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.Int32,System.Int32,Microsoft.CodeAnalysis.Sarif.VersionOne.PhysicalLocationVersionOne,System.String,System.String,System.String,System.Int32,System.String,Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationKindVersionOne,Microsoft.CodeAnalysis.Sarif.VersionOne.TaintKindVersionOne,System.String,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,System.Collections.Generic.IDictionary`2&lt;System.String,System.String&gt;,System.String,System.Boolean,Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationImportanceVersionOne,System.String,System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotationVersionOne&gt;,System.Collections.Generic.IDictionary`2&lt;System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="AnnotatedCodeLocationVersionOne.cs" Line="220">'AnnotatedCodeLocationVersionOne.AnnotatedCodeLocationVersionOne(int, int, PhysicalLocationVersionOne, string, string, string, int, string, AnnotatedCodeLocationKindVersionOne, TaintKindVersionOne, string, IEnumerable&lt;string&gt;, IDictionary&lt;string, string&gt;, string, bool, AnnotatedCodeLocationImportanceVersionOne, string, IEnumerable&lt;AnnotationVersionOne&gt;, IDictionary&lt;string, SerializedPropertyInfo&gt;)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;AnnotatedCodeLocationVersionOne..ctor(Int32, Int32, PhysicalLocationVersionOne, String, String, String, Int32, String, AnnotatedCodeLocationKindVersionOne, TaintKindVersionOne, String, IEnumerable&lt;String&gt;, IDictionary&lt;String,String&gt;, String, Boolean, AnnotatedCodeLocationImportanceVersionOne, String, IEnumerable&lt;AnnotationVersionOne&gt;, IDictionary&lt;String,SerializedPropertyInfo&gt;)&#xD;&#xA;AnnotatedCodeLocationVersionOne.Init(Int32, Int32, PhysicalLocationVersionOne, String, String, String, Int32, String, AnnotatedCodeLocationKindVersionOne, TaintKindVersionOne, String, IEnumerable&lt;String&gt;, IDictionary&lt;String,String&gt;, String, Boolean, AnnotatedCodeLocationImportanceVersionOne, String, IEnumerable&lt;AnnotationVersionOne&gt;, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Annotations" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="AnnotatedCodeLocationVersionOne.cs" Line="145">Change 'AnnotatedCodeLocationVersionOne.Annotations' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#State" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="AnnotatedCodeLocationVersionOne.cs" Line="114">Change 'AnnotatedCodeLocationVersionOne.State' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Values" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="AnnotatedCodeLocationVersionOne.cs" Line="108">Change 'AnnotatedCodeLocationVersionOne.Values' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="AnnotatedCodeLocationVersionOneEqualityComparer" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#Equals(Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationVersionOne,Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationVersionOne)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="AnnotatedCodeLocationVersionOneEqualityComparer.cs" Line="20">'AnnotatedCodeLocationVersionOneEqualityComparer.Equals(AnnotatedCodeLocationVersionOne, AnnotatedCodeLocationVersionOne)' has a cyclomatic complexity of 47. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetHashCode(Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationVersionOne)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="AnnotatedCodeLocationVersionOneEqualityComparer.cs" Line="196">'AnnotatedCodeLocationVersionOneEqualityComparer.GetHashCode(AnnotatedCodeLocationVersionOne)' has a cyclomatic complexity of 26. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="AnnotationVersionOne" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Locations" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="AnnotationVersionOne.cs" Line="41">Change 'AnnotationVersionOne.Locations' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CodeFlowVersionOne" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Microsoft.CodeAnalysis.Sarif.VersionOne.CodeFlowVersionOne)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="CodeFlowVersionOne.cs" Line="83">'CodeFlowVersionOne.CodeFlowVersionOne(CodeFlowVersionOne)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;CodeFlowVersionOne..ctor(CodeFlowVersionOne)&#xD;&#xA;CodeFlowVersionOne.Init(String, IEnumerable&lt;AnnotatedCodeLocationVersionOne&gt;, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationVersionOne&gt;,System.Collections.Generic.IDictionary`2&lt;System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="CodeFlowVersionOne.cs" Line="69">'CodeFlowVersionOne.CodeFlowVersionOne(string, IEnumerable&lt;AnnotatedCodeLocationVersionOne&gt;, IDictionary&lt;string, SerializedPropertyInfo&gt;)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;CodeFlowVersionOne..ctor(String, IEnumerable&lt;AnnotatedCodeLocationVersionOne&gt;, IDictionary&lt;String,SerializedPropertyInfo&gt;)&#xD;&#xA;CodeFlowVersionOne.Init(String, IEnumerable&lt;AnnotatedCodeLocationVersionOne&gt;, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Locations" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="CodeFlowVersionOne.cs" Line="42">Change 'CodeFlowVersionOne.Locations' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ExceptionDataVersionOne" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#InnerExceptions" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="ExceptionDataVersionOne.cs" Line="53">Change 'ExceptionDataVersionOne.InnerExceptions' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="FileChangeVersionOne" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.Uri,System.String,System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.VersionOne.ReplacementVersionOne&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="FileChangeVersionOne.cs" Line="71">Change the type of parameter 'uriBaseId' of method 'FileChangeVersionOne.FileChangeVersionOne(Uri, string, IEnumerable&lt;ReplacementVersionOne&gt;)' from string to System.Uri, or provide an overload of 'FileChangeVersionOne.FileChangeVersionOne(Uri, string, IEnumerable&lt;ReplacementVersionOne&gt;)', that allows 'uriBaseId' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Replacements" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="FileChangeVersionOne.cs" Line="50">Change 'FileChangeVersionOne.Replacements' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UriBaseId" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UriPropertiesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1056" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="FileChangeVersionOne.cs" Line="44">Change the type of property 'FileChangeVersionOne.UriBaseId' from string to System.Uri.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="FileDataVersionOne" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Microsoft.CodeAnalysis.Sarif.VersionOne.FileDataVersionOne)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="FileDataVersionOne.cs" Line="140">'FileDataVersionOne.FileDataVersionOne(FileDataVersionOne)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;FileDataVersionOne..ctor(FileDataVersionOne)&#xD;&#xA;FileDataVersionOne.Init(Uri, String, String, Int32, Int32, String, String, IEnumerable&lt;HashVersionOne&gt;, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.Uri,System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.VersionOne.HashVersionOne&gt;,System.Collections.Generic.IDictionary`2&lt;System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="FileDataVersionOne.cs" Line="126">'FileDataVersionOne.FileDataVersionOne(Uri, string, string, int, int, string, string, IEnumerable&lt;HashVersionOne&gt;, IDictionary&lt;string, SerializedPropertyInfo&gt;)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;FileDataVersionOne..ctor(Uri, String, String, Int32, Int32, String, String, IEnumerable&lt;HashVersionOne&gt;, IDictionary&lt;String,SerializedPropertyInfo&gt;)&#xD;&#xA;FileDataVersionOne.Init(Uri, String, String, Int32, Int32, String, String, IEnumerable&lt;HashVersionOne&gt;, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
            <Message Id="1#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="FileDataVersionOne.cs" Line="126">Change the type of parameter 'uriBaseId' of method 'FileDataVersionOne.FileDataVersionOne(Uri, string, string, int, int, string, string, IEnumerable&lt;HashVersionOne&gt;, IDictionary&lt;string, SerializedPropertyInfo&gt;)' from string to System.Uri, or provide an overload of 'FileDataVersionOne.FileDataVersionOne(Uri, string, string, int, int, string, string, IEnumerable&lt;HashVersionOne&gt;, IDictionary&lt;string, SerializedPropertyInfo&gt;)', that allows 'uriBaseId' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Hashes" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="FileDataVersionOne.cs" Line="81">Change 'FileDataVersionOne.Hashes' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UriBaseId" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UriPropertiesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1056" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="FileDataVersionOne.cs" Line="45">Change the type of property 'FileDataVersionOne.UriBaseId' from string to System.Uri.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="FixVersionOne" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#FileChanges" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="FixVersionOne.cs" Line="44">Change 'FixVersionOne.FileChanges' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="FormattedRuleMessageVersionOne" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Arguments" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="FormattedRuleMessageVersionOne.cs" Line="44">Change 'FormattedRuleMessageVersionOne.Arguments' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="InvocationVersionOne" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Microsoft.CodeAnalysis.Sarif.VersionOne.InvocationVersionOne)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="InvocationVersionOne.cs" Line="158">'InvocationVersionOne.InvocationVersionOne(InvocationVersionOne)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;InvocationVersionOne..ctor(InvocationVersionOne)&#xD;&#xA;InvocationVersionOne.Init(String, IDictionary&lt;String,String&gt;, DateTime, DateTime, String, String, Int32, String, String, IDictionary&lt;String,String&gt;, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.Collections.Generic.IDictionary`2&lt;System.String,System.String&gt;,System.DateTime,System.DateTime,System.String,System.String,System.Int32,System.String,System.String,System.Collections.Generic.IDictionary`2&lt;System.String,System.String&gt;,System.Collections.Generic.IDictionary`2&lt;System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="InvocationVersionOne.cs" Line="144">'InvocationVersionOne.InvocationVersionOne(string, IDictionary&lt;string, string&gt;, DateTime, DateTime, string, string, int, string, string, IDictionary&lt;string, string&gt;, IDictionary&lt;string, SerializedPropertyInfo&gt;)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;InvocationVersionOne..ctor(String, IDictionary&lt;String,String&gt;, DateTime, DateTime, String, String, Int32, String, String, IDictionary&lt;String,String&gt;, IDictionary&lt;String,SerializedPropertyInfo&gt;)&#xD;&#xA;InvocationVersionOne.Init(String, IDictionary&lt;String,String&gt;, DateTime, DateTime, String, String, Int32, String, String, IDictionary&lt;String,String&gt;, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EnvironmentVariables" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="InvocationVersionOne.cs" Line="93">Change 'InvocationVersionOne.EnvironmentVariables' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ResponseFiles" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="InvocationVersionOne.cs" Line="45">Change 'InvocationVersionOne.ResponseFiles' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="InvocationVersionOneEqualityComparer" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#Equals(Microsoft.CodeAnalysis.Sarif.VersionOne.InvocationVersionOne,Microsoft.CodeAnalysis.Sarif.VersionOne.InvocationVersionOne)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="InvocationVersionOneEqualityComparer.cs" Line="20">'InvocationVersionOneEqualityComparer.Equals(InvocationVersionOne, InvocationVersionOne)' has a cyclomatic complexity of 36. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IRuleVersionOne" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidEmptyInterfaces" Category="Microsoft.Design" CheckId="CA1040" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Warning">Define a custom attribute to replace 'IRuleVersionOne'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="ISarifNodeVersionOne" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in type name 'ISarifNodeVersionOne'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#SarifNodeKindVersionOne" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in member name 'ISarifNodeVersionOne.SarifNodeKindVersionOne' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="LocationVersionOne" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Microsoft.CodeAnalysis.Sarif.VersionOne.LocationVersionOne)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="LocationVersionOne.cs" Line="113">'LocationVersionOne.LocationVersionOne(LocationVersionOne)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;LocationVersionOne..ctor(LocationVersionOne)&#xD;&#xA;LocationVersionOne.Init(PhysicalLocationVersionOne, PhysicalLocationVersionOne, String, String, String, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(Microsoft.CodeAnalysis.Sarif.VersionOne.PhysicalLocationVersionOne,Microsoft.CodeAnalysis.Sarif.VersionOne.PhysicalLocationVersionOne,System.String,System.String,System.String,System.Collections.Generic.IDictionary`2&lt;System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="LocationVersionOne.cs" Line="99">'LocationVersionOne.LocationVersionOne(PhysicalLocationVersionOne, PhysicalLocationVersionOne, string, string, string, IDictionary&lt;string, SerializedPropertyInfo&gt;)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;LocationVersionOne..ctor(PhysicalLocationVersionOne, PhysicalLocationVersionOne, String, String, String, IDictionary&lt;String,SerializedPropertyInfo&gt;)&#xD;&#xA;LocationVersionOne.Init(PhysicalLocationVersionOne, PhysicalLocationVersionOne, String, String, String, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="NotificationVersionOne" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Microsoft.CodeAnalysis.Sarif.VersionOne.NotificationVersionOne)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="NotificationVersionOne.cs" Line="149">'NotificationVersionOne.NotificationVersionOne(NotificationVersionOne)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;NotificationVersionOne..ctor(NotificationVersionOne)&#xD;&#xA;NotificationVersionOne.Init(String, String, String, PhysicalLocationVersionOne, String, NotificationLevelVersionOne, Int32, DateTime, ExceptionDataVersionOne, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.String,System.String,Microsoft.CodeAnalysis.Sarif.VersionOne.PhysicalLocationVersionOne,System.String,Microsoft.CodeAnalysis.Sarif.VersionOne.NotificationLevelVersionOne,System.Int32,System.DateTime,Microsoft.CodeAnalysis.Sarif.VersionOne.ExceptionDataVersionOne,System.Collections.Generic.IDictionary`2&lt;System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="NotificationVersionOne.cs" Line="135">'NotificationVersionOne.NotificationVersionOne(string, string, string, PhysicalLocationVersionOne, string, NotificationLevelVersionOne, int, DateTime, ExceptionDataVersionOne, IDictionary&lt;string, SerializedPropertyInfo&gt;)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;NotificationVersionOne..ctor(String, String, String, PhysicalLocationVersionOne, String, NotificationLevelVersionOne, Int32, DateTime, ExceptionDataVersionOne, IDictionary&lt;String,SerializedPropertyInfo&gt;)&#xD;&#xA;NotificationVersionOne.Init(String, String, String, PhysicalLocationVersionOne, String, NotificationLevelVersionOne, Int32, DateTime, ExceptionDataVersionOne, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PhysicalLocationVersionOne" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.Uri,System.String,Microsoft.CodeAnalysis.Sarif.VersionOne.RegionVersionOne)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="PhysicalLocationVersionOne.cs" Line="71">Change the type of parameter 'uriBaseId' of method 'PhysicalLocationVersionOne.PhysicalLocationVersionOne(Uri, string, RegionVersionOne)' from string to System.Uri, or provide an overload of 'PhysicalLocationVersionOne.PhysicalLocationVersionOne(Uri, string, RegionVersionOne)', that allows 'uriBaseId' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UriBaseId" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UriPropertiesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1056" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="PhysicalLocationVersionOne.cs" Line="44">Change the type of property 'PhysicalLocationVersionOne.UriBaseId' from string to System.Uri.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ResultVersionOne" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Microsoft.CodeAnalysis.Sarif.VersionOne.ResultVersionOne)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="ResultVersionOne.cs" Line="199">'ResultVersionOne.ResultVersionOne(ResultVersionOne)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;ResultVersionOne..ctor(ResultVersionOne)&#xD;&#xA;ResultVersionOne.Init(String, String, ResultLevelVersionOne, String, FormattedRuleMessageVersionOne, IEnumerable&lt;LocationVersionOne&gt;, String, String, String, IEnumerable&lt;StackVersionOne&gt;, IEnumerable&lt;CodeFlowVersionOne&gt;, IEnumerable&lt;AnnotatedCodeLocationVersionOne&gt;, SuppressionStatesVersionOne, BaselineStateVersionOne, IEnumerable&lt;FixVersionOne&gt;, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.String,Microsoft.CodeAnalysis.Sarif.VersionOne.ResultLevelVersionOne,System.String,Microsoft.CodeAnalysis.Sarif.VersionOne.FormattedRuleMessageVersionOne,System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.VersionOne.LocationVersionOne&gt;,System.String,System.String,System.String,System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.VersionOne.StackVersionOne&gt;,System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.VersionOne.CodeFlowVersionOne&gt;,System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationVersionOne&gt;,Microsoft.CodeAnalysis.Sarif.VersionOne.SuppressionStatesVersionOne,Microsoft.CodeAnalysis.Sarif.VersionOne.BaselineStateVersionOne,System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.VersionOne.FixVersionOne&gt;,System.Collections.Generic.IDictionary`2&lt;System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="ResultVersionOne.cs" Line="185">'ResultVersionOne.ResultVersionOne(string, string, ResultLevelVersionOne, string, FormattedRuleMessageVersionOne, IEnumerable&lt;LocationVersionOne&gt;, string, string, string, IEnumerable&lt;StackVersionOne&gt;, IEnumerable&lt;CodeFlowVersionOne&gt;, IEnumerable&lt;AnnotatedCodeLocationVersionOne&gt;, SuppressionStatesVersionOne, BaselineStateVersionOne, IEnumerable&lt;FixVersionOne&gt;, IDictionary&lt;string, SerializedPropertyInfo&gt;)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;ResultVersionOne..ctor(String, String, ResultLevelVersionOne, String, FormattedRuleMessageVersionOne, IEnumerable&lt;LocationVersionOne&gt;, String, String, String, IEnumerable&lt;StackVersionOne&gt;, IEnumerable&lt;CodeFlowVersionOne&gt;, IEnumerable&lt;AnnotatedCodeLocationVersionOne&gt;, SuppressionStatesVersionOne, BaselineStateVersionOne, IEnumerable&lt;FixVersionOne&gt;, IDictionary&lt;String,SerializedPropertyInfo&gt;)&#xD;&#xA;ResultVersionOne.Init(String, String, ResultLevelVersionOne, String, FormattedRuleMessageVersionOne, IEnumerable&lt;LocationVersionOne&gt;, String, String, String, IEnumerable&lt;StackVersionOne&gt;, IEnumerable&lt;CodeFlowVersionOne&gt;, IEnumerable&lt;AnnotatedCodeLocationVersionOne&gt;, SuppressionStatesVersionOne, BaselineStateVersionOne, IEnumerable&lt;FixVersionOne&gt;, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CodeFlows" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="ResultVersionOne.cs" Line="99">Change 'ResultVersionOne.CodeFlows' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Fixes" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="ResultVersionOne.cs" Line="119">Change 'ResultVersionOne.Fixes' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Locations" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="ResultVersionOne.cs" Line="69">Change 'ResultVersionOne.Locations' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RelatedLocations" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="ResultVersionOne.cs" Line="105">Change 'ResultVersionOne.RelatedLocations' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Stacks" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="ResultVersionOne.cs" Line="93">Change 'ResultVersionOne.Stacks' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ResultVersionOneEqualityComparer" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#Equals(Microsoft.CodeAnalysis.Sarif.VersionOne.ResultVersionOne,Microsoft.CodeAnalysis.Sarif.VersionOne.ResultVersionOne)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="ResultVersionOneEqualityComparer.cs" Line="20">'ResultVersionOneEqualityComparer.Equals(ResultVersionOne, ResultVersionOne)' has a cyclomatic complexity of 52. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetHashCode(Microsoft.CodeAnalysis.Sarif.VersionOne.ResultVersionOne)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="ResultVersionOneEqualityComparer.cs" Line="212">'ResultVersionOneEqualityComparer.GetHashCode(ResultVersionOne)' has a cyclomatic complexity of 33. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RuleVersionOne" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Microsoft.CodeAnalysis.Sarif.VersionOne.RuleVersionOne)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="RuleVersionOne.cs" Line="140">'RuleVersionOne.RuleVersionOne(RuleVersionOne)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;RuleVersionOne..ctor(RuleVersionOne)&#xD;&#xA;RuleVersionOne.Init(String, String, String, String, IDictionary&lt;String,String&gt;, reportingConfigurationVersionOne, ResultLevelVersionOne, Uri, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolderVersionOne.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary`2&lt;System.String,System.String&gt;,Microsoft.CodeAnalysis.Sarif.VersionOne.reportingConfigurationVersionOne,Microsoft.CodeAnalysis.Sarif.VersionOne.ResultLevelVersionOne,System.Uri,System.Collections.Generic.IDictionary`2&lt;System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="RuleVersionOne.cs" Line="126">'RuleVersionOne.RuleVersionOne(string, string, string, string, IDictionary&lt;string, string&gt;, reportingConfigurationVersionOne, ResultLevelVersionOne, Uri, IDictionary&lt;string, SerializedPropertyInfo&gt;)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;RuleVersionOne..ctor(String, String, String, String, IDictionary&lt;String,String&gt;, reportingConfigurationVersionOne, ResultLevelVersionOne, Uri, IDictionary&lt;String,SerializedPropertyInfo&gt;)&#xD;&#xA;RuleVersionOne.Init(String, String, String, String, IDictionary&lt;String,String&gt;, reportingConfigurationVersionOne, ResultLevelVersionOne, Uri, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolderVersionOne.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MessageFormats" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="RuleVersionOne.cs" Line="63">Change 'RuleVersionOne.MessageFormats' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RuleVersionOneEqualityComparer" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#Equals(Microsoft.CodeAnalysis.Sarif.VersionOne.RuleVersionOne,Microsoft.CodeAnalysis.Sarif.VersionOne.RuleVersionOne)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="RuleVersionOneEqualityComparer.cs" Line="20">'RuleVersionOneEqualityComparer.Equals(RuleVersionOne, RuleVersionOne)' has a cyclomatic complexity of 27. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RunVersionOne" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Microsoft.CodeAnalysis.Sarif.VersionOne.RunVersionOne)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="RunVersionOne.cs" Line="185">'RunVersionOne.RunVersionOne(RunVersionOne)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;RunVersionOne..ctor(RunVersionOne)&#xD;&#xA;RunVersionOne.Init(ToolVersionOne, InvocationVersionOne, IDictionary&lt;String,FileDataVersionOne&gt;, IDictionary&lt;String,LogicalLocationVersionOne&gt;, IEnumerable&lt;ResultVersionOne&gt;, IEnumerable&lt;NotificationVersionOne&gt;, IEnumerable&lt;NotificationVersionOne&gt;, IDictionary&lt;String,RuleVersionOne&gt;, String, String, String, String, String, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(Microsoft.CodeAnalysis.Sarif.VersionOne.ToolVersionOne,Microsoft.CodeAnalysis.Sarif.VersionOne.InvocationVersionOne,System.Collections.Generic.IDictionary`2&lt;System.String,Microsoft.CodeAnalysis.Sarif.VersionOne.FileDataVersionOne&gt;,System.Collections.Generic.IDictionary`2&lt;System.String,Microsoft.CodeAnalysis.Sarif.VersionOne.LogicalLocationVersionOne&gt;,System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.VersionOne.ResultVersionOne&gt;,System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.VersionOne.NotificationVersionOne&gt;,System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.VersionOne.NotificationVersionOne&gt;,System.Collections.Generic.IDictionary`2&lt;System.String,Microsoft.CodeAnalysis.Sarif.VersionOne.RuleVersionOne&gt;,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary`2&lt;System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="RunVersionOne.cs" Line="171">'RunVersionOne.RunVersionOne(ToolVersionOne, InvocationVersionOne, IDictionary&lt;string, FileDataVersionOne&gt;, IDictionary&lt;string, LogicalLocationVersionOne&gt;, IEnumerable&lt;ResultVersionOne&gt;, IEnumerable&lt;NotificationVersionOne&gt;, IEnumerable&lt;NotificationVersionOne&gt;, IDictionary&lt;string, RuleVersionOne&gt;, string, string, string, string, string, IDictionary&lt;string, SerializedPropertyInfo&gt;)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;RunVersionOne..ctor(ToolVersionOne, InvocationVersionOne, IDictionary&lt;String,FileDataVersionOne&gt;, IDictionary&lt;String,LogicalLocationVersionOne&gt;, IEnumerable&lt;ResultVersionOne&gt;, IEnumerable&lt;NotificationVersionOne&gt;, IEnumerable&lt;NotificationVersionOne&gt;, IDictionary&lt;String,RuleVersionOne&gt;, String, String, String, String, String, IDictionary&lt;String,SerializedPropertyInfo&gt;)&#xD;&#xA;RunVersionOne.Init(ToolVersionOne, InvocationVersionOne, IDictionary&lt;String,FileDataVersionOne&gt;, IDictionary&lt;String,LogicalLocationVersionOne&gt;, IEnumerable&lt;ResultVersionOne&gt;, IEnumerable&lt;NotificationVersionOne&gt;, IEnumerable&lt;NotificationVersionOne&gt;, IDictionary&lt;String,RuleVersionOne&gt;, String, String, String, String, String, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ConfigurationNotifications" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="RunVersionOne.cs" Line="75">Change 'RunVersionOne.ConfigurationNotifications' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Files" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="RunVersionOne.cs" Line="51">Change 'RunVersionOne.Files' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LogicalLocations" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="RunVersionOne.cs" Line="57">Change 'RunVersionOne.LogicalLocations' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Results" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="RunVersionOne.cs" Line="63">Change 'RunVersionOne.Results' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Rules" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="RunVersionOne.cs" Line="81">Change 'RunVersionOne.Rules' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToolNotifications" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="RunVersionOne.cs" Line="69">Change 'RunVersionOne.ToolNotifications' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RunVersionOneEqualityComparer" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#Equals(Microsoft.CodeAnalysis.Sarif.VersionOne.RunVersionOne,Microsoft.CodeAnalysis.Sarif.VersionOne.RunVersionOne)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="RunVersionOneEqualityComparer.cs" Line="20">'RunVersionOneEqualityComparer.Equals(RunVersionOne, RunVersionOne)' has a cyclomatic complexity of 61. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetHashCode(Microsoft.CodeAnalysis.Sarif.VersionOne.RunVersionOne)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="RunVersionOneEqualityComparer.cs" Line="221">'RunVersionOneEqualityComparer.GetHashCode(RunVersionOne)' has a cyclomatic complexity of 37. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SarifLogVersionOne" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in type name 'SarifLogVersionOne'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Runs" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="SarifLogVersionOne.cs" Line="50">Change 'SarifLogVersionOne.Runs' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SarifNodeKindVersionOne" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in type name 'SarifNodeKindVersionOne'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#SarifLogVersionOne" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in member name 'SarifNodeKindVersionOne.SarifLogVersionOne' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SarifRewritingVisitorVersionOne" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in type name 'SarifRewritingVisitorVersionOne'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#VisitSarifLogVersionOne(Microsoft.CodeAnalysis.Sarif.VersionOne.SarifLogVersionOne)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="SarifRewritingVisitorVersionOne.cs" Line="442">Correct the spelling of 'Sarif' in member name 'SarifRewritingVisitorVersionOne.VisitSarifLogVersionOne(SarifLogVersionOne)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SarifVersionVersionOne" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in type name 'SarifVersionVersionOne'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="StackFrameVersionOne" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Microsoft.CodeAnalysis.Sarif.VersionOne.StackFrameVersionOne)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="StackFrameVersionOne.cs" Line="176">'StackFrameVersionOne.StackFrameVersionOne(StackFrameVersionOne)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;StackFrameVersionOne..ctor(StackFrameVersionOne)&#xD;&#xA;StackFrameVersionOne.Init(String, Uri, String, Int32, Int32, String, Int32, String, String, Int32, Int32, IEnumerable&lt;String&gt;, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.Uri,System.String,System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,System.Collections.Generic.IDictionary`2&lt;System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="StackFrameVersionOne.cs" Line="162">'StackFrameVersionOne.StackFrameVersionOne(string, Uri, string, int, int, string, int, string, string, int, int, IEnumerable&lt;string&gt;, IDictionary&lt;string, SerializedPropertyInfo&gt;)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;StackFrameVersionOne..ctor(String, Uri, String, Int32, Int32, String, Int32, String, String, Int32, Int32, IEnumerable&lt;String&gt;, IDictionary&lt;String,SerializedPropertyInfo&gt;)&#xD;&#xA;StackFrameVersionOne.Init(String, Uri, String, Int32, Int32, String, Int32, String, String, Int32, Int32, IEnumerable&lt;String&gt;, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
            <Message Id="2#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="StackFrameVersionOne.cs" Line="162">Change the type of parameter 'uriBaseId' of method 'StackFrameVersionOne.StackFrameVersionOne(string, Uri, string, int, int, string, int, string, string, int, int, IEnumerable&lt;string&gt;, IDictionary&lt;string, SerializedPropertyInfo&gt;)' from string to System.Uri, or provide an overload of 'StackFrameVersionOne.StackFrameVersionOne(string, Uri, string, int, int, string, int, string, string, int, int, IEnumerable&lt;string&gt;, IDictionary&lt;string, SerializedPropertyInfo&gt;)', that allows 'uriBaseId' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Parameters" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="StackFrameVersionOne.cs" Line="105">Change 'StackFrameVersionOne.Parameters' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UriBaseId" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UriPropertiesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1056" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="StackFrameVersionOne.cs" Line="51">Change the type of property 'StackFrameVersionOne.UriBaseId' from string to System.Uri.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="StackFrameVersionOneEqualityComparer" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#Equals(Microsoft.CodeAnalysis.Sarif.VersionOne.StackFrameVersionOne,Microsoft.CodeAnalysis.Sarif.VersionOne.StackFrameVersionOne)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="StackFrameVersionOneEqualityComparer.cs" Line="20">'StackFrameVersionOneEqualityComparer.Equals(StackFrameVersionOne, StackFrameVersionOne)' has a cyclomatic complexity of 29. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="StackVersionOne" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Microsoft.CodeAnalysis.Sarif.VersionOne.StackVersionOne)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="StackVersionOne.cs" Line="86">'StackVersionOne.StackVersionOne(StackVersionOne)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;StackVersionOne..ctor(StackVersionOne)&#xD;&#xA;StackVersionOne.Init(String, IEnumerable&lt;StackFrameVersionOne&gt;, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.VersionOne.StackFrameVersionOne&gt;,System.Collections.Generic.IDictionary`2&lt;System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="StackVersionOne.cs" Line="72">'StackVersionOne.StackVersionOne(string, IEnumerable&lt;StackFrameVersionOne&gt;, IDictionary&lt;string, SerializedPropertyInfo&gt;)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;StackVersionOne..ctor(String, IEnumerable&lt;StackFrameVersionOne&gt;, IDictionary&lt;String,SerializedPropertyInfo&gt;)&#xD;&#xA;StackVersionOne.Init(String, IEnumerable&lt;StackFrameVersionOne&gt;, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Frames" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="StackVersionOne.cs" Line="45">Change 'StackVersionOne.Frames' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SuppressionStatesVersionOne" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="FlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1714" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Error">If enumeration name 'SuppressionStatesVersionOne' is singular, change it to a plural form.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="TagsCollectionVersionOne" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Rename 'TagsCollectionVersionOne' to end in 'Collection'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="ToolVersionOne" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Microsoft.CodeAnalysis.Sarif.VersionOne.ToolVersionOne)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="ToolVersionOne.cs" Line="131">'ToolVersionOne.ToolVersionOne(ToolVersionOne)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;ToolVersionOne..ctor(ToolVersionOne)&#xD;&#xA;ToolVersionOne.Init(String, String, String, String, String, String, String, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary`2&lt;System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="ToolVersionOne.cs" Line="117">'ToolVersionOne.ToolVersionOne(string, string, string, string, string, string, string, IDictionary&lt;string, SerializedPropertyInfo&gt;)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;ToolVersionOne..ctor(String, String, String, String, String, String, String, IDictionary&lt;String,SerializedPropertyInfo&gt;)&#xD;&#xA;ToolVersionOne.Init(String, String, String, String, String, String, String, IDictionary&lt;String,SerializedPropertyInfo&gt;):Void&#xD;&#xA;PropertyBagHolder.set_Properties(IDictionary&lt;String,SerializedPropertyInfo&gt;):Void</Issue>
            </Message>
            <Message Id="sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="ToolVersionOne.cs" Line="117">In method 'ToolVersionOne.ToolVersionOne(string, string, string, string, string, string, string, IDictionary&lt;string, SerializedPropertyInfo&gt;)', correct the spelling of 'sarif' in parameter name 'sarifLoggerVersion' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SarifLoggerVersion" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\VersionOne\Autogenerated" File="ToolVersionOne.cs" Line="69">Correct the spelling of 'Sarif' in member name 'ToolVersionOne.SarifLoggerVersion' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Microsoft.CodeAnalysis.Sarif.Visitors">
       <Types>
        <Type Name="AbsoluteUrisVisitor" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CombineUris(System.Uri,System.Uri)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif\Visitors" File="AbsoluteUrisVisitor.cs" Line="103">Because the behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings, replace this call in 'AbsoluteUrisVisitor.CombineUris(Uri, Uri)' with a call to 'string.StartsWith(string, StringComparison)'. If the result of 'string.StartsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#VisitRun(Microsoft.CodeAnalysis.Sarif.Run)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="originalUriBaseIds" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Visitors" File="AbsoluteUrisVisitor.cs" Line="47">Correct the spelling of the unrecognized token 'originalUriBaseIds' in the literal '"originalUriBaseIds"'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif\Visitors" File="AbsoluteUrisVisitor.cs" Line="47">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'AbsoluteUrisVisitor.VisitRun(Run)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Visitors" File="AbsoluteUrisVisitor.cs" Line="42">In externally visible method 'AbsoluteUrisVisitor.VisitRun(Run)', validate parameter 'node' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="AddFileReferencesVisitor" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#VisitPhysicalLocation(Microsoft.CodeAnalysis.Sarif.PhysicalLocation)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Visitors" File="AddFileReferencesVisitor.cs" Line="35">In externally visible method 'AddFileReferencesVisitor.VisitPhysicalLocation(PhysicalLocation)', validate parameter 'node' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#VisitRun(Microsoft.CodeAnalysis.Sarif.Run)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Visitors" File="AddFileReferencesVisitor.cs" Line="14">In externally visible method 'AddFileReferencesVisitor.VisitRun(Run)', validate parameter 'node' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="InsertOptionalDataVisitor" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#s_fileSystem" Kind="Field" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="ReviewMisleadingFieldNames" Category="Microsoft.Maintainability" CheckId="CA1504" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="Instance" Certainty="95" Level="Warning">The field name 'InsertOptionalDataVisitor.s_fileSystem' suggests that it is static (Shared in Visual Basic) data but it is declared as an instance member. Review this member to verify that it should be instance, or consider changing the field name.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#VisitMessage(Microsoft.CodeAnalysis.Sarif.Message)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Visitors" File="InsertOptionalDataVisitor.cs" Line="164">In externally visible method 'InsertOptionalDataVisitor.VisitMessage(Message)', validate parameter 'node' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#VisitPhysicalLocation(Microsoft.CodeAnalysis.Sarif.PhysicalLocation)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Visitors" File="InsertOptionalDataVisitor.cs" Line="64">In externally visible method 'InsertOptionalDataVisitor.VisitPhysicalLocation(PhysicalLocation)', validate parameter 'node' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#VisitResult(Microsoft.CodeAnalysis.Sarif.Result)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Visitors" File="InsertOptionalDataVisitor.cs" Line="155">In externally visible method 'InsertOptionalDataVisitor.VisitResult(Result)', validate parameter 'node' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RebaseUriVisitor" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.String,System.Boolean,System.Uri)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Visitors" File="RebaseUriVisitor.cs" Line="59">In externally visible method 'RebaseUriVisitor.RebaseUriVisitor(string, bool, Uri)', validate parameter 'baseUri' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,System.Uri)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Visitors" File="RebaseUriVisitor.cs" Line="49">In externally visible method 'RebaseUriVisitor.RebaseUriVisitor(string, Uri)', validate parameter 'baseUri' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#VisitPhysicalLocation(Microsoft.CodeAnalysis.Sarif.PhysicalLocation)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Visitors" File="RebaseUriVisitor.cs" Line="73">In externally visible method 'RebaseUriVisitor.VisitPhysicalLocation(PhysicalLocation)', validate parameter 'node' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#VisitRun(Microsoft.CodeAnalysis.Sarif.Run)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Visitors" File="RebaseUriVisitor.cs" Line="88">In externally visible method 'RebaseUriVisitor.VisitRun(Run)', validate parameter 'node' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SarifCurrentToVersionOneVisitor" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidExcessiveClassCoupling" Category="Microsoft.Maintainability" CheckId="CA1506" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="Warning">'SarifCurrentToVersionOneVisitor' is coupled with 86 different types from 12 different namespaces. Rewrite or refactor this class's methods to decrease its class coupling, or consider moving some of the class's methods to some of the other types it is tightly coupled with. A class coupling above 95 indicates poor maintainability, a class coupling between 95 and 80 indicates moderate maintainability, and a class coupling below 80 indicates good maintainability.</Issue>
          </Message>
          <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in type name 'SarifCurrentToVersionOneVisitor'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#CreateFileChange(Microsoft.CodeAnalysis.Sarif.FileChange)" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif\Visitors" File="SarifCurrentToVersionOneVisitor.cs" Line="135">'SarifCurrentToVersionOneVisitor.CreateFileChange(FileChange)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateLogicalLocation(Microsoft.CodeAnalysis.Sarif.LogicalLocation)" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Visitors" File="SarifCurrentToVersionOneVisitor.cs" Line="322">The 'this' parameter (or 'Me' in Visual Basic) of 'SarifCurrentToVersionOneVisitor.CreateLogicalLocation(LogicalLocation)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreatePhysicalLocation(Microsoft.CodeAnalysis.Sarif.FileLocation)" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Visitors" File="SarifCurrentToVersionOneVisitor.cs" Line="379">The 'this' parameter (or 'Me' in Visual Basic) of 'SarifCurrentToVersionOneVisitor.CreatePhysicalLocation(FileLocation)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateReplacement(Microsoft.CodeAnalysis.Sarif.Replacement,System.Text.Encoding)" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Visitors" File="SarifCurrentToVersionOneVisitor.cs" Line="680">The 'this' parameter (or 'Me' in Visual Basic) of 'SarifCurrentToVersionOneVisitor.CreateReplacement(Replacement, Encoding)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateResult(Microsoft.CodeAnalysis.Sarif.Result)" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveClassCoupling" Category="Microsoft.Maintainability" CheckId="CA1506" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Method" Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Visitors" File="SarifCurrentToVersionOneVisitor.cs" Line="742">'SarifCurrentToVersionOneVisitor.CreateResult(Result)' is coupled with 31 different types from 8 different namespaces. Rewrite or refactor the method to decrease its class coupling, or consider moving the method to one of the other types it is tightly coupled with. A class coupling above 40 indicates poor maintainability, a class coupling between 40 and 30 indicates moderate maintainability, and a class coupling below 30 indicates good maintainability.</Issue>
            </Message>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Visitors" File="SarifCurrentToVersionOneVisitor.cs" Line="742">'SarifCurrentToVersionOneVisitor.CreateResult(Result)' has a cyclomatic complexity of 26. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateRule(Microsoft.CodeAnalysis.Sarif.Rule)" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Visitors" File="SarifCurrentToVersionOneVisitor.cs" Line="817">The 'this' parameter (or 'Me' in Visual Basic) of 'SarifCurrentToVersionOneVisitor.CreateRule(Rule)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateRun(Microsoft.CodeAnalysis.Sarif.Run)" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif\Visitors" File="SarifCurrentToVersionOneVisitor.cs" Line="883">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'SarifCurrentToVersionOneVisitor.CreateRun(Run)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateTool(Microsoft.CodeAnalysis.Sarif.Tool)" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Visitors" File="SarifCurrentToVersionOneVisitor.cs" Line="957">The 'this' parameter (or 'Me' in Visual Basic) of 'SarifCurrentToVersionOneVisitor.CreateTool(Tool)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetContentStream(System.Uri,System.Text.Encoding&amp;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif\Visitors" File="SarifCurrentToVersionOneVisitor.cs" Line="647">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'SarifCurrentToVersionOneVisitor.GetContentStream(Uri, out Encoding)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif\Visitors" File="SarifCurrentToVersionOneVisitor.cs" Line="654">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'SarifCurrentToVersionOneVisitor.GetContentStream(Uri, out Encoding)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif\Visitors" File="SarifCurrentToVersionOneVisitor.cs" Line="633">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'SarifCurrentToVersionOneVisitor.GetContentStream(Uri, out Encoding)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif\Visitors" File="SarifCurrentToVersionOneVisitor.cs" Line="637">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'SarifCurrentToVersionOneVisitor.GetContentStream(Uri, out Encoding)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif\Visitors" File="SarifCurrentToVersionOneVisitor.cs" Line="641">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'SarifCurrentToVersionOneVisitor.GetContentStream(Uri, out Encoding)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetFileEncoding(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Visitors" File="SarifCurrentToVersionOneVisitor.cs" Line="163">The 'this' parameter (or 'Me' in Visual Basic) of 'SarifCurrentToVersionOneVisitor.GetFileEncoding(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SarifLogVersionOne" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Visitors" File="SarifCurrentToVersionOneVisitor.cs" Line="25">Correct the spelling of 'Sarif' in member name 'SarifCurrentToVersionOneVisitor.SarifLogVersionOne' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#VisitSarifLog(Microsoft.CodeAnalysis.Sarif.SarifLog)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif\Visitors" File="SarifCurrentToVersionOneVisitor.cs" Line="28">In member 'SarifCurrentToVersionOneVisitor.VisitSarifLog(SarifLog)', change parameter name 'v2SarifLog' to 'node' in order to match the identifier as it has been declared in 'SarifRewritingVisitor.VisitSarifLog(SarifLog)'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Visitors" File="SarifCurrentToVersionOneVisitor.cs" Line="33">In externally visible method 'SarifCurrentToVersionOneVisitor.VisitSarifLog(SarifLog)', validate parameter 'v2SarifLog' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SarifTransformerUtilities" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in type name 'SarifTransformerUtilities'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#AlgorithmKindNameMap" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'SarifTransformerUtilities.AlgorithmKindNameMap' or change the field to one that is an immutable reference type. If the reference type 'Dictionary&lt;AlgorithmKindVersionOne, string&gt;' is, in fact, immutable, exclude this message.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AlgorithmNameKindMap" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'SarifTransformerUtilities.AlgorithmNameKindMap' or change the field to one that is an immutable reference type. If the reference type 'Dictionary&lt;string, AlgorithmKindVersionOne&gt;' is, in fact, immutable, exclude this message.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateAnnotatedCodeLocationImportance(Microsoft.CodeAnalysis.Sarif.ThreadFlowLocationImportance)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="v" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Visitors" File="SarifTransformerUtilities.cs" Line="235">In method 'SarifTransformerUtilities.CreateAnnotatedCodeLocationImportance(ThreadFlowLocationImportance)', correct the spelling of 'v' in parameter name 'v2ThreadFlowLocationImportance' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateBaselineState(Microsoft.CodeAnalysis.Sarif.VersionOne.BaselineStateVersionOne)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="v" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Visitors" File="SarifTransformerUtilities.cs" Line="191">In method 'SarifTransformerUtilities.CreateBaselineState(BaselineStateVersionOne)', correct the spelling of 'v' in parameter name 'v1BaselineState' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateBaselineStateVersionOne(Microsoft.CodeAnalysis.Sarif.BaselineState)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="v" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Visitors" File="SarifTransformerUtilities.cs" Line="205">In method 'SarifTransformerUtilities.CreateBaselineStateVersionOne(BaselineState)', correct the spelling of 'v' in parameter name 'v2BaselineState' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateDisambiguatedName(System.String,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif\Visitors" File="SarifTransformerUtilities.cs" Line="67">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'SarifTransformerUtilities.CreateDisambiguatedName(string, int)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateNotificationLevel(Microsoft.CodeAnalysis.Sarif.VersionOne.NotificationLevelVersionOne)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="v" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Visitors" File="SarifTransformerUtilities.cs" Line="71">In method 'SarifTransformerUtilities.CreateNotificationLevel(NotificationLevelVersionOne)', correct the spelling of 'v' in parameter name 'v1NotificationLevel' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateNotificationLevelVersionOne(Microsoft.CodeAnalysis.Sarif.FailureLevel)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="v" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Visitors" File="SarifTransformerUtilities.cs" Line="84">In method 'SarifTransformerUtilities.CreateNotificationLevelVersionOne(FailureLevel)', correct the spelling of 'v' in parameter name 'v2NotificationLevel' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateResultLevel(Microsoft.CodeAnalysis.Sarif.VersionOne.ResultLevelVersionOne)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="v" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Visitors" File="SarifTransformerUtilities.cs" Line="112">In method 'SarifTransformerUtilities.CreateResultLevel(ResultLevelVersionOne)', correct the spelling of 'v' in parameter name 'v1ResultLevel' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateResultLevelVersionOne(Microsoft.CodeAnalysis.Sarif.ResultLevel)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="v" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Visitors" File="SarifTransformerUtilities.cs" Line="146">In method 'SarifTransformerUtilities.CreateResultLevelVersionOne(ResultLevel)', correct the spelling of 'v' in parameter name 'v2ResultLevel' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateResultLevelVersionOne(Microsoft.CodeAnalysis.Sarif.reportingConfigurationDefaultLevel)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="v" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Visitors" File="SarifTransformerUtilities.cs" Line="131">In method 'SarifTransformerUtilities.CreateResultLevelVersionOne(reportingConfigurationDefaultLevel)', correct the spelling of 'v' in parameter name 'v2DefaultLevel' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreatereportingConfigurationDefaultLevel(Microsoft.CodeAnalysis.Sarif.VersionOne.ResultLevelVersionOne)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="v" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Visitors" File="SarifTransformerUtilities.cs" Line="97">In method 'SarifTransformerUtilities.CreatereportingConfigurationDefaultLevel(ResultLevelVersionOne)', correct the spelling of 'v' in parameter name 'v1ResultLevel' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateSuppressionStates(Microsoft.CodeAnalysis.Sarif.VersionOne.SuppressionStatesVersionOne)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="v" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Visitors" File="SarifTransformerUtilities.cs" Line="165">In method 'SarifTransformerUtilities.CreateSuppressionStates(SuppressionStatesVersionOne)', correct the spelling of 'v' in parameter name 'v1SuppressionStates' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateSuppressionStatesVersionOne(Microsoft.CodeAnalysis.Sarif.SuppressionStates)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="v" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Visitors" File="SarifTransformerUtilities.cs" Line="178">In method 'SarifTransformerUtilities.CreateSuppressionStatesVersionOne(SuppressionStates)', correct the spelling of 'v' in parameter name 'v2SuppressionStates' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateThreadFlowLocationImportance(Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationImportanceVersionOne)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="v" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Visitors" File="SarifTransformerUtilities.cs" Line="220">In method 'SarifTransformerUtilities.CreateThreadFlowLocationImportance(AnnotatedCodeLocationImportanceVersionOne)', correct the spelling of 'v' in parameter name 'v1AnnotatedCodeLocationImportance' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DefaultFullyQualifiedNameDelimiters" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ArrayFieldsShouldNotBeReadOnly" Category="Microsoft.Security" CheckId="CA2105" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="CriticalWarning">Either replace 'SarifTransformerUtilities.DefaultFullyQualifiedNameDelimiters' with a strongly typed collection that cannot be changed, or replace the public field with a method that returns a clone of a private array.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#JsonSettingsV1" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'SarifTransformerUtilities.JsonSettingsV1' or change the field to one that is an immutable reference type. If the reference type 'JsonSerializerSettings' is, in fact, immutable, exclude this message.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#JsonSettingsV1Compact" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'SarifTransformerUtilities.JsonSettingsV1Compact' or change the field to one that is an immutable reference type. If the reference type 'JsonSerializerSettings' is, in fact, immutable, exclude this message.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#JsonSettingsV2" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'SarifTransformerUtilities.JsonSettingsV2' or change the field to one that is an immutable reference type. If the reference type 'JsonSerializerSettings' is, in fact, immutable, exclude this message.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#JsonSettingsV2Compact" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'SarifTransformerUtilities.JsonSettingsV2Compact' or change the field to one that is an immutable reference type. If the reference type 'JsonSerializerSettings' is, in fact, immutable, exclude this message.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PropertyBagTransformerItemPrefixes" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'SarifTransformerUtilities.PropertyBagTransformerItemPrefixes' or change the field to one that is an immutable reference type. If the reference type 'Dictionary&lt;SarifVersion, string&gt;' is, in fact, immutable, exclude this message.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SarifVersionOneToCurrentVisitor" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in type name 'SarifVersionOneToCurrentVisitor'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#_currentV1Run" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'SarifVersionOneToCurrentVisitor._currentV1Run' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateFileLocation(System.Uri,System.String)" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Visitors" File="SarifVersionOneToCurrentVisitor.cs" Line="194">The 'this' parameter (or 'Me' in Visual Basic) of 'SarifVersionOneToCurrentVisitor.CreateFileLocation(Uri, string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateHash(Microsoft.CodeAnalysis.Sarif.VersionOne.HashVersionOne)" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="ToUpperInvariant" Certainty="90" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif\Visitors" File="SarifVersionOneToCurrentVisitor.cs" Line="244">In method 'SarifVersionOneToCurrentVisitor.CreateHash(HashVersionOne)', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateLogicalLocation(Microsoft.CodeAnalysis.Sarif.VersionOne.LogicalLocationVersionOne)" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Visitors" File="SarifVersionOneToCurrentVisitor.cs" Line="429">The 'this' parameter (or 'Me' in Visual Basic) of 'SarifVersionOneToCurrentVisitor.CreateLogicalLocation(LogicalLocationVersionOne)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateMessage(System.String)" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Visitors" File="SarifVersionOneToCurrentVisitor.cs" Line="530">The 'this' parameter (or 'Me' in Visual Basic) of 'SarifVersionOneToCurrentVisitor.CreateMessage(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateRegion(Microsoft.CodeAnalysis.Sarif.VersionOne.RegionVersionOne)" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Visitors" File="SarifVersionOneToCurrentVisitor.cs" Line="653">The 'this' parameter (or 'Me' in Visual Basic) of 'SarifVersionOneToCurrentVisitor.CreateRegion(RegionVersionOne)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateRegion(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Visitors" File="SarifVersionOneToCurrentVisitor.cs" Line="697">The 'this' parameter (or 'Me' in Visual Basic) of 'SarifVersionOneToCurrentVisitor.CreateRegion(int, int, int, int, int, int)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateResult(Microsoft.CodeAnalysis.Sarif.VersionOne.ResultVersionOne)" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Visitors" File="SarifVersionOneToCurrentVisitor.cs" Line="717">'SarifVersionOneToCurrentVisitor.CreateResult(ResultVersionOne)' has a cyclomatic complexity of 28. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateRun(Microsoft.CodeAnalysis.Sarif.VersionOne.RunVersionOne)" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif\Visitors" File="SarifVersionOneToCurrentVisitor.cs" Line="953">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'SarifVersionOneToCurrentVisitor.CreateRun(RunVersionOne)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateTool(Microsoft.CodeAnalysis.Sarif.VersionOne.ToolVersionOne)" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Visitors" File="SarifVersionOneToCurrentVisitor.cs" Line="1006">The 'this' parameter (or 'Me' in Visual Basic) of 'SarifVersionOneToCurrentVisitor.CreateTool(ToolVersionOne)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetLogicalLocationName(System.String)" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Visitors" File="SarifVersionOneToCurrentVisitor.cs" Line="496">The 'this' parameter (or 'Me' in Visual Basic) of 'SarifVersionOneToCurrentVisitor.GetLogicalLocationName(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SarifLog" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif\Visitors" File="SarifVersionOneToCurrentVisitor.cs" Line="24">Correct the spelling of 'Sarif' in member name 'SarifVersionOneToCurrentVisitor.SarifLog' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#VisitSarifLogVersionOne(Microsoft.CodeAnalysis.Sarif.VersionOne.SarifLogVersionOne)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif\Visitors" File="SarifVersionOneToCurrentVisitor.cs" Line="27">In member 'SarifVersionOneToCurrentVisitor.VisitSarifLogVersionOne(SarifLogVersionOne)', change parameter name 'v1SarifLog' to 'node' in order to match the identifier as it has been declared in 'SarifRewritingVisitorVersionOne.VisitSarifLogVersionOne(SarifLogVersionOne)'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Visitors" File="SarifVersionOneToCurrentVisitor.cs" Line="32">In externally visible method 'SarifVersionOneToCurrentVisitor.VisitSarifLogVersionOne(SarifLogVersionOne)', validate parameter 'v1SarifLog' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UnknownEncodingException" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="ExceptionsShouldBePublic" Category="Microsoft.Design" CheckId="CA1064" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="Warning">Make exception class 'UnknownEncodingException' public.</Issue>
          </Message>
          <Message TypeName="ImplementStandardExceptionConstructors" Category="Microsoft.Design" CheckId="CA1032" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
           <Issue Name="MissingConstructor" Certainty="95" Level="Error">Add the following constructor to 'UnknownEncodingException': protected UnknownEncodingException(SerializationInfo, StreamingContext).</Issue>
          </Message>
          <Message TypeName="MarkISerializableTypesWithSerializable" Category="Microsoft.Usage" CheckId="CA2237" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="Error">Add [Serializable] to 'UnknownEncodingException' as this type implements ISerializable.</Issue>
          </Message>
         </Messages>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Microsoft.CodeAnalysis.Sarif.Writers">
       <Types>
        <Type Name="MimeType" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Cpp" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Cpp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Cpp' in member name 'MimeType.Cpp' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DetermineFromFileExtension(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="StringUriOverloadsCallSystemUriOverloads" Category="Microsoft.Design" CheckId="CA1057" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif\Writers" File="MimeType.cs" Line="17">Refactor 'MimeType.DetermineFromFileExtension(string)' so that it builds a System.Uri object from 'path', and then calls 'MimeType.DetermineFromFileExtension(Uri)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Sarif" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in member name 'MimeType.Sarif' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ResultLogJsonWriter" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Initialize(Microsoft.CodeAnalysis.Sarif.Run)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="IncorrectParameterName" Certainty="95" Level="CriticalError" Path="E:\src\sarif-sdk-test\src\Sarif\Writers" File="ResultLogJsonWriter.cs" Line="64">Method 'ResultLogJsonWriter.Initialize(Run)' passes 'Tool' as the 'paramName' argument to a 'ArgumentNullException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SarifLogger" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in type name 'SarifLogger'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.IO.TextWriter,Microsoft.CodeAnalysis.Sarif.Writers.LoggingOptions,Microsoft.CodeAnalysis.Sarif.OptionallyEmittedData,Microsoft.CodeAnalysis.Sarif.Tool,Microsoft.CodeAnalysis.Sarif.Run,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif\Writers" File="SarifLogger.cs" Line="124">Replace method 'SarifLogger.SarifLogger(TextWriter, LoggingOptions, OptionallyEmittedData, Tool, Run, IEnumerable&lt;string&gt;, IEnumerable&lt;string&gt;, IEnumerable&lt;string&gt;, string)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String,Microsoft.CodeAnalysis.Sarif.Writers.LoggingOptions,Microsoft.CodeAnalysis.Sarif.OptionallyEmittedData,Microsoft.CodeAnalysis.Sarif.Tool,Microsoft.CodeAnalysis.Sarif.Run,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif\Writers" File="SarifLogger.cs" Line="105">Replace method 'SarifLogger.SarifLogger(string, LoggingOptions, OptionallyEmittedData, Tool, Run, IEnumerable&lt;string&gt;, IEnumerable&lt;string&gt;, IEnumerable&lt;string&gt;, string)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Writers" File="SarifLogger.cs" Line="105">In method 'SarifLogger.SarifLogger(string, LoggingOptions, OptionallyEmittedData, Tool, Run, IEnumerable&lt;string&gt;, IEnumerable&lt;string&gt;, IEnumerable&lt;string&gt;, string)', call System.IDisposable.Dispose on object 'new FileStream(outputFilePath, FileMode.Create, FileAccess.Write, FileShare.None)' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="analysisTargets" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Writers" File="SarifLogger.cs" Line="105">Parameter 'analysisTargets' of 'SarifLogger.SarifLogger(string, LoggingOptions, OptionallyEmittedData, Tool, Run, IEnumerable&lt;string&gt;, IEnumerable&lt;string&gt;, IEnumerable&lt;string&gt;, string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="defaultFileEncoding" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Writers" File="SarifLogger.cs" Line="105">Parameter 'defaultFileEncoding' of 'SarifLogger.SarifLogger(string, LoggingOptions, OptionallyEmittedData, Tool, Run, IEnumerable&lt;string&gt;, IEnumerable&lt;string&gt;, IEnumerable&lt;string&gt;, string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CaptureFilesInResult(Microsoft.CodeAnalysis.Sarif.Result)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif\Writers" File="SarifLogger.cs" Line="289">'SarifLogger.CaptureFilesInResult(Result)' has a cyclomatic complexity of 31. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="$(ProjectDir)/../../../../../../sarif-sdk-test/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll">
   <Modules>
    <Module Name="sarif.driver.dll">
     <Messages>
      <Message TypeName="AttributeStringLiteralsShouldParseCorrectly" Category="Microsoft.Usage" CheckId="CA2243" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
       <Issue Certainty="75" Level="Warning">In the constructor of 'AssemblyInformationalVersionAttribute', change the value of argument 'informationalVersion', which is currently "2.0.0-csd.1.0.1", to something that can be correctly parsed as 'Version'.</Issue>
      </Message>
      <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
       <Issue Name="Assembly" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in assembly name 'Sarif.Driver.dll'.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">Mark 'Sarif.Driver.dll' with CLSCompliant(true) because it exposes externally visible types.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithNeutralResourcesLanguage" Category="Microsoft.Performance" CheckId="CA1824" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Warning">Because assembly 'Sarif.Driver.dll' contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="Microsoft.CodeAnalysis.Sarif.Driver">
       <Types>
        <Type Name="AggregatingLogger" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Name="ProvideDisposeBool" Certainty="95" Level="Error">Provide an overridable implementation of Dispose(bool) on 'AggregatingLogger' or mark the type as sealed. A call to Dispose(false) should only clean up native resources. A call to Dispose(true) should clean up both managed and native resources.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CallGCSuppressFinalizeCorrectly" Category="Microsoft.Usage" CheckId="CA1816" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="NotCalled" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="AggregatingLogger.cs" Line="25">Change 'AggregatingLogger.Dispose()' to call 'GC.SuppressFinalize(object)'. This will prevent derived types that introduce a finalizer from needing to re-implement 'IDisposable' to call it.</Issue>
            </Message>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="DisposeImplementation" Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="AggregatingLogger.cs" Line="25">Modify 'AggregatingLogger.Dispose()' so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Loggers" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="AggregatingLogger.cs" Line="22">Change 'AggregatingLogger.Loggers' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="AnalysisContext" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Name="ProvideDisposeBool" Certainty="95" Level="Error">Provide an overridable implementation of Dispose(bool) on 'AnalysisContext' or mark the type as sealed. A call to Dispose(false) should only clean up native resources. A call to Dispose(true) should clean up both managed and native resources.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CallGCSuppressFinalizeCorrectly" Category="Microsoft.Usage" CheckId="CA1816" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="NotCalled" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="AnalysisContext.cs" Line="27">Change 'AnalysisContext.Dispose()' to call 'GC.SuppressFinalize(object)'. This will prevent derived types that introduce a finalizer from needing to re-implement 'IDisposable' to call it.</Issue>
            </Message>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="DisposeImplementation" Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="AnalysisContext.cs" Line="27">Modify 'AnalysisContext.Dispose()' so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Policy" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="AnalysisContext.cs" Line="19">Change 'AnalysisContext.Policy' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="AnalyzeCommandBase`2" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AnalyzeTarget(System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.Driver.ISkimmer`1&lt;!0&gt;&gt;,!0,System.Collections.Generic.HashSet`1&lt;System.String&gt;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="AnalyzeCommandBase.cs" Line="554">Modify 'AnalyzeCommandBase&lt;TContext, TOptions&gt;.AnalyzeTarget(IEnumerable&lt;ISkimmer&lt;TContext&gt;&gt;, TContext, HashSet&lt;string&gt;)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="AnalyzeCommandBase.cs" Line="543">Consider a design where 'AnalyzeCommandBase&lt;TContext, TOptions&gt;.AnalyzeTarget(IEnumerable&lt;ISkimmer&lt;TContext&gt;&gt;, TContext, HashSet&lt;string&gt;)' doesn't nest generic type 'IEnumerable&lt;ISkimmer&lt;TContext&gt;&gt;'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="AnalyzeCommandBase.cs" Line="544">In externally visible method 'AnalyzeCommandBase&lt;TContext, TOptions&gt;.AnalyzeTarget(IEnumerable&lt;ISkimmer&lt;TContext&gt;&gt;, TContext, HashSet&lt;string&gt;)', validate parameter 'skimmers' before using it.</Issue>
            </Message>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="AnalyzeCommandBase.cs" Line="546">In externally visible method 'AnalyzeCommandBase&lt;TContext, TOptions&gt;.AnalyzeTarget(IEnumerable&lt;ISkimmer&lt;TContext&gt;&gt;, TContext, HashSet&lt;string&gt;)', validate parameter 'disabledSkimmers' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AnalyzeTargets(!1,System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.Driver.ISkimmer`1&lt;!0&gt;&gt;,!0,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="AnalyzeCommandBase.cs" Line="476">Consider a design where 'AnalyzeCommandBase&lt;TContext, TOptions&gt;.AnalyzeTargets(TOptions, IEnumerable&lt;ISkimmer&lt;TContext&gt;&gt;, TContext, IEnumerable&lt;string&gt;)' doesn't nest generic type 'IEnumerable&lt;ISkimmer&lt;TContext&gt;&gt;'.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="AnalyzeCommandBase.cs" Line="479">In externally visible method 'AnalyzeCommandBase&lt;TContext, TOptions&gt;.AnalyzeTargets(TOptions, IEnumerable&lt;ISkimmer&lt;TContext&gt;&gt;, TContext, IEnumerable&lt;string&gt;)', validate parameter 'skimmers' before using it.</Issue>
            </Message>
            <Message Id="3" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="AnalyzeCommandBase.cs" Line="500">In externally visible method 'AnalyzeCommandBase&lt;TContext, TOptions&gt;.AnalyzeTargets(TOptions, IEnumerable&lt;ISkimmer&lt;TContext&gt;&gt;, TContext, IEnumerable&lt;string&gt;)', validate parameter 'targets' before using it.</Issue>
            </Message>
            <Message Id="rootContext" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="AnalyzeCommandBase.cs" Line="476">'rootContext', a parameter declared in 'AnalyzeCommandBase&lt;TContext, TOptions&gt;.AnalyzeTargets(TOptions, IEnumerable&lt;ISkimmer&lt;TContext&gt;&gt;, TContext, IEnumerable&lt;string&gt;)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateContext(!1,Microsoft.CodeAnalysis.Sarif.IAnalysisLogger,Microsoft.CodeAnalysis.Sarif.RuntimeConditions,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="AnalyzeCommandBase.cs" Line="267">Replace method 'AnalyzeCommandBase&lt;TContext, TOptions&gt;.CreateContext(TOptions, IAnalysisLogger, RuntimeConditions, string)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateSkimmers(!0)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="AnalyzeCommandBase.cs" Line="432">Modify 'AnalyzeCommandBase&lt;TContext, TOptions&gt;.CreateSkimmers(TContext)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DefaultPolicyName" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Remove 'AnalyzeCommandBase&lt;TContext, TOptions&gt;.DefaultPolicyName' from 'AnalyzeCommandBase&lt;TContext, TOptions&gt;' or make it an instance member.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DetermineApplicabilityAndAnalyze(!1,System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.Driver.ISkimmer`1&lt;!0&gt;&gt;,!0,System.String,System.Collections.Generic.HashSet`1&lt;System.String&gt;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="AnalyzeCommandBase.cs" Line="515">Consider a design where 'AnalyzeCommandBase&lt;TContext, TOptions&gt;.DetermineApplicabilityAndAnalyze(TOptions, IEnumerable&lt;ISkimmer&lt;TContext&gt;&gt;, TContext, string, HashSet&lt;string&gt;)' doesn't nest generic type 'IEnumerable&lt;ISkimmer&lt;TContext&gt;&gt;'.</Issue>
            </Message>
            <Message Id="rootContext" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="AnalyzeCommandBase.cs" Line="515">'rootContext', a parameter declared in 'AnalyzeCommandBase&lt;TContext, TOptions&gt;.DetermineApplicabilityAndAnalyze(TOptions, IEnumerable&lt;ISkimmer&lt;TContext&gt;&gt;, TContext, string, HashSet&lt;string&gt;)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DetermineApplicabilityForTarget(System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.Driver.ISkimmer`1&lt;!0&gt;&gt;,!0,System.Collections.Generic.HashSet`1&lt;System.String&gt;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="AnalyzeCommandBase.cs" Line="581">Modify 'AnalyzeCommandBase&lt;TContext, TOptions&gt;.DetermineApplicabilityForTarget(IEnumerable&lt;ISkimmer&lt;TContext&gt;&gt;, TContext, HashSet&lt;string&gt;)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="AnalyzeCommandBase.cs" Line="565">Consider a design where 'AnalyzeCommandBase&lt;TContext, TOptions&gt;.DetermineApplicabilityForTarget(IEnumerable&lt;ISkimmer&lt;TContext&gt;&gt;, TContext, HashSet&lt;string&gt;)' doesn't nest generic type 'IEnumerable&lt;ISkimmer&lt;TContext&gt;&gt;'.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="AnalyzeCommandBase.cs" Line="565">Consider a design where 'AnalyzeCommandBase&lt;TContext, TOptions&gt;.DetermineApplicabilityForTarget(IEnumerable&lt;ISkimmer&lt;TContext&gt;&gt;, TContext, HashSet&lt;string&gt;)' doesn't nest generic type 'IEnumerable&lt;ISkimmer&lt;TContext&gt;&gt;'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="AnalyzeCommandBase.cs" Line="568">In externally visible method 'AnalyzeCommandBase&lt;TContext, TOptions&gt;.DetermineApplicabilityForTarget(IEnumerable&lt;ISkimmer&lt;TContext&gt;&gt;, TContext, HashSet&lt;string&gt;)', validate parameter 'skimmers' before using it.</Issue>
            </Message>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="AnalyzeCommandBase.cs" Line="570">In externally visible method 'AnalyzeCommandBase&lt;TContext, TOptions&gt;.DetermineApplicabilityForTarget(IEnumerable&lt;ISkimmer&lt;TContext&gt;&gt;, TContext, HashSet&lt;string&gt;)', validate parameter 'disabledSkimmers' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GenerateSensitiveTokensList()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="AnalyzeCommandBase.cs" Line="378">The 'this' parameter (or 'Me' in Visual Basic) of 'AnalyzeCommandBase&lt;TContext, TOptions&gt;.GenerateSensitiveTokensList()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetCurrentRunningOS()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="AnalyzeCommandBase.cs" Line="447">The 'this' parameter (or 'Me' in Visual Basic) of 'AnalyzeCommandBase&lt;TContext, TOptions&gt;.GetCurrentRunningOS()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeLogger(Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeOptionsBase)" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="AnalyzeCommandBase.cs" Line="213">In method 'AnalyzeCommandBase&lt;TContext, TOptions&gt;.InitializeLogger(AnalyzeOptionsBase)', object 'logger' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'logger' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="AnalyzeCommandBase.cs" Line="212">The 'this' parameter (or 'Me' in Visual Basic) of 'AnalyzeCommandBase&lt;TContext, TOptions&gt;.InitializeLogger(AnalyzeOptionsBase)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeOutputFile(!1,!0,System.Collections.Generic.HashSet`1&lt;System.String&gt;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="AnalyzeCommandBase.cs" Line="356">In method 'AnalyzeCommandBase&lt;TContext, TOptions&gt;.InitializeOutputFile(TOptions, TContext, HashSet&lt;string&gt;)', object 'sarifLogger' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'sarifLogger' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeSkimmers(System.Collections.Generic.HashSet`1&lt;Microsoft.CodeAnalysis.Sarif.Driver.ISkimmer`1&lt;!0&gt;&gt;,!0)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="AnalyzeCommandBase.cs" Line="632">Modify 'AnalyzeCommandBase&lt;TContext, TOptions&gt;.InitializeSkimmers(HashSet&lt;ISkimmer&lt;TContext&gt;&gt;, TContext)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="AnalyzeCommandBase.cs" Line="620">Consider a design where 'AnalyzeCommandBase&lt;TContext, TOptions&gt;.InitializeSkimmers(HashSet&lt;ISkimmer&lt;TContext&gt;&gt;, TContext)' doesn't nest generic type 'HashSet&lt;ISkimmer&lt;TContext&gt;&gt;'.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="AnalyzeCommandBase.cs" Line="620">Consider a design where 'AnalyzeCommandBase&lt;TContext, TOptions&gt;.InitializeSkimmers(HashSet&lt;ISkimmer&lt;TContext&gt;&gt;, TContext)' doesn't nest generic type 'HashSet&lt;ISkimmer&lt;TContext&gt;&gt;'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="AnalyzeCommandBase.cs" Line="625">In externally visible method 'AnalyzeCommandBase&lt;TContext, TOptions&gt;.InitializeSkimmers(HashSet&lt;ISkimmer&lt;TContext&gt;&gt;, TContext)', validate parameter 'skimmers' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InvokeCatchingRelevantIOExceptions(System.Action,System.Action`1&lt;System.Exception&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="AnalyzeCommandBase.cs" Line="398">In externally visible method 'AnalyzeCommandBase&lt;TContext, TOptions&gt;.InvokeCatchingRelevantIOExceptions(Action, Action&lt;Exception&gt;)', validate parameter 'action' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="AnalyzeCommandBase.cs" Line="402">In externally visible method 'AnalyzeCommandBase&lt;TContext, TOptions&gt;.InvokeCatchingRelevantIOExceptions(Action, Action&lt;Exception&gt;)', validate parameter 'exceptionHandler' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LogToolNotification(Microsoft.CodeAnalysis.Sarif.IAnalysisLogger,System.String,Microsoft.CodeAnalysis.Sarif.FailureLevel,System.Exception)" Kind="Method" Static="True" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="AnalyzeCommandBase.cs" Line="653">Replace method 'AnalyzeCommandBase&lt;TContext, TOptions&gt;.LogToolNotification(IAnalysisLogger, string, FailureLevel, Exception)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="AnalyzeCommandBase.cs" Line="668">In externally visible method 'AnalyzeCommandBase&lt;TContext, TOptions&gt;.LogToolNotification(IAnalysisLogger, string, FailureLevel, Exception)', validate parameter 'logger' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RaiseUnhandledExceptionInDriverCode" Kind="Property" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="AnalyzeCommandBase.cs" Line="29">Remove 'AnalyzeCommandBase&lt;TContext, TOptions&gt;.RaiseUnhandledExceptionInDriverCode' from 'AnalyzeCommandBase&lt;TContext, TOptions&gt;' or make it an instance member.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Run(!1)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="AnalyzeCommandBase.cs" Line="58">Modify 'AnalyzeCommandBase&lt;TContext, TOptions&gt;.Run(TOptions)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="AnalyzeCommandBase.cs" Line="43">In member 'AnalyzeCommandBase&lt;TContext, TOptions&gt;.Run(TOptions)', change parameter name 'analyzeOptions' to 'options' in order to match the identifier as it has been declared in 'DriverCommand&lt;TOptions&gt;.Run(TOptions)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ThrowExitApplicationException(!0,Microsoft.CodeAnalysis.Sarif.Driver.ExitReason,System.Exception)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="AnalyzeCommandBase.cs" Line="610">Replace method 'AnalyzeCommandBase&lt;TContext, TOptions&gt;.ThrowExitApplicationException(TContext, ExitReason, Exception)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ValidateFile(!0,System.String,System.Nullable`1&lt;System.Boolean&gt;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="AnalyzeCommandBase.cs" Line="160">The 'this' parameter (or 'Me' in Visual Basic) of 'AnalyzeCommandBase&lt;TContext, TOptions&gt;.ValidateFile(TContext, string, bool?)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ArgumentSplitter" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CommandLineToArgvW(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Driver" File="ArgumentSplitter.cs" Line="26">Change 'List&lt;string&gt;' in 'ArgumentSplitter.CommandLineToArgvW(string)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message Id="Argv" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif.Driver" File="ArgumentSplitter.cs" Line="26">Correct the spelling of 'Argv' in member name 'ArgumentSplitter.CommandLineToArgvW(string)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DefaultDriverOptions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CreateRuleSpecificOption`1(Microsoft.CodeAnalysis.Sarif.IRule,Microsoft.CodeAnalysis.Sarif.PerLanguageOption`1&lt;!!0&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="DefaultDriverOptions.cs" Line="39">In externally visible method 'DefaultDriverOptions.CreateRuleSpecificOption&lt;T&gt;(IRule, PerLanguageOption&lt;T&gt;)', validate parameter 'rule' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="DefaultDriverOptions.cs" Line="39">In externally visible method 'DefaultDriverOptions.CreateRuleSpecificOption&lt;T&gt;(IRule, PerLanguageOption&lt;T&gt;)', validate parameter 'option' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Instance" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'DefaultDriverOptions.Instance' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DisposableEnumerable`1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="ExcludedInSource" Created="2018-08-23 13:07:11Z" FixCategory="Breaking" LastSeen="0001-01-01 00:00:00Z" />
         </Messages>
        </Type>
        <Type Name="DriverCommand`1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#FAILURE" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Remove 'DriverCommand&lt;T&gt;.FAILURE' from 'DriverCommand&lt;T&gt;' or make it an instance member.</Issue>
            </Message>
            <Message Id="FAILURE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'FAILURE' in member name 'DriverCommand&lt;T&gt;.FAILURE' by changing it to 'Failure'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SUCCESS" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error">Remove 'DriverCommand&lt;T&gt;.SUCCESS' from 'DriverCommand&lt;T&gt;' or make it an instance member.</Issue>
            </Message>
            <Message Id="SUCCESS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'SUCCESS' in member name 'DriverCommand&lt;T&gt;.SUCCESS' by changing it to 'Success'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DriverExtensionMethods" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ConvertToLoggingOptions(Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeOptionsBase)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Driver" File="DriverExtensionMethods.cs" Line="14">In externally visible method 'DriverExtensionMethods.ConvertToLoggingOptions(this AnalyzeOptionsBase)', validate parameter 'analyzeOptions' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DriverResources" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#.ctor()" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="ExcludedInSource" Created="2018-08-23 13:07:11Z" FixCategory="NonBreaking" LastSeen="0001-01-01 00:00:00Z" />
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DriverUtilities" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#GetExports`1(System.Collections.Generic.IEnumerable`1&lt;System.Reflection.Assembly&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="CompositionUtilities.cs" Line="16">In method 'DriverUtilities.GetExports&lt;T&gt;(IEnumerable&lt;Assembly&gt;)', call System.IDisposable.Dispose on object 'container' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="EntryPointUtilities" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CommandLineToArgvW(System.String,System.Int32&amp;)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'EntryPointUtilities.CommandLineToArgvW(string, out int)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GenerateArguments(System.String[],Microsoft.CodeAnalysis.Sarif.IFileSystem,Microsoft.CodeAnalysis.Sarif.Driver.IEnvironmentVariables)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="EntryPointUtilities.cs" Line="19">In externally visible method 'EntryPointUtilities.GenerateArguments(string[], IFileSystem, IEnvironmentVariables)', validate parameter 'args' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="EntryPointUtilities.cs" Line="31">In externally visible method 'EntryPointUtilities.GenerateArguments(string[], IFileSystem, IEnvironmentVariables)', validate parameter 'fileSystem' before using it.</Issue>
            </Message>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="EntryPointUtilities.cs" Line="30">In externally visible method 'EntryPointUtilities.GenerateArguments(string[], IFileSystem, IEnvironmentVariables)', validate parameter 'environmentVariables' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LocalFree(System.IntPtr)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'EntryPointUtilities.LocalFree(IntPtr)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="EnumerableExtensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#LexicographicalCompare`1(System.Collections.Generic.IEnumerable`1&lt;!!0&gt;,System.Collections.Generic.IEnumerable`1&lt;!!0&gt;,System.Collections.Generic.IComparer`1&lt;!!0&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="ExcludedInSource" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix" LastSeen="0001-01-01 00:00:00Z" />
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="ExcludedInSource" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix" LastSeen="0001-01-01 00:00:00Z" />
           </Messages>
          </Member>
          <Member Name="#RemoveIf`1(!!0[]&amp;,System.Func`2&lt;!!0,System.Boolean&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="ExcludedInSource" Created="2018-08-23 13:07:11Z" FixCategory="Breaking" LastSeen="0001-01-01 00:00:00Z" />
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="ExcludedInSource" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix" LastSeen="0001-01-01 00:00:00Z" />
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ExceptionStrings" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#.ctor()" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="ExcludedInSource" Created="2018-08-23 13:07:11Z" FixCategory="NonBreaking" LastSeen="0001-01-01 00:00:00Z" />
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ExitApplicationException`1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementStandardExceptionConstructors" Category="Microsoft.Design" CheckId="CA1032" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
           <Issue Name="MissingConstructor" Certainty="95" Level="Error">Add the following constructor to 'ExitApplicationException&lt;T&gt;': protected ExitApplicationException`1(SerializationInfo, StreamingContext).</Issue>
          </Message>
          <Message TypeName="MarkISerializableTypesWithSerializable" Category="Microsoft.Usage" CheckId="CA2237" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="Error">Add [Serializable] to 'ExitApplicationException&lt;T&gt;' as this type implements ISerializable.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="ExportConfigurationCommandBase" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Run(Microsoft.CodeAnalysis.Sarif.Driver.ExportConfigurationOptions)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Console.WriteLine(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="ExportConfigurationCommandBase.cs" Line="78">Method 'ExportConfigurationCommandBase.Run(ExportConfigurationOptions)' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "Configuration file saved to: ".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="ExportConfigurationCommandBase.cs" Line="82">Modify 'ExportConfigurationCommandBase.Run(ExportConfigurationOptions)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="ExportConfigurationCommandBase.cs" Line="14">In member 'ExportConfigurationCommandBase.Run(ExportConfigurationOptions)', change parameter name 'exportOptions' to 'options' in order to match the identifier as it has been declared in 'DriverCommand&lt;ExportConfigurationOptions&gt;.Run(ExportConfigurationOptions)'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="ExportConfigurationCommandBase.cs" Line="59">In externally visible method 'ExportConfigurationCommandBase.Run(ExportConfigurationOptions)', validate parameter 'exportOptions' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ExportRulesMetadataCommandBase" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetIdIntegerSuffix(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="ExportRulesMetadataCommandBase.cs" Line="166">The 'this' parameter (or 'Me' in Visual Basic) of 'ExportRulesMetadataCommandBase.GetIdIntegerSuffix(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="ExportRulesMetadataCommandBase.cs" Line="178">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'ExportRulesMetadataCommandBase.GetIdIntegerSuffix(string)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OutputSarifRulesMetada(System.String,System.Collections.Immutable.ImmutableArray`1&lt;Microsoft.CodeAnalysis.Sarif.IRule&gt;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveClassCoupling" Category="Microsoft.Maintainability" CheckId="CA1506" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Method" Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="ExportRulesMetadataCommandBase.cs" Line="103">'ExportRulesMetadataCommandBase.OutputSarifRulesMetada(string, ImmutableArray&lt;IRule&gt;)' is coupled with 31 different types from 10 different namespaces. Rewrite or refactor the method to decrease its class coupling, or consider moving the method to one of the other types it is tightly coupled with. A class coupling above 40 indicates poor maintainability, a class coupling between 40 and 30 indicates moderate maintainability, and a class coupling below 30 indicates good maintainability.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Run(Microsoft.CodeAnalysis.Sarif.Driver.ExportRulesMetadataOptions)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Console.WriteLine(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="ExportRulesMetadataCommandBase.cs" Line="54">Method 'ExportRulesMetadataCommandBase.Run(ExportRulesMetadataOptions)' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "SARIF, SonarQube,  rules metadata exported to: ".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="ExportRulesMetadataCommandBase.cs" Line="56">Modify 'ExportRulesMetadataCommandBase.Run(ExportRulesMetadataOptions)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="SonarQube" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="ExportRulesMetadataCommandBase.cs" Line="54">Correct the spelling of the unrecognized token 'SonarQube' in the literal '"SonarQube"'.</Issue>
            </Message>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="ExportRulesMetadataCommandBase.cs" Line="19">In member 'ExportRulesMetadataCommandBase.Run(ExportRulesMetadataOptions)', change parameter name 'exportOptions' to 'options' in order to match the identifier as it has been declared in 'DriverCommand&lt;ExportRulesMetadataOptions&gt;.Run(ExportRulesMetadataOptions)'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="ExportRulesMetadataCommandBase.cs" Line="27">In externally visible method 'ExportRulesMetadataCommandBase.Run(ExportRulesMetadataOptions)', validate parameter 'exportOptions' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="FileSpecifier" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.String,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Driver" File="FileSpecifier.cs" Line="12">Replace method 'FileSpecifier.FileSpecifier(string, bool)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ISkimmer`1" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CanAnalyze(!0,System.String&amp;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Consider a design that does not require that 'reasonIfNotApplicable' be an out parameter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MurmurHash" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AddRange(System.Collections.Generic.IEnumerable`1&lt;System.Int32&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="ExcludedInSource" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix" LastSeen="0001-01-01 00:00:00Z" />
           </Messages>
          </Member>
          <Member Name="#AddRange(System.Collections.IEnumerable)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="ExcludedInSource" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix" LastSeen="0001-01-01 00:00:00Z" />
           </Messages>
          </Member>
          <Member Name="#AddRange(System.Int32[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="ExcludedInSource" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix" LastSeen="0001-01-01 00:00:00Z" />
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PlugInDriverCommand`1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="PlugIn" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Name="TypeShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'PlugIn' in type name 'PlugInDriverCommand&lt;T&gt;' exists as a discrete term. If your usage is intended to be single word, case it as 'Plugin'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#DefaultPlugInAssemblies" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="PlugIn" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="PlugInDriverCommand.cs" Line="14">The compound word 'PlugIn' in member name 'PlugInDriverCommand&lt;T&gt;.DefaultPlugInAssemblies' exists as a discrete term. If your usage is intended to be single word, case it as 'Plugin' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ReferenceEqualityComparer`1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Instance" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="ExcludedInSource" Created="2018-08-23 13:07:11Z" FixCategory="NonBreaking" LastSeen="0001-01-01 00:00:00Z" />
            <Message TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000" Status="ExcludedInSource" Created="2018-08-23 13:07:11Z" FixCategory="Breaking" LastSeen="0001-01-01 00:00:00Z" />
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RentalStream" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Dispose(System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose methods should call base class dispose" Category="Microsoft.Usage" CheckId="CA2215" Status="ExcludedInSource" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix" LastSeen="0001-01-01 00:00:00Z" />
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RuleEnabledState" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="EnumsShouldHaveZeroValue" Category="Microsoft.Design" CheckId="CA1008" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Name="FlagsRename" Certainty="95" Level="CriticalError">In enum 'RuleEnabledState', change the name of 'RuleEnabledState.Default' to 'None'.</Issue>
          </Message>
          <Message TypeName="FlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1714" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Error">If enumeration name 'RuleEnabledState' is singular, change it to a plural form.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="SkimmerBase`1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AbstractTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1012" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="CriticalWarning">Change the accessibility of all public constructors in 'SkimmerBase&lt;TContext&gt;' to protected.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="StatisticsLogger" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AnalysisStopped(Microsoft.CodeAnalysis.Sarif.RuntimeConditions)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Console.WriteLine(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="StatisticsLogger.cs" Line="28">Method 'StatisticsLogger.AnalysisStopped(RuntimeConditions)' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "# invalid targets: ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="StatisticsLogger.cs" Line="27">Method 'StatisticsLogger.AnalysisStopped(RuntimeConditions)' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "# valid targets: ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="StatisticsLogger.cs" Line="29">Method 'StatisticsLogger.AnalysisStopped(RuntimeConditions)' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: "Time elapsed: ".</Issue>
            </Message>
            <Message Id="System.Int64.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="StatisticsLogger.cs" Line="27">Because the behavior of 'long.ToString()' could vary based on the current user's locale settings, replace this call in 'StatisticsLogger.AnalysisStopped(RuntimeConditions)' with a call to 'long.ToString(IFormatProvider)'. If the result of 'long.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="StatisticsLogger.cs" Line="28">Because the behavior of 'long.ToString()' could vary based on the current user's locale settings, replace this call in 'StatisticsLogger.AnalysisStopped(RuntimeConditions)' with a call to 'long.ToString(IFormatProvider)'. If the result of 'long.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="StatisticsLogger.cs" Line="80">The 'this' parameter (or 'Me' in Visual Basic) of 'StatisticsLogger.Dispose()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Log(Microsoft.CodeAnalysis.Sarif.IRule,Microsoft.CodeAnalysis.Sarif.Result)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="StatisticsLogger.cs" Line="39">In externally visible method 'StatisticsLogger.Log(IRule, Result)', validate parameter 'result' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Log(Microsoft.CodeAnalysis.Sarif.ResultLevel,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="StatisticsLogger.cs" Line="59">The 'this' parameter (or 'Me' in Visual Basic) of 'StatisticsLogger.Log(ResultLevel, string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="ruleId" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="StatisticsLogger.cs" Line="59">Parameter 'ruleId' of 'StatisticsLogger.Log(ResultLevel, string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LogConfigurationNotification(Microsoft.CodeAnalysis.Sarif.Notification)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Driver\Sdk" File="StatisticsLogger.cs" Line="48">In externally visible method 'StatisticsLogger.LogConfigurationNotification(Notification)', validate parameter 'notification' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TempFile" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="ExcludedInSource" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix" LastSeen="0001-01-01 00:00:00Z" />
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="XmlWriterExtensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#WriteElementInt(System.Xml.XmlWriter,System.String,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="ExcludedInSource" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix" LastSeen="0001-01-01 00:00:00Z" />
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Microsoft.CodeAnalysisDriver">
       <Types>
        <Type Name="FileStreamExtensionMethods" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ReadString(System.IO.FileStream,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="byteRead" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Driver" File="FileStreamExtensionMethods.cs" Line="18">'FileStreamExtensionMethods.ReadString(this FileStream, int)' declares a variable, 'byteRead', of type 'int', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Driver" File="FileStreamExtensionMethods.cs" Line="13">In externally visible method 'FileStreamExtensionMethods.ReadString(this FileStream, int)', validate parameter 'stream' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReadToArray(System.IO.FileStream,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Driver" File="FileStreamExtensionMethods.cs" Line="51">Consider changing the type of parameter 'stream' in 'FileStreamExtensionMethods.ReadToArray(this FileStream, int)' from 'FileStream' to its base type 'Stream'. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Driver" File="FileStreamExtensionMethods.cs" Line="53">In externally visible method 'FileStreamExtensionMethods.ReadToArray(this FileStream, int)', validate parameter 'stream' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="$(ProjectDir)/../../../../../../sarif-sdk-test/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe">
   <Modules>
    <Module Name="sarif.multitool.exe">
     <Messages>
      <Message TypeName="AttributeStringLiteralsShouldParseCorrectly" Category="Microsoft.Usage" CheckId="CA2243" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
       <Issue Certainty="75" Level="Warning">In the constructor of 'AssemblyInformationalVersionAttribute', change the value of argument 'informationalVersion', which is currently "2.0.0-csd.1.0.1", to something that can be correctly parsed as 'Version'.</Issue>
      </Message>
      <Message Id="Multitool" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
       <Issue Name="Assembly" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Multitool' in assembly name 'Sarif.Multitool.exe'.</Issue>
      </Message>
      <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
       <Issue Name="Assembly" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in assembly name 'Sarif.Multitool.exe'.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">Mark 'Sarif.Multitool.exe' with CLSCompliant(true) because it exposes externally visible types.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithNeutralResourcesLanguage" Category="Microsoft.Performance" CheckId="CA1824" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Warning">Because assembly 'Sarif.Multitool.exe' contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="Microsoft.CodeAnalysis.Sarif">
       <Types>
        <Type Name="MultitoolResources" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#.ctor()" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="ExcludedInSource" Created="2018-08-23 13:07:11Z" FixCategory="NonBreaking" LastSeen="0001-01-01 00:00:00Z" />
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Microsoft.CodeAnalysis.Sarif.Multitool">
       <Types>
        <Type Name="AbsoluteUriCommand" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#Run(Microsoft.CodeAnalysis.Sarif.Multitool.AbsoluteUriOptions)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="E:\src\sarif-sdk-test\src\Sarif.Multitool" File="AbsoluteUriCommand.cs" Line="34">Modify 'AbsoluteUriCommand.Run(AbsoluteUriOptions)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="BaselineCommand" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#Run(Microsoft.CodeAnalysis.Sarif.Multitool.BaselineOptions)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="E:\src\sarif-sdk-test\src\Sarif.Multitool" File="BaselineCommand.cs" Line="39">Modify 'BaselineCommand.Run(BaselineOptions)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ConvertCommand" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#Run(Microsoft.CodeAnalysis.Sarif.Multitool.ConvertOptions)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="E:\src\sarif-sdk-test\src\Sarif.Multitool" File="ConvertCommand.cs" Line="43">Modify 'ConvertCommand.Run(ConvertOptions)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="JTokenExtensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#HasProperty(Newtonsoft.Json.Linq.JToken,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Multitool" File="JTokenExtensions.cs" Line="14">In externally visible method 'JTokenExtensions.HasProperty(this JToken, string)', validate parameter 'token' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MergeCommand" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#Run(Microsoft.CodeAnalysis.Sarif.Multitool.MergeOptions)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="E:\src\sarif-sdk-test\src\Sarif.Multitool" File="MergeCommand.cs" Line="45">Modify 'MergeCommand.Run(MergeOptions)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MultitoolOptionsBase" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Multitool" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Multitool' in type name 'MultitoolOptionsBase'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="RebaseUriCommand" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#Run(Microsoft.CodeAnalysis.Sarif.Multitool.RebaseUriOptions)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="E:\src\sarif-sdk-test\src\Sarif.Multitool" File="RebaseUriCommand.cs" Line="46">Modify 'RebaseUriCommand.Run(RebaseUriOptions)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Multitool" File="RebaseUriCommand.cs" Line="21">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'RebaseUriCommand.Run(RebaseUriOptions)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RewriteCommand" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#Run(Microsoft.CodeAnalysis.Sarif.Multitool.RewriteOptions)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="E:\src\sarif-sdk-test\src\Sarif.Multitool" File="RewriteCommand.cs" Line="33">Modify 'RewriteCommand.Run(RewriteOptions)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SarifPropertyName" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in type name 'SarifPropertyName'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Stderr" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Stderr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Stderr' in member name 'SarifPropertyName.Stderr' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Stdin" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Stdin" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Stdin' in member name 'SarifPropertyName.Stdin' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Stdout" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Stdout" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Stdout' in member name 'SarifPropertyName.Stdout' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StdoutStderr" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Stderr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Stderr' in member name 'SarifPropertyName.StdoutStderr' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Stdout" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Stdout' in member name 'SarifPropertyName.StdoutStderr' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SarifValidationContext" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in type name 'SarifValidationContext'.</Issue>
          </Message>
          <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Name="ProvideDisposeBool" Certainty="95" Level="Error">Provide an overridable implementation of Dispose(bool) on 'SarifValidationContext' or mark the type as sealed. A call to Dispose(false) should only clean up native resources. A call to Dispose(true) should clean up both managed and native resources.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CallGCSuppressFinalizeCorrectly" Category="Microsoft.Usage" CheckId="CA1816" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Name="NotCalled" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif.Multitool" File="SarifValidationContext.cs" Line="65">Change 'SarifValidationContext.Dispose()' to call 'GC.SuppressFinalize(object)'. This will prevent derived types that introduce a finalizer from needing to re-implement 'IDisposable' to call it.</Issue>
            </Message>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="DisposeImplementation" Certainty="95" Level="Error" Path="E:\src\sarif-sdk-test\src\Sarif.Multitool" File="SarifValidationContext.cs" Line="65">Modify 'SarifValidationContext.Dispose()' so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Policy" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Multitool" File="SarifValidationContext.cs" Line="28">Change 'SarifValidationContext.Policy' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TransformCommand" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#Run(Microsoft.CodeAnalysis.Sarif.Multitool.TransformOptions)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="E:\src\sarif-sdk-test\src\Sarif.Multitool" File="TransformCommand.cs" Line="52">Modify 'TransformCommand.Run(TransformOptions)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="dataToInsert" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Multitool" File="TransformCommand.cs" Line="24">'TransformCommand.Run(TransformOptions)' declares a variable, 'dataToInsert', of type 'OptionallyEmittedData', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ValidateCommand" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#AnalyzeTarget(System.Collections.Generic.IEnumerable`1&lt;Microsoft.CodeAnalysis.Sarif.Driver.ISkimmer`1&lt;Microsoft.CodeAnalysis.Sarif.Multitool.SarifValidationContext&gt;&gt;,Microsoft.CodeAnalysis.Sarif.Multitool.SarifValidationContext,System.Collections.Generic.HashSet`1&lt;System.String&gt;)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Multitool" File="ValidateCommand.cs" Line="55">In externally visible method 'ValidateCommand.AnalyzeTarget(IEnumerable&lt;ISkimmer&lt;SarifValidationContext&gt;&gt;, SarifValidationContext, HashSet&lt;string&gt;)', validate parameter 'context' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateContext(Microsoft.CodeAnalysis.Sarif.Multitool.ValidateOptions,Microsoft.CodeAnalysis.Sarif.IAnalysisLogger,Microsoft.CodeAnalysis.Sarif.RuntimeConditions,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Multitool" File="ValidateCommand.cs" Line="40">In externally visible method 'ValidateCommand.CreateContext(ValidateOptions, IAnalysisLogger, RuntimeConditions, string)', validate parameter 'options' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Validate(System.String,System.String,Microsoft.CodeAnalysis.Sarif.IAnalysisLogger)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Multitool" File="ValidateCommand.cs" Line="95">The 'this' parameter (or 'Me' in Visual Basic) of 'ValidateCommand.Validate(string, string, IAnalysisLogger)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ValidatorResources" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#.ctor()" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="ExcludedInSource" Created="2018-08-23 13:07:11Z" FixCategory="NonBreaking" LastSeen="0001-01-01 00:00:00Z" />
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Microsoft.CodeAnalysis.Sarif.Multitool.Rules">
       <Types>
        <Type Name="DoNotUseFriendlyNameAsRuleId" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Analyze(Microsoft.CodeAnalysis.Sarif.Rule,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Multitool\Rules" File="DoNotUseFriendlyNameAsRuleId.cs" Line="38">In externally visible method 'DoNotUseFriendlyNameAsRuleId.Analyze(Rule, string)', validate parameter 'rule' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="EndColumnMustNotBeLessThanStartColumn" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Analyze(Microsoft.CodeAnalysis.Sarif.Region,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Multitool\Rules" File="EndColumnMustNotBeLessThanStartColumn.cs" Line="42">In externally visible method 'EndColumnMustNotBeLessThanStartColumn.Analyze(Region, string)', validate parameter 'region' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="EndLineMustNotBeLessThanStartLine" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Analyze(Microsoft.CodeAnalysis.Sarif.Region,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Multitool\Rules" File="EndLineMustNotBeLessThanStartLine.cs" Line="41">In externally visible method 'EndLineMustNotBeLessThanStartLine.Analyze(Region, string)', validate parameter 'region' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="EndTimeMustBeAfterStartTime" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Analyze(Microsoft.CodeAnalysis.Sarif.Invocation,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Multitool\Rules" File="EndTimeMustBeAfterStartTime.cs" Line="40">In externally visible method 'EndTimeMustBeAfterStartTime.Analyze(Invocation, string)', validate parameter 'invocation' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="HashAlgorithmsMustBeUnique" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Analyze(Microsoft.CodeAnalysis.Sarif.FileData,System.String,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Multitool\Rules" File="HashAlgorithmsMustBeUnique.cs" Line="39">In externally visible method 'HashAlgorithmsMustBeUnique.Analyze(FileData, string, string)', validate parameter 'fileData' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MessagesShouldEndWithPeriod" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Analyze(Microsoft.CodeAnalysis.Sarif.Message,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Multitool\Rules" File="MessagesShouldEndWithPeriod.cs" Line="70">In externally visible method 'MessagesShouldEndWithPeriod.Analyze(Message, string)', validate parameter 'message' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Analyze(Microsoft.CodeAnalysis.Sarif.Rule,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Multitool\Rules" File="MessagesShouldEndWithPeriod.cs" Line="39">In externally visible method 'MessagesShouldEndWithPeriod.Analyze(Rule, string)', validate parameter 'rule' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RuleResources" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#.ctor()" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="ExcludedInSource" Created="2018-08-23 13:07:11Z" FixCategory="NonBreaking" LastSeen="0001-01-01 00:00:00Z" />
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SarifValidationSkimmerBase" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Sarif" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sarif' in type name 'SarifValidationSkimmerBase'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#LogResult(System.String,System.String,System.String[])" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="j" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\src\sarif-sdk-test\src\Sarif.Multitool\Rules" File="SarifValidationSkimmerBase.cs" Line="48">In method 'SarifValidationSkimmerBase.LogResult(string, string, params string[])', correct the spelling of 'j' in parameter name 'jPointer' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Multitool\Rules" File="SarifValidationSkimmerBase.cs" Line="52">In externally visible method 'SarifValidationSkimmerBase.LogResult(string, string, params string[])', validate parameter 'args' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="StepValuesMustFormOneBasedSequence" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Analyze(Microsoft.CodeAnalysis.Sarif.ThreadFlow,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Multitool\Rules" File="StepValuesMustFormOneBasedSequence.cs" Line="57">In externally visible method 'StepValuesMustFormOneBasedSequence.Analyze(ThreadFlow, string)', validate parameter 'threadFlow' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FindFirstLocationWithMissingStep(Newtonsoft.Json.Linq.JObject[])" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Multitool\Rules" File="StepValuesMustFormOneBasedSequence.cs" Line="117">The 'this' parameter (or 'Me' in Visual Basic) of 'StepValuesMustFormOneBasedSequence.FindFirstLocationWithMissingStep(JObject[])' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UriBaseIdRequiresRelativeUri" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Analyze(Microsoft.CodeAnalysis.Sarif.FileLocation,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Multitool\Rules" File="UriBaseIdRequiresRelativeUri.cs" Line="38">In externally visible method 'UriBaseIdRequiresRelativeUri.Analyze(FileLocation, string)', validate parameter 'fileLocation' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UrisMustBeValid" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Analyze(Microsoft.CodeAnalysis.Sarif.FileData,System.String,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PassSystemUriObjectsInsteadOfStrings" Category="Microsoft.Usage" CheckId="CA2234" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Multitool\Rules" File="UrisMustBeValid.cs" Line="44">Modify 'UrisMustBeValid.Analyze(FileData, string, string)' to call 'UrisMustBeValid.AnalyzeUri(Uri, string)' instead of 'UrisMustBeValid.AnalyzeUri(string, string)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Analyze(Microsoft.CodeAnalysis.Sarif.FileLocation,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Multitool\Rules" File="UrisMustBeValid.cs" Line="51">In externally visible method 'UrisMustBeValid.Analyze(FileLocation, string)', validate parameter 'fileLocation' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Analyze(Microsoft.CodeAnalysis.Sarif.Result,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Multitool\Rules" File="UrisMustBeValid.cs" Line="56">In externally visible method 'UrisMustBeValid.Analyze(Result, string)', validate parameter 'result' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Analyze(Microsoft.CodeAnalysis.Sarif.Rule,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Multitool\Rules" File="UrisMustBeValid.cs" Line="70">In externally visible method 'UrisMustBeValid.Analyze(Rule, string)', validate parameter 'rule' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Analyze(Microsoft.CodeAnalysis.Sarif.Run,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Multitool\Rules" File="UrisMustBeValid.cs" Line="75">In externally visible method 'UrisMustBeValid.Analyze(Run, string)', validate parameter 'run' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Analyze(Microsoft.CodeAnalysis.Sarif.SarifLog,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Multitool\Rules" File="UrisMustBeValid.cs" Line="40">In externally visible method 'UrisMustBeValid.Analyze(SarifLog, string)', validate parameter 'log' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Analyze(Microsoft.CodeAnalysis.Sarif.Tool,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Multitool\Rules" File="UrisMustBeValid.cs" Line="88">In externally visible method 'UrisMustBeValid.Analyze(Tool, string)', validate parameter 'tool' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Analyze(Microsoft.CodeAnalysis.Sarif.VersionControlDetails,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Multitool\Rules" File="UrisMustBeValid.cs" Line="93">In externally visible method 'UrisMustBeValid.Analyze(VersionControlDetails, string)', validate parameter 'versionControlDetails' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UseAbsolutePathsForNestedFileUriFragments" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Analyze(Microsoft.CodeAnalysis.Sarif.FileLocation,System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-08-23 13:07:11Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Multitool\Rules" File="UseAbsolutePathsForNestedFileUriFragments.cs" Line="39">In externally visible method 'UseAbsolutePathsForNestedFileUriFragments.Analyze(FileLocation, string)', validate parameter 'fileLocation' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UriHasNonAbsoluteFragment(System.Uri)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2018-08-23 13:05:11Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\src\sarif-sdk-test\src\Sarif.Multitool\Rules" File="UseAbsolutePathsForNestedFileUriFragments.cs" Line="65">The 'this' parameter (or 'Me' in Visual Basic) of 'UseAbsolutePathsForNestedFileUriFragments.UriHasNonAbsoluteFragment(Uri)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Notes>
  <User Name="[SuppressMessage]">
   <Note Id="2" Modified="2018-08-23 13:07:23Z">This method is expensive and so should not be a property</Note>
  </User>
 </Notes>
 <Rules>
  <Rule TypeName="AbstractTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1012">
   <Name>Abstract types should not have constructors</Name>
   <Description>Public constructors for abstract types do not make sense because you cannot create instances of abstract types.</Description>
   <Resolution Name="Default">Change the accessibility of all public constructors in {0} to protected.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182126.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalWarning</MessageLevel>
   <File Name="DesignRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="ArrayFieldsShouldNotBeReadOnly" Category="Microsoft.Security" CheckId="CA2105">
   <Name>Array fields should not be read only</Name>
   <Description>Read-only fields that reference arrays might not give the intended effect. Setting a field which references an array to read-only prevents the value of the field from being changed. Note that elements in the array can be changed. You can ignore this violation if protecting the contents of the array is not a concern.</Description>
   <Resolution Name="Default">Either replace {0} with a strongly typed collection that cannot be changed, or replace the public field with a method that returns a clone of a private array.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182299.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">CriticalWarning</MessageLevel>
   <File Name="SecurityRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="AttributeStringLiteralsShouldParseCorrectly" Category="Microsoft.Usage" CheckId="CA2243">
   <Name>Attribute string literals should parse correctly</Name>
   <Description>Literal strings used as attribute parameters that represent URLs, version numbers, or GUIDs, should have the appropriate format.</Description>
   <Resolution Name="Default">In the constructor of {0}, change the value of argument {1}, which is currently "{2}", to something that can be correctly parsed as {3}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264490.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="UsageRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidEmptyInterfaces" Category="Microsoft.Design" CheckId="CA1040">
   <Name>Avoid empty interfaces</Name>
   <Description>Interfaces are meant to contain members that specify a set of behaviors. To mark or label a class, use an attribute instead of an empty interface.</Description>
   <Resolution Name="Default">Define a custom attribute to replace {0}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182128.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="DesignRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidExcessiveClassCoupling" Category="Microsoft.Maintainability" CheckId="CA1506">
   <Name>Avoid excessive class coupling</Name>
   <Description>Types and methods with a high degree of class coupling can be difficult to maintain.</Description>
   <Resolution Name="Method">{0} is coupled with {1} different types from {2} different namespaces. Rewrite or refactor the method to decrease its class coupling, or consider moving the method to one of the other types it is tightly coupled with. A class coupling above {3} indicates poor maintainability, a class coupling between {3} and {4} indicates moderate maintainability, and a class coupling below {4} indicates good maintainability.</Resolution>
   <Resolution Name="Type">{0} is coupled with {1} different types from {2} different namespaces. Rewrite or refactor this class's methods to decrease its class coupling, or consider moving some of the class's methods to some of the other types it is tightly coupled with. A class coupling above {3} indicates poor maintainability, a class coupling between {3} and {4} indicates moderate maintainability, and a class coupling below {4} indicates good maintainability.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb397994.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="MaintainabilityRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502">
   <Name>Avoid excessive complexity</Name>
   <Description>Method implementations that are exceedingly complex increase the challenge of understanding and maintaining code.</Description>
   <Resolution Name="Default">{0} has a cyclomatic complexity of {1}. Rewrite or refactor the method to reduce complexity to {2}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182212.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="MaintainabilityRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidExcessiveLocals" Category="Microsoft.Performance" CheckId="CA1809">
   <Name>Avoid excessive locals</Name>
   <Description>Method implementations should not contain more than 64 local variables. In order for the run-time to enregister local variables most efficiently, there should be 64 or fewer of them. Enregistering based on flow analysis will not occur for locals in excess of 64, which may result in slower performance.</Description>
   <Resolution Name="Compiler">{0} has {1} local variables, {2} of which were generated by the compiler. Refactor {0} so that it uses fewer than 64 local variables.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182263.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="PerformanceRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020">
   <Name>Avoid namespaces with few types</Name>
   <Description>A namespace should generally have more than five types.</Description>
   <Resolution Name="Default">Consider merging the types defined in '{0}' with another namespace.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182130.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="DesignRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021">
   <Name>Avoid out parameters</Name>
   <Description>Using out parameters might indicate a design flaw. Although there are legitimate times to use out parameters, their use frequently indicates a design that does not conform to the design guidelines for managed code.</Description>
   <Resolution Name="Default">Consider a design that does not require that {0} be an out parameter.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182131.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="DesignRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811">
   <Name>Avoid uncalled private code</Name>
   <Description>There is uncalled code that is not externally visible and is not a known runtime entry point. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</Description>
   <Resolution Name="Default">{0} appears to have no upstream public or protected callers.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182264.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="PerformanceRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812">
   <Name>Avoid uninstantiated internal classes</Name>
   <Description>An internal class was detected that is apparently never instantiated. This rule does not attempt to detect late-bound creation and will generate false positives if instances of a type are only created in this way (for example, by means of Activator.CreateInstance or by passing the type as an argument to a TypeConverter constructor).</Description>
   <Resolution Name="Default">{0} is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182265.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="PerformanceRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUnmaintainableCode" Category="Microsoft.Maintainability" CheckId="CA1505">
   <Name>Avoid unmaintainable code</Name>
   <Description>Types and methods with a high degree of class coupling, cyclomatic complexity and/or program length can be difficult to maintain.</Description>
   <Resolution Name="Method">{0} has a maintainability index of {1}. Rewrite or refactor the method to increase its maintainability index (MI). An MI below {2} indicates poor maintainability, an MI between {2} and {3} indicates moderate maintainability, and an MI above {3} indicates good maintainability.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb386043.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="MaintainabilityRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823">
   <Name>Avoid unused private fields</Name>
   <Description>Private fields were detected that do not appear to be accessed within the assembly. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</Description>
   <Resolution Name="Default">It appears that field {0} is never used or is only ever assigned to. Use this field or remove it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245042.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="PerformanceRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="CallGCSuppressFinalizeCorrectly" Category="Microsoft.Usage" CheckId="CA1816">
   <Name>Call GC.SuppressFinalize correctly</Name>
   <Description>Call GC.SuppressFinalize to suppress finalization of your instance once Dispose has been called. Objects that implement IDisposable should call SuppressFinalize from the IDisposable.Dispose method to prevent the garbage collector from calling Object.Finalize on an object that does not require it.</Description>
   <Resolution Name="NotCalled">Change {0} to call {1}. This will prevent derived types that introduce a finalizer from needing to re-implement 'IDisposable' to call it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182269.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="UsageRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227">
   <Name>Collection properties should be read only</Name>
   <Description>Properties that return collections should be read-only so that users cannot entirely replace the backing store. Users can still modify the contents of the collection by calling relevant methods on the collection. Note that the XmlSerializer class has special support for deserializing read-only collections. See the XmlSerializer overview for more information.</Description>
   <Resolution Name="Default">Change {0} to be read-only by removing the property setter.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182327.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="UsageRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702">
   <Name>Compound words should be cased correctly</Name>
   <Description>Avoid creating compound words from terms which exist in the dictionary as discrete terms. Do not create a compound word such as 'StopWatch' or 'PopUp'. These terms are recognized in the dictionary and should be cased as 'Stopwatch' and 'Popup'.</Description>
   <Resolution Name="MemberParameterShouldBeDiscreteTerm">In member {0}, the compound word '{1}' in parameter name {2} exists as a discrete term. If your usage is intended to be single word, case it as '{3}' or strip the first token entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="MemberShouldBeDiscreteTerm">The compound word '{0}' in member name {1} exists as a discrete term. If your usage is intended to be single word, case it as '{2}' or strip the first token entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="TypeShouldBeDiscreteTerm">The compound word '{0}' in type name {1} exists as a discrete term. If your usage is intended to be single word, case it as '{2}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264474.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="80">Error</MessageLevel>
   <File Name="NamingRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="ConsiderPassingBaseTypesAsParameters" Category="Microsoft.Design" CheckId="CA1011">
   <Name>Consider passing base types as parameters</Name>
   <Description>Using base types as parameters to methods improves re-use of these methods if you only use methods &amp; properties from the parameter's base class. E.g. use Stream instead of FileStream as a parameter when only calling Stream.Read(), this makes the method work on all kind of streams instead of just File streams.</Description>
   <Resolution Name="Default">Consider changing the type of parameter {0} in {1} from {2} to its base type {3}. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/3hk32yyz.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Error</MessageLevel>
   <File Name="DesignRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026">
   <Name>Default parameters should not be used</Name>
   <Description>Some programming languages do not support default parameters. Replace default parameters with method overloads that supply the default argument.</Description>
   <Resolution Name="Default">Replace method {0} with an overload that supplies all default arguments.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182135.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="DesignRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="Dispose methods should call base class dispose" Category="Microsoft.Usage" CheckId="CA2215">
   <Name>Dispose methods should call base class dispose</Name>
   <Description>If a type inherits from a disposable type, it must call the Dispose method of the base type from within its own Dispose method.</Description>
   <Resolution Name="Default">Ensure that method {0} calls base.{0} in all possible control flow paths.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182330.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="DataflowRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000">
   <Name>Dispose objects before losing scope</Name>
   <Description>If a disposable object is not explicitly disposed before all references to it are out of scope, the object will be disposed at some indeterminate time when the garbage collector runs the finalizer of the object. Because an exceptional event might occur that will prevent the finalizer of the object from running, the object should be explicitly disposed instead.</Description>
   <Resolution Name="ExceptionEdge">In method {0}, object {1} is not disposed along all exception paths. Call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Resolution Name="NonExceptionEdge">In method {0}, call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182289.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="DataflowRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202">
   <Name>Do not dispose objects multiple times</Name>
   <Description>A correctly implemented Dispose method can be called multiple times without throwing an exception. However, this is not guaranteed and to avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.</Description>
   <Resolution Name="Default">Object {0} can be disposed more than once in method {1}. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 38</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182334.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="DataflowRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303">
   <Name>Do not pass literals as localized parameters</Name>
   <Description>Literal strings that are embedded in source code are difficult to localize. Avoid passing literal strings as arguments in circumstances where a localized string is generally expected.</Description>
   <Resolution Name="KnownValue">Method {0} passes a literal string as parameter '{1}' of a call to {2}. Retrieve the following string(s) from a resource table instead: {3}.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182187.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="DataflowRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214">
   <Name>Do not call overridable methods in constructors</Name>
   <Description>Virtual methods defined on the class should not be called from constructors. If a derived class has overridden the method, the derived class version will be called (before the derived class constructor is called).</Description>
   <Resolution Name="Default">{0} contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: {1}</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182331.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalWarning</MessageLevel>
   <File Name="UsageRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800">
   <Name>Do not cast unnecessarily</Name>
   <Description>Avoid duplicate casts where possible, since there is a cost associated with them.</Description>
   <Resolution Name="Local">{0}, a variable, is cast to type {1} multiple times in method {2}. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant {3} instruction.</Resolution>
   <Resolution Name="Parameter">{0}, a parameter, is cast to type {1} multiple times in method {2}. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant {3} instruction.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182271.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="PerformanceRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031">
   <Name>Do not catch general exception types</Name>
   <Description>You should not catch Exception or SystemException. Catching generic exception types can hide run-time problems from the library user, and can complicate debugging. You should catch only those exceptions that you can handle gracefully.</Description>
   <Resolution Name="Default">Modify {0} to catch a more specific exception than {1} or rethrow the exception.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182137.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="DesignRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104">
   <Name>Do not declare read only mutable reference types</Name>
   <Description>A read-only declaration for a mutable reference type does not prevent the field's instance data from being modified. For example, a read-only StringBuilder field declaration does not make sense, since the data encapsulated by the StringBuilder can be modified using the read-only reference.</Description>
   <Resolution Name="Default">Remove the read-only designation from {0} or change the field to one that is an immutable reference type. If the reference type {1} is, in fact, immutable, exclude this message.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182302.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="25">Error</MessageLevel>
   <File Name="SecurityRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotDeclareStaticMembersOnGenericTypes" Category="Microsoft.Design" CheckId="CA1000">
   <Name>Do not declare static members on generic types</Name>
   <Description>The syntax for calling static members on generic types is complex as the type parameter has to be specified for each call.</Description>
   <Resolution Name="Default">Remove {0} from {1} or make it an instance member.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182139.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="DesignRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051">
   <Name>Do not declare visible instance fields</Name>
   <Description>Instance fields that are visible outside of the type that declares them, limit your ability to change the implementation details for those data items. Use properties instead. They do not compromise usability or performance and they do provide flexibility in that they conceal the implementation details of the underlying data.</Description>
   <Resolution Name="Default">Because field {0} is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182141.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="DesignRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002">
   <Name>Do not expose generic lists</Name>
   <Description>Do not expose List&lt;T&gt; in object models. Use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt; instead. List&lt;T&gt; is meant to be used from implementation, not in object model API. List&lt;T&gt; is optimized for performance at the cost of long term versioning. For example, if you return List&lt;T&gt; to the client code, you will not ever be able to receive notifications when client code modifies the collection.</Description>
   <Resolution Name="Default">Change {0} in {1} to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182142.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="DesignRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806">
   <Name>Do not ignore method results</Name>
   <Description>The result of methods that return new instances of strings should be assigned to a variable and subsequently used. If the result of a method that creates a new object, such as String.ToLower(), is not assigned to a variable, the call is wasted.</Description>
   <Resolution Name="TryParse">{0} calls {1} but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182273.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="UsageRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotMarkEnumsWithFlags" Category="Microsoft.Usage" CheckId="CA2217">
   <Name>Do not mark enums with FlagsAttribute</Name>
   <Description>The enumeration does not appear to contain a consistent set values that can be combined using  the OR (|) and AND (&amp;amp;amp;) operators. Using the Flags attribute on an enumeration suggests that the enumeration values are meant to be combined using the AND and OR operators. Typically, a flags enumeration uses values that are either powers of two, or combine other values that are powers of two.</Description>
   <Resolution Name="Default">{0} is marked with FlagsAttribute but a discrete member cannot be found for every settable bit that is used across the range of enum values. Remove FlagsAttribute from the type or define new members for the following (currently missing) values: {1}</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182335.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Error</MessageLevel>
   <File Name="UsageRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006">
   <Name>Do not nest generic types in member signatures</Name>
   <Description>Avoid API that require users to instantiate a generic type with another generic type as type argument. The syntax gets too complex.</Description>
   <Resolution Name="Default">Consider a design where {0} doesn't nest generic type {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182144.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="DesignRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045">
   <Name>Do not pass types by reference</Name>
   <Description>Although there are legitimate times to use reference parameters, such use frequently indicates a design that does not conform to the design guidelines for managed code.</Description>
   <Resolution Name="Default">Consider a design that does not require that {0} be a reference parameter.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182146.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="DesignRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201">
   <Name>Do not raise reserved exception types</Name>
   <Description>User code should not create and raise exceptions of certain types that are reserved by the runtime or which are of a too general exception type. Exception types that are too general include Exception, SystemException, and ApplicationException. Exception types that are reserved by the runtime include ThreadAbortException, OutOfMemoryException, ExecutionEngineException, and IndexOutOfRangeException.</Description>
   <Resolution Name="TooGeneric">{0} creates an exception of type {1}, an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182338.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="UsageRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="EnumStorageShouldBeInt32" Category="Microsoft.Design" CheckId="CA1028">
   <Name>Enum storage should be Int32</Name>
   <Description>There is little or no benefit to using a type smaller than Int32. You might require a type that is larger than Int32 if: 1) the enumeration values are flags and there are or will be many (&amp;amp;gt;32) values, or 2) the type needs to be different from Int32 for backward compatibility. Avoid using an underlying type that is not integral.</Description>
   <Resolution Name="NotIntegral">If possible, make the underlying type of {0} Int32 instead of {1}. Otherwise consider Byte, Int16, or Int64.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182147.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="60">Warning</MessageLevel>
   <File Name="DesignRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="EnumsShouldHaveZeroValue" Category="Microsoft.Design" CheckId="CA1008">
   <Name>Enums should have zero value</Name>
   <Description>An enum should generally have a zero value. If the enum is not decorated with the Flags attribute, it should have a member with a value of zero that represents the empty state. Optionally, this value is named 'None'. For a Flags-attributed enum, a zero-valued member is optional and, if it exists, should always be named 'None'. This value should indicate that no values have been set in the enum. Using a zero-valued member for other purposes is contrary to the use of the Flags attribute in that the bitwise AND and OR operators are useless with the member.</Description>
   <Resolution Name="FlagsRename">In enum {0}, change the name of {1} to 'None'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182149.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="DesignRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="ExceptionsShouldBePublic" Category="Microsoft.Design" CheckId="CA1064">
   <Name>Exceptions should be public</Name>
   <Description>Exception classes should either be public, or have a non-generic public ancestor.</Description>
   <Resolution Name="Default">Make exception class {0} public.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264484.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="DesignRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="FlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1714">
   <Name>Flags enums should have plural names</Name>
   <Description>An enumeration marked with FlagsAttribute should have a plural name.</Description>
   <Resolution Name="Default">If enumeration name {0} is singular, change it to a plural form.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264486.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="NamingRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709">
   <Name>Identifiers should be cased correctly</Name>
   <Description>Type, namespace, and member identifiers are Pascal-cased. Parameter identifiers are camel-cased. Two letter acronyms within these identifiers should be upper-cased, for example, use System.IO instead of System.Io. Acronyms of three or more letters should be Pascal-cased, for example, use System.Xml instead of System.XML. The pascal-casing convention capitalizes the first letter of each word, as in BackColor. The camel-casing convention formats the first letter of the first word in lowercase and capitalizes the first letter of all subsequent words, as in backgroundColor. Although it may be common practice for some two letter acronyms to not be fully capitalized, violations of this rule should not be excluded for this reason. For example, 'DbConnection', is common but incorrect; use DBConnection. A violation of this rule might be required for compatibility with existing, non-managed symbol schemes. In general, however, these symbols should not be visible outside the assembly that uses them.</Description>
   <Resolution Name="Member">Correct the casing of '{0}' in member name {1} by changing it to '{2}'.</Resolution>
   <Resolution Name="Namespace">Correct the casing of '{0}' in namespace name '{1}' by changing it to '{2}'.</Resolution>
   <Resolution Name="Type">Correct the casing of '{0}' in type name {1} by changing it to '{2}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182240.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="85">Error</MessageLevel>
   <File Name="NamingRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
   <Name>Identifiers should be spelled correctly</Name>
   <Description>The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</Description>
   <Resolution Name="Assembly">Correct the spelling of '{0}' in assembly name {1}.</Resolution>
   <Resolution Name="Member">Correct the spelling of '{0}' in member name {1} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="MemberParameter">In method {0}, correct the spelling of '{1}' in parameter name {2} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="MemberParameterMoreMeaningfulName">In method {0}, consider providing a more meaningful name than parameter name {1}.</Resolution>
   <Resolution Name="Namespace">Correct the spelling of '{0}' in namespace name '{1}'.</Resolution>
   <Resolution Name="Type">Correct the spelling of '{0}' in type name {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264492.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="NamingRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710">
   <Name>Identifiers should have correct suffix</Name>
   <Description>Types that extend certain base types have specified name suffixes. Types that extend Attribute, for example, should be suffixed in 'Attribute', as in ObsoleteAttribute. This rules checks types that extend several base types, including Attribute, Exception, EventArgs, IMembershipPermission, Stream, and others.</Description>
   <Resolution Name="Default">Rename {0} to end in '{1}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182244.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="NamingRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720">
   <Name>Identifiers should not contain type names</Name>
   <Description>Avoid using language-specific types name in parameters and members and data type identifiers in parameters. Types names might not be intuitive for all developers. It is recommended that you select a generic name, such as 'value', instead. If this is not sufficient, be sure to use the type name as it is defined in the .NET Framework Library and avoid language-specific type names completely. Some examples of C#-specific type names are 'float' (use 'Single' if a generic name is not sufficient), and 'ulong' (use 'UInt64' if a generic name is not sufficient).</Description>
   <Resolution Name="LanguageIndependentMemberParameter">In member {0}, consider replacing the data type identifier '{1}' in parameter name {2} with a more generic term, such as 'value'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb531486.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="NamingRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707">
   <Name>Identifiers should not contain underscores</Name>
   <Description>Do not use underscores when specifying identifiers. Some generated Visual Studio identifiers for applications contain underscore characters. Underscore characters should generally be avoided in public identifiers.</Description>
   <Resolution Name="Member">Remove the underscores from member name {0}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182245.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="NamingRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711">
   <Name>Identifiers should not have incorrect suffix</Name>
   <Description>Types that do not extend certain base types should not use reserved name suffixes. Types and members should not use 'Ex' or 'New' to distinguish them from an earlier version of the same API, instead, use a numeric suffix such as '2' or provide a more meaningful suffix. Concrete type implementations and members should not end 'Impl'. Members instead, should either consider using the suggested alternate 'Core' in replacement of 'Impl' or avoid any suffix at all.</Description>
   <Resolution Name="TypeNoAlternate">Rename type name {0} so that it does not end in '{1}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182247.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="NamingRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716">
   <Name>Identifiers should not match keywords</Name>
   <Description>Identifiers which conflict with reserved language keywords should be avoided. Using a reserved keyword as an identifier makes it harder for consumers in other languages to use your API.</Description>
   <Resolution Name="Type">Rename type {0} so that it no longer conflicts with the reserved language keyword '{1}'. Using a reserved keyword as the name of a type makes it harder for consumers in other languages to use the type.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182248.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="NamingRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063">
   <Name>Implement IDisposable correctly</Name>
   <Description>All IDisposable types should implement the Dispose pattern correctly.</Description>
   <Resolution Name="DisposeImplementation">Modify {0} so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Resolution>
   <Resolution Name="ProvideDisposeBool">Provide an overridable implementation of Dispose(bool) on {0} or mark the type as sealed. A call to Dispose(false) should only clean up native resources. A call to Dispose(true) should clean up both managed and native resources.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms244737.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="DesignRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="ImplementISerializableCorrectly" Category="Microsoft.Usage" CheckId="CA2240">
   <Name>Implement ISerializable correctly</Name>
   <Description>If a type is assignable to ISerializable, it should implement GetObjectData. For unsealed types, the GetObjectData method should be callable and overridable by derived types.</Description>
   <Resolution Name="Default">Add an implementation of GetObjectData to type {0}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182342.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="60">Error</MessageLevel>
   <File Name="UsageRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="ImplementStandardExceptionConstructors" Category="Microsoft.Design" CheckId="CA1032">
   <Name>Implement standard exception constructors</Name>
   <Description>Multiple constructors are required to correctly implement a custom exception. Missing constructors can make your exception unusable in certain scenarios. For example, the serialization constructor is required for handling exceptions in XML Web services.</Description>
   <Resolution Name="Accessibility">Change the accessibility of {0} to {1}.</Resolution>
   <Resolution Name="MissingConstructor">Add the following constructor to {0}: {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182151.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="DesignRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208">
   <Name>Instantiate argument exceptions correctly</Name>
   <Description>String arguments passed to constructors of ArgumentException and its derived types should be correct. Types derived from ArgumentException have inconsistent constructor overloads with respect to the message and paramName parameters as compared to ArgumentException.</Description>
   <Resolution Name="IncorrectParameterName">Method {0} passes '{1}' as the {2} argument to a {3} constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182347.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="UsageRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033">
   <Name>Interface methods should be callable by child types</Name>
   <Description>Explicit method implementations are defined with private accessibility. Classes that derive from classes with explicit method implementations and choose to re-declare them on the class will not be able to call into the base class implementation unless the base class has provided an alternate method with appropriate accessibility. When overriding a base class method that has been hidden by explicit interface implementation, in order to call into the base class implementation, a derived class must cast the base pointer to the relevant interface. When calling through this reference, however, the derived class implementation will actually be invoked, resulting in recursion and an eventual stack overflow.</Description>
   <Resolution Name="Default">Make {0} sealed (a breaking change if this class has previously shipped), implement the method non-explicitly, or implement a new method that exposes the functionality of {1} and is visible to derived classes.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182153.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="DesignRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204">
   <Name>Literals should be spelled correctly</Name>
   <Description>This rule parses the literal string into words, tokenizing compound words, and checks the spelling of each word/token.</Description>
   <Resolution Name="Default">Correct the spelling of the unrecognized token '{0}' in the literal '{1}'.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/bb264488.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="DataflowRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="MD5CannotBeUsed" Category="Microsoft.Security.Cryptography" CheckId="CA5350">
   <Name>Do not use MD5</Name>
   <Description>MD5 is banned by SDL</Description>
   <Resolution Name="Default">{0} calls into an instance of the {1} type, which implements a cryptographically insecure hashing function. Hash collisions are computationally feasible for the MD5 and HMACMD5 algorithms and are banned by the SDL. Replace this usage with a SHA-2 family hash algorithm (SHA512, SHA384, SHA256).</Resolution>
   <Owner />
   <Url>http://go.microsoft.com/fwlink/?LinkId=282614&amp;clcid=0x409</Url>
   <Email>cbdpm@microsoft.com</Email>
   <MessageLevel Certainty="100">Error</MessageLevel>
   <File Name="SecurityCryptographyRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAllNonSerializableFields" Category="Microsoft.Usage" CheckId="CA2235">
   <Name>Mark all non-serializable fields</Name>
   <Description>All fields that cannot be serialized directly should have the NonSerializedAttribute. Types that have the SerializableAttribute should not have fields of types that do not have the SerializableAttribute unless the fields are marked with the NonSerializedAttribute.</Description>
   <Resolution Name="Default">Field {0} is a member of type {1}, which is serializable, but is of type {2}, which is not serializable. Add the NonSerializedAttribute to {0}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182349.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="UsageRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014">
   <Name>Mark assemblies with CLSCompliantAttribute</Name>
   <Description>Assemblies should explicitly state their CLS compliance using the CLSCompliant attribute. An assembly without this attribute is not CLS-compliant. Assemblies, modules, and types can be CLS-compliant even if some parts of the assembly, module, or type are not CLS-compliant. The following rules apply: 1) If the element is marked CLSCompliant, any noncompliant members must have the CLSCompliant attribute present with its argument set to false. 2) A comparable CLS-compliant alternative member must be supplied for each member that is not CLS-compliant.</Description>
   <Resolution Name="Default">Mark {0} with CLSCompliant(true) because it exposes externally visible types.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182156.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="DesignRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithNeutralResourcesLanguage" Category="Microsoft.Performance" CheckId="CA1824">
   <Name>Mark assemblies with NeutralResourcesLanguageAttribute</Name>
   <Description>The NeutralResourcesLanguage attribute informs the ResourceManager of the language used to render the neutral culture's resources for an assembly. When looking up resources in the same culture as the neutral resources language, the ResourceManager automatically uses the resources located in the main assembly, instead of searching for a satellite assembly with the current user interface culture for the current thread. This will improve lookup performance for the first resource you load and can reduce your working set.</Description>
   <Resolution Name="Default">Because assembly {0} contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb385967.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="PerformanceRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="MarkISerializableTypesWithSerializable" Category="Microsoft.Usage" CheckId="CA2237">
   <Name>Mark ISerializable types with SerializableAttribute</Name>
   <Description>The System.Runtime.Serialization.ISerializable interface allows the type to customize its serialization, while the Serializable attribute enables the runtime to recognize the type as being serializable.</Description>
   <Resolution Name="Default">Add [Serializable] to {0} as this type implements ISerializable.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182350.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="UsageRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822">
   <Name>Mark members as static</Name>
   <Description>Methods which do not access instance data or call instance methods can be marked as static (Shared in Visual Basic). After doing so, the compiler will emit non-virtual call sites to these members which will prevent a check at runtime for each call that ensures the current object pointer is non-null. This can result in a measurable performance gain for performance-sensitive code. In some cases, the failure to access the current object instance represents a correctness issue.</Description>
   <Resolution Name="Default">The 'this' parameter (or 'Me' in Visual Basic) of {0} is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245046.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="PerformanceRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060">
   <Name>Move P/Invokes to NativeMethods class</Name>
   <Description>This type contains members with the DllImport attribute. Members with the DllImport attribute should be contained in classes named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Description>
   <Resolution Name="Default">Because it is a P/Invoke method, {0} should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182161.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalWarning</MessageLevel>
   <File Name="DesignRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211">
   <Name>Non-constant fields should not be visible</Name>
   <Description>Static fields should be constant unless you carefully manage access to the field using locks. Using static variables without making them thread safe can compromise execution state. This rule applies to managed code libraries. If the analyzed assembly is an application, it is usually safe to exclude violations of this rule.</Description>
   <Resolution Name="Default">Consider making {0} non-public or a constant.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182353.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="UsageRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="NormalizeStringsToUppercase" Category="Microsoft.Globalization" CheckId="CA1308">
   <Name>Normalize strings to uppercase</Name>
   <Description>Strings should be normalized to upper-case.</Description>
   <Resolution Name="ToUpperInvariant">In method {0}, replace the call to {1} with String.ToUpperInvariant().</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb386042.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="GlobalizationRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725">
   <Name>Parameter names should match base declaration</Name>
   <Description>For usability reasons, parameter names in overridden methods should match those of the base declaration.</Description>
   <Resolution Name="Default">In member {0}, change parameter name {1} to {2} in order to match the identifier as it has been declared in {3}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182251.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="NamingRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="PassSystemUriObjectsInsteadOfStrings" Category="Microsoft.Usage" CheckId="CA2234">
   <Name>Pass System.Uri objects instead of strings</Name>
   <Description>If there are two overloads one taking System.Uri and one taking System.String, library code should never call the string-based overload.</Description>
   <Resolution Name="Default">Modify {0} to call {1} instead of {2}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182360.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="UsageRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819">
   <Name>Properties should not return arrays</Name>
   <Description>Properties that return arrays are prone to code inefficiencies. Consider using a collection or making this a method. See the design guidelines for more information.</Description>
   <Resolution Name="Default">Change {0} to return a collection or make it a method.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/0fss9skc.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="PerformanceRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721">
   <Name>Property names should not match get methods</Name>
   <Description>A Get method was found with the same name as a property. Get methods and properties should have names that clearly distinguish their function. See the design guidelines for information regarding choosing properties over methods.</Description>
   <Resolution Name="BaseType">The property name {0} is confusing given the existence of inherited method {1}. Rename or remove this property.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182253.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="NamingRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804">
   <Name>Remove unused locals</Name>
   <Description>Remove locals that are not used or are only assigned to in method implementations.</Description>
   <Resolution Name="Default">{0} declares a variable, {1}, of type {2}, which is never used or is only assigned to. Use this variable or remove it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182278.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="PerformanceRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="ResourceStringsShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1703">
   <Name>Resource strings should be spelled correctly</Name>
   <Description>The individual words that make up a resource string should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</Description>
   <Resolution Name="StringResource">In resource {0}, referenced by name '{1}', correct the spelling of '{2}' in string value '{3}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264483.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">CriticalWarning</MessageLevel>
   <File Name="NamingRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200">
   <Name>Rethrow to preserve stack details</Name>
   <Description>Use the IL rethrow instruction to preserve original stack details when re-raising a caught exception.</Description>
   <Resolution Name="Default">{0} rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182363.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="UsageRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="ReviewMisleadingFieldNames" Category="Microsoft.Maintainability" CheckId="CA1504">
   <Name>Review misleading field names</Name>
   <Description>Review field names which, by convention, appear to indicate they are instance or static but, in fact, are not. This rule fires against instance fields which have names prefixed with "s_" and static fields which are prefixed with "m_".</Description>
   <Resolution Name="Instance">The field name {0} suggests that it is static (Shared in Visual Basic) data but it is declared as an instance member. Review this member to verify that it should be instance, or consider changing the field name.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb164506.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="MaintainabilityRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801">
   <Name>Review unused parameters</Name>
   <Description>Review parameters in non-virtual methods that are not used in the method body to ensure no correctness exists around failure to access them. Unused parameters incur maintenance and performance costs. Sometimes a violation of this rule can point to an implementation bug in the method (i.e. the parameter should actually have been used in the method body). Exclude warnings of this rule if the parameter has to exist because of backward compatibility.</Description>
   <Resolution Name="Default">Parameter {0} of {1} is never used. Remove the parameter or use it in the method body.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182268.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="UsageRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="SHA1CannotBeUsed" Category="Microsoft.Security.Cryptography" CheckId="CA5354">
   <Name>Do not use SHA1</Name>
   <Description>SHA-1 is banned by SDL</Description>
   <Resolution Name="Default">{0} calls into an instance of the {1} type, which implements a cryptographically insecure hashing function. Hash collisions are computationally feasible for the SHA-1 and SHA-0 algorithms and are banned by the SDL. Replace this usage with a SHA-2 family hash algorithm (SHA512, SHA384, SHA256).</Resolution>
   <Owner />
   <Url>http://go.microsoft.com/fwlink/?LinkId=282614&amp;clcid=0x409</Url>
   <Email>cbdpm@microsoft.com</Email>
   <MessageLevel Certainty="100">Error</MessageLevel>
   <File Name="SecurityCryptographyRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
   <Name>Specify IFormatProvider</Name>
   <Description>If an overload exists that takes an IFormatProvider argument, it should always be called in favor of an overload that does not. Some methods in the runtime convert a value to or from a string representation and take a string parameter that contains one or more characters, called format specifiers, which indicate how the value is to be converted. If the meaning of the format specifier varies by culture, a formatting object supplies the actual characters used in the string representation. In scenarios where sorting and comparison behavior should never change between cultures, specify CultureInfo.InvariantCulture, otherwise, specify CultureInfo.CurrentCulture.</Description>
   <Resolution Name="IFormatProviderAlternate">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be based on input from the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify {4}.</Resolution>
   <Resolution Name="IFormatProviderAlternateString">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify {4}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182190.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="GlobalizationRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307">
   <Name>Specify StringComparison</Name>
   <Description>If an overload exists that takes a StringComparison argument, it should always be called in favor of an overload that does not.</Description>
   <Resolution Name="Default">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb386080.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="GlobalizationRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053">
   <Name>Static holder types should not have constructors</Name>
   <Description>Instances of types that define only static members do not need to be created. Many compilers will automatically add a public default constructor if no constructor is specified. To prevent this, adding an empty private constructor may be required.</Description>
   <Resolution Name="CSharp2_0">Because type {0} contains only 'static' members, mark it as 'static' to prevent the compiler from adding a default public constructor.</Resolution>
   <Resolution Name="Default">Because type {0} contains only 'static' ('Shared' in Visual Basic) members, add a default private constructor to prevent the compiler from adding a default public constructor.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182169.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="DesignRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="StringUriOverloadsCallSystemUriOverloads" Category="Microsoft.Design" CheckId="CA1057">
   <Name>String URI overloads call System.Uri overloads</Name>
   <Description>If a method overloads another method by replacing a System.Uri parameter with a string, then the string overload should simply build a Uri object from the string, and pass the result to the string overload.</Description>
   <Resolution Name="Default">Refactor {0} so that it builds a System.Uri object from {1}, and then calls {2}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182170.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="DesignRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="TypeNamesShouldNotMatchNamespaces" Category="Microsoft.Naming" CheckId="CA1724">
   <Name>Type names should not match namespaces</Name>
   <Description>Identifiers which conflict in whole or in part with namespace names should be avoided. Names that describe the purpose or contents of a type are preferred.</Description>
   <Resolution Name="System">The type name {0} conflicts in whole or in part with the namespace name '{1}' defined in the .NET Framework. Rename the type to eliminate the conflict.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182257.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="NamingRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054">
   <Name>URI parameters should not be strings</Name>
   <Description>If a parameter name contains "uri" or "url" or "urn", and it's typed as string, the parameter type should be changed to System.Uri, unless there is an overload method where the same parameter is typed as System.Uri.</Description>
   <Resolution Name="Default">Change the type of parameter {0} of method {1} from string to System.Uri, or provide an overload of {1}, that allows {0} to be passed as a System.Uri object.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182174.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="60">Error</MessageLevel>
   <File Name="DesignRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="UriPropertiesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1056">
   <Name>URI properties should not be strings</Name>
   <Description>If a property name contains "uri" or "url" or "urn" and it's typed as string, it should be changed to System.Uri.</Description>
   <Resolution Name="Default">Change the type of property {0} from string to System.Uri.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182175.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="DesignRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="UriReturnValuesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1055">
   <Name>URI return values should not be strings</Name>
   <Description>If a function name contains "uri" or "url" or "urn" and the return type is string, the return type should be changed to System.Uri.</Description>
   <Resolution Name="Default">Change the return type of {0} from string to System.Uri.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182176.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="60">Error</MessageLevel>
   <File Name="DesignRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="UseLiteralsWhereAppropriate" Category="Microsoft.Performance" CheckId="CA1802">
   <Name>Use literals where appropriate</Name>
   <Description>Prefer literals over InitOnly fields if values do not have to be calculated at runtime.</Description>
   <Resolution Name="Default">Field {0} is declared as 'static readonly' but is initialized with a constant value '{1}'. Mark this field as 'const' instead.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182280.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="PerformanceRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726">
   <Name>Use preferred terms</Name>
   <Description>Use preferred terms over deprecated alternates.</Description>
   <Resolution Name="MemberNoAlternate">Replace the term '{0}' in member name {1} with an appropriate alternate or remove it entirely.</Resolution>
   <Resolution Name="TypeNoAlternate">Replace the term '{0}' in type name {1} with an appropriate alternate or remove it entirely.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182258.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="NamingRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024">
   <Name>Use properties where appropriate</Name>
   <Description>Properties should be used instead of Get/Set methods in most situations. Methods are preferable to properties in the following situations: the operation is a conversion, is expensive or has an observable side-effect; the order of execution is important; calling the member twice in succession creates different results; a member is static but returns a mutable value; or the member returns an array.</Description>
   <Resolution Name="Default">Change {0} to a property if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182181.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="DesignRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="UseXmlSecureResolver" Category="Microsoft.Security.Xml" CheckId="CA3053">
   <Name>Use XmlSecureResolver</Name>
   <Description>Review code to ensure that external resource resolution is explicitly disabled or a XmlSecureResolver is used when processing untrusted input (the resolver used internally on some overloaded methods is not safe to use on untrusted input). Using default resolver for resolving external XML entities may lead to information disclosure. Content from file system or network shares for the machine processing the XML can be exposed to attacker. In addition, an attacker can use this as a DoS vector.</Description>
   <Resolution Name="XmlReaderCreateInsecureXmlResolver">{0} instantiates an XmlReader instance by calling {1} and provided an XmlReaderSettings instance with an insecure XmlResolver property value. This usage is potentially unsafe as untrusted external resources may be resolved during read operations. Provide a XmlReaderSettings instance and set the XmlResolver property to null or an instance of XmlSecureResolver.</Resolution>
   <Owner />
   <Url>http://go.microsoft.com/fwlink/?LinkId=282614&amp;clcid=0x409</Url>
   <Email>cbdpm@microsoft.com</Email>
   <MessageLevel Certainty="100">Warning</MessageLevel>
   <File Name="SecurityXmlRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062">
   <Name>Validate arguments of public methods</Name>
   <Description>All reference arguments passed to externally visible methods should be checked against null (Nothing in VB). If appropriate, throw a System.ArgumentNullException when the argument is null.</Description>
   <Resolution Name="Default">In externally visible method {0}, validate parameter '{1}' before using it.</Resolution>
   <Resolution Name="Reassigned">In externally visible method {0}, validate local variable '{1}', which was reassigned from parameter '{2}', before using it.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182182.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="DataflowRules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500">
   <Name>Variable names should not match field names</Name>
   <Description>Instance field and variable names should not be identical within the same scope.</Description>
   <Resolution Name="Parameter">{0}, a parameter declared in {1}, has the same name as an instance field on the type. Change the name of one of these items.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182216.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="MaintainabilityRules.dll" Version="14.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
 <Exceptions>
  <Exception Keyword="CA0053" Kind="AssemblyLoad">
   <Type>Microsoft.FxCop.Common.AssemblyLoadException</Type>
   <ExceptionMessage>Unable to load rule assembly 'c:\program files (x86)\microsoft\fxcop 14.0 for sdl\Rules\DataflowRules.dll': The assembly contains no FxCop rules.</ExceptionMessage>
  </Exception>
  <Exception Keyword="CA0053" Kind="AssemblyLoad">
   <Type>Microsoft.FxCop.Common.AssemblyLoadException</Type>
   <ExceptionMessage>Unable to load rule assembly 'c:\program files (x86)\microsoft\fxcop 14.0 for sdl\Rules\SecurityWebConfigurationRules.dll': The assembly contains no FxCop rules.</ExceptionMessage>
  </Exception>
  <Exception Keyword="CA0053" Kind="AssemblyLoad">
   <Type>Microsoft.FxCop.Common.AssemblyLoadException</Type>
   <ExceptionMessage>Unable to load rule assembly 'c:\program files (x86)\microsoft\fxcop 14.0 for sdl\Rules\SecurityWebDataflowRules.dll': The assembly contains no FxCop rules.</ExceptionMessage>
  </Exception>
  <Exception Keyword="CA0001" Kind="ProjectLoad">
   <Type>Microsoft.FxCop.Sdk.FxCopException</Type>
   <ExceptionMessage>Failed to add rule assembly: c:\program files (x86)\microsoft\fxcop 14.0 for sdl\Rules\DataflowRules.dll.</ExceptionMessage>
   <InnerType>Microsoft.FxCop.Common.AssemblyLoadException</InnerType>
   <InnerExceptionMessage>Unable to load rule assembly 'c:\program files (x86)\microsoft\fxcop 14.0 for sdl\Rules\DataflowRules.dll': The assembly contains no FxCop rules.</InnerExceptionMessage>
  </Exception>
  <Exception Keyword="CA0001" Kind="ProjectLoad">
   <Type>Microsoft.FxCop.Sdk.FxCopException</Type>
   <ExceptionMessage>Failed to add rule assembly: c:\program files (x86)\microsoft\fxcop 14.0 for sdl\Rules\SecurityWebConfigurationRules.dll.</ExceptionMessage>
   <InnerType>Microsoft.FxCop.Common.AssemblyLoadException</InnerType>
   <InnerExceptionMessage>Unable to load rule assembly 'c:\program files (x86)\microsoft\fxcop 14.0 for sdl\Rules\SecurityWebConfigurationRules.dll': The assembly contains no FxCop rules.</InnerExceptionMessage>
  </Exception>
  <Exception Keyword="CA0001" Kind="ProjectLoad">
   <Type>Microsoft.FxCop.Sdk.FxCopException</Type>
   <ExceptionMessage>Failed to add rule assembly: c:\program files (x86)\microsoft\fxcop 14.0 for sdl\Rules\SecurityWebDataflowRules.dll.</ExceptionMessage>
   <InnerType>Microsoft.FxCop.Common.AssemblyLoadException</InnerType>
   <InnerExceptionMessage>Unable to load rule assembly 'c:\program files (x86)\microsoft\fxcop 14.0 for sdl\Rules\SecurityWebDataflowRules.dll': The assembly contains no FxCop rules.</InnerExceptionMessage>
  </Exception>
  <Exception Keyword="CA0068" Kind="Engine" TreatAsWarning="True">
   <Type>Microsoft.FxCop.Sdk.FxCopException</Type>
   <ExceptionMessage>Debug information could not be found for target assembly 'Microsoft.Json.Schema.Validation.dll'. For best analysis results, include the .pdb file with debug information for 'Microsoft.Json.Schema.Validation.dll' in the same directory as the target assembly.</ExceptionMessage>
  </Exception>
  <Exception Keyword="CA0068" Kind="Engine" TreatAsWarning="True">
   <Type>Microsoft.FxCop.Sdk.FxCopException</Type>
   <ExceptionMessage>Debug information could not be found for target assembly 'Microsoft.Json.Pointer.dll'. For best analysis results, include the .pdb file with debug information for 'Microsoft.Json.Pointer.dll' in the same directory as the target assembly.</ExceptionMessage>
  </Exception>
  <Exception Keyword="CA0068" Kind="Engine" TreatAsWarning="True">
   <Type>Microsoft.FxCop.Sdk.FxCopException</Type>
   <ExceptionMessage>Debug information could not be found for target assembly 'Microsoft.Json.Schema.dll'. For best analysis results, include the .pdb file with debug information for 'Microsoft.Json.Schema.dll' in the same directory as the target assembly.</ExceptionMessage>
  </Exception>
 </Exceptions>
</FxCopReport>
