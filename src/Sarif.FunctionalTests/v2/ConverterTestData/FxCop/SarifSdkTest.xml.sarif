{
  "$schema": "http://json.schemastore.org/sarif-2.0.0-beta.2018-09-26",
  "version": "2.0.0-beta.2018-09-26",
  "runs": [
    {
      "tool": {
        "name": "FxCop"
      },
      "files": {
        "#$(ProjectDir)#../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Pointer.dll": {
          "mimeType": "application/octet-stream"
        },
        "#$(ProjectDir)#../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll": {
          "mimeType": "application/octet-stream"
        },
        "#$(ProjectDir)#../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.Validation.dll": {
          "mimeType": "application/octet-stream"
        },
        "#$(ProjectDir)#../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll": {
          "mimeType": "application/octet-stream"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Converters/AndroidStudioConverter.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Converters/ClangAnalyzerConverter.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Converters/CppCheckConverter.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Converters/Extensions.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Converters/FortifyConverter.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Converters/FortifyFprConverter.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Converters/FxCopConverter.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Converters/LogReader.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Converters/PluginConverterFactory.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Converters/PREFastConverter.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Converters/PylintConverter.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Converters/SemmleQlConverter.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Converters/SparseReader.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Converters/StaticDriverVerifierConverter.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Converters/ToolFileConverterBase.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Converters/ToolFormatConverter.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Converters/TSLintConverter.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Converters/TSLintLogReader.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Converters/PREFastObjectModel/Category.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Converters/PREFastObjectModel/Defect.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Converters/PREFastObjectModel/DefectList.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Converters/PREFastObjectModel/PREFastPath.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Converters/PylintObjectModel/PylintLogEntry.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Converters/PylintObjectModel/PylintLogReader.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Converters/TSLintObjectModel/TSLintLogEntry.cs": {
          "mimeType": "text/x-csharp"
        },
        "#$(ProjectDir)#../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll": {
          "mimeType": "application/octet-stream"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Attachment.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/CodeFlow.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/ConsoleLogger.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Conversion.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Edge.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/EdgeTraversal.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Core/ExceptionData.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/ExceptionData.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/ExtensionMethods.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/FileChange.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/FileData.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Core/FileData.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/FileDataEqualityComparer.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/FileLocation.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Core/FileLocation.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/FileRegionsCache.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Fix.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Graph.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/GraphEqualityComparer.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/GraphTraversal.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/GraphTraversalEqualityComparer.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/HashData.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/HashUtilities.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Invocation.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Core/Invocation.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/InvocationEqualityComparer.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Location.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Message.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Node.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Notification.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/PropertiesDictionary.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Core/PropertyBagHolder.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Region.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Resources.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Result.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/ResultEqualityComparer.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Rule.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/RuleConfiguration.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/RuleEqualityComparer.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/RuleUtilities.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Run.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/RunEqualityComparer.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/SarifLog.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/SarifRewritingVisitor.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/SarifUtilities.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/SarifUtilitiesVersionOne.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Stack.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Core/Stack.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/StackFrame.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Core/StackFrame.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/ThreadFlow.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/ThreadFlowLocation.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/ThreadFlowLocationEqualityComparer.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Tool.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Core/Tool.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/TypedPropertiesDictionaryConverter.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/UriHelper.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/VersionControlDetails.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Baseline/SarifLogBaseliner.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Baseline/SarifLogBaselinerFactory.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Baseline/DefaultBaseline/CodeFlowBaselineEquals.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Baseline/DefaultBaseline/DefaultBaselineExtensions.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Baseline/DefaultBaseline/LocationBaselineEquals.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Baseline/DefaultBaseline/ResultBaselineEquals.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Baseline/DefaultBaseline/StackBaselineEquals.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Baseline/DefaultBaseline/StackFrameBaselineEquals.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Baseline/DefaultBaseline/ThreadFlowBaselineEquals.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Baseline/DefaultBaseline/ThreadFlowLocationBaselineEquals.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Processors/Generic/GenericActionPipeline.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Processors/Generic/GenericMappingAction.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Processors/Log/SarifLogExtensionMethods.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Processors/Log/SarifLogPipeline.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Processors/Log/SarifLogStageFactory.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Readers/EnumConverter.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Readers/FlagsEnumConverter.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Readers/PropertyBagConverter.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Readers/ResultDiffingVisitor.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/AnnotatedCodeLocationVersionOne.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/AnnotatedCodeLocationVersionOneEqualityComparer.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/AnnotationVersionOne.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/CodeFlowVersionOne.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/ExceptionDataVersionOne.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/FileChangeVersionOne.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/FileDataVersionOne.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/FixVersionOne.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/FormattedRuleMessageVersionOne.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/InvocationVersionOne.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/InvocationVersionOneEqualityComparer.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/LocationVersionOne.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/NotificationVersionOne.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/PhysicalLocationVersionOne.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/ResultVersionOne.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/ResultVersionOneEqualityComparer.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/RuleVersionOne.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/RuleVersionOneEqualityComparer.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/RunVersionOne.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/RunVersionOneEqualityComparer.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/SarifLogVersionOne.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/SarifRewritingVisitorVersionOne.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/StackFrameVersionOne.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/StackFrameVersionOneEqualityComparer.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/StackVersionOne.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/ToolVersionOne.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Visitors/AbsoluteUrisVisitor.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Visitors/AddFileReferencesVisitor.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Visitors/InsertOptionalDataVisitor.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Visitors/RebaseUriVisitor.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Visitors/SarifCurrentToVersionOneVisitor.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Visitors/SarifTransformerUtilities.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Visitors/SarifVersionOneToCurrentVisitor.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Writers/MimeType.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Writers/ResultLogJsonWriter.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif/Writers/SarifLogger.cs": {
          "mimeType": "text/x-csharp"
        },
        "#$(ProjectDir)#../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll": {
          "mimeType": "application/octet-stream"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/AggregatingLogger.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/AnalysisContext.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/AnalyzeCommandBase.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Driver/ArgumentSplitter.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/DefaultDriverOptions.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Driver/DriverExtensionMethods.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/CompositionUtilities.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/EntryPointUtilities.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/ExportConfigurationCommandBase.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/ExportRulesMetadataCommandBase.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Driver/FileSpecifier.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/PlugInDriverCommand.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/StatisticsLogger.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Driver/FileStreamExtensionMethods.cs": {
          "mimeType": "text/x-csharp"
        },
        "#$(ProjectDir)#../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe": {
          "mimeType": "application/octet-stream"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Multitool/AbsoluteUriCommand.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Multitool/BaselineCommand.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Multitool/ConvertCommand.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Multitool/JTokenExtensions.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Multitool/MergeCommand.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Multitool/RebaseUriCommand.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Multitool/RewriteCommand.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Multitool/SarifValidationContext.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Multitool/TransformCommand.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Multitool/ValidateCommand.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Multitool/Rules/DoNotUseFriendlyNameAsRuleId.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Multitool/Rules/EndColumnMustNotBeLessThanStartColumn.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Multitool/Rules/EndLineMustNotBeLessThanStartLine.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Multitool/Rules/EndTimeMustBeAfterStartTime.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Multitool/Rules/HashAlgorithmsMustBeUnique.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Multitool/Rules/MessagesShouldEndWithPeriod.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Multitool/Rules/SarifValidationSkimmerBase.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Multitool/Rules/StepValuesMustFormOneBasedSequence.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Multitool/Rules/UriBaseIdRequiresRelativeUri.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Multitool/Rules/UrisMustBeValid.cs": {
          "mimeType": "text/x-csharp"
        },
        "file:///D:/src/sarif-sdk/src/Sarif.Multitool/Rules/UseAbsolutePathsForNestedFileUriFragments.cs": {
          "mimeType": "text/x-csharp"
        }
      },
      "logicalLocations": {
        "Microsoft.CodeAnalysis.Sarif": {
          "kind": "namespace"
        },
        "Microsoft.CodeAnalysis.Sarif.Baseline": {
          "kind": "namespace"
        },
        "Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline": {
          "kind": "namespace"
        },
        "Microsoft.CodeAnalysis.Sarif.Converters": {
          "kind": "namespace"
        },
        "Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel": {
          "kind": "namespace"
        },
        "Microsoft.CodeAnalysis.Sarif.Converters.PylintObjectModel": {
          "kind": "namespace"
        },
        "Microsoft.CodeAnalysis.Sarif.Converters.TSLintObjectModel": {
          "kind": "namespace"
        },
        "Microsoft.CodeAnalysis.Sarif.Driver": {
          "kind": "namespace"
        },
        "Microsoft.CodeAnalysis.Sarif.Multitool": {
          "kind": "namespace"
        },
        "Microsoft.CodeAnalysis.Sarif.Multitool.Rules": {
          "kind": "namespace"
        },
        "Microsoft.CodeAnalysis.Sarif.Processors": {
          "kind": "namespace"
        },
        "Microsoft.CodeAnalysis.Sarif.Readers": {
          "kind": "namespace"
        },
        "Microsoft.CodeAnalysis.Sarif.VersionOne": {
          "kind": "namespace"
        },
        "Microsoft.CodeAnalysis.Sarif.VersionOne.Readers": {
          "kind": "namespace"
        },
        "Microsoft.CodeAnalysis.Sarif.Visitors": {
          "kind": "namespace"
        },
        "Microsoft.CodeAnalysis.Sarif.Writers": {
          "kind": "namespace"
        },
        "Microsoft.CodeAnalysisDriver": {
          "kind": "namespace"
        },
        "Microsoft.Json.Pointer": {
          "kind": "namespace"
        },
        "microsoft.json.pointer.dll": {
          "kind": "module"
        },
        "microsoft.json.pointer.dll!Microsoft.Json.Pointer": {
          "name": "Microsoft.Json.Pointer",
          "parentKey": "microsoft.json.pointer.dll",
          "kind": "namespace"
        },
        "microsoft.json.pointer.dll!Microsoft.Json.Pointer.JsonPointer": {
          "name": "JsonPointer",
          "parentKey": "microsoft.json.pointer.dll!Microsoft.Json.Pointer",
          "kind": "type"
        },
        "microsoft.json.pointer.dll!Microsoft.Json.Pointer.JsonPointer..ctor(System.String,Microsoft.Json.Pointer.JsonPointerRepresentation)": {
          "name": ".ctor(System.String,Microsoft.Json.Pointer.JsonPointerRepresentation)",
          "parentKey": "microsoft.json.pointer.dll!Microsoft.Json.Pointer.JsonPointer",
          "kind": "member"
        },
        "microsoft.json.pointer.dll!Microsoft.Json.Pointer.Resources": {
          "name": "Resources",
          "parentKey": "microsoft.json.pointer.dll!Microsoft.Json.Pointer",
          "kind": "type"
        },
        "microsoft.json.pointer.dll!Microsoft.Json.Pointer.StringExtensions": {
          "name": "StringExtensions",
          "parentKey": "microsoft.json.pointer.dll!Microsoft.Json.Pointer",
          "kind": "type"
        },
        "microsoft.json.pointer.dll!Microsoft.Json.Pointer.StringExtensions.AtIndex(System.String,System.Int32)": {
          "name": "AtIndex(System.String,System.Int32)",
          "parentKey": "microsoft.json.pointer.dll!Microsoft.Json.Pointer.StringExtensions",
          "kind": "member"
        },
        "microsoft.json.pointer.dll!Microsoft.Json.Pointer.StringExtensions.AtProperty(System.String,System.String)": {
          "name": "AtProperty(System.String,System.String)",
          "parentKey": "microsoft.json.pointer.dll!Microsoft.Json.Pointer.StringExtensions",
          "kind": "member"
        },
        "microsoft.json.pointer.dll!Microsoft.Json.Pointer.StringExtensions.UnescapeJsonPointer(System.String)": {
          "name": "UnescapeJsonPointer(System.String)",
          "parentKey": "microsoft.json.pointer.dll!Microsoft.Json.Pointer.StringExtensions",
          "kind": "member"
        },
        "microsoft.json.pointer.dll!Microsoft.Json.Pointer.VersionConstants": {
          "name": "VersionConstants",
          "parentKey": "microsoft.json.pointer.dll!Microsoft.Json.Pointer",
          "kind": "type"
        },
        "microsoft.json.pointer.dll!Microsoft.Json.Pointer.VersionConstants.PreRelease": {
          "name": "PreRelease",
          "parentKey": "microsoft.json.pointer.dll!Microsoft.Json.Pointer.VersionConstants",
          "kind": "member"
        },
        "microsoft.json.schema.dll": {
          "kind": "module"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema": {
          "name": "Microsoft.Json.Schema",
          "parentKey": "microsoft.json.schema.dll",
          "kind": "namespace"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.AdditionalItems": {
          "name": "AdditionalItems",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema",
          "kind": "type"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.AdditionalItems..ctor(Microsoft.Json.Schema.AdditionalItems)": {
          "name": ".ctor(Microsoft.Json.Schema.AdditionalItems)",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema.AdditionalItems",
          "kind": "member"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.AdditionalProperties": {
          "name": "AdditionalProperties",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema",
          "kind": "type"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.AdditionalProperties..ctor(Microsoft.Json.Schema.AdditionalProperties)": {
          "name": ".ctor(Microsoft.Json.Schema.AdditionalProperties)",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema.AdditionalProperties",
          "kind": "member"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.Dependency": {
          "name": "Dependency",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema",
          "kind": "type"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.Dependency..ctor(Microsoft.Json.Schema.Dependency)": {
          "name": ".ctor(Microsoft.Json.Schema.Dependency)",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema.Dependency",
          "kind": "member"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.Dependency.PropertyDependencies": {
          "name": "PropertyDependencies",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema.Dependency",
          "kind": "member"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.DependencyConverter": {
          "name": "DependencyConverter",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema",
          "kind": "type"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.DependencyConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)": {
          "name": "WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema.DependencyConverter",
          "kind": "member"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.Error": {
          "name": "Error",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema",
          "kind": "type"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.Error.CreateException(System.String,System.Object[])": {
          "name": "CreateException(System.String,System.Object[])",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema.Error",
          "kind": "member"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.Items": {
          "name": "Items",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema",
          "kind": "type"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.Items..ctor(Microsoft.Json.Schema.Items)": {
          "name": ".ctor(Microsoft.Json.Schema.Items)",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema.Items",
          "kind": "member"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.Items.Schemas": {
          "name": "Schemas",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema.Items",
          "kind": "member"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.ItemsConverter": {
          "name": "ItemsConverter",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema",
          "kind": "type"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.ItemsConverter.Instance": {
          "name": "Instance",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema.ItemsConverter",
          "kind": "member"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.ItemsConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)": {
          "name": "WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema.ItemsConverter",
          "kind": "member"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSchema": {
          "name": "JsonSchema",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema",
          "kind": "type"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSchema..ctor(Microsoft.Json.Schema.JsonSchema)": {
          "name": ".ctor(Microsoft.Json.Schema.JsonSchema)",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSchema",
          "kind": "member"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSchema.AllOf": {
          "name": "AllOf",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSchema",
          "kind": "member"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSchema.AnyOf": {
          "name": "AnyOf",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSchema",
          "kind": "member"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSchema.Collapse(Microsoft.Json.Schema.JsonSchema,Microsoft.Json.Schema.JsonSchema)": {
          "name": "Collapse(Microsoft.Json.Schema.JsonSchema,Microsoft.Json.Schema.JsonSchema)",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSchema",
          "kind": "member"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSchema.Definitions": {
          "name": "Definitions",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSchema",
          "kind": "member"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSchema.Dependencies": {
          "name": "Dependencies",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSchema",
          "kind": "member"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSchema.Enum": {
          "name": "Enum",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSchema",
          "kind": "member"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSchema.Equals(Microsoft.Json.Schema.JsonSchema)": {
          "name": "Equals(Microsoft.Json.Schema.JsonSchema)",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSchema",
          "kind": "member"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSchema.OneOf": {
          "name": "OneOf",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSchema",
          "kind": "member"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSchema.PatternProperties": {
          "name": "PatternProperties",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSchema",
          "kind": "member"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSchema.Properties": {
          "name": "Properties",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSchema",
          "kind": "member"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSchema.Required": {
          "name": "Required",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSchema",
          "kind": "member"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSchema.Type": {
          "name": "Type",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSchema",
          "kind": "member"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSchemaContractResolver": {
          "name": "JsonSchemaContractResolver",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema",
          "kind": "type"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSchemaContractResolver.ResolveContract(System.Type)": {
          "name": "ResolveContract(System.Type)",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSchemaContractResolver",
          "kind": "member"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSchemaExtensions": {
          "name": "JsonSchemaExtensions",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema",
          "kind": "type"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSchemaExtensions.SafeGetType(Microsoft.Json.Schema.JsonSchema)": {
          "name": "SafeGetType(Microsoft.Json.Schema.JsonSchema)",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSchemaExtensions",
          "kind": "member"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSerializerExtensions": {
          "name": "JsonSerializerExtensions",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema",
          "kind": "type"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSerializerExtensions.CaptureError(Newtonsoft.Json.JsonSerializer,Newtonsoft.Json.Linq.JToken,Microsoft.Json.Schema.ErrorNumber,System.Object[])": {
          "name": "CaptureError(Newtonsoft.Json.JsonSerializer,Newtonsoft.Json.Linq.JToken,Microsoft.Json.Schema.ErrorNumber,System.Object[])",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSerializerExtensions",
          "kind": "member"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSyntaxException": {
          "name": "JsonSyntaxException",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema",
          "kind": "type"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSyntaxException..ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)": {
          "name": ".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSyntaxException",
          "kind": "member"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.JTokenTypeExtensions": {
          "name": "JTokenTypeExtensions",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema",
          "kind": "type"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.JTokenTypeExtensions.ToSchemaType(Newtonsoft.Json.Linq.JTokenType)": {
          "name": "ToSchemaType(Newtonsoft.Json.Linq.JTokenType)",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema.JTokenTypeExtensions",
          "kind": "member"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.MustBeStringConverter": {
          "name": "MustBeStringConverter",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema",
          "kind": "type"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.MustBeStringConverter.CanConvert(System.Type)": {
          "name": "CanConvert(System.Type)",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema.MustBeStringConverter",
          "kind": "member"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.MustBeStringConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)": {
          "name": "ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema.MustBeStringConverter",
          "kind": "member"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.RefProperty": {
          "name": "RefProperty",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema",
          "kind": "type"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.RefProperty.s_inputPattern": {
          "name": "s_inputPattern",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema.RefProperty",
          "kind": "member"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.RefProperty.s_outputPattern": {
          "name": "s_outputPattern",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema.RefProperty",
          "kind": "member"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.SchemaReader": {
          "name": "SchemaReader",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema",
          "kind": "type"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.SchemaReader.ReadSchema(System.IO.TextReader,System.String)": {
          "name": "ReadSchema(System.IO.TextReader,System.String)",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema.SchemaReader",
          "kind": "member"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.SchemaReader.ReadSchema(System.String,System.String)": {
          "name": "ReadSchema(System.String,System.String)",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema.SchemaReader",
          "kind": "member"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.SchemaTypeConverter": {
          "name": "SchemaTypeConverter",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema",
          "kind": "type"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.SchemaTypeConverter.SchemaTypeFromString(System.String)": {
          "name": "SchemaTypeFromString(System.String)",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema.SchemaTypeConverter",
          "kind": "member"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.SchemaTypeConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)": {
          "name": "WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema.SchemaTypeConverter",
          "kind": "member"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.SchemaTypeConverter+<>c": {
          "name": "SchemaTypeConverter+<>c",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema",
          "kind": "type"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.SchemaTypeConverter+<>c.<WriteJson>b__3_0(Microsoft.Json.Schema.SchemaType)": {
          "name": "<WriteJson>b__3_0(Microsoft.Json.Schema.SchemaType)",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema.SchemaTypeConverter+<>c",
          "kind": "member"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.SchemaValidationException": {
          "name": "SchemaValidationException",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema",
          "kind": "type"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.SchemaValidationException..ctor(Newtonsoft.Json.Linq.JToken,Microsoft.Json.Schema.ErrorNumber,System.Object[])": {
          "name": ".ctor(Newtonsoft.Json.Linq.JToken,Microsoft.Json.Schema.ErrorNumber,System.Object[])",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema.SchemaValidationException",
          "kind": "member"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.SchemaValidationException..ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)": {
          "name": ".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema.SchemaValidationException",
          "kind": "member"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.SchemaValidationException.Args": {
          "name": "Args",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema.SchemaValidationException",
          "kind": "member"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.SchemaWriter": {
          "name": "SchemaWriter",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema",
          "kind": "type"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.SchemaWriter.WriteSchema(Newtonsoft.Json.JsonWriter,Microsoft.Json.Schema.JsonSchema,Newtonsoft.Json.Formatting)": {
          "name": "WriteSchema(Newtonsoft.Json.JsonWriter,Microsoft.Json.Schema.JsonSchema,Newtonsoft.Json.Formatting)",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema.SchemaWriter",
          "kind": "member"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.SchemaWriter.WriteSchema(System.IO.TextWriter,Microsoft.Json.Schema.JsonSchema,Newtonsoft.Json.Formatting)": {
          "name": "WriteSchema(System.IO.TextWriter,Microsoft.Json.Schema.JsonSchema,Newtonsoft.Json.Formatting)",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema.SchemaWriter",
          "kind": "member"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.UriOrFragment": {
          "name": "UriOrFragment",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema",
          "kind": "type"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.UriOrFragment..ctor(Microsoft.Json.Schema.UriOrFragment)": {
          "name": ".ctor(Microsoft.Json.Schema.UriOrFragment)",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema.UriOrFragment",
          "kind": "member"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.UriOrFragment..ctor(System.String)": {
          "name": ".ctor(System.String)",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema.UriOrFragment",
          "kind": "member"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.UriOrFragment.Equals(System.Object)": {
          "name": "Equals(System.Object)",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema.UriOrFragment",
          "kind": "member"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.UriOrFragmentConverter": {
          "name": "UriOrFragmentConverter",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema",
          "kind": "type"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.UriOrFragmentConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)": {
          "name": "ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema.UriOrFragmentConverter",
          "kind": "member"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.UriOrFragmentConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)": {
          "name": "WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema.UriOrFragmentConverter",
          "kind": "member"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.UriOrFragmentExtensions": {
          "name": "UriOrFragmentExtensions",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema",
          "kind": "type"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.UriOrFragmentExtensions.GetDefinitionName(Microsoft.Json.Schema.UriOrFragment)": {
          "name": "GetDefinitionName(Microsoft.Json.Schema.UriOrFragment)",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema.UriOrFragmentExtensions",
          "kind": "member"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.VersionConstants": {
          "name": "VersionConstants",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema",
          "kind": "type"
        },
        "microsoft.json.schema.dll!Microsoft.Json.Schema.VersionConstants.PreRelease": {
          "name": "PreRelease",
          "parentKey": "microsoft.json.schema.dll!Microsoft.Json.Schema.VersionConstants",
          "kind": "member"
        },
        "microsoft.json.schema.validation.dll": {
          "kind": "module"
        },
        "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation": {
          "name": "Microsoft.Json.Schema.Validation",
          "parentKey": "microsoft.json.schema.validation.dll",
          "kind": "namespace"
        },
        "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation.JsonSyntaxErrorExceptionExtensions": {
          "name": "JsonSyntaxErrorExceptionExtensions",
          "parentKey": "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation",
          "kind": "type"
        },
        "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation.JsonSyntaxErrorExceptionExtensions.ToSarifResult(Microsoft.Json.Schema.JsonSyntaxException)": {
          "name": "ToSarifResult(Microsoft.Json.Schema.JsonSyntaxException)",
          "parentKey": "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation.JsonSyntaxErrorExceptionExtensions",
          "kind": "member"
        },
        "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation.JTokenEqualityComparer": {
          "name": "JTokenEqualityComparer",
          "parentKey": "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation",
          "kind": "type"
        },
        "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation.JTokenEqualityComparer.NullEquals(System.Object)": {
          "name": "NullEquals(System.Object)",
          "parentKey": "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation.JTokenEqualityComparer",
          "kind": "member"
        },
        "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation.ResultFactory": {
          "name": "ResultFactory",
          "parentKey": "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation",
          "kind": "type"
        },
        "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation.ResultFactory.CreateResult(Newtonsoft.Json.Linq.JToken,Microsoft.Json.Schema.ErrorNumber,System.Object[])": {
          "name": "CreateResult(Newtonsoft.Json.Linq.JToken,Microsoft.Json.Schema.ErrorNumber,System.Object[])",
          "parentKey": "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation.ResultFactory",
          "kind": "member"
        },
        "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation.RuleExtensions": {
          "name": "RuleExtensions",
          "parentKey": "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation",
          "kind": "type"
        },
        "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation.RuleExtensions.SetResultFile(Microsoft.CodeAnalysis.Sarif.Result,System.String)": {
          "name": "SetResultFile(Microsoft.CodeAnalysis.Sarif.Result,System.String)",
          "parentKey": "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation.RuleExtensions",
          "kind": "member"
        },
        "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation.RuleFactory": {
          "name": "RuleFactory",
          "parentKey": "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation",
          "kind": "type"
        },
        "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation.RuleFactory.ErrorCodeFormat": {
          "name": "ErrorCodeFormat",
          "parentKey": "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation.RuleFactory",
          "kind": "member"
        },
        "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation.RuleFactory.GetRuleFromRuleId(System.String)": {
          "name": "GetRuleFromRuleId(System.String)",
          "parentKey": "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation.RuleFactory",
          "kind": "member"
        },
        "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation.RuleResources": {
          "name": "RuleResources",
          "parentKey": "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation",
          "kind": "type"
        },
        "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation.Validator": {
          "name": "Validator",
          "parentKey": "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation",
          "kind": "type"
        },
        "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation.Validator.FormatBoolean(System.String)": {
          "name": "FormatBoolean(System.String)",
          "parentKey": "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation.Validator",
          "kind": "member"
        },
        "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation.Validator.FormatObject(System.Object)": {
          "name": "FormatObject(System.Object)",
          "parentKey": "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation.Validator",
          "kind": "member"
        },
        "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation.Validator.GetPropertyNames(Newtonsoft.Json.Linq.JObject)": {
          "name": "GetPropertyNames(Newtonsoft.Json.Linq.JObject)",
          "parentKey": "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation.Validator",
          "kind": "member"
        },
        "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation.Validator.TokenMatchesEnum(Newtonsoft.Json.Linq.JToken,System.Collections.Generic.IList`1<System.Object>)": {
          "name": "TokenMatchesEnum(Newtonsoft.Json.Linq.JToken,System.Collections.Generic.IList`1<System.Object>)",
          "parentKey": "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation.Validator",
          "kind": "member"
        },
        "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation.Validator.UnicodeLength(System.String)": {
          "name": "UnicodeLength(System.String)",
          "parentKey": "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation.Validator",
          "kind": "member"
        },
        "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation.Validator.ValidateAdditionalProperties(Newtonsoft.Json.Linq.JObject,System.Collections.Generic.List`1<System.String>,Microsoft.Json.Schema.AdditionalProperties)": {
          "name": "ValidateAdditionalProperties(Newtonsoft.Json.Linq.JObject,System.Collections.Generic.List`1<System.String>,Microsoft.Json.Schema.AdditionalProperties)",
          "parentKey": "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation.Validator",
          "kind": "member"
        },
        "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation.Validator.ValidateToken(Newtonsoft.Json.Linq.JToken,Microsoft.Json.Schema.JsonSchema)": {
          "name": "ValidateToken(Newtonsoft.Json.Linq.JToken,Microsoft.Json.Schema.JsonSchema)",
          "parentKey": "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation.Validator",
          "kind": "member"
        },
        "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation.VersionConstants": {
          "name": "VersionConstants",
          "parentKey": "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation",
          "kind": "type"
        },
        "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation.VersionConstants.PreRelease": {
          "name": "PreRelease",
          "parentKey": "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation.VersionConstants",
          "kind": "member"
        },
        "sarif.converters.dll": {
          "kind": "module"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters": {
          "name": "Microsoft.CodeAnalysis.Sarif.Converters",
          "parentKey": "sarif.converters.dll",
          "kind": "namespace"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.AndroidStudioConverter": {
          "name": "AndroidStudioConverter",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters",
          "kind": "type"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.AndroidStudioConverter.Convert(System.IO.Stream,Microsoft.CodeAnalysis.Sarif.IResultLogWriter,Microsoft.CodeAnalysis.Sarif.OptionallyEmittedData)": {
          "name": "Convert(System.IO.Stream,Microsoft.CodeAnalysis.Sarif.IResultLogWriter,Microsoft.CodeAnalysis.Sarif.OptionallyEmittedData)",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.AndroidStudioConverter",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.AssemblyLoadFileDelegate": {
          "name": "AssemblyLoadFileDelegate",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters",
          "kind": "type"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.ClangAnalyzerConverter": {
          "name": "ClangAnalyzerConverter",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters",
          "kind": "type"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.ClangAnalyzerConverter.Convert(System.IO.Stream,Microsoft.CodeAnalysis.Sarif.IResultLogWriter,Microsoft.CodeAnalysis.Sarif.OptionallyEmittedData)": {
          "name": "Convert(System.IO.Stream,Microsoft.CodeAnalysis.Sarif.IResultLogWriter,Microsoft.CodeAnalysis.Sarif.OptionallyEmittedData)",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.ClangAnalyzerConverter",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.ClangAnalyzerConverter.ReadDictionary(System.Xml.XmlReader)": {
          "name": "ReadDictionary(System.Xml.XmlReader)",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.ClangAnalyzerConverter",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.ConverterResources": {
          "name": "ConverterResources",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters",
          "kind": "type"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.ConverterResources..ctor()": {
          "name": ".ctor()",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.ConverterResources",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.CppCheckConverter": {
          "name": "CppCheckConverter",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters",
          "kind": "type"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.CppCheckConverter.Convert(System.IO.Stream,Microsoft.CodeAnalysis.Sarif.IResultLogWriter,Microsoft.CodeAnalysis.Sarif.OptionallyEmittedData)": {
          "name": "Convert(System.IO.Stream,Microsoft.CodeAnalysis.Sarif.IResultLogWriter,Microsoft.CodeAnalysis.Sarif.OptionallyEmittedData)",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.CppCheckConverter",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.Extensions": {
          "name": "Extensions",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters",
          "kind": "type"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.Extensions.HasDefaultConstructor(System.Type)": {
          "name": "HasDefaultConstructor(System.Type)",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.Extensions",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.Extensions.MatchesToolFormat(System.String,System.String)": {
          "name": "MatchesToolFormat(System.String,System.String)",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.Extensions",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.FortifyConverter": {
          "name": "FortifyConverter",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters",
          "kind": "type"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.FortifyConverter.Convert(System.IO.Stream,Microsoft.CodeAnalysis.Sarif.IResultLogWriter,Microsoft.CodeAnalysis.Sarif.OptionallyEmittedData)": {
          "name": "Convert(System.IO.Stream,Microsoft.CodeAnalysis.Sarif.IResultLogWriter,Microsoft.CodeAnalysis.Sarif.OptionallyEmittedData)",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.FortifyConverter",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.FortifyFprConverter": {
          "name": "FortifyFprConverter",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters",
          "kind": "type"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.FortifyFprConverter.AddMessagesToResults()": {
          "name": "AddMessagesToResults()",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.FortifyFprConverter",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.FortifyFprConverter.ParseAuditStream(System.IO.Stream)": {
          "name": "ParseAuditStream(System.IO.Stream)",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.FortifyFprConverter",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.FortifyFprConverter.ParseFile()": {
          "name": "ParseFile()",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.FortifyFprConverter",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.FortifyFprConverter.ParseRegion()": {
          "name": "ParseRegion()",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.FortifyFprConverter",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.FortifyFprConverter.ParseSnippet()": {
          "name": "ParseSnippet()",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.FortifyFprConverter",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.FxCopConverter": {
          "name": "FxCopConverter",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters",
          "kind": "type"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.FxCopConverter.BuildFileLocationFromFxCopReference(System.String)": {
          "name": "BuildFileLocationFromFxCopReference(System.String)",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.FxCopConverter",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.FxCopConverter.CreateRule(Microsoft.CodeAnalysis.Sarif.Converters.FxCopLogReader+Context)": {
          "name": "CreateRule(Microsoft.CodeAnalysis.Sarif.Converters.FxCopLogReader+Context)",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.FxCopConverter",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.FxCopLogReader": {
          "name": "FxCopLogReader",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters",
          "kind": "type"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.FxCopLogReader.Read(Microsoft.CodeAnalysis.Sarif.Converters.FxCopLogReader+Context,System.IO.Stream)": {
          "name": "Read(Microsoft.CodeAnalysis.Sarif.Converters.FxCopLogReader+Context,System.IO.Stream)",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.FxCopLogReader",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.LogReader`1": {
          "name": "LogReader`1",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters",
          "kind": "type"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.LogReader`1.ReadLog(System.String,System.Text.Encoding)": {
          "name": "ReadLog(System.String,System.Text.Encoding)",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.LogReader`1",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PluginConverterFactory": {
          "name": "PluginConverterFactory",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters",
          "kind": "type"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PluginConverterFactory.CreateConverterCore(System.String)": {
          "name": "CreateConverterCore(System.String)",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PluginConverterFactory",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PREfastConverter": {
          "name": "PREfastConverter",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters",
          "kind": "type"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PREfastConverter.Convert(System.IO.Stream,Microsoft.CodeAnalysis.Sarif.IResultLogWriter,Microsoft.CodeAnalysis.Sarif.OptionallyEmittedData)": {
          "name": "Convert(System.IO.Stream,Microsoft.CodeAnalysis.Sarif.IResultLogWriter,Microsoft.CodeAnalysis.Sarif.OptionallyEmittedData)",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PREfastConverter",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PREfastConverter.CreateResult(Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel.Defect)": {
          "name": "CreateResult(Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel.Defect)",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PREfastConverter",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PREfastConverter.GenerateCodeFlows(Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel.Defect,Microsoft.CodeAnalysis.Sarif.Result)": {
          "name": "GenerateCodeFlows(Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel.Defect,Microsoft.CodeAnalysis.Sarif.Result)",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PREfastConverter",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PREfastConverter.RemovePREfastNewLine(System.String)": {
          "name": "RemovePREfastNewLine(System.String)",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PREfastConverter",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PREfastConverter.SetProbability(Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel.Defect,Microsoft.CodeAnalysis.Sarif.Result)": {
          "name": "SetProbability(Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel.Defect,Microsoft.CodeAnalysis.Sarif.Result)",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PREfastConverter",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PREfastConverter.SetRank(Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel.Defect,Microsoft.CodeAnalysis.Sarif.Result)": {
          "name": "SetRank(Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel.Defect,Microsoft.CodeAnalysis.Sarif.Result)",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PREfastConverter",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PylintConverter": {
          "name": "PylintConverter",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters",
          "kind": "type"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PylintConverter.CreateResult(Microsoft.CodeAnalysis.Sarif.Converters.PylintObjectModel.PylintLogEntry)": {
          "name": "CreateResult(Microsoft.CodeAnalysis.Sarif.Converters.PylintObjectModel.PylintLogEntry)",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PylintConverter",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.SemmleQLConverter": {
          "name": "SemmleQLConverter",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters",
          "kind": "type"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.SemmleQLConverter.GetResultsFromStream(System.IO.Stream)": {
          "name": "GetResultsFromStream(System.IO.Stream)",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.SemmleQLConverter",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.SemmleQLConverter.NormalizeRawMessage(System.String,System.String&)": {
          "name": "NormalizeRawMessage(System.String,System.String&)",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.SemmleQLConverter",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.SemmleQLConverter.s_delimiters": {
          "name": "s_delimiters",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.SemmleQLConverter",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.SemmleQLConverter.SemmleError": {
          "name": "SemmleError",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.SemmleQLConverter",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.SemmleQLConverter.SemmleRecommendation": {
          "name": "SemmleRecommendation",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.SemmleQLConverter",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.SemmleQLConverter.SemmleWarning": {
          "name": "SemmleWarning",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.SemmleQLConverter",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.SparseReader": {
          "name": "SparseReader",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters",
          "kind": "type"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.SparseReader.CreateFromStream(Microsoft.CodeAnalysis.Sarif.Converters.SparseReaderDispatchTable,System.IO.Stream,System.Xml.Schema.XmlSchemaSet)": {
          "name": "CreateFromStream(Microsoft.CodeAnalysis.Sarif.Converters.SparseReaderDispatchTable,System.IO.Stream,System.Xml.Schema.XmlSchemaSet)",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.SparseReader",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.SparseReader.ReadChildren(System.String,System.Object,System.String&)": {
          "name": "ReadChildren(System.String,System.Object,System.String&)",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.SparseReader",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.SparseReaderDispatchTable": {
          "name": "SparseReaderDispatchTable",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters",
          "kind": "type"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.StaticDriverVerifierConverter": {
          "name": "StaticDriverVerifierConverter",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters",
          "kind": "type"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.StaticDriverVerifierConverter._sb": {
          "name": "_sb",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.StaticDriverVerifierConverter",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.StaticDriverVerifierConverter.IsHarnessOrRulesFiles(System.String)": {
          "name": "IsHarnessOrRulesFiles(System.String)",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.StaticDriverVerifierConverter",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.StaticDriverVerifierConverter.ProcessLine(System.String,System.Int32&,Microsoft.CodeAnalysis.Sarif.Result)": {
          "name": "ProcessLine(System.String,System.Int32&,Microsoft.CodeAnalysis.Sarif.Result)",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.StaticDriverVerifierConverter",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.StringReference": {
          "name": "StringReference",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters",
          "kind": "type"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.StringReference.Equals(System.Object,System.Object)": {
          "name": "Equals(System.Object,System.Object)",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.StringReference",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.ToolFileConverterBase": {
          "name": "ToolFileConverterBase",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters",
          "kind": "type"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.ToolFileConverterBase.GetLogicalLocationName(System.String,System.String,System.String)": {
          "name": "GetLogicalLocationName(System.String,System.String,System.String)",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.ToolFileConverterBase",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.ToolFormat": {
          "name": "ToolFormat",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters",
          "kind": "type"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.ToolFormat.CppCheck": {
          "name": "CppCheck",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.ToolFormat",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.ToolFormat.FortifyFpr": {
          "name": "FortifyFpr",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.ToolFormat",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.ToolFormat.PREfast": {
          "name": "PREfast",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.ToolFormat",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.ToolFormat.Pylint": {
          "name": "Pylint",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.ToolFormat",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.ToolFormat.SemmleQL": {
          "name": "SemmleQL",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.ToolFormat",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.ToolFormatConverter": {
          "name": "ToolFormatConverter",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters",
          "kind": "type"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.ToolFormatConverter..ctor(Microsoft.CodeAnalysis.Sarif.Converters.AssemblyLoadFileDelegate)": {
          "name": ".ctor(Microsoft.CodeAnalysis.Sarif.Converters.AssemblyLoadFileDelegate)",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.ToolFormatConverter",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.ToolFormatConverter.ConvertToStandardFormat(System.String,System.IO.Stream,Microsoft.CodeAnalysis.Sarif.IResultLogWriter,Microsoft.CodeAnalysis.Sarif.OptionallyEmittedData,System.String)": {
          "name": "ConvertToStandardFormat(System.String,System.IO.Stream,Microsoft.CodeAnalysis.Sarif.IResultLogWriter,Microsoft.CodeAnalysis.Sarif.OptionallyEmittedData,System.String)",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.ToolFormatConverter",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.ToolFormatConverter.ConvertToStandardFormat(System.String,System.String,System.String,Microsoft.CodeAnalysis.Sarif.Writers.LoggingOptions,Microsoft.CodeAnalysis.Sarif.OptionallyEmittedData,System.String)": {
          "name": "ConvertToStandardFormat(System.String,System.String,System.String,Microsoft.CodeAnalysis.Sarif.Writers.LoggingOptions,Microsoft.CodeAnalysis.Sarif.OptionallyEmittedData,System.String)",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.ToolFormatConverter",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.TSLintConverter": {
          "name": "TSLintConverter",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters",
          "kind": "type"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.TSLintConverter.CreateResult(Microsoft.CodeAnalysis.Sarif.Converters.TSLintObjectModel.TSLintLogEntry)": {
          "name": "CreateResult(Microsoft.CodeAnalysis.Sarif.Converters.TSLintObjectModel.TSLintLogEntry)",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.TSLintConverter",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.TSLintLogReader": {
          "name": "TSLintLogReader",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters",
          "kind": "type"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.TSLintLogReader.NormalizeEntries(Newtonsoft.Json.Linq.JArray)": {
          "name": "NormalizeEntries(Newtonsoft.Json.Linq.JArray)",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.TSLintLogReader",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.TSLintLogReader.NormalizeFixProperty(Newtonsoft.Json.Linq.JProperty)": {
          "name": "NormalizeFixProperty(Newtonsoft.Json.Linq.JProperty)",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.TSLintLogReader",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.TSLintLogReader.NormalizeLog(Newtonsoft.Json.Linq.JToken)": {
          "name": "NormalizeLog(Newtonsoft.Json.Linq.JToken)",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.TSLintLogReader",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.TSLintLogReader.ReadLog(System.IO.Stream)": {
          "name": "ReadLog(System.IO.Stream)",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.TSLintLogReader",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel": {
          "name": "Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel",
          "parentKey": "sarif.converters.dll",
          "kind": "namespace"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel.Category": {
          "name": "Category",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel",
          "kind": "type"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel.Category.ReadXml(System.Xml.XmlReader)": {
          "name": "ReadXml(System.Xml.XmlReader)",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel.Category",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel.Defect": {
          "name": "Defect",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel",
          "kind": "type"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel.Defect.Category": {
          "name": "Category",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel.Defect",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel.Defect.Funcline": {
          "name": "Funcline",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel.Defect",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel.Defect.SFA": {
          "name": "SFA",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel.Defect",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel.DefectList": {
          "name": "DefectList",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel",
          "kind": "type"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel.DefectList.Defects": {
          "name": "Defects",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel.DefectList",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel.PREFastPath": {
          "name": "PREFastPath",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel",
          "kind": "type"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel.PREFastPath.SFAs": {
          "name": "SFAs",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel.PREFastPath",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel.SFA": {
          "name": "SFA",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel",
          "kind": "type"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PylintObjectModel": {
          "name": "Microsoft.CodeAnalysis.Sarif.Converters.PylintObjectModel",
          "parentKey": "sarif.converters.dll",
          "kind": "namespace"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PylintObjectModel.PylintLog": {
          "name": "PylintLog",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PylintObjectModel",
          "kind": "type"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PylintObjectModel.PylintLogEntry": {
          "name": "PylintLogEntry",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PylintObjectModel",
          "kind": "type"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PylintObjectModel.PylintLogEntry.Type": {
          "name": "Type",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PylintObjectModel.PylintLogEntry",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PylintObjectModel.PylintLogReader": {
          "name": "PylintLogReader",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PylintObjectModel",
          "kind": "type"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PylintObjectModel.PylintLogReader.ReadLog(System.IO.Stream)": {
          "name": "ReadLog(System.IO.Stream)",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PylintObjectModel.PylintLogReader",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.TSLintObjectModel": {
          "name": "Microsoft.CodeAnalysis.Sarif.Converters.TSLintObjectModel",
          "parentKey": "sarif.converters.dll",
          "kind": "namespace"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.TSLintObjectModel.TSLintLog": {
          "name": "TSLintLog",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.TSLintObjectModel",
          "kind": "type"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.TSLintObjectModel.TSLintLogEntry": {
          "name": "TSLintLogEntry",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.TSLintObjectModel",
          "kind": "type"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.TSLintObjectModel.TSLintLogEntry.Fixes": {
          "name": "Fixes",
          "parentKey": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.TSLintObjectModel.TSLintLogEntry",
          "kind": "member"
        },
        "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.ConverterResources.resources": {
          "name": "Microsoft.CodeAnalysis.Sarif.Converters.ConverterResources.resources",
          "parentKey": "sarif.converters.dll",
          "kind": "resource"
        },
        "sarif.dll": {
          "kind": "module"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif": {
          "name": "Microsoft.CodeAnalysis.Sarif",
          "parentKey": "sarif.dll",
          "kind": "namespace"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Attachment": {
          "name": "Attachment",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Attachment.Rectangles": {
          "name": "Rectangles",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Attachment",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Attachment.Regions": {
          "name": "Regions",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Attachment",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.CodeFlow": {
          "name": "CodeFlow",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.CodeFlow..ctor(Microsoft.CodeAnalysis.Sarif.CodeFlow)": {
          "name": ".ctor(Microsoft.CodeAnalysis.Sarif.CodeFlow)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.CodeFlow",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.CodeFlow..ctor(Microsoft.CodeAnalysis.Sarif.Message,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.ThreadFlow>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)": {
          "name": ".ctor(Microsoft.CodeAnalysis.Sarif.Message,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.ThreadFlow>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.CodeFlow",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.CodeFlow.ThreadFlows": {
          "name": "ThreadFlows",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.CodeFlow",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.ConsoleLogger": {
          "name": "ConsoleLogger",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.ConsoleLogger.FormatNotificationMessage(Microsoft.CodeAnalysis.Sarif.Notification)": {
          "name": "FormatNotificationMessage(Microsoft.CodeAnalysis.Sarif.Notification)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.ConsoleLogger",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.ConsoleLogger.NormalizeMessage(System.String,System.Boolean)": {
          "name": "NormalizeMessage(System.String,System.Boolean)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.ConsoleLogger",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Conversion": {
          "name": "Conversion",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Conversion.AnalysisToolLogFiles": {
          "name": "AnalysisToolLogFiles",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Conversion",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Edge": {
          "name": "Edge",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Edge..ctor(Microsoft.CodeAnalysis.Sarif.Edge)": {
          "name": ".ctor(Microsoft.CodeAnalysis.Sarif.Edge)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Edge",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Edge..ctor(System.String,Microsoft.CodeAnalysis.Sarif.Message,System.String,System.String,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)": {
          "name": ".ctor(System.String,Microsoft.CodeAnalysis.Sarif.Message,System.String,System.String,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Edge",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.EdgeTraversal": {
          "name": "EdgeTraversal",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.EdgeTraversal..ctor(Microsoft.CodeAnalysis.Sarif.EdgeTraversal)": {
          "name": ".ctor(Microsoft.CodeAnalysis.Sarif.EdgeTraversal)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.EdgeTraversal",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.EdgeTraversal..ctor(System.String,Microsoft.CodeAnalysis.Sarif.Message,System.Collections.Generic.IDictionary`2<System.String,System.String>,System.Int32,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)": {
          "name": ".ctor(System.String,Microsoft.CodeAnalysis.Sarif.Message,System.Collections.Generic.IDictionary`2<System.String,System.String>,System.Int32,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.EdgeTraversal",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.EdgeTraversal.FinalState": {
          "name": "FinalState",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.EdgeTraversal",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.ExceptionData": {
          "name": "ExceptionData",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.ExceptionData.Create(System.Exception)": {
          "name": "Create(System.Exception)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.ExceptionData",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.ExceptionData.InnerExceptions": {
          "name": "InnerExceptions",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.ExceptionData",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.ExtensionMethods": {
          "name": "ExtensionMethods",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.ExtensionMethods.GetFileName(System.Uri)": {
          "name": "GetFileName(System.Uri)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.ExtensionMethods",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.ExtensionMethods.ToFlags(System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.OptionallyEmittedData>)": {
          "name": "ToFlags(System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.OptionallyEmittedData>)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.ExtensionMethods",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.FileChange": {
          "name": "FileChange",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.FileChange.Replacements": {
          "name": "Replacements",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.FileChange",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.FileData": {
          "name": "FileData",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.FileData..ctor(Microsoft.CodeAnalysis.Sarif.FileData)": {
          "name": ".ctor(Microsoft.CodeAnalysis.Sarif.FileData)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.FileData",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.FileData..ctor(Microsoft.CodeAnalysis.Sarif.FileLocation,System.String,System.Int32,System.Int32,Microsoft.CodeAnalysis.Sarif.FileRoles,System.String,Microsoft.CodeAnalysis.Sarif.FileContent,System.String,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Hash>,System.DateTime,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)": {
          "name": ".ctor(Microsoft.CodeAnalysis.Sarif.FileLocation,System.String,System.Int32,System.Int32,Microsoft.CodeAnalysis.Sarif.FileRoles,System.String,Microsoft.CodeAnalysis.Sarif.FileContent,System.String,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Hash>,System.DateTime,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.FileData",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.FileData.Create(System.Uri,Microsoft.CodeAnalysis.Sarif.OptionallyEmittedData,System.String,System.Text.Encoding,Microsoft.CodeAnalysis.Sarif.IFileSystem)": {
          "name": "Create(System.Uri,Microsoft.CodeAnalysis.Sarif.OptionallyEmittedData,System.String,System.Text.Encoding,Microsoft.CodeAnalysis.Sarif.IFileSystem)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.FileData",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.FileData.Hashes": {
          "name": "Hashes",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.FileData",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.FileDataEqualityComparer": {
          "name": "FileDataEqualityComparer",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.FileDataEqualityComparer.Equals(Microsoft.CodeAnalysis.Sarif.FileData,Microsoft.CodeAnalysis.Sarif.FileData)": {
          "name": "Equals(Microsoft.CodeAnalysis.Sarif.FileData,Microsoft.CodeAnalysis.Sarif.FileData)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.FileDataEqualityComparer",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.FileLocation": {
          "name": "FileLocation",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.FileLocation..ctor(System.Uri,System.String)": {
          "name": ".ctor(System.Uri,System.String)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.FileLocation",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.FileLocation.CreateFromFilesDictionaryKey(System.String)": {
          "name": "CreateFromFilesDictionaryKey(System.String)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.FileLocation",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.FileLocation.TryReconstructAbsoluteUri(System.Collections.Generic.IDictionary`2<System.String,System.Uri>,System.Uri&)": {
          "name": "TryReconstructAbsoluteUri(System.Collections.Generic.IDictionary`2<System.String,System.Uri>,System.Uri&)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.FileLocation",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.FileLocation.UriBaseId": {
          "name": "UriBaseId",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.FileLocation",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.FileRegionsCache": {
          "name": "FileRegionsCache",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.FileRegionsCache._filePathToNewLineIndexMap": {
          "name": "_filePathToNewLineIndexMap",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.FileRegionsCache",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.FileRegionsCache._run": {
          "name": "_run",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.FileRegionsCache",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.FileRegionsCache.PopulateCharLength(Microsoft.CodeAnalysis.Sarif.NewLineIndex,Microsoft.CodeAnalysis.Sarif.Region)": {
          "name": "PopulateCharLength(Microsoft.CodeAnalysis.Sarif.NewLineIndex,Microsoft.CodeAnalysis.Sarif.Region)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.FileRegionsCache",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.FileRegionsCache.PopulateEndColumn(Microsoft.CodeAnalysis.Sarif.NewLineIndex,Microsoft.CodeAnalysis.Sarif.Region,System.String)": {
          "name": "PopulateEndColumn(Microsoft.CodeAnalysis.Sarif.NewLineIndex,Microsoft.CodeAnalysis.Sarif.Region,System.String)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.FileRegionsCache",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.FileRegionsCache.PopulatePropertiesFromCharOffsetAndLength(Microsoft.CodeAnalysis.Sarif.NewLineIndex,Microsoft.CodeAnalysis.Sarif.Region)": {
          "name": "PopulatePropertiesFromCharOffsetAndLength(Microsoft.CodeAnalysis.Sarif.NewLineIndex,Microsoft.CodeAnalysis.Sarif.Region)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.FileRegionsCache",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Fix": {
          "name": "Fix",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Fix.FileChanges": {
          "name": "FileChanges",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Fix",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Graph": {
          "name": "Graph",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Graph..ctor(Microsoft.CodeAnalysis.Sarif.Graph)": {
          "name": ".ctor(Microsoft.CodeAnalysis.Sarif.Graph)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Graph",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Graph..ctor(System.String,Microsoft.CodeAnalysis.Sarif.Message,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Node>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Edge>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)": {
          "name": ".ctor(System.String,Microsoft.CodeAnalysis.Sarif.Message,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Node>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Edge>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Graph",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Graph.Edges": {
          "name": "Edges",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Graph",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Graph.Nodes": {
          "name": "Nodes",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Graph",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.GraphEqualityComparer": {
          "name": "GraphEqualityComparer",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.GraphEqualityComparer.Equals(Microsoft.CodeAnalysis.Sarif.Graph,Microsoft.CodeAnalysis.Sarif.Graph)": {
          "name": "Equals(Microsoft.CodeAnalysis.Sarif.Graph,Microsoft.CodeAnalysis.Sarif.Graph)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.GraphEqualityComparer",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.GraphTraversal": {
          "name": "GraphTraversal",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.GraphTraversal..ctor(Microsoft.CodeAnalysis.Sarif.GraphTraversal)": {
          "name": ".ctor(Microsoft.CodeAnalysis.Sarif.GraphTraversal)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.GraphTraversal",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.GraphTraversal..ctor(System.String,Microsoft.CodeAnalysis.Sarif.Message,System.Collections.Generic.IDictionary`2<System.String,System.String>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.EdgeTraversal>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)": {
          "name": ".ctor(System.String,Microsoft.CodeAnalysis.Sarif.Message,System.Collections.Generic.IDictionary`2<System.String,System.String>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.EdgeTraversal>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.GraphTraversal",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.GraphTraversal.EdgeTraversals": {
          "name": "EdgeTraversals",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.GraphTraversal",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.GraphTraversal.InitialState": {
          "name": "InitialState",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.GraphTraversal",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.GraphTraversalEqualityComparer": {
          "name": "GraphTraversalEqualityComparer",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.GraphTraversalEqualityComparer.Equals(Microsoft.CodeAnalysis.Sarif.GraphTraversal,Microsoft.CodeAnalysis.Sarif.GraphTraversal)": {
          "name": "Equals(Microsoft.CodeAnalysis.Sarif.GraphTraversal,Microsoft.CodeAnalysis.Sarif.GraphTraversal)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.GraphTraversalEqualityComparer",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.HashData": {
          "name": "HashData",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.HashData..ctor(System.String,System.String,System.String)": {
          "name": ".ctor(System.String,System.String,System.String)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.HashData",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.HashData.Sha1": {
          "name": "Sha1",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.HashData",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.HashData.Sha256": {
          "name": "Sha256",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.HashData",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.HashUtilities": {
          "name": "HashUtilities",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.HashUtilities.ComputeHashes(System.String)": {
          "name": "ComputeHashes(System.String)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.HashUtilities",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.HashUtilities.ComputeMD5Hash(System.String)": {
          "name": "ComputeMD5Hash(System.String)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.HashUtilities",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.HashUtilities.ComputeSha1Hash(System.String)": {
          "name": "ComputeSha1Hash(System.String)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.HashUtilities",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.HashUtilities.ComputeSha256Hash(System.String)": {
          "name": "ComputeSha256Hash(System.String)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.HashUtilities",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.IAnalysisContext": {
          "name": "IAnalysisContext",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.IAnalysisContext.Policy": {
          "name": "Policy",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.IAnalysisContext",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.IFileSystem": {
          "name": "IFileSystem",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.IFileSystem.WriteAllBytes(System.String,System.Byte[])": {
          "name": "WriteAllBytes(System.String,System.Byte[])",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.IFileSystem",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.IMarker": {
          "name": "IMarker",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.IntegerSet": {
          "name": "IntegerSet",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Invocation": {
          "name": "Invocation",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Invocation..ctor(Microsoft.CodeAnalysis.Sarif.Invocation)": {
          "name": ".ctor(Microsoft.CodeAnalysis.Sarif.Invocation)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Invocation",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Invocation..ctor(System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Attachment>,System.String,System.Collections.Generic.IEnumerable`1<System.String>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.FileLocation>,System.DateTime,System.DateTime,System.Int32,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Notification>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Notification>,System.String,System.String,System.Int32,System.String,System.Boolean,System.String,System.String,System.Int32,Microsoft.CodeAnalysis.Sarif.FileLocation,System.String,System.Collections.Generic.IDictionary`2<System.String,System.String>,Microsoft.CodeAnalysis.Sarif.FileLocation,Microsoft.CodeAnalysis.Sarif.FileLocation,Microsoft.CodeAnalysis.Sarif.FileLocation,Microsoft.CodeAnalysis.Sarif.FileLocation,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)": {
          "name": ".ctor(System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Attachment>,System.String,System.Collections.Generic.IEnumerable`1<System.String>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.FileLocation>,System.DateTime,System.DateTime,System.Int32,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Notification>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Notification>,System.String,System.String,System.Int32,System.String,System.Boolean,System.String,System.String,System.Int32,Microsoft.CodeAnalysis.Sarif.FileLocation,System.String,System.Collections.Generic.IDictionary`2<System.String,System.String>,Microsoft.CodeAnalysis.Sarif.FileLocation,Microsoft.CodeAnalysis.Sarif.FileLocation,Microsoft.CodeAnalysis.Sarif.FileLocation,Microsoft.CodeAnalysis.Sarif.FileLocation,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Invocation",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Invocation.Arguments": {
          "name": "Arguments",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Invocation",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Invocation.Attachments": {
          "name": "Attachments",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Invocation",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Invocation.ConfigurationNotifications": {
          "name": "ConfigurationNotifications",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Invocation",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Invocation.Create(System.Boolean,System.Collections.Generic.IEnumerable`1<System.String>)": {
          "name": "Create(System.Boolean,System.Collections.Generic.IEnumerable`1<System.String>)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Invocation",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Invocation.EnvironmentVariables": {
          "name": "EnvironmentVariables",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Invocation",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Invocation.Init(System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Attachment>,System.String,System.Collections.Generic.IEnumerable`1<System.String>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.FileLocation>,System.DateTime,System.DateTime,System.Int32,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Notification>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Notification>,System.String,System.String,System.Int32,System.String,System.Boolean,System.String,System.String,System.Int32,Microsoft.CodeAnalysis.Sarif.FileLocation,System.String,System.Collections.Generic.IDictionary`2<System.String,System.String>,Microsoft.CodeAnalysis.Sarif.FileLocation,Microsoft.CodeAnalysis.Sarif.FileLocation,Microsoft.CodeAnalysis.Sarif.FileLocation,Microsoft.CodeAnalysis.Sarif.FileLocation,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)": {
          "name": "Init(System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Attachment>,System.String,System.Collections.Generic.IEnumerable`1<System.String>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.FileLocation>,System.DateTime,System.DateTime,System.Int32,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Notification>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Notification>,System.String,System.String,System.Int32,System.String,System.Boolean,System.String,System.String,System.Int32,Microsoft.CodeAnalysis.Sarif.FileLocation,System.String,System.Collections.Generic.IDictionary`2<System.String,System.String>,Microsoft.CodeAnalysis.Sarif.FileLocation,Microsoft.CodeAnalysis.Sarif.FileLocation,Microsoft.CodeAnalysis.Sarif.FileLocation,Microsoft.CodeAnalysis.Sarif.FileLocation,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Invocation",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Invocation.ResponseFiles": {
          "name": "ResponseFiles",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Invocation",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Invocation.Stderr": {
          "name": "Stderr",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Invocation",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Invocation.Stdin": {
          "name": "Stdin",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Invocation",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Invocation.Stdout": {
          "name": "Stdout",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Invocation",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Invocation.StdoutStderr": {
          "name": "StdoutStderr",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Invocation",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Invocation.ToolNotifications": {
          "name": "ToolNotifications",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Invocation",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.InvocationEqualityComparer": {
          "name": "InvocationEqualityComparer",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.InvocationEqualityComparer.Equals(Microsoft.CodeAnalysis.Sarif.Invocation,Microsoft.CodeAnalysis.Sarif.Invocation)": {
          "name": "Equals(Microsoft.CodeAnalysis.Sarif.Invocation,Microsoft.CodeAnalysis.Sarif.Invocation)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.InvocationEqualityComparer",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.InvocationEqualityComparer.GetHashCode(Microsoft.CodeAnalysis.Sarif.Invocation)": {
          "name": "GetHashCode(Microsoft.CodeAnalysis.Sarif.Invocation)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.InvocationEqualityComparer",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.IOptionsProvider": {
          "name": "IOptionsProvider",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.IOptionsProvider.GetOptions()": {
          "name": "GetOptions()",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.IOptionsProvider",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.ISarifNode": {
          "name": "ISarifNode",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.ISarifNode.SarifNodeKind": {
          "name": "SarifNodeKind",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.ISarifNode",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Location": {
          "name": "Location",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Location..ctor(Microsoft.CodeAnalysis.Sarif.Location)": {
          "name": ".ctor(Microsoft.CodeAnalysis.Sarif.Location)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Location",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Location..ctor(Microsoft.CodeAnalysis.Sarif.PhysicalLocation,System.String,Microsoft.CodeAnalysis.Sarif.Message,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Region>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)": {
          "name": ".ctor(Microsoft.CodeAnalysis.Sarif.PhysicalLocation,System.String,Microsoft.CodeAnalysis.Sarif.Message,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Region>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Location",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Location.Annotations": {
          "name": "Annotations",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Location",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Message": {
          "name": "Message",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Message.Arguments": {
          "name": "Arguments",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Message",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.MultiplyByPrimesHash": {
          "name": "MultiplyByPrimesHash",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.MultiplyByPrimesHash.AddRange(System.Collections.Generic.IEnumerable`1<System.Int32>)": {
          "name": "AddRange(System.Collections.Generic.IEnumerable`1<System.Int32>)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.MultiplyByPrimesHash",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.MultiplyByPrimesHash.AddRange(System.Collections.IEnumerable)": {
          "name": "AddRange(System.Collections.IEnumerable)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.MultiplyByPrimesHash",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.MultiplyByPrimesHash.AddRange(System.Int32[])": {
          "name": "AddRange(System.Int32[])",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.MultiplyByPrimesHash",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.NewLineIndex": {
          "name": "NewLineIndex",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.NewLineIndex..ctor(System.String)": {
          "name": ".ctor(System.String)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.NewLineIndex",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Node": {
          "name": "Node",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Node..ctor(Microsoft.CodeAnalysis.Sarif.Node)": {
          "name": ".ctor(Microsoft.CodeAnalysis.Sarif.Node)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Node",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Node..ctor(System.String,Microsoft.CodeAnalysis.Sarif.Message,Microsoft.CodeAnalysis.Sarif.Location,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Node>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)": {
          "name": ".ctor(System.String,Microsoft.CodeAnalysis.Sarif.Message,Microsoft.CodeAnalysis.Sarif.Location,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Node>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Node",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Node.Children": {
          "name": "Children",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Node",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Notes": {
          "name": "Notes",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Notes.Msg001AnalyzingTarget": {
          "name": "Msg001AnalyzingTarget",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Notes",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Notification": {
          "name": "Notification",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Notification..ctor(Microsoft.CodeAnalysis.Sarif.Notification)": {
          "name": ".ctor(Microsoft.CodeAnalysis.Sarif.Notification)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Notification",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Notification..ctor(System.String,System.String,Microsoft.CodeAnalysis.Sarif.PhysicalLocation,Microsoft.CodeAnalysis.Sarif.Message,Microsoft.CodeAnalysis.Sarif.NotificationLevel,System.Int32,System.DateTime,Microsoft.CodeAnalysis.Sarif.ExceptionData,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)": {
          "name": ".ctor(System.String,System.String,Microsoft.CodeAnalysis.Sarif.PhysicalLocation,Microsoft.CodeAnalysis.Sarif.Message,Microsoft.CodeAnalysis.Sarif.NotificationLevel,System.Int32,System.DateTime,Microsoft.CodeAnalysis.Sarif.ExceptionData,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Notification",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.OptionallyEmittedData": {
          "name": "OptionallyEmittedData",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.PropertiesDictionary": {
          "name": "PropertiesDictionary",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.PropertiesDictionary.LoadFromXml(System.IO.Stream)": {
          "name": "LoadFromXml(System.IO.Stream)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.PropertiesDictionary",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.PropertiesDictionary.SaveToJson(System.String,System.Boolean)": {
          "name": "SaveToJson(System.String,System.Boolean)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.PropertiesDictionary",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.PropertiesDictionary.TryGetProperty`1(System.String,!!0&)": {
          "name": "TryGetProperty`1(System.String,!!0&)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.PropertiesDictionary",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.PropertyBagHolder": {
          "name": "PropertyBagHolder",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.PropertyBagHolder.SetProperty`1(System.String,!!0)": {
          "name": "SetProperty`1(System.String,!!0)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.PropertyBagHolder",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Region": {
          "name": "Region",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Region..ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.CodeAnalysis.Sarif.FileContent,Microsoft.CodeAnalysis.Sarif.Message)": {
          "name": ".ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.CodeAnalysis.Sarif.FileContent,Microsoft.CodeAnalysis.Sarif.Message)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Region",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Resources": {
          "name": "Resources",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Resources.MessageStrings": {
          "name": "MessageStrings",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Resources",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Resources.Rules": {
          "name": "Rules",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Resources",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Result": {
          "name": "Result",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Result..ctor(Microsoft.CodeAnalysis.Sarif.Result)": {
          "name": ".ctor(Microsoft.CodeAnalysis.Sarif.Result)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Result",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Result..ctor(System.String,Microsoft.CodeAnalysis.Sarif.ResultLevel,Microsoft.CodeAnalysis.Sarif.Message,System.String,Microsoft.CodeAnalysis.Sarif.FileLocation,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Location>,System.String,System.String,System.Collections.Generic.IDictionary`2<System.String,System.String>,System.Collections.Generic.IDictionary`2<System.String,System.String>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Stack>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.CodeFlow>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Graph>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.GraphTraversal>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Location>,Microsoft.CodeAnalysis.Sarif.SuppressionStates,Microsoft.CodeAnalysis.Sarif.BaselineState,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Attachment>,System.Collections.Generic.IEnumerable`1<System.Uri>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.PhysicalLocation>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Fix>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)": {
          "name": ".ctor(System.String,Microsoft.CodeAnalysis.Sarif.ResultLevel,Microsoft.CodeAnalysis.Sarif.Message,System.String,Microsoft.CodeAnalysis.Sarif.FileLocation,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Location>,System.String,System.String,System.Collections.Generic.IDictionary`2<System.String,System.String>,System.Collections.Generic.IDictionary`2<System.String,System.String>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Stack>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.CodeFlow>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Graph>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.GraphTraversal>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Location>,Microsoft.CodeAnalysis.Sarif.SuppressionStates,Microsoft.CodeAnalysis.Sarif.BaselineState,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Attachment>,System.Collections.Generic.IEnumerable`1<System.Uri>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.PhysicalLocation>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Fix>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Result",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Result.Attachments": {
          "name": "Attachments",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Result",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Result.CodeFlows": {
          "name": "CodeFlows",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Result",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Result.ConversionProvenance": {
          "name": "ConversionProvenance",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Result",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Result.Fingerprints": {
          "name": "Fingerprints",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Result",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Result.Fixes": {
          "name": "Fixes",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Result",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Result.Graphs": {
          "name": "Graphs",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Result",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Result.GraphTraversals": {
          "name": "GraphTraversals",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Result",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Result.Init(System.String,Microsoft.CodeAnalysis.Sarif.ResultLevel,Microsoft.CodeAnalysis.Sarif.Message,System.String,Microsoft.CodeAnalysis.Sarif.FileLocation,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Location>,System.String,System.String,System.Collections.Generic.IDictionary`2<System.String,System.String>,System.Collections.Generic.IDictionary`2<System.String,System.String>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Stack>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.CodeFlow>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Graph>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.GraphTraversal>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Location>,Microsoft.CodeAnalysis.Sarif.SuppressionStates,Microsoft.CodeAnalysis.Sarif.BaselineState,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Attachment>,System.Collections.Generic.IEnumerable`1<System.Uri>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.PhysicalLocation>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Fix>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)": {
          "name": "Init(System.String,Microsoft.CodeAnalysis.Sarif.ResultLevel,Microsoft.CodeAnalysis.Sarif.Message,System.String,Microsoft.CodeAnalysis.Sarif.FileLocation,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Location>,System.String,System.String,System.Collections.Generic.IDictionary`2<System.String,System.String>,System.Collections.Generic.IDictionary`2<System.String,System.String>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Stack>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.CodeFlow>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Graph>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.GraphTraversal>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Location>,Microsoft.CodeAnalysis.Sarif.SuppressionStates,Microsoft.CodeAnalysis.Sarif.BaselineState,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Attachment>,System.Collections.Generic.IEnumerable`1<System.Uri>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.PhysicalLocation>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Fix>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Result",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Result.Locations": {
          "name": "Locations",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Result",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Result.PartialFingerprints": {
          "name": "PartialFingerprints",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Result",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Result.RelatedLocations": {
          "name": "RelatedLocations",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Result",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Result.Stacks": {
          "name": "Stacks",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Result",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Result.WorkItemUris": {
          "name": "WorkItemUris",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Result",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.ResultEqualityComparer": {
          "name": "ResultEqualityComparer",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.ResultEqualityComparer.Equals(Microsoft.CodeAnalysis.Sarif.Result,Microsoft.CodeAnalysis.Sarif.Result)": {
          "name": "Equals(Microsoft.CodeAnalysis.Sarif.Result,Microsoft.CodeAnalysis.Sarif.Result)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.ResultEqualityComparer",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.ResultEqualityComparer.GetHashCode(Microsoft.CodeAnalysis.Sarif.Result)": {
          "name": "GetHashCode(Microsoft.CodeAnalysis.Sarif.Result)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.ResultEqualityComparer",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Rule": {
          "name": "Rule",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Rule..ctor(Microsoft.CodeAnalysis.Sarif.Rule)": {
          "name": ".ctor(Microsoft.CodeAnalysis.Sarif.Rule)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Rule",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Rule..ctor(System.String,Microsoft.CodeAnalysis.Sarif.Message,Microsoft.CodeAnalysis.Sarif.Message,Microsoft.CodeAnalysis.Sarif.Message,System.Collections.Generic.IDictionary`2<System.String,System.String>,System.Collections.Generic.IDictionary`2<System.String,System.String>,Microsoft.CodeAnalysis.Sarif.RuleConfiguration,System.Uri,Microsoft.CodeAnalysis.Sarif.Message,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)": {
          "name": ".ctor(System.String,Microsoft.CodeAnalysis.Sarif.Message,Microsoft.CodeAnalysis.Sarif.Message,Microsoft.CodeAnalysis.Sarif.Message,System.Collections.Generic.IDictionary`2<System.String,System.String>,System.Collections.Generic.IDictionary`2<System.String,System.String>,Microsoft.CodeAnalysis.Sarif.RuleConfiguration,System.Uri,Microsoft.CodeAnalysis.Sarif.Message,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Rule",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Rule.MessageStrings": {
          "name": "MessageStrings",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Rule",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Rule.RichMessageStrings": {
          "name": "RichMessageStrings",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Rule",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.RuleConfiguration": {
          "name": "RuleConfiguration",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.RuleConfiguration.Parameters": {
          "name": "Parameters",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.RuleConfiguration",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.RuleEqualityComparer": {
          "name": "RuleEqualityComparer",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.RuleEqualityComparer.Equals(Microsoft.CodeAnalysis.Sarif.Rule,Microsoft.CodeAnalysis.Sarif.Rule)": {
          "name": "Equals(Microsoft.CodeAnalysis.Sarif.Rule,Microsoft.CodeAnalysis.Sarif.Rule)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.RuleEqualityComparer",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.RuleUtilities": {
          "name": "RuleUtilities",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.RuleUtilities.BuildDictionary(System.Resources.ResourceManager,System.Collections.Generic.IEnumerable`1<System.String>,System.String,System.String)": {
          "name": "BuildDictionary(System.Resources.ResourceManager,System.Collections.Generic.IEnumerable`1<System.String>,System.String,System.String)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.RuleUtilities",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.RuleUtilities.NormalizeRuleMessageId(System.String,System.String,System.String)": {
          "name": "NormalizeRuleMessageId(System.String,System.String,System.String)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.RuleUtilities",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Run": {
          "name": "Run",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Run..ctor(Microsoft.CodeAnalysis.Sarif.Run)": {
          "name": ".ctor(Microsoft.CodeAnalysis.Sarif.Run)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Run",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Run..ctor(Microsoft.CodeAnalysis.Sarif.Tool,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Invocation>,Microsoft.CodeAnalysis.Sarif.Conversion,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.VersionControlDetails>,System.Collections.Generic.IDictionary`2<System.String,System.Uri>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.FileData>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.LogicalLocation>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Graph>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Result>,Microsoft.CodeAnalysis.Sarif.Resources,System.String,System.String,Microsoft.CodeAnalysis.Sarif.Message,System.String,System.String,System.String,System.String,System.String,System.String,Microsoft.CodeAnalysis.Sarif.ColumnKind,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)": {
          "name": ".ctor(Microsoft.CodeAnalysis.Sarif.Tool,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Invocation>,Microsoft.CodeAnalysis.Sarif.Conversion,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.VersionControlDetails>,System.Collections.Generic.IDictionary`2<System.String,System.Uri>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.FileData>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.LogicalLocation>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Graph>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Result>,Microsoft.CodeAnalysis.Sarif.Resources,System.String,System.String,Microsoft.CodeAnalysis.Sarif.Message,System.String,System.String,System.String,System.String,System.String,System.String,Microsoft.CodeAnalysis.Sarif.ColumnKind,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Run",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Run.Files": {
          "name": "Files",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Run",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Run.Graphs": {
          "name": "Graphs",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Run",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Run.Init(Microsoft.CodeAnalysis.Sarif.Tool,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Invocation>,Microsoft.CodeAnalysis.Sarif.Conversion,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.VersionControlDetails>,System.Collections.Generic.IDictionary`2<System.String,System.Uri>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.FileData>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.LogicalLocation>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Graph>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Result>,Microsoft.CodeAnalysis.Sarif.Resources,System.String,System.String,Microsoft.CodeAnalysis.Sarif.Message,System.String,System.String,System.String,System.String,System.String,System.String,Microsoft.CodeAnalysis.Sarif.ColumnKind,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)": {
          "name": "Init(Microsoft.CodeAnalysis.Sarif.Tool,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Invocation>,Microsoft.CodeAnalysis.Sarif.Conversion,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.VersionControlDetails>,System.Collections.Generic.IDictionary`2<System.String,System.Uri>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.FileData>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.LogicalLocation>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Graph>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Result>,Microsoft.CodeAnalysis.Sarif.Resources,System.String,System.String,Microsoft.CodeAnalysis.Sarif.Message,System.String,System.String,System.String,System.String,System.String,System.String,Microsoft.CodeAnalysis.Sarif.ColumnKind,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Run",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Run.Invocations": {
          "name": "Invocations",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Run",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Run.LogicalLocations": {
          "name": "LogicalLocations",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Run",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Run.OriginalUriBaseIds": {
          "name": "OriginalUriBaseIds",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Run",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Run.Results": {
          "name": "Results",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Run",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Run.VersionControlProvenance": {
          "name": "VersionControlProvenance",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Run",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.RunEqualityComparer": {
          "name": "RunEqualityComparer",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.RunEqualityComparer.Equals(Microsoft.CodeAnalysis.Sarif.Run,Microsoft.CodeAnalysis.Sarif.Run)": {
          "name": "Equals(Microsoft.CodeAnalysis.Sarif.Run,Microsoft.CodeAnalysis.Sarif.Run)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.RunEqualityComparer",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.RunEqualityComparer.GetHashCode(Microsoft.CodeAnalysis.Sarif.Run)": {
          "name": "GetHashCode(Microsoft.CodeAnalysis.Sarif.Run)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.RunEqualityComparer",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.RuntimeConditions": {
          "name": "RuntimeConditions",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifConstants": {
          "name": "SarifConstants",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifLog": {
          "name": "SarifLog",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifLog.Runs": {
          "name": "Runs",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifLog",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifNodeKind": {
          "name": "SarifNodeKind",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifNodeKind.SarifLog": {
          "name": "SarifLog",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifNodeKind",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifRewritingVisitor": {
          "name": "SarifRewritingVisitor",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifRewritingVisitor.VisitActual(Microsoft.CodeAnalysis.Sarif.ISarifNode)": {
          "name": "VisitActual(Microsoft.CodeAnalysis.Sarif.ISarifNode)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifRewritingVisitor",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifRewritingVisitor.VisitSarifLog(Microsoft.CodeAnalysis.Sarif.SarifLog)": {
          "name": "VisitSarifLog(Microsoft.CodeAnalysis.Sarif.SarifLog)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifRewritingVisitor",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifUtilities": {
          "name": "SarifUtilities",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifUtilities.AddOrUpdateDictionaryEntry`2(System.Collections.Generic.IDictionary`2<!!0,!!1>,!!0,!!1)": {
          "name": "AddOrUpdateDictionaryEntry`2(System.Collections.Generic.IDictionary`2<!!0,!!1>,!!0,!!1)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifUtilities",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifUtilities.ConvertToSarifVersion(System.String)": {
          "name": "ConvertToSarifVersion(System.String)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifUtilities",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifUtilities.ConvertToSchemaUri(Microsoft.CodeAnalysis.Sarif.SarifVersion)": {
          "name": "ConvertToSchemaUri(Microsoft.CodeAnalysis.Sarif.SarifVersion)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifUtilities",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifUtilities.ConvertToText(Microsoft.CodeAnalysis.Sarif.SarifVersion)": {
          "name": "ConvertToText(Microsoft.CodeAnalysis.Sarif.SarifVersion)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifUtilities",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifUtilities.CreateSingleThreadedCodeFlow(System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.ThreadFlowLocation>)": {
          "name": "CreateSingleThreadedCodeFlow(System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.ThreadFlowLocation>)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifUtilities",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifUtilities.DecodeBase64String(System.String,System.Text.Encoding)": {
          "name": "DecodeBase64String(System.String,System.Text.Encoding)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifUtilities",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifUtilities.GetBase64String(System.String,System.Text.Encoding)": {
          "name": "GetBase64String(System.String,System.Text.Encoding)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifUtilities",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifUtilities.GetByteLength(System.Char[],System.Text.Encoding)": {
          "name": "GetByteLength(System.Char[],System.Text.Encoding)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifUtilities",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifUtilities.GetByteLength(System.String,System.Text.Encoding)": {
          "name": "GetByteLength(System.String,System.Text.Encoding)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifUtilities",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifUtilities.GetUtf8Base64String(System.String)": {
          "name": "GetUtf8Base64String(System.String)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifUtilities",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifUtilities.SarifDateTimeFormatMillisecondsPrecision": {
          "name": "SarifDateTimeFormatMillisecondsPrecision",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifUtilities",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifUtilities.SarifDateTimeFormatSecondsPrecision": {
          "name": "SarifDateTimeFormatSecondsPrecision",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifUtilities",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifUtilitiesVersionOne": {
          "name": "SarifUtilitiesVersionOne",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifUtilitiesVersionOne.ConvertToSchemaUri(Microsoft.CodeAnalysis.Sarif.VersionOne.SarifVersionVersionOne)": {
          "name": "ConvertToSchemaUri(Microsoft.CodeAnalysis.Sarif.VersionOne.SarifVersionVersionOne)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifUtilitiesVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifUtilitiesVersionOne.ConvertToText(Microsoft.CodeAnalysis.Sarif.VersionOne.SarifVersionVersionOne)": {
          "name": "ConvertToText(Microsoft.CodeAnalysis.Sarif.VersionOne.SarifVersionVersionOne)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifUtilitiesVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifVersion": {
          "name": "SarifVersion",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.SdkResources": {
          "name": "SdkResources",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.SdkResources..ctor()": {
          "name": ".ctor()",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.SdkResources",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Stack": {
          "name": "Stack",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Stack..ctor(Microsoft.CodeAnalysis.Sarif.Message,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.StackFrame>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)": {
          "name": ".ctor(Microsoft.CodeAnalysis.Sarif.Message,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.StackFrame>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Stack",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Stack..ctor(Microsoft.CodeAnalysis.Sarif.Stack)": {
          "name": ".ctor(Microsoft.CodeAnalysis.Sarif.Stack)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Stack",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Stack..ctor(System.Diagnostics.StackTrace)": {
          "name": ".ctor(System.Diagnostics.StackTrace)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Stack",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Stack.Create(System.String)": {
          "name": "Create(System.String)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Stack",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Stack.Frames": {
          "name": "Frames",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Stack",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.StackFrame": {
          "name": "StackFrame",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.StackFrame..ctor(Microsoft.CodeAnalysis.Sarif.Location,System.String,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IEnumerable`1<System.String>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)": {
          "name": ".ctor(Microsoft.CodeAnalysis.Sarif.Location,System.String,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IEnumerable`1<System.String>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.StackFrame",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.StackFrame..ctor(Microsoft.CodeAnalysis.Sarif.StackFrame)": {
          "name": ".ctor(Microsoft.CodeAnalysis.Sarif.StackFrame)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.StackFrame",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.StackFrame.Create(System.Diagnostics.StackFrame)": {
          "name": "Create(System.Diagnostics.StackFrame)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.StackFrame",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.StackFrame.CreateFullyQualifiedName(System.Reflection.MethodBase)": {
          "name": "CreateFullyQualifiedName(System.Reflection.MethodBase)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.StackFrame",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.StackFrame.Parameters": {
          "name": "Parameters",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.StackFrame",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.StringSet": {
          "name": "StringSet",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.StringToVersionMap": {
          "name": "StringToVersionMap",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.SupportedPlatform": {
          "name": "SupportedPlatform",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.SupportedPlatform.OSX": {
          "name": "OSX",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.SupportedPlatform",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.ThreadFlow": {
          "name": "ThreadFlow",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.ThreadFlow..ctor(Microsoft.CodeAnalysis.Sarif.ThreadFlow)": {
          "name": ".ctor(Microsoft.CodeAnalysis.Sarif.ThreadFlow)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.ThreadFlow",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.ThreadFlow..ctor(System.String,Microsoft.CodeAnalysis.Sarif.Message,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.ThreadFlowLocation>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)": {
          "name": ".ctor(System.String,Microsoft.CodeAnalysis.Sarif.Message,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.ThreadFlowLocation>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.ThreadFlow",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.ThreadFlow.Locations": {
          "name": "Locations",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.ThreadFlow",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.ThreadFlowLocation": {
          "name": "ThreadFlowLocation",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.ThreadFlowLocation..ctor(Microsoft.CodeAnalysis.Sarif.ThreadFlowLocation)": {
          "name": ".ctor(Microsoft.CodeAnalysis.Sarif.ThreadFlowLocation)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.ThreadFlowLocation",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.ThreadFlowLocation..ctor(System.Int32,Microsoft.CodeAnalysis.Sarif.Location,Microsoft.CodeAnalysis.Sarif.Stack,System.String,System.String,System.Collections.Generic.IDictionary`2<System.String,System.String>,System.Int32,System.Int32,System.DateTime,Microsoft.CodeAnalysis.Sarif.ThreadFlowLocationImportance,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)": {
          "name": ".ctor(System.Int32,Microsoft.CodeAnalysis.Sarif.Location,Microsoft.CodeAnalysis.Sarif.Stack,System.String,System.String,System.Collections.Generic.IDictionary`2<System.String,System.String>,System.Int32,System.Int32,System.DateTime,Microsoft.CodeAnalysis.Sarif.ThreadFlowLocationImportance,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.ThreadFlowLocation",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.ThreadFlowLocation.State": {
          "name": "State",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.ThreadFlowLocation",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.ThreadFlowLocationEqualityComparer": {
          "name": "ThreadFlowLocationEqualityComparer",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.ThreadFlowLocationEqualityComparer.Equals(Microsoft.CodeAnalysis.Sarif.ThreadFlowLocation,Microsoft.CodeAnalysis.Sarif.ThreadFlowLocation)": {
          "name": "Equals(Microsoft.CodeAnalysis.Sarif.ThreadFlowLocation,Microsoft.CodeAnalysis.Sarif.ThreadFlowLocation)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.ThreadFlowLocationEqualityComparer",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Tool": {
          "name": "Tool",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Tool..ctor(Microsoft.CodeAnalysis.Sarif.Tool)": {
          "name": ".ctor(Microsoft.CodeAnalysis.Sarif.Tool)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Tool",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Tool..ctor(System.String,System.String,System.String,System.String,System.String,System.Uri,System.String,System.String,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)": {
          "name": ".ctor(System.String,System.String,System.String,System.String,System.String,System.Uri,System.String,System.String,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Tool",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Tool.CreateFromAssemblyData(System.String)": {
          "name": "CreateFromAssemblyData(System.String)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Tool",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Tool.SarifLoggerVersion": {
          "name": "SarifLoggerVersion",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Tool",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.TypedPropertiesDictionary`1": {
          "name": "TypedPropertiesDictionary`1",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.TypedPropertiesDictionary`1.SettingNameToDescriptionsMap": {
          "name": "SettingNameToDescriptionsMap",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.TypedPropertiesDictionary`1",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.TypedPropertiesDictionaryConverter": {
          "name": "TypedPropertiesDictionaryConverter",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.TypedPropertiesDictionaryConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)": {
          "name": "ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.TypedPropertiesDictionaryConverter",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.TypedPropertiesDictionaryConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)": {
          "name": "WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.TypedPropertiesDictionaryConverter",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.TypedPropertiesDictionaryConverter+<>c": {
          "name": "TypedPropertiesDictionaryConverter+<>c",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.TypedPropertiesDictionaryConverter+<>c.<ReadJson>b__3_1(Newtonsoft.Json.Linq.JToken)": {
          "name": "<ReadJson>b__3_1(Newtonsoft.Json.Linq.JToken)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.TypedPropertiesDictionaryConverter+<>c",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.UriHelper": {
          "name": "UriHelper",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.UriHelper.MakeValidUri(System.String)": {
          "name": "MakeValidUri(System.String)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.UriHelper",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionControlDetails": {
          "name": "VersionControlDetails",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionControlDetails..ctor(Microsoft.CodeAnalysis.Sarif.VersionControlDetails)": {
          "name": ".ctor(Microsoft.CodeAnalysis.Sarif.VersionControlDetails)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionControlDetails",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionControlDetails..ctor(System.Uri,System.String,System.String,System.String,System.DateTime,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)": {
          "name": ".ctor(System.Uri,System.String,System.String,System.String,System.DateTime,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionControlDetails",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Warnings": {
          "name": "Warnings",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Warnings.Wrn997_InvalidTarget": {
          "name": "Wrn997_InvalidTarget",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Warnings",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Warnings.Wrn998_UnsupportedPlatform": {
          "name": "Wrn998_UnsupportedPlatform",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Warnings",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Warnings.Wrn999_RuleExplicitlyDisabled": {
          "name": "Wrn999_RuleExplicitlyDisabled",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Warnings",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline": {
          "name": "Microsoft.CodeAnalysis.Sarif.Baseline",
          "parentKey": "sarif.dll",
          "kind": "namespace"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.ISarifLogBaseliner": {
          "name": "ISarifLogBaseliner",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.ISarifLogBaseliner.CreateBaselinedRun(Microsoft.CodeAnalysis.Sarif.Run,Microsoft.CodeAnalysis.Sarif.Run)": {
          "name": "CreateBaselinedRun(Microsoft.CodeAnalysis.Sarif.Run,Microsoft.CodeAnalysis.Sarif.Run)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.ISarifLogBaseliner",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.SarifBaselineType": {
          "name": "SarifBaselineType",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.SarifLogBaseliner": {
          "name": "SarifLogBaseliner",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.SarifLogBaseliner.CreateBaselinedRun(Microsoft.CodeAnalysis.Sarif.Run,Microsoft.CodeAnalysis.Sarif.Run)": {
          "name": "CreateBaselinedRun(Microsoft.CodeAnalysis.Sarif.Run,Microsoft.CodeAnalysis.Sarif.Run)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.SarifLogBaseliner",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.SarifLogBaselinerFactory": {
          "name": "SarifLogBaselinerFactory",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.SarifLogBaselinerFactory.CreateSarifLogBaseliner(Microsoft.CodeAnalysis.Sarif.Baseline.SarifBaselineType)": {
          "name": "CreateSarifLogBaseliner(Microsoft.CodeAnalysis.Sarif.Baseline.SarifBaselineType)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.SarifLogBaselinerFactory",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline": {
          "name": "Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline",
          "parentKey": "sarif.dll",
          "kind": "namespace"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline.CodeFlowBaselineEqualityComparator": {
          "name": "CodeFlowBaselineEqualityComparator",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline.CodeFlowBaselineEqualityComparator.Equals(Microsoft.CodeAnalysis.Sarif.CodeFlow,Microsoft.CodeAnalysis.Sarif.CodeFlow)": {
          "name": "Equals(Microsoft.CodeAnalysis.Sarif.CodeFlow,Microsoft.CodeAnalysis.Sarif.CodeFlow)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline.CodeFlowBaselineEqualityComparator",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline.DefaultBaselineExtensions": {
          "name": "DefaultBaselineExtensions",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline.DefaultBaselineExtensions.GetNullCheckedHashCode(System.Object)": {
          "name": "GetNullCheckedHashCode(System.Object)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline.DefaultBaselineExtensions",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline.LocationBaselineEquals": {
          "name": "LocationBaselineEquals",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline.LocationBaselineEquals.Equals(Microsoft.CodeAnalysis.Sarif.Location,Microsoft.CodeAnalysis.Sarif.Location)": {
          "name": "Equals(Microsoft.CodeAnalysis.Sarif.Location,Microsoft.CodeAnalysis.Sarif.Location)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline.LocationBaselineEquals",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline.ResultBaselineEquals": {
          "name": "ResultBaselineEquals",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline.ResultBaselineEquals.Equals(Microsoft.CodeAnalysis.Sarif.Result,Microsoft.CodeAnalysis.Sarif.Result)": {
          "name": "Equals(Microsoft.CodeAnalysis.Sarif.Result,Microsoft.CodeAnalysis.Sarif.Result)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline.ResultBaselineEquals",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline.StackBaselineEquals": {
          "name": "StackBaselineEquals",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline.StackBaselineEquals.Equals(Microsoft.CodeAnalysis.Sarif.Stack,Microsoft.CodeAnalysis.Sarif.Stack)": {
          "name": "Equals(Microsoft.CodeAnalysis.Sarif.Stack,Microsoft.CodeAnalysis.Sarif.Stack)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline.StackBaselineEquals",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline.StackFrameBaselineEquals": {
          "name": "StackFrameBaselineEquals",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline.StackFrameBaselineEquals.Equals(Microsoft.CodeAnalysis.Sarif.StackFrame,Microsoft.CodeAnalysis.Sarif.StackFrame)": {
          "name": "Equals(Microsoft.CodeAnalysis.Sarif.StackFrame,Microsoft.CodeAnalysis.Sarif.StackFrame)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline.StackFrameBaselineEquals",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline.ThreadFlowBaselineEqualityComparator": {
          "name": "ThreadFlowBaselineEqualityComparator",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline.ThreadFlowBaselineEqualityComparator.Equals(Microsoft.CodeAnalysis.Sarif.ThreadFlow,Microsoft.CodeAnalysis.Sarif.ThreadFlow)": {
          "name": "Equals(Microsoft.CodeAnalysis.Sarif.ThreadFlow,Microsoft.CodeAnalysis.Sarif.ThreadFlow)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline.ThreadFlowBaselineEqualityComparator",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline.ThreadFlowLocationBaselineEquals": {
          "name": "ThreadFlowLocationBaselineEquals",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline.ThreadFlowLocationBaselineEquals.Equals(Microsoft.CodeAnalysis.Sarif.ThreadFlowLocation,Microsoft.CodeAnalysis.Sarif.ThreadFlowLocation)": {
          "name": "Equals(Microsoft.CodeAnalysis.Sarif.ThreadFlowLocation,Microsoft.CodeAnalysis.Sarif.ThreadFlowLocation)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline.ThreadFlowLocationBaselineEquals",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors": {
          "name": "Microsoft.CodeAnalysis.Sarif.Processors",
          "parentKey": "sarif.dll",
          "kind": "namespace"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.GenericActionPipeline`1": {
          "name": "GenericActionPipeline`1",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.GenericActionPipeline`1..ctor(System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Processors.IActionWrapper`1<!0>>)": {
          "name": ".ctor(System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Processors.IActionWrapper`1<!0>>)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.GenericActionPipeline`1",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.GenericMappingAction`1": {
          "name": "GenericMappingAction`1",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.GenericMappingAction`1.Act(System.Collections.Generic.IEnumerable`1<!0>)": {
          "name": "Act(System.Collections.Generic.IEnumerable`1<!0>)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.GenericMappingAction`1",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.GenericMappingAction`1.Action": {
          "name": "Action",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.GenericMappingAction`1",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.GenericMappingAction`1.Map(System.Collections.Generic.IEnumerable`1<!0>)": {
          "name": "Map(System.Collections.Generic.IEnumerable`1<!0>)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.GenericMappingAction`1",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.SarifLogAction": {
          "name": "SarifLogAction",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.SarifLogActionTuple": {
          "name": "SarifLogActionTuple",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.SarifLogActionTuple.Action": {
          "name": "Action",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.SarifLogActionTuple",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.SarifLogActionTuple.Parameters": {
          "name": "Parameters",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.SarifLogActionTuple",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.SarifLogExtensionMethods": {
          "name": "SarifLogExtensionMethods",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.SarifLogExtensionMethods.MakeUrisAbsolute(Microsoft.CodeAnalysis.Sarif.SarifLog)": {
          "name": "MakeUrisAbsolute(Microsoft.CodeAnalysis.Sarif.SarifLog)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.SarifLogExtensionMethods",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.SarifLogExtensionMethods.MakeUrisAbsolute(System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.SarifLog>)": {
          "name": "MakeUrisAbsolute(System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.SarifLog>)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.SarifLogExtensionMethods",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.SarifLogExtensionMethods.Merge(System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.SarifLog>)": {
          "name": "Merge(System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.SarifLog>)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.SarifLogExtensionMethods",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.SarifLogExtensionMethods.RebaseUri(Microsoft.CodeAnalysis.Sarif.SarifLog,System.String,System.Boolean,System.Uri)": {
          "name": "RebaseUri(Microsoft.CodeAnalysis.Sarif.SarifLog,System.String,System.Boolean,System.Uri)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.SarifLogExtensionMethods",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.SarifLogExtensionMethods.RebaseUri(System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.SarifLog>,System.String,System.Boolean,System.Uri)": {
          "name": "RebaseUri(System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.SarifLog>,System.String,System.Boolean,System.Uri)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.SarifLogExtensionMethods",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.SarifLogPipeline": {
          "name": "SarifLogPipeline",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.SarifLogPipeline..ctor(System.Collections.Generic.List`1<Microsoft.CodeAnalysis.Sarif.Processors.SarifLogActionTuple>)": {
          "name": ".ctor(System.Collections.Generic.List`1<Microsoft.CodeAnalysis.Sarif.Processors.SarifLogActionTuple>)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.SarifLogPipeline",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.SarifLogPipeline._pipeline": {
          "name": "_pipeline",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.SarifLogPipeline",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.SarifLogPipeline.Actions": {
          "name": "Actions",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.SarifLogPipeline",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.SarifLogProcessorFactory": {
          "name": "SarifLogProcessorFactory",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.SarifLogProcessorFactory.GetActionStage(Microsoft.CodeAnalysis.Sarif.Processors.SarifLogAction,System.String[])": {
          "name": "GetActionStage(Microsoft.CodeAnalysis.Sarif.Processors.SarifLogAction,System.String[])",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.SarifLogProcessorFactory",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers": {
          "name": "Microsoft.CodeAnalysis.Sarif.Readers",
          "parentKey": "sarif.dll",
          "kind": "namespace"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.DateTimeConverter": {
          "name": "DateTimeConverter",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.DateTimeConverter.Instance": {
          "name": "Instance",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.DateTimeConverter",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.EnumConverter": {
          "name": "EnumConverter",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.EnumConverter.ConvertToCamelCase(System.String)": {
          "name": "ConvertToCamelCase(System.String)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.EnumConverter",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.EnumConverter.Instance": {
          "name": "Instance",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.EnumConverter",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.FlagsEnumConverter": {
          "name": "FlagsEnumConverter",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.FlagsEnumConverter.Instance": {
          "name": "Instance",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.FlagsEnumConverter",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.FlagsEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)": {
          "name": "WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.FlagsEnumConverter",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.PropertyBagConverter": {
          "name": "PropertyBagConverter",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.PropertyBagConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)": {
          "name": "ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.PropertyBagConverter",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.ResultDiffingVisitor": {
          "name": "ResultDiffingVisitor",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.ResultDiffingVisitor..ctor(Microsoft.CodeAnalysis.Sarif.SarifLog)": {
          "name": ".ctor(Microsoft.CodeAnalysis.Sarif.SarifLog)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.ResultDiffingVisitor",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.ResultDiffingVisitor.AbsentResults": {
          "name": "AbsentResults",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.ResultDiffingVisitor",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.ResultDiffingVisitor.NewResults": {
          "name": "NewResults",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.ResultDiffingVisitor",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.ResultDiffingVisitor.SharedResults": {
          "name": "SharedResults",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.ResultDiffingVisitor",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.RuleDictionaryConverter": {
          "name": "RuleDictionaryConverter",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.RuleDictionaryConverter.Instance": {
          "name": "Instance",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.RuleDictionaryConverter",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.SarifContractResolver": {
          "name": "SarifContractResolver",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.SarifContractResolver.Instance": {
          "name": "Instance",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.SarifContractResolver",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.SarifContractResolverVersionOne": {
          "name": "SarifContractResolverVersionOne",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.SarifContractResolverVersionOne.Instance": {
          "name": "Instance",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.SarifContractResolverVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.SarifVersionConverter": {
          "name": "SarifVersionConverter",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.SarifVersionConverter.Instance": {
          "name": "Instance",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.SarifVersionConverter",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.UriConverter": {
          "name": "UriConverter",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.UriConverter.Instance": {
          "name": "Instance",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.UriConverter",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.VersionConverter": {
          "name": "VersionConverter",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.VersionConverter.Instance": {
          "name": "Instance",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.VersionConverter",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne": {
          "name": "Microsoft.CodeAnalysis.Sarif.VersionOne",
          "parentKey": "sarif.dll",
          "kind": "namespace"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AlgorithmKindVersionOne": {
          "name": "AlgorithmKindVersionOne",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AlgorithmKindVersionOne.Authentihash": {
          "name": "Authentihash",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AlgorithmKindVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AlgorithmKindVersionOne.Ecoh": {
          "name": "Ecoh",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AlgorithmKindVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AlgorithmKindVersionOne.Fsb": {
          "name": "Fsb",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AlgorithmKindVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AlgorithmKindVersionOne.Gost": {
          "name": "Gost",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AlgorithmKindVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AlgorithmKindVersionOne.Groestl": {
          "name": "Groestl",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AlgorithmKindVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AlgorithmKindVersionOne.Haval": {
          "name": "Haval",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AlgorithmKindVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AlgorithmKindVersionOne.Sdhash": {
          "name": "Sdhash",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AlgorithmKindVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AlgorithmKindVersionOne.Sha1": {
          "name": "Sha1",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AlgorithmKindVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AlgorithmKindVersionOne.Sha224": {
          "name": "Sha224",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AlgorithmKindVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AlgorithmKindVersionOne.Sha256": {
          "name": "Sha256",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AlgorithmKindVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AlgorithmKindVersionOne.Sha3": {
          "name": "Sha3",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AlgorithmKindVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AlgorithmKindVersionOne.Sha384": {
          "name": "Sha384",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AlgorithmKindVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AlgorithmKindVersionOne.Sha512": {
          "name": "Sha512",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AlgorithmKindVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AlgorithmKindVersionOne.Snefru": {
          "name": "Snefru",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AlgorithmKindVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AlgorithmKindVersionOne.Ssdeep": {
          "name": "Ssdeep",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AlgorithmKindVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AlgorithmKindVersionOne.Swifft": {
          "name": "Swifft",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AlgorithmKindVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AlgorithmKindVersionOne.Tlsh": {
          "name": "Tlsh",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AlgorithmKindVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationVersionOne": {
          "name": "AnnotatedCodeLocationVersionOne",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationVersionOne..ctor(Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationVersionOne)": {
          "name": ".ctor(Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationVersionOne)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationVersionOne..ctor(System.Int32,System.Int32,Microsoft.CodeAnalysis.Sarif.VersionOne.PhysicalLocationVersionOne,System.String,System.String,System.String,System.Int32,System.String,Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationKindVersionOne,Microsoft.CodeAnalysis.Sarif.VersionOne.TaintKindVersionOne,System.String,System.Collections.Generic.IEnumerable`1<System.String>,System.Collections.Generic.IDictionary`2<System.String,System.String>,System.String,System.Boolean,Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationImportanceVersionOne,System.String,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotationVersionOne>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)": {
          "name": ".ctor(System.Int32,System.Int32,Microsoft.CodeAnalysis.Sarif.VersionOne.PhysicalLocationVersionOne,System.String,System.String,System.String,System.Int32,System.String,Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationKindVersionOne,Microsoft.CodeAnalysis.Sarif.VersionOne.TaintKindVersionOne,System.String,System.Collections.Generic.IEnumerable`1<System.String>,System.Collections.Generic.IDictionary`2<System.String,System.String>,System.String,System.Boolean,Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationImportanceVersionOne,System.String,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotationVersionOne>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationVersionOne.Annotations": {
          "name": "Annotations",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationVersionOne.State": {
          "name": "State",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationVersionOne.Values": {
          "name": "Values",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationVersionOneEqualityComparer": {
          "name": "AnnotatedCodeLocationVersionOneEqualityComparer",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationVersionOneEqualityComparer.Equals(Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationVersionOne,Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationVersionOne)": {
          "name": "Equals(Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationVersionOne,Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationVersionOne)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationVersionOneEqualityComparer",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationVersionOneEqualityComparer.GetHashCode(Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationVersionOne)": {
          "name": "GetHashCode(Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationVersionOne)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationVersionOneEqualityComparer",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotationVersionOne": {
          "name": "AnnotationVersionOne",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotationVersionOne.Locations": {
          "name": "Locations",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotationVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.CodeFlowVersionOne": {
          "name": "CodeFlowVersionOne",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.CodeFlowVersionOne..ctor(Microsoft.CodeAnalysis.Sarif.VersionOne.CodeFlowVersionOne)": {
          "name": ".ctor(Microsoft.CodeAnalysis.Sarif.VersionOne.CodeFlowVersionOne)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.CodeFlowVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.CodeFlowVersionOne..ctor(System.String,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationVersionOne>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)": {
          "name": ".ctor(System.String,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationVersionOne>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.CodeFlowVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.CodeFlowVersionOne.Locations": {
          "name": "Locations",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.CodeFlowVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.ExceptionDataVersionOne": {
          "name": "ExceptionDataVersionOne",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.ExceptionDataVersionOne.InnerExceptions": {
          "name": "InnerExceptions",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.ExceptionDataVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.FileChangeVersionOne": {
          "name": "FileChangeVersionOne",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.FileChangeVersionOne..ctor(System.Uri,System.String,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.VersionOne.ReplacementVersionOne>)": {
          "name": ".ctor(System.Uri,System.String,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.VersionOne.ReplacementVersionOne>)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.FileChangeVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.FileChangeVersionOne.Replacements": {
          "name": "Replacements",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.FileChangeVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.FileChangeVersionOne.UriBaseId": {
          "name": "UriBaseId",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.FileChangeVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.FileDataVersionOne": {
          "name": "FileDataVersionOne",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.FileDataVersionOne..ctor(Microsoft.CodeAnalysis.Sarif.VersionOne.FileDataVersionOne)": {
          "name": ".ctor(Microsoft.CodeAnalysis.Sarif.VersionOne.FileDataVersionOne)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.FileDataVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.FileDataVersionOne..ctor(System.Uri,System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.VersionOne.HashVersionOne>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)": {
          "name": ".ctor(System.Uri,System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.VersionOne.HashVersionOne>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.FileDataVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.FileDataVersionOne.Hashes": {
          "name": "Hashes",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.FileDataVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.FileDataVersionOne.UriBaseId": {
          "name": "UriBaseId",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.FileDataVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.FixVersionOne": {
          "name": "FixVersionOne",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.FixVersionOne.FileChanges": {
          "name": "FileChanges",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.FixVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.FormattedRuleMessageVersionOne": {
          "name": "FormattedRuleMessageVersionOne",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.FormattedRuleMessageVersionOne.Arguments": {
          "name": "Arguments",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.FormattedRuleMessageVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.InvocationVersionOne": {
          "name": "InvocationVersionOne",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.InvocationVersionOne..ctor(Microsoft.CodeAnalysis.Sarif.VersionOne.InvocationVersionOne)": {
          "name": ".ctor(Microsoft.CodeAnalysis.Sarif.VersionOne.InvocationVersionOne)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.InvocationVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.InvocationVersionOne..ctor(System.String,System.Collections.Generic.IDictionary`2<System.String,System.String>,System.DateTime,System.DateTime,System.String,System.String,System.Int32,System.String,System.String,System.Collections.Generic.IDictionary`2<System.String,System.String>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)": {
          "name": ".ctor(System.String,System.Collections.Generic.IDictionary`2<System.String,System.String>,System.DateTime,System.DateTime,System.String,System.String,System.Int32,System.String,System.String,System.Collections.Generic.IDictionary`2<System.String,System.String>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.InvocationVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.InvocationVersionOne.EnvironmentVariables": {
          "name": "EnvironmentVariables",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.InvocationVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.InvocationVersionOne.ResponseFiles": {
          "name": "ResponseFiles",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.InvocationVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.InvocationVersionOneEqualityComparer": {
          "name": "InvocationVersionOneEqualityComparer",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.InvocationVersionOneEqualityComparer.Equals(Microsoft.CodeAnalysis.Sarif.VersionOne.InvocationVersionOne,Microsoft.CodeAnalysis.Sarif.VersionOne.InvocationVersionOne)": {
          "name": "Equals(Microsoft.CodeAnalysis.Sarif.VersionOne.InvocationVersionOne,Microsoft.CodeAnalysis.Sarif.VersionOne.InvocationVersionOne)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.InvocationVersionOneEqualityComparer",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.IRuleVersionOne": {
          "name": "IRuleVersionOne",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.ISarifNodeVersionOne": {
          "name": "ISarifNodeVersionOne",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.ISarifNodeVersionOne.SarifNodeKindVersionOne": {
          "name": "SarifNodeKindVersionOne",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.ISarifNodeVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.LocationVersionOne": {
          "name": "LocationVersionOne",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.LocationVersionOne..ctor(Microsoft.CodeAnalysis.Sarif.VersionOne.LocationVersionOne)": {
          "name": ".ctor(Microsoft.CodeAnalysis.Sarif.VersionOne.LocationVersionOne)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.LocationVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.LocationVersionOne..ctor(Microsoft.CodeAnalysis.Sarif.VersionOne.PhysicalLocationVersionOne,Microsoft.CodeAnalysis.Sarif.VersionOne.PhysicalLocationVersionOne,System.String,System.String,System.String,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)": {
          "name": ".ctor(Microsoft.CodeAnalysis.Sarif.VersionOne.PhysicalLocationVersionOne,Microsoft.CodeAnalysis.Sarif.VersionOne.PhysicalLocationVersionOne,System.String,System.String,System.String,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.LocationVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.NotificationVersionOne": {
          "name": "NotificationVersionOne",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.NotificationVersionOne..ctor(Microsoft.CodeAnalysis.Sarif.VersionOne.NotificationVersionOne)": {
          "name": ".ctor(Microsoft.CodeAnalysis.Sarif.VersionOne.NotificationVersionOne)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.NotificationVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.NotificationVersionOne..ctor(System.String,System.String,System.String,Microsoft.CodeAnalysis.Sarif.VersionOne.PhysicalLocationVersionOne,System.String,Microsoft.CodeAnalysis.Sarif.VersionOne.NotificationLevelVersionOne,System.Int32,System.DateTime,Microsoft.CodeAnalysis.Sarif.VersionOne.ExceptionDataVersionOne,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)": {
          "name": ".ctor(System.String,System.String,System.String,Microsoft.CodeAnalysis.Sarif.VersionOne.PhysicalLocationVersionOne,System.String,Microsoft.CodeAnalysis.Sarif.VersionOne.NotificationLevelVersionOne,System.Int32,System.DateTime,Microsoft.CodeAnalysis.Sarif.VersionOne.ExceptionDataVersionOne,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.NotificationVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.PhysicalLocationVersionOne": {
          "name": "PhysicalLocationVersionOne",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.PhysicalLocationVersionOne..ctor(System.Uri,System.String,Microsoft.CodeAnalysis.Sarif.VersionOne.RegionVersionOne)": {
          "name": ".ctor(System.Uri,System.String,Microsoft.CodeAnalysis.Sarif.VersionOne.RegionVersionOne)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.PhysicalLocationVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.PhysicalLocationVersionOne.UriBaseId": {
          "name": "UriBaseId",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.PhysicalLocationVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.ResultVersionOne": {
          "name": "ResultVersionOne",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.ResultVersionOne..ctor(Microsoft.CodeAnalysis.Sarif.VersionOne.ResultVersionOne)": {
          "name": ".ctor(Microsoft.CodeAnalysis.Sarif.VersionOne.ResultVersionOne)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.ResultVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.ResultVersionOne..ctor(System.String,System.String,Microsoft.CodeAnalysis.Sarif.VersionOne.ResultLevelVersionOne,System.String,Microsoft.CodeAnalysis.Sarif.VersionOne.FormattedRuleMessageVersionOne,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.VersionOne.LocationVersionOne>,System.String,System.String,System.String,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.VersionOne.StackVersionOne>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.VersionOne.CodeFlowVersionOne>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationVersionOne>,Microsoft.CodeAnalysis.Sarif.VersionOne.SuppressionStatesVersionOne,Microsoft.CodeAnalysis.Sarif.VersionOne.BaselineStateVersionOne,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.VersionOne.FixVersionOne>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)": {
          "name": ".ctor(System.String,System.String,Microsoft.CodeAnalysis.Sarif.VersionOne.ResultLevelVersionOne,System.String,Microsoft.CodeAnalysis.Sarif.VersionOne.FormattedRuleMessageVersionOne,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.VersionOne.LocationVersionOne>,System.String,System.String,System.String,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.VersionOne.StackVersionOne>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.VersionOne.CodeFlowVersionOne>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationVersionOne>,Microsoft.CodeAnalysis.Sarif.VersionOne.SuppressionStatesVersionOne,Microsoft.CodeAnalysis.Sarif.VersionOne.BaselineStateVersionOne,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.VersionOne.FixVersionOne>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.ResultVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.ResultVersionOne.CodeFlows": {
          "name": "CodeFlows",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.ResultVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.ResultVersionOne.Fixes": {
          "name": "Fixes",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.ResultVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.ResultVersionOne.Locations": {
          "name": "Locations",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.ResultVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.ResultVersionOne.RelatedLocations": {
          "name": "RelatedLocations",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.ResultVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.ResultVersionOne.Stacks": {
          "name": "Stacks",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.ResultVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.ResultVersionOneEqualityComparer": {
          "name": "ResultVersionOneEqualityComparer",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.ResultVersionOneEqualityComparer.Equals(Microsoft.CodeAnalysis.Sarif.VersionOne.ResultVersionOne,Microsoft.CodeAnalysis.Sarif.VersionOne.ResultVersionOne)": {
          "name": "Equals(Microsoft.CodeAnalysis.Sarif.VersionOne.ResultVersionOne,Microsoft.CodeAnalysis.Sarif.VersionOne.ResultVersionOne)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.ResultVersionOneEqualityComparer",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.ResultVersionOneEqualityComparer.GetHashCode(Microsoft.CodeAnalysis.Sarif.VersionOne.ResultVersionOne)": {
          "name": "GetHashCode(Microsoft.CodeAnalysis.Sarif.VersionOne.ResultVersionOne)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.ResultVersionOneEqualityComparer",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.RuleVersionOne": {
          "name": "RuleVersionOne",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.RuleVersionOne..ctor(Microsoft.CodeAnalysis.Sarif.VersionOne.RuleVersionOne)": {
          "name": ".ctor(Microsoft.CodeAnalysis.Sarif.VersionOne.RuleVersionOne)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.RuleVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.RuleVersionOne..ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary`2<System.String,System.String>,Microsoft.CodeAnalysis.Sarif.VersionOne.RuleConfigurationVersionOne,Microsoft.CodeAnalysis.Sarif.VersionOne.ResultLevelVersionOne,System.Uri,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)": {
          "name": ".ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary`2<System.String,System.String>,Microsoft.CodeAnalysis.Sarif.VersionOne.RuleConfigurationVersionOne,Microsoft.CodeAnalysis.Sarif.VersionOne.ResultLevelVersionOne,System.Uri,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.RuleVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.RuleVersionOne.MessageFormats": {
          "name": "MessageFormats",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.RuleVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.RuleVersionOneEqualityComparer": {
          "name": "RuleVersionOneEqualityComparer",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.RuleVersionOneEqualityComparer.Equals(Microsoft.CodeAnalysis.Sarif.VersionOne.RuleVersionOne,Microsoft.CodeAnalysis.Sarif.VersionOne.RuleVersionOne)": {
          "name": "Equals(Microsoft.CodeAnalysis.Sarif.VersionOne.RuleVersionOne,Microsoft.CodeAnalysis.Sarif.VersionOne.RuleVersionOne)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.RuleVersionOneEqualityComparer",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.RunVersionOne": {
          "name": "RunVersionOne",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.RunVersionOne..ctor(Microsoft.CodeAnalysis.Sarif.VersionOne.RunVersionOne)": {
          "name": ".ctor(Microsoft.CodeAnalysis.Sarif.VersionOne.RunVersionOne)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.RunVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.RunVersionOne..ctor(Microsoft.CodeAnalysis.Sarif.VersionOne.ToolVersionOne,Microsoft.CodeAnalysis.Sarif.VersionOne.InvocationVersionOne,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.VersionOne.FileDataVersionOne>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.VersionOne.LogicalLocationVersionOne>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.VersionOne.ResultVersionOne>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.VersionOne.NotificationVersionOne>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.VersionOne.NotificationVersionOne>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.VersionOne.RuleVersionOne>,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)": {
          "name": ".ctor(Microsoft.CodeAnalysis.Sarif.VersionOne.ToolVersionOne,Microsoft.CodeAnalysis.Sarif.VersionOne.InvocationVersionOne,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.VersionOne.FileDataVersionOne>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.VersionOne.LogicalLocationVersionOne>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.VersionOne.ResultVersionOne>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.VersionOne.NotificationVersionOne>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.VersionOne.NotificationVersionOne>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.VersionOne.RuleVersionOne>,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.RunVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.RunVersionOne.ConfigurationNotifications": {
          "name": "ConfigurationNotifications",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.RunVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.RunVersionOne.Files": {
          "name": "Files",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.RunVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.RunVersionOne.LogicalLocations": {
          "name": "LogicalLocations",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.RunVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.RunVersionOne.Results": {
          "name": "Results",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.RunVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.RunVersionOne.Rules": {
          "name": "Rules",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.RunVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.RunVersionOne.ToolNotifications": {
          "name": "ToolNotifications",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.RunVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.RunVersionOneEqualityComparer": {
          "name": "RunVersionOneEqualityComparer",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.RunVersionOneEqualityComparer.Equals(Microsoft.CodeAnalysis.Sarif.VersionOne.RunVersionOne,Microsoft.CodeAnalysis.Sarif.VersionOne.RunVersionOne)": {
          "name": "Equals(Microsoft.CodeAnalysis.Sarif.VersionOne.RunVersionOne,Microsoft.CodeAnalysis.Sarif.VersionOne.RunVersionOne)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.RunVersionOneEqualityComparer",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.RunVersionOneEqualityComparer.GetHashCode(Microsoft.CodeAnalysis.Sarif.VersionOne.RunVersionOne)": {
          "name": "GetHashCode(Microsoft.CodeAnalysis.Sarif.VersionOne.RunVersionOne)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.RunVersionOneEqualityComparer",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.SarifLogVersionOne": {
          "name": "SarifLogVersionOne",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.SarifLogVersionOne.Runs": {
          "name": "Runs",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.SarifLogVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.SarifNodeKindVersionOne": {
          "name": "SarifNodeKindVersionOne",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.SarifNodeKindVersionOne.SarifLogVersionOne": {
          "name": "SarifLogVersionOne",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.SarifNodeKindVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.SarifRewritingVisitorVersionOne": {
          "name": "SarifRewritingVisitorVersionOne",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.SarifRewritingVisitorVersionOne.VisitSarifLogVersionOne(Microsoft.CodeAnalysis.Sarif.VersionOne.SarifLogVersionOne)": {
          "name": "VisitSarifLogVersionOne(Microsoft.CodeAnalysis.Sarif.VersionOne.SarifLogVersionOne)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.SarifRewritingVisitorVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.SarifVersionVersionOne": {
          "name": "SarifVersionVersionOne",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.StackFrameVersionOne": {
          "name": "StackFrameVersionOne",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.StackFrameVersionOne..ctor(Microsoft.CodeAnalysis.Sarif.VersionOne.StackFrameVersionOne)": {
          "name": ".ctor(Microsoft.CodeAnalysis.Sarif.VersionOne.StackFrameVersionOne)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.StackFrameVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.StackFrameVersionOne..ctor(System.String,System.Uri,System.String,System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Collections.Generic.IEnumerable`1<System.String>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)": {
          "name": ".ctor(System.String,System.Uri,System.String,System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Collections.Generic.IEnumerable`1<System.String>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.StackFrameVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.StackFrameVersionOne.Parameters": {
          "name": "Parameters",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.StackFrameVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.StackFrameVersionOne.UriBaseId": {
          "name": "UriBaseId",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.StackFrameVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.StackFrameVersionOneEqualityComparer": {
          "name": "StackFrameVersionOneEqualityComparer",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.StackFrameVersionOneEqualityComparer.Equals(Microsoft.CodeAnalysis.Sarif.VersionOne.StackFrameVersionOne,Microsoft.CodeAnalysis.Sarif.VersionOne.StackFrameVersionOne)": {
          "name": "Equals(Microsoft.CodeAnalysis.Sarif.VersionOne.StackFrameVersionOne,Microsoft.CodeAnalysis.Sarif.VersionOne.StackFrameVersionOne)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.StackFrameVersionOneEqualityComparer",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.StackVersionOne": {
          "name": "StackVersionOne",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.StackVersionOne..ctor(Microsoft.CodeAnalysis.Sarif.VersionOne.StackVersionOne)": {
          "name": ".ctor(Microsoft.CodeAnalysis.Sarif.VersionOne.StackVersionOne)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.StackVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.StackVersionOne..ctor(System.String,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.VersionOne.StackFrameVersionOne>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)": {
          "name": ".ctor(System.String,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.VersionOne.StackFrameVersionOne>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.StackVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.StackVersionOne.Frames": {
          "name": "Frames",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.StackVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.SuppressionStatesVersionOne": {
          "name": "SuppressionStatesVersionOne",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.TagsCollectionVersionOne": {
          "name": "TagsCollectionVersionOne",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.ToolVersionOne": {
          "name": "ToolVersionOne",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.ToolVersionOne..ctor(Microsoft.CodeAnalysis.Sarif.VersionOne.ToolVersionOne)": {
          "name": ".ctor(Microsoft.CodeAnalysis.Sarif.VersionOne.ToolVersionOne)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.ToolVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.ToolVersionOne..ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)": {
          "name": ".ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.ToolVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.ToolVersionOne.SarifLoggerVersion": {
          "name": "SarifLoggerVersion",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.ToolVersionOne",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors": {
          "name": "Microsoft.CodeAnalysis.Sarif.Visitors",
          "parentKey": "sarif.dll",
          "kind": "namespace"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.AbsoluteUrisVisitor": {
          "name": "AbsoluteUrisVisitor",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.AbsoluteUrisVisitor.CombineUris(System.Uri,System.Uri)": {
          "name": "CombineUris(System.Uri,System.Uri)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.AbsoluteUrisVisitor",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.AbsoluteUrisVisitor.VisitRun(Microsoft.CodeAnalysis.Sarif.Run)": {
          "name": "VisitRun(Microsoft.CodeAnalysis.Sarif.Run)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.AbsoluteUrisVisitor",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.AddFileReferencesVisitor": {
          "name": "AddFileReferencesVisitor",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.AddFileReferencesVisitor.VisitPhysicalLocation(Microsoft.CodeAnalysis.Sarif.PhysicalLocation)": {
          "name": "VisitPhysicalLocation(Microsoft.CodeAnalysis.Sarif.PhysicalLocation)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.AddFileReferencesVisitor",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.AddFileReferencesVisitor.VisitRun(Microsoft.CodeAnalysis.Sarif.Run)": {
          "name": "VisitRun(Microsoft.CodeAnalysis.Sarif.Run)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.AddFileReferencesVisitor",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.InsertOptionalDataVisitor": {
          "name": "InsertOptionalDataVisitor",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.InsertOptionalDataVisitor.s_fileSystem": {
          "name": "s_fileSystem",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.InsertOptionalDataVisitor",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.InsertOptionalDataVisitor.VisitMessage(Microsoft.CodeAnalysis.Sarif.Message)": {
          "name": "VisitMessage(Microsoft.CodeAnalysis.Sarif.Message)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.InsertOptionalDataVisitor",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.InsertOptionalDataVisitor.VisitPhysicalLocation(Microsoft.CodeAnalysis.Sarif.PhysicalLocation)": {
          "name": "VisitPhysicalLocation(Microsoft.CodeAnalysis.Sarif.PhysicalLocation)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.InsertOptionalDataVisitor",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.InsertOptionalDataVisitor.VisitResult(Microsoft.CodeAnalysis.Sarif.Result)": {
          "name": "VisitResult(Microsoft.CodeAnalysis.Sarif.Result)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.InsertOptionalDataVisitor",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.RebaseUriVisitor": {
          "name": "RebaseUriVisitor",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.RebaseUriVisitor..ctor(System.String,System.Boolean,System.Uri)": {
          "name": ".ctor(System.String,System.Boolean,System.Uri)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.RebaseUriVisitor",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.RebaseUriVisitor..ctor(System.String,System.Uri)": {
          "name": ".ctor(System.String,System.Uri)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.RebaseUriVisitor",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.RebaseUriVisitor.VisitPhysicalLocation(Microsoft.CodeAnalysis.Sarif.PhysicalLocation)": {
          "name": "VisitPhysicalLocation(Microsoft.CodeAnalysis.Sarif.PhysicalLocation)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.RebaseUriVisitor",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.RebaseUriVisitor.VisitRun(Microsoft.CodeAnalysis.Sarif.Run)": {
          "name": "VisitRun(Microsoft.CodeAnalysis.Sarif.Run)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.RebaseUriVisitor",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifCurrentToVersionOneVisitor": {
          "name": "SarifCurrentToVersionOneVisitor",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifCurrentToVersionOneVisitor.CreateFileChange(Microsoft.CodeAnalysis.Sarif.FileChange)": {
          "name": "CreateFileChange(Microsoft.CodeAnalysis.Sarif.FileChange)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifCurrentToVersionOneVisitor",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifCurrentToVersionOneVisitor.CreateLogicalLocation(Microsoft.CodeAnalysis.Sarif.LogicalLocation)": {
          "name": "CreateLogicalLocation(Microsoft.CodeAnalysis.Sarif.LogicalLocation)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifCurrentToVersionOneVisitor",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifCurrentToVersionOneVisitor.CreatePhysicalLocation(Microsoft.CodeAnalysis.Sarif.FileLocation)": {
          "name": "CreatePhysicalLocation(Microsoft.CodeAnalysis.Sarif.FileLocation)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifCurrentToVersionOneVisitor",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifCurrentToVersionOneVisitor.CreateReplacement(Microsoft.CodeAnalysis.Sarif.Replacement,System.Text.Encoding)": {
          "name": "CreateReplacement(Microsoft.CodeAnalysis.Sarif.Replacement,System.Text.Encoding)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifCurrentToVersionOneVisitor",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifCurrentToVersionOneVisitor.CreateResult(Microsoft.CodeAnalysis.Sarif.Result)": {
          "name": "CreateResult(Microsoft.CodeAnalysis.Sarif.Result)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifCurrentToVersionOneVisitor",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifCurrentToVersionOneVisitor.CreateRule(Microsoft.CodeAnalysis.Sarif.Rule)": {
          "name": "CreateRule(Microsoft.CodeAnalysis.Sarif.Rule)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifCurrentToVersionOneVisitor",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifCurrentToVersionOneVisitor.CreateRun(Microsoft.CodeAnalysis.Sarif.Run)": {
          "name": "CreateRun(Microsoft.CodeAnalysis.Sarif.Run)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifCurrentToVersionOneVisitor",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifCurrentToVersionOneVisitor.CreateTool(Microsoft.CodeAnalysis.Sarif.Tool)": {
          "name": "CreateTool(Microsoft.CodeAnalysis.Sarif.Tool)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifCurrentToVersionOneVisitor",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifCurrentToVersionOneVisitor.GetContentStream(System.Uri,System.Text.Encoding&)": {
          "name": "GetContentStream(System.Uri,System.Text.Encoding&)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifCurrentToVersionOneVisitor",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifCurrentToVersionOneVisitor.GetFileEncoding(System.String)": {
          "name": "GetFileEncoding(System.String)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifCurrentToVersionOneVisitor",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifCurrentToVersionOneVisitor.SarifLogVersionOne": {
          "name": "SarifLogVersionOne",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifCurrentToVersionOneVisitor",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifCurrentToVersionOneVisitor.VisitSarifLog(Microsoft.CodeAnalysis.Sarif.SarifLog)": {
          "name": "VisitSarifLog(Microsoft.CodeAnalysis.Sarif.SarifLog)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifCurrentToVersionOneVisitor",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities": {
          "name": "SarifTransformerUtilities",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities.AlgorithmKindNameMap": {
          "name": "AlgorithmKindNameMap",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities.AlgorithmNameKindMap": {
          "name": "AlgorithmNameKindMap",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities.CreateAnnotatedCodeLocationImportance(Microsoft.CodeAnalysis.Sarif.ThreadFlowLocationImportance)": {
          "name": "CreateAnnotatedCodeLocationImportance(Microsoft.CodeAnalysis.Sarif.ThreadFlowLocationImportance)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities.CreateBaselineState(Microsoft.CodeAnalysis.Sarif.VersionOne.BaselineStateVersionOne)": {
          "name": "CreateBaselineState(Microsoft.CodeAnalysis.Sarif.VersionOne.BaselineStateVersionOne)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities.CreateBaselineStateVersionOne(Microsoft.CodeAnalysis.Sarif.BaselineState)": {
          "name": "CreateBaselineStateVersionOne(Microsoft.CodeAnalysis.Sarif.BaselineState)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities.CreateDisambiguatedName(System.String,System.Int32)": {
          "name": "CreateDisambiguatedName(System.String,System.Int32)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities.CreateNotificationLevel(Microsoft.CodeAnalysis.Sarif.VersionOne.NotificationLevelVersionOne)": {
          "name": "CreateNotificationLevel(Microsoft.CodeAnalysis.Sarif.VersionOne.NotificationLevelVersionOne)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities.CreateNotificationLevelVersionOne(Microsoft.CodeAnalysis.Sarif.NotificationLevel)": {
          "name": "CreateNotificationLevelVersionOne(Microsoft.CodeAnalysis.Sarif.NotificationLevel)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities.CreateResultLevel(Microsoft.CodeAnalysis.Sarif.VersionOne.ResultLevelVersionOne)": {
          "name": "CreateResultLevel(Microsoft.CodeAnalysis.Sarif.VersionOne.ResultLevelVersionOne)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities.CreateResultLevelVersionOne(Microsoft.CodeAnalysis.Sarif.ResultLevel)": {
          "name": "CreateResultLevelVersionOne(Microsoft.CodeAnalysis.Sarif.ResultLevel)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities.CreateResultLevelVersionOne(Microsoft.CodeAnalysis.Sarif.RuleConfigurationDefaultLevel)": {
          "name": "CreateResultLevelVersionOne(Microsoft.CodeAnalysis.Sarif.RuleConfigurationDefaultLevel)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities.CreateRuleConfigurationDefaultLevel(Microsoft.CodeAnalysis.Sarif.VersionOne.ResultLevelVersionOne)": {
          "name": "CreateRuleConfigurationDefaultLevel(Microsoft.CodeAnalysis.Sarif.VersionOne.ResultLevelVersionOne)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities.CreateSuppressionStates(Microsoft.CodeAnalysis.Sarif.VersionOne.SuppressionStatesVersionOne)": {
          "name": "CreateSuppressionStates(Microsoft.CodeAnalysis.Sarif.VersionOne.SuppressionStatesVersionOne)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities.CreateSuppressionStatesVersionOne(Microsoft.CodeAnalysis.Sarif.SuppressionStates)": {
          "name": "CreateSuppressionStatesVersionOne(Microsoft.CodeAnalysis.Sarif.SuppressionStates)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities.CreateThreadFlowLocationImportance(Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationImportanceVersionOne)": {
          "name": "CreateThreadFlowLocationImportance(Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationImportanceVersionOne)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities.DefaultFullyQualifiedNameDelimiters": {
          "name": "DefaultFullyQualifiedNameDelimiters",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities.JsonSettingsV1": {
          "name": "JsonSettingsV1",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities.JsonSettingsV1Compact": {
          "name": "JsonSettingsV1Compact",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities.JsonSettingsV2": {
          "name": "JsonSettingsV2",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities.JsonSettingsV2Compact": {
          "name": "JsonSettingsV2Compact",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities.PropertyBagTransformerItemPrefixes": {
          "name": "PropertyBagTransformerItemPrefixes",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifVersionOneToCurrentVisitor": {
          "name": "SarifVersionOneToCurrentVisitor",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifVersionOneToCurrentVisitor._currentV1Run": {
          "name": "_currentV1Run",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifVersionOneToCurrentVisitor",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifVersionOneToCurrentVisitor.CreateFileLocation(System.Uri,System.String)": {
          "name": "CreateFileLocation(System.Uri,System.String)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifVersionOneToCurrentVisitor",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifVersionOneToCurrentVisitor.CreateHash(Microsoft.CodeAnalysis.Sarif.VersionOne.HashVersionOne)": {
          "name": "CreateHash(Microsoft.CodeAnalysis.Sarif.VersionOne.HashVersionOne)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifVersionOneToCurrentVisitor",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifVersionOneToCurrentVisitor.CreateLogicalLocation(Microsoft.CodeAnalysis.Sarif.VersionOne.LogicalLocationVersionOne)": {
          "name": "CreateLogicalLocation(Microsoft.CodeAnalysis.Sarif.VersionOne.LogicalLocationVersionOne)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifVersionOneToCurrentVisitor",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifVersionOneToCurrentVisitor.CreateMessage(System.String)": {
          "name": "CreateMessage(System.String)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifVersionOneToCurrentVisitor",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifVersionOneToCurrentVisitor.CreateRegion(Microsoft.CodeAnalysis.Sarif.VersionOne.RegionVersionOne)": {
          "name": "CreateRegion(Microsoft.CodeAnalysis.Sarif.VersionOne.RegionVersionOne)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifVersionOneToCurrentVisitor",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifVersionOneToCurrentVisitor.CreateRegion(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)": {
          "name": "CreateRegion(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifVersionOneToCurrentVisitor",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifVersionOneToCurrentVisitor.CreateResult(Microsoft.CodeAnalysis.Sarif.VersionOne.ResultVersionOne)": {
          "name": "CreateResult(Microsoft.CodeAnalysis.Sarif.VersionOne.ResultVersionOne)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifVersionOneToCurrentVisitor",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifVersionOneToCurrentVisitor.CreateRun(Microsoft.CodeAnalysis.Sarif.VersionOne.RunVersionOne)": {
          "name": "CreateRun(Microsoft.CodeAnalysis.Sarif.VersionOne.RunVersionOne)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifVersionOneToCurrentVisitor",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifVersionOneToCurrentVisitor.CreateTool(Microsoft.CodeAnalysis.Sarif.VersionOne.ToolVersionOne)": {
          "name": "CreateTool(Microsoft.CodeAnalysis.Sarif.VersionOne.ToolVersionOne)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifVersionOneToCurrentVisitor",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifVersionOneToCurrentVisitor.GetLogicalLocationName(System.String)": {
          "name": "GetLogicalLocationName(System.String)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifVersionOneToCurrentVisitor",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifVersionOneToCurrentVisitor.SarifLog": {
          "name": "SarifLog",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifVersionOneToCurrentVisitor",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifVersionOneToCurrentVisitor.VisitSarifLogVersionOne(Microsoft.CodeAnalysis.Sarif.VersionOne.SarifLogVersionOne)": {
          "name": "VisitSarifLogVersionOne(Microsoft.CodeAnalysis.Sarif.VersionOne.SarifLogVersionOne)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifVersionOneToCurrentVisitor",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.UnknownEncodingException": {
          "name": "UnknownEncodingException",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Writers": {
          "name": "Microsoft.CodeAnalysis.Sarif.Writers",
          "parentKey": "sarif.dll",
          "kind": "namespace"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Writers.MimeType": {
          "name": "MimeType",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Writers",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Writers.MimeType.Cpp": {
          "name": "Cpp",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Writers.MimeType",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Writers.MimeType.DetermineFromFileExtension(System.String)": {
          "name": "DetermineFromFileExtension(System.String)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Writers.MimeType",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Writers.MimeType.Sarif": {
          "name": "Sarif",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Writers.MimeType",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Writers.ResultLogJsonWriter": {
          "name": "ResultLogJsonWriter",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Writers",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Writers.ResultLogJsonWriter.Initialize(Microsoft.CodeAnalysis.Sarif.Run)": {
          "name": "Initialize(Microsoft.CodeAnalysis.Sarif.Run)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Writers.ResultLogJsonWriter",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Writers.SarifLogger": {
          "name": "SarifLogger",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Writers",
          "kind": "type"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Writers.SarifLogger..ctor(System.IO.TextWriter,Microsoft.CodeAnalysis.Sarif.Writers.LoggingOptions,Microsoft.CodeAnalysis.Sarif.OptionallyEmittedData,Microsoft.CodeAnalysis.Sarif.Tool,Microsoft.CodeAnalysis.Sarif.Run,System.Collections.Generic.IEnumerable`1<System.String>,System.Collections.Generic.IEnumerable`1<System.String>,System.Collections.Generic.IEnumerable`1<System.String>,System.String)": {
          "name": ".ctor(System.IO.TextWriter,Microsoft.CodeAnalysis.Sarif.Writers.LoggingOptions,Microsoft.CodeAnalysis.Sarif.OptionallyEmittedData,Microsoft.CodeAnalysis.Sarif.Tool,Microsoft.CodeAnalysis.Sarif.Run,System.Collections.Generic.IEnumerable`1<System.String>,System.Collections.Generic.IEnumerable`1<System.String>,System.Collections.Generic.IEnumerable`1<System.String>,System.String)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Writers.SarifLogger",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Writers.SarifLogger..ctor(System.String,Microsoft.CodeAnalysis.Sarif.Writers.LoggingOptions,Microsoft.CodeAnalysis.Sarif.OptionallyEmittedData,Microsoft.CodeAnalysis.Sarif.Tool,Microsoft.CodeAnalysis.Sarif.Run,System.Collections.Generic.IEnumerable`1<System.String>,System.Collections.Generic.IEnumerable`1<System.String>,System.Collections.Generic.IEnumerable`1<System.String>,System.String)": {
          "name": ".ctor(System.String,Microsoft.CodeAnalysis.Sarif.Writers.LoggingOptions,Microsoft.CodeAnalysis.Sarif.OptionallyEmittedData,Microsoft.CodeAnalysis.Sarif.Tool,Microsoft.CodeAnalysis.Sarif.Run,System.Collections.Generic.IEnumerable`1<System.String>,System.Collections.Generic.IEnumerable`1<System.String>,System.Collections.Generic.IEnumerable`1<System.String>,System.String)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Writers.SarifLogger",
          "kind": "member"
        },
        "sarif.dll!Microsoft.CodeAnalysis.Sarif.Writers.SarifLogger.CaptureFilesInResult(Microsoft.CodeAnalysis.Sarif.Result)": {
          "name": "CaptureFilesInResult(Microsoft.CodeAnalysis.Sarif.Result)",
          "parentKey": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Writers.SarifLogger",
          "kind": "member"
        },
        "sarif.driver.dll": {
          "kind": "module"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver": {
          "name": "Microsoft.CodeAnalysis.Sarif.Driver",
          "parentKey": "sarif.driver.dll",
          "kind": "namespace"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AggregatingLogger": {
          "name": "AggregatingLogger",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver",
          "kind": "type"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AggregatingLogger.Dispose()": {
          "name": "Dispose()",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AggregatingLogger",
          "kind": "member"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AggregatingLogger.Loggers": {
          "name": "Loggers",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AggregatingLogger",
          "kind": "member"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalysisContext": {
          "name": "AnalysisContext",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver",
          "kind": "type"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalysisContext.Dispose()": {
          "name": "Dispose()",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalysisContext",
          "kind": "member"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalysisContext.Policy": {
          "name": "Policy",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalysisContext",
          "kind": "member"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2": {
          "name": "AnalyzeCommandBase`2",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver",
          "kind": "type"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2.AnalyzeTarget(System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Driver.ISkimmer`1<!0>>,!0,System.Collections.Generic.HashSet`1<System.String>)": {
          "name": "AnalyzeTarget(System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Driver.ISkimmer`1<!0>>,!0,System.Collections.Generic.HashSet`1<System.String>)",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2",
          "kind": "member"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2.AnalyzeTargets(!1,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Driver.ISkimmer`1<!0>>,!0,System.Collections.Generic.IEnumerable`1<System.String>)": {
          "name": "AnalyzeTargets(!1,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Driver.ISkimmer`1<!0>>,!0,System.Collections.Generic.IEnumerable`1<System.String>)",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2",
          "kind": "member"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2.CreateContext(!1,Microsoft.CodeAnalysis.Sarif.IAnalysisLogger,Microsoft.CodeAnalysis.Sarif.RuntimeConditions,System.String)": {
          "name": "CreateContext(!1,Microsoft.CodeAnalysis.Sarif.IAnalysisLogger,Microsoft.CodeAnalysis.Sarif.RuntimeConditions,System.String)",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2",
          "kind": "member"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2.CreateSkimmers(!0)": {
          "name": "CreateSkimmers(!0)",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2",
          "kind": "member"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2.DefaultPolicyName": {
          "name": "DefaultPolicyName",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2",
          "kind": "member"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2.DetermineApplicabilityAndAnalyze(!1,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Driver.ISkimmer`1<!0>>,!0,System.String,System.Collections.Generic.HashSet`1<System.String>)": {
          "name": "DetermineApplicabilityAndAnalyze(!1,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Driver.ISkimmer`1<!0>>,!0,System.String,System.Collections.Generic.HashSet`1<System.String>)",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2",
          "kind": "member"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2.DetermineApplicabilityForTarget(System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Driver.ISkimmer`1<!0>>,!0,System.Collections.Generic.HashSet`1<System.String>)": {
          "name": "DetermineApplicabilityForTarget(System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Driver.ISkimmer`1<!0>>,!0,System.Collections.Generic.HashSet`1<System.String>)",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2",
          "kind": "member"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2.GenerateSensitiveTokensList()": {
          "name": "GenerateSensitiveTokensList()",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2",
          "kind": "member"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2.GetCurrentRunningOS()": {
          "name": "GetCurrentRunningOS()",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2",
          "kind": "member"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2.InitializeLogger(Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeOptionsBase)": {
          "name": "InitializeLogger(Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeOptionsBase)",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2",
          "kind": "member"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2.InitializeOutputFile(!1,!0,System.Collections.Generic.HashSet`1<System.String>)": {
          "name": "InitializeOutputFile(!1,!0,System.Collections.Generic.HashSet`1<System.String>)",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2",
          "kind": "member"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2.InitializeSkimmers(System.Collections.Generic.HashSet`1<Microsoft.CodeAnalysis.Sarif.Driver.ISkimmer`1<!0>>,!0)": {
          "name": "InitializeSkimmers(System.Collections.Generic.HashSet`1<Microsoft.CodeAnalysis.Sarif.Driver.ISkimmer`1<!0>>,!0)",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2",
          "kind": "member"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2.InvokeCatchingRelevantIOExceptions(System.Action,System.Action`1<System.Exception>)": {
          "name": "InvokeCatchingRelevantIOExceptions(System.Action,System.Action`1<System.Exception>)",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2",
          "kind": "member"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2.LogToolNotification(Microsoft.CodeAnalysis.Sarif.IAnalysisLogger,System.String,Microsoft.CodeAnalysis.Sarif.NotificationLevel,System.Exception)": {
          "name": "LogToolNotification(Microsoft.CodeAnalysis.Sarif.IAnalysisLogger,System.String,Microsoft.CodeAnalysis.Sarif.NotificationLevel,System.Exception)",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2",
          "kind": "member"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2.RaiseUnhandledExceptionInDriverCode": {
          "name": "RaiseUnhandledExceptionInDriverCode",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2",
          "kind": "member"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2.Run(!1)": {
          "name": "Run(!1)",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2",
          "kind": "member"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2.ThrowExitApplicationException(!0,Microsoft.CodeAnalysis.Sarif.Driver.ExitReason,System.Exception)": {
          "name": "ThrowExitApplicationException(!0,Microsoft.CodeAnalysis.Sarif.Driver.ExitReason,System.Exception)",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2",
          "kind": "member"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2.ValidateFile(!0,System.String,System.Nullable`1<System.Boolean>)": {
          "name": "ValidateFile(!0,System.String,System.Nullable`1<System.Boolean>)",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2",
          "kind": "member"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.ArgumentSplitter": {
          "name": "ArgumentSplitter",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver",
          "kind": "type"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.ArgumentSplitter.CommandLineToArgvW(System.String)": {
          "name": "CommandLineToArgvW(System.String)",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.ArgumentSplitter",
          "kind": "member"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.DefaultDriverOptions": {
          "name": "DefaultDriverOptions",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver",
          "kind": "type"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.DefaultDriverOptions.CreateRuleSpecificOption`1(Microsoft.CodeAnalysis.Sarif.IRule,Microsoft.CodeAnalysis.Sarif.PerLanguageOption`1<!!0>)": {
          "name": "CreateRuleSpecificOption`1(Microsoft.CodeAnalysis.Sarif.IRule,Microsoft.CodeAnalysis.Sarif.PerLanguageOption`1<!!0>)",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.DefaultDriverOptions",
          "kind": "member"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.DefaultDriverOptions.Instance": {
          "name": "Instance",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.DefaultDriverOptions",
          "kind": "member"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.DisposableEnumerable`1": {
          "name": "DisposableEnumerable`1",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver",
          "kind": "type"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.DriverCommand`1": {
          "name": "DriverCommand`1",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver",
          "kind": "type"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.DriverCommand`1.FAILURE": {
          "name": "FAILURE",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.DriverCommand`1",
          "kind": "member"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.DriverCommand`1.SUCCESS": {
          "name": "SUCCESS",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.DriverCommand`1",
          "kind": "member"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.DriverExtensionMethods": {
          "name": "DriverExtensionMethods",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver",
          "kind": "type"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.DriverExtensionMethods.ConvertToLoggingOptions(Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeOptionsBase)": {
          "name": "ConvertToLoggingOptions(Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeOptionsBase)",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.DriverExtensionMethods",
          "kind": "member"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.DriverResources": {
          "name": "DriverResources",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver",
          "kind": "type"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.DriverResources..ctor()": {
          "name": ".ctor()",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.DriverResources",
          "kind": "member"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.DriverUtilities": {
          "name": "DriverUtilities",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver",
          "kind": "type"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.DriverUtilities.GetExports`1(System.Collections.Generic.IEnumerable`1<System.Reflection.Assembly>)": {
          "name": "GetExports`1(System.Collections.Generic.IEnumerable`1<System.Reflection.Assembly>)",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.DriverUtilities",
          "kind": "member"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.EntryPointUtilities": {
          "name": "EntryPointUtilities",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver",
          "kind": "type"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.EntryPointUtilities.CommandLineToArgvW(System.String,System.Int32&)": {
          "name": "CommandLineToArgvW(System.String,System.Int32&)",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.EntryPointUtilities",
          "kind": "member"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.EntryPointUtilities.GenerateArguments(System.String[],Microsoft.CodeAnalysis.Sarif.IFileSystem,Microsoft.CodeAnalysis.Sarif.Driver.IEnvironmentVariables)": {
          "name": "GenerateArguments(System.String[],Microsoft.CodeAnalysis.Sarif.IFileSystem,Microsoft.CodeAnalysis.Sarif.Driver.IEnvironmentVariables)",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.EntryPointUtilities",
          "kind": "member"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.EntryPointUtilities.LocalFree(System.IntPtr)": {
          "name": "LocalFree(System.IntPtr)",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.EntryPointUtilities",
          "kind": "member"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.EnumerableExtensions": {
          "name": "EnumerableExtensions",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver",
          "kind": "type"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.EnumerableExtensions.LexicographicalCompare`1(System.Collections.Generic.IEnumerable`1<!!0>,System.Collections.Generic.IEnumerable`1<!!0>,System.Collections.Generic.IComparer`1<!!0>)": {
          "name": "LexicographicalCompare`1(System.Collections.Generic.IEnumerable`1<!!0>,System.Collections.Generic.IEnumerable`1<!!0>,System.Collections.Generic.IComparer`1<!!0>)",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.EnumerableExtensions",
          "kind": "member"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.EnumerableExtensions.RemoveIf`1(!!0[]&,System.Func`2<!!0,System.Boolean>)": {
          "name": "RemoveIf`1(!!0[]&,System.Func`2<!!0,System.Boolean>)",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.EnumerableExtensions",
          "kind": "member"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.ExceptionStrings": {
          "name": "ExceptionStrings",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver",
          "kind": "type"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.ExceptionStrings..ctor()": {
          "name": ".ctor()",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.ExceptionStrings",
          "kind": "member"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.ExitApplicationException`1": {
          "name": "ExitApplicationException`1",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver",
          "kind": "type"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.ExportConfigurationCommandBase": {
          "name": "ExportConfigurationCommandBase",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver",
          "kind": "type"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.ExportConfigurationCommandBase.Run(Microsoft.CodeAnalysis.Sarif.Driver.ExportConfigurationOptions)": {
          "name": "Run(Microsoft.CodeAnalysis.Sarif.Driver.ExportConfigurationOptions)",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.ExportConfigurationCommandBase",
          "kind": "member"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.ExportRulesMetadataCommandBase": {
          "name": "ExportRulesMetadataCommandBase",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver",
          "kind": "type"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.ExportRulesMetadataCommandBase.GetIdIntegerSuffix(System.String)": {
          "name": "GetIdIntegerSuffix(System.String)",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.ExportRulesMetadataCommandBase",
          "kind": "member"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.ExportRulesMetadataCommandBase.OutputSarifRulesMetada(System.String,System.Collections.Immutable.ImmutableArray`1<Microsoft.CodeAnalysis.Sarif.IRule>)": {
          "name": "OutputSarifRulesMetada(System.String,System.Collections.Immutable.ImmutableArray`1<Microsoft.CodeAnalysis.Sarif.IRule>)",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.ExportRulesMetadataCommandBase",
          "kind": "member"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.ExportRulesMetadataCommandBase.Run(Microsoft.CodeAnalysis.Sarif.Driver.ExportRulesMetadataOptions)": {
          "name": "Run(Microsoft.CodeAnalysis.Sarif.Driver.ExportRulesMetadataOptions)",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.ExportRulesMetadataCommandBase",
          "kind": "member"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.FileSpecifier": {
          "name": "FileSpecifier",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver",
          "kind": "type"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.FileSpecifier..ctor(System.String,System.Boolean)": {
          "name": ".ctor(System.String,System.Boolean)",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.FileSpecifier",
          "kind": "member"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.ISkimmer`1": {
          "name": "ISkimmer`1",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver",
          "kind": "type"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.ISkimmer`1.CanAnalyze(!0,System.String&)": {
          "name": "CanAnalyze(!0,System.String&)",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.ISkimmer`1",
          "kind": "member"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.MurmurHash": {
          "name": "MurmurHash",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver",
          "kind": "type"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.MurmurHash.AddRange(System.Collections.Generic.IEnumerable`1<System.Int32>)": {
          "name": "AddRange(System.Collections.Generic.IEnumerable`1<System.Int32>)",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.MurmurHash",
          "kind": "member"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.MurmurHash.AddRange(System.Collections.IEnumerable)": {
          "name": "AddRange(System.Collections.IEnumerable)",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.MurmurHash",
          "kind": "member"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.MurmurHash.AddRange(System.Int32[])": {
          "name": "AddRange(System.Int32[])",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.MurmurHash",
          "kind": "member"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.PlugInDriverCommand`1": {
          "name": "PlugInDriverCommand`1",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver",
          "kind": "type"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.PlugInDriverCommand`1.DefaultPlugInAssemblies": {
          "name": "DefaultPlugInAssemblies",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.PlugInDriverCommand`1",
          "kind": "member"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.ReferenceEqualityComparer`1": {
          "name": "ReferenceEqualityComparer`1",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver",
          "kind": "type"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.ReferenceEqualityComparer`1.Instance": {
          "name": "Instance",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.ReferenceEqualityComparer`1",
          "kind": "member"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.RentalStream": {
          "name": "RentalStream",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver",
          "kind": "type"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.RentalStream.Dispose(System.Boolean)": {
          "name": "Dispose(System.Boolean)",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.RentalStream",
          "kind": "member"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.RuleEnabledState": {
          "name": "RuleEnabledState",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver",
          "kind": "type"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.SkimmerBase`1": {
          "name": "SkimmerBase`1",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver",
          "kind": "type"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.StatisticsLogger": {
          "name": "StatisticsLogger",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver",
          "kind": "type"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.StatisticsLogger.AnalysisStopped(Microsoft.CodeAnalysis.Sarif.RuntimeConditions)": {
          "name": "AnalysisStopped(Microsoft.CodeAnalysis.Sarif.RuntimeConditions)",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.StatisticsLogger",
          "kind": "member"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.StatisticsLogger.Dispose()": {
          "name": "Dispose()",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.StatisticsLogger",
          "kind": "member"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.StatisticsLogger.Log(Microsoft.CodeAnalysis.Sarif.IRule,Microsoft.CodeAnalysis.Sarif.Result)": {
          "name": "Log(Microsoft.CodeAnalysis.Sarif.IRule,Microsoft.CodeAnalysis.Sarif.Result)",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.StatisticsLogger",
          "kind": "member"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.StatisticsLogger.Log(Microsoft.CodeAnalysis.Sarif.ResultLevel,System.String)": {
          "name": "Log(Microsoft.CodeAnalysis.Sarif.ResultLevel,System.String)",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.StatisticsLogger",
          "kind": "member"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.StatisticsLogger.LogConfigurationNotification(Microsoft.CodeAnalysis.Sarif.Notification)": {
          "name": "LogConfigurationNotification(Microsoft.CodeAnalysis.Sarif.Notification)",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.StatisticsLogger",
          "kind": "member"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.TempFile": {
          "name": "TempFile",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver",
          "kind": "type"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.TempFile..ctor(System.String)": {
          "name": ".ctor(System.String)",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.TempFile",
          "kind": "member"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.XmlWriterExtensions": {
          "name": "XmlWriterExtensions",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver",
          "kind": "type"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.XmlWriterExtensions.WriteElementInt(System.Xml.XmlWriter,System.String,System.Int32)": {
          "name": "WriteElementInt(System.Xml.XmlWriter,System.String,System.Int32)",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.XmlWriterExtensions",
          "kind": "member"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysisDriver": {
          "name": "Microsoft.CodeAnalysisDriver",
          "parentKey": "sarif.driver.dll",
          "kind": "namespace"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysisDriver.FileStreamExtensionMethods": {
          "name": "FileStreamExtensionMethods",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysisDriver",
          "kind": "type"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysisDriver.FileStreamExtensionMethods.ReadString(System.IO.FileStream,System.Int32)": {
          "name": "ReadString(System.IO.FileStream,System.Int32)",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysisDriver.FileStreamExtensionMethods",
          "kind": "member"
        },
        "sarif.driver.dll!Microsoft.CodeAnalysisDriver.FileStreamExtensionMethods.ReadToArray(System.IO.FileStream,System.Int32)": {
          "name": "ReadToArray(System.IO.FileStream,System.Int32)",
          "parentKey": "sarif.driver.dll!Microsoft.CodeAnalysisDriver.FileStreamExtensionMethods",
          "kind": "member"
        },
        "sarif.multitool.exe": {
          "kind": "module"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif": {
          "name": "Microsoft.CodeAnalysis.Sarif",
          "parentKey": "sarif.multitool.exe",
          "kind": "namespace"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.MultitoolResources": {
          "name": "MultitoolResources",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif",
          "kind": "type"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.MultitoolResources..ctor()": {
          "name": ".ctor()",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.MultitoolResources",
          "kind": "member"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool": {
          "name": "Microsoft.CodeAnalysis.Sarif.Multitool",
          "parentKey": "sarif.multitool.exe",
          "kind": "namespace"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.AbsoluteUriCommand": {
          "name": "AbsoluteUriCommand",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool",
          "kind": "type"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.AbsoluteUriCommand.Run(Microsoft.CodeAnalysis.Sarif.Multitool.AbsoluteUriOptions)": {
          "name": "Run(Microsoft.CodeAnalysis.Sarif.Multitool.AbsoluteUriOptions)",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.AbsoluteUriCommand",
          "kind": "member"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.BaselineCommand": {
          "name": "BaselineCommand",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool",
          "kind": "type"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.BaselineCommand.Run(Microsoft.CodeAnalysis.Sarif.Multitool.BaselineOptions)": {
          "name": "Run(Microsoft.CodeAnalysis.Sarif.Multitool.BaselineOptions)",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.BaselineCommand",
          "kind": "member"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.ConvertCommand": {
          "name": "ConvertCommand",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool",
          "kind": "type"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.ConvertCommand.Run(Microsoft.CodeAnalysis.Sarif.Multitool.ConvertOptions)": {
          "name": "Run(Microsoft.CodeAnalysis.Sarif.Multitool.ConvertOptions)",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.ConvertCommand",
          "kind": "member"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.JTokenExtensions": {
          "name": "JTokenExtensions",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool",
          "kind": "type"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.JTokenExtensions.HasProperty(Newtonsoft.Json.Linq.JToken,System.String)": {
          "name": "HasProperty(Newtonsoft.Json.Linq.JToken,System.String)",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.JTokenExtensions",
          "kind": "member"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.MergeCommand": {
          "name": "MergeCommand",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool",
          "kind": "type"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.MergeCommand.Run(Microsoft.CodeAnalysis.Sarif.Multitool.MergeOptions)": {
          "name": "Run(Microsoft.CodeAnalysis.Sarif.Multitool.MergeOptions)",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.MergeCommand",
          "kind": "member"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.MultitoolOptionsBase": {
          "name": "MultitoolOptionsBase",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool",
          "kind": "type"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.RebaseUriCommand": {
          "name": "RebaseUriCommand",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool",
          "kind": "type"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.RebaseUriCommand.Run(Microsoft.CodeAnalysis.Sarif.Multitool.RebaseUriOptions)": {
          "name": "Run(Microsoft.CodeAnalysis.Sarif.Multitool.RebaseUriOptions)",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.RebaseUriCommand",
          "kind": "member"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.RewriteCommand": {
          "name": "RewriteCommand",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool",
          "kind": "type"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.RewriteCommand.Run(Microsoft.CodeAnalysis.Sarif.Multitool.RewriteOptions)": {
          "name": "Run(Microsoft.CodeAnalysis.Sarif.Multitool.RewriteOptions)",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.RewriteCommand",
          "kind": "member"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.SarifPropertyName": {
          "name": "SarifPropertyName",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool",
          "kind": "type"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.SarifPropertyName.Stderr": {
          "name": "Stderr",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.SarifPropertyName",
          "kind": "member"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.SarifPropertyName.Stdin": {
          "name": "Stdin",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.SarifPropertyName",
          "kind": "member"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.SarifPropertyName.Stdout": {
          "name": "Stdout",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.SarifPropertyName",
          "kind": "member"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.SarifPropertyName.StdoutStderr": {
          "name": "StdoutStderr",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.SarifPropertyName",
          "kind": "member"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.SarifValidationContext": {
          "name": "SarifValidationContext",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool",
          "kind": "type"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.SarifValidationContext.Dispose()": {
          "name": "Dispose()",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.SarifValidationContext",
          "kind": "member"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.SarifValidationContext.Policy": {
          "name": "Policy",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.SarifValidationContext",
          "kind": "member"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.TransformCommand": {
          "name": "TransformCommand",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool",
          "kind": "type"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.TransformCommand.Run(Microsoft.CodeAnalysis.Sarif.Multitool.TransformOptions)": {
          "name": "Run(Microsoft.CodeAnalysis.Sarif.Multitool.TransformOptions)",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.TransformCommand",
          "kind": "member"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.ValidateCommand": {
          "name": "ValidateCommand",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool",
          "kind": "type"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.ValidateCommand.AnalyzeTarget(System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Driver.ISkimmer`1<Microsoft.CodeAnalysis.Sarif.Multitool.SarifValidationContext>>,Microsoft.CodeAnalysis.Sarif.Multitool.SarifValidationContext,System.Collections.Generic.HashSet`1<System.String>)": {
          "name": "AnalyzeTarget(System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Driver.ISkimmer`1<Microsoft.CodeAnalysis.Sarif.Multitool.SarifValidationContext>>,Microsoft.CodeAnalysis.Sarif.Multitool.SarifValidationContext,System.Collections.Generic.HashSet`1<System.String>)",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.ValidateCommand",
          "kind": "member"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.ValidateCommand.CreateContext(Microsoft.CodeAnalysis.Sarif.Multitool.ValidateOptions,Microsoft.CodeAnalysis.Sarif.IAnalysisLogger,Microsoft.CodeAnalysis.Sarif.RuntimeConditions,System.String)": {
          "name": "CreateContext(Microsoft.CodeAnalysis.Sarif.Multitool.ValidateOptions,Microsoft.CodeAnalysis.Sarif.IAnalysisLogger,Microsoft.CodeAnalysis.Sarif.RuntimeConditions,System.String)",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.ValidateCommand",
          "kind": "member"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.ValidateCommand.Validate(System.String,System.String,Microsoft.CodeAnalysis.Sarif.IAnalysisLogger)": {
          "name": "Validate(System.String,System.String,Microsoft.CodeAnalysis.Sarif.IAnalysisLogger)",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.ValidateCommand",
          "kind": "member"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.ValidatorResources": {
          "name": "ValidatorResources",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool",
          "kind": "type"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.ValidatorResources..ctor()": {
          "name": ".ctor()",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.ValidatorResources",
          "kind": "member"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules": {
          "name": "Microsoft.CodeAnalysis.Sarif.Multitool.Rules",
          "parentKey": "sarif.multitool.exe",
          "kind": "namespace"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.DoNotUseFriendlyNameAsRuleId": {
          "name": "DoNotUseFriendlyNameAsRuleId",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules",
          "kind": "type"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.DoNotUseFriendlyNameAsRuleId.Analyze(Microsoft.CodeAnalysis.Sarif.Rule,System.String)": {
          "name": "Analyze(Microsoft.CodeAnalysis.Sarif.Rule,System.String)",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.DoNotUseFriendlyNameAsRuleId",
          "kind": "member"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.EndColumnMustNotBeLessThanStartColumn": {
          "name": "EndColumnMustNotBeLessThanStartColumn",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules",
          "kind": "type"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.EndColumnMustNotBeLessThanStartColumn.Analyze(Microsoft.CodeAnalysis.Sarif.Region,System.String)": {
          "name": "Analyze(Microsoft.CodeAnalysis.Sarif.Region,System.String)",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.EndColumnMustNotBeLessThanStartColumn",
          "kind": "member"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.EndLineMustNotBeLessThanStartLine": {
          "name": "EndLineMustNotBeLessThanStartLine",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules",
          "kind": "type"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.EndLineMustNotBeLessThanStartLine.Analyze(Microsoft.CodeAnalysis.Sarif.Region,System.String)": {
          "name": "Analyze(Microsoft.CodeAnalysis.Sarif.Region,System.String)",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.EndLineMustNotBeLessThanStartLine",
          "kind": "member"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.EndTimeMustBeAfterStartTime": {
          "name": "EndTimeMustBeAfterStartTime",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules",
          "kind": "type"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.EndTimeMustBeAfterStartTime.Analyze(Microsoft.CodeAnalysis.Sarif.Invocation,System.String)": {
          "name": "Analyze(Microsoft.CodeAnalysis.Sarif.Invocation,System.String)",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.EndTimeMustBeAfterStartTime",
          "kind": "member"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.HashAlgorithmsMustBeUnique": {
          "name": "HashAlgorithmsMustBeUnique",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules",
          "kind": "type"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.HashAlgorithmsMustBeUnique.Analyze(Microsoft.CodeAnalysis.Sarif.FileData,System.String,System.String)": {
          "name": "Analyze(Microsoft.CodeAnalysis.Sarif.FileData,System.String,System.String)",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.HashAlgorithmsMustBeUnique",
          "kind": "member"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.MessagesShouldEndWithPeriod": {
          "name": "MessagesShouldEndWithPeriod",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules",
          "kind": "type"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.MessagesShouldEndWithPeriod.Analyze(Microsoft.CodeAnalysis.Sarif.Message,System.String)": {
          "name": "Analyze(Microsoft.CodeAnalysis.Sarif.Message,System.String)",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.MessagesShouldEndWithPeriod",
          "kind": "member"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.MessagesShouldEndWithPeriod.Analyze(Microsoft.CodeAnalysis.Sarif.Rule,System.String)": {
          "name": "Analyze(Microsoft.CodeAnalysis.Sarif.Rule,System.String)",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.MessagesShouldEndWithPeriod",
          "kind": "member"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.RuleResources": {
          "name": "RuleResources",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules",
          "kind": "type"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.RuleResources..ctor()": {
          "name": ".ctor()",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.RuleResources",
          "kind": "member"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.SarifValidationSkimmerBase": {
          "name": "SarifValidationSkimmerBase",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules",
          "kind": "type"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.SarifValidationSkimmerBase.LogResult(System.String,System.String,System.String[])": {
          "name": "LogResult(System.String,System.String,System.String[])",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.SarifValidationSkimmerBase",
          "kind": "member"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.StepValuesMustFormOneBasedSequence": {
          "name": "StepValuesMustFormOneBasedSequence",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules",
          "kind": "type"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.StepValuesMustFormOneBasedSequence.Analyze(Microsoft.CodeAnalysis.Sarif.ThreadFlow,System.String)": {
          "name": "Analyze(Microsoft.CodeAnalysis.Sarif.ThreadFlow,System.String)",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.StepValuesMustFormOneBasedSequence",
          "kind": "member"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.StepValuesMustFormOneBasedSequence.FindFirstLocationWithMissingStep(Newtonsoft.Json.Linq.JObject[])": {
          "name": "FindFirstLocationWithMissingStep(Newtonsoft.Json.Linq.JObject[])",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.StepValuesMustFormOneBasedSequence",
          "kind": "member"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.UriBaseIdRequiresRelativeUri": {
          "name": "UriBaseIdRequiresRelativeUri",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules",
          "kind": "type"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.UriBaseIdRequiresRelativeUri.Analyze(Microsoft.CodeAnalysis.Sarif.FileLocation,System.String)": {
          "name": "Analyze(Microsoft.CodeAnalysis.Sarif.FileLocation,System.String)",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.UriBaseIdRequiresRelativeUri",
          "kind": "member"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.UrisMustBeValid": {
          "name": "UrisMustBeValid",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules",
          "kind": "type"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.UrisMustBeValid.Analyze(Microsoft.CodeAnalysis.Sarif.FileData,System.String,System.String)": {
          "name": "Analyze(Microsoft.CodeAnalysis.Sarif.FileData,System.String,System.String)",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.UrisMustBeValid",
          "kind": "member"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.UrisMustBeValid.Analyze(Microsoft.CodeAnalysis.Sarif.FileLocation,System.String)": {
          "name": "Analyze(Microsoft.CodeAnalysis.Sarif.FileLocation,System.String)",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.UrisMustBeValid",
          "kind": "member"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.UrisMustBeValid.Analyze(Microsoft.CodeAnalysis.Sarif.Result,System.String)": {
          "name": "Analyze(Microsoft.CodeAnalysis.Sarif.Result,System.String)",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.UrisMustBeValid",
          "kind": "member"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.UrisMustBeValid.Analyze(Microsoft.CodeAnalysis.Sarif.Rule,System.String)": {
          "name": "Analyze(Microsoft.CodeAnalysis.Sarif.Rule,System.String)",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.UrisMustBeValid",
          "kind": "member"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.UrisMustBeValid.Analyze(Microsoft.CodeAnalysis.Sarif.Run,System.String)": {
          "name": "Analyze(Microsoft.CodeAnalysis.Sarif.Run,System.String)",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.UrisMustBeValid",
          "kind": "member"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.UrisMustBeValid.Analyze(Microsoft.CodeAnalysis.Sarif.SarifLog,System.String)": {
          "name": "Analyze(Microsoft.CodeAnalysis.Sarif.SarifLog,System.String)",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.UrisMustBeValid",
          "kind": "member"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.UrisMustBeValid.Analyze(Microsoft.CodeAnalysis.Sarif.Tool,System.String)": {
          "name": "Analyze(Microsoft.CodeAnalysis.Sarif.Tool,System.String)",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.UrisMustBeValid",
          "kind": "member"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.UrisMustBeValid.Analyze(Microsoft.CodeAnalysis.Sarif.VersionControlDetails,System.String)": {
          "name": "Analyze(Microsoft.CodeAnalysis.Sarif.VersionControlDetails,System.String)",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.UrisMustBeValid",
          "kind": "member"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.UseAbsolutePathsForNestedFileUriFragments": {
          "name": "UseAbsolutePathsForNestedFileUriFragments",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules",
          "kind": "type"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.UseAbsolutePathsForNestedFileUriFragments.Analyze(Microsoft.CodeAnalysis.Sarif.FileLocation,System.String)": {
          "name": "Analyze(Microsoft.CodeAnalysis.Sarif.FileLocation,System.String)",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.UseAbsolutePathsForNestedFileUriFragments",
          "kind": "member"
        },
        "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.UseAbsolutePathsForNestedFileUriFragments.UriHasNonAbsoluteFragment(System.Uri)": {
          "name": "UriHasNonAbsoluteFragment(System.Uri)",
          "parentKey": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.UseAbsolutePathsForNestedFileUriFragments",
          "kind": "member"
        }
      },
      "results": [
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in namespace name 'Microsoft.CodeAnalysis.Sarif'.",
            "messageId": "Namespace"
          },
          "locations": [
            {
              "fullyQualifiedLogicalName": "Microsoft.CodeAnalysis.Sarif"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Namespace"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1020",
          "level": "warning",
          "message": {
            "text": "Consider merging the types defined in 'Microsoft.CodeAnalysis.Sarif.Baseline' with another namespace."
          },
          "locations": [
            {
              "fullyQualifiedLogicalName": "Microsoft.CodeAnalysis.Sarif.Baseline"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in namespace name 'Microsoft.CodeAnalysis.Sarif.Baseline'.",
            "messageId": "Namespace"
          },
          "locations": [
            {
              "fullyQualifiedLogicalName": "Microsoft.CodeAnalysis.Sarif.Baseline"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Namespace"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1020",
          "level": "warning",
          "message": {
            "text": "Consider merging the types defined in 'Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline' with another namespace."
          },
          "locations": [
            {
              "fullyQualifiedLogicalName": "Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in namespace name 'Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline'.",
            "messageId": "Namespace"
          },
          "locations": [
            {
              "fullyQualifiedLogicalName": "Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Namespace"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in namespace name 'Microsoft.CodeAnalysis.Sarif.Converters'.",
            "messageId": "Namespace"
          },
          "locations": [
            {
              "fullyQualifiedLogicalName": "Microsoft.CodeAnalysis.Sarif.Converters"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Namespace"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1709",
          "level": "error",
          "message": {
            "text": "Correct the casing of 'PRE' in namespace name 'Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel' by changing it to 'Pre'.",
            "messageId": "Namespace"
          },
          "locations": [
            {
              "fullyQualifiedLogicalName": "Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "PRE#Namespace"
          },
          "properties": {
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in namespace name 'Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel'.",
            "messageId": "Namespace"
          },
          "locations": [
            {
              "fullyQualifiedLogicalName": "Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Namespace"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1020",
          "level": "warning",
          "message": {
            "text": "Consider merging the types defined in 'Microsoft.CodeAnalysis.Sarif.Converters.PylintObjectModel' with another namespace."
          },
          "locations": [
            {
              "fullyQualifiedLogicalName": "Microsoft.CodeAnalysis.Sarif.Converters.PylintObjectModel"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Pylint' in namespace name 'Microsoft.CodeAnalysis.Sarif.Converters.PylintObjectModel'.",
            "messageId": "Namespace"
          },
          "locations": [
            {
              "fullyQualifiedLogicalName": "Microsoft.CodeAnalysis.Sarif.Converters.PylintObjectModel"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Pylint#Namespace"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in namespace name 'Microsoft.CodeAnalysis.Sarif.Converters.PylintObjectModel'.",
            "messageId": "Namespace"
          },
          "locations": [
            {
              "fullyQualifiedLogicalName": "Microsoft.CodeAnalysis.Sarif.Converters.PylintObjectModel"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Namespace"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1020",
          "level": "warning",
          "message": {
            "text": "Consider merging the types defined in 'Microsoft.CodeAnalysis.Sarif.Converters.TSLintObjectModel' with another namespace."
          },
          "locations": [
            {
              "fullyQualifiedLogicalName": "Microsoft.CodeAnalysis.Sarif.Converters.TSLintObjectModel"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in namespace name 'Microsoft.CodeAnalysis.Sarif.Converters.TSLintObjectModel'.",
            "messageId": "Namespace"
          },
          "locations": [
            {
              "fullyQualifiedLogicalName": "Microsoft.CodeAnalysis.Sarif.Converters.TSLintObjectModel"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Namespace"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in namespace name 'Microsoft.CodeAnalysis.Sarif.Driver'.",
            "messageId": "Namespace"
          },
          "locations": [
            {
              "fullyQualifiedLogicalName": "Microsoft.CodeAnalysis.Sarif.Driver"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Namespace"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Multitool' in namespace name 'Microsoft.CodeAnalysis.Sarif.Multitool'.",
            "messageId": "Namespace"
          },
          "locations": [
            {
              "fullyQualifiedLogicalName": "Microsoft.CodeAnalysis.Sarif.Multitool"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Multitool#Namespace"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in namespace name 'Microsoft.CodeAnalysis.Sarif.Multitool'.",
            "messageId": "Namespace"
          },
          "locations": [
            {
              "fullyQualifiedLogicalName": "Microsoft.CodeAnalysis.Sarif.Multitool"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Namespace"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Multitool' in namespace name 'Microsoft.CodeAnalysis.Sarif.Multitool.Rules'.",
            "messageId": "Namespace"
          },
          "locations": [
            {
              "fullyQualifiedLogicalName": "Microsoft.CodeAnalysis.Sarif.Multitool.Rules"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Multitool#Namespace"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in namespace name 'Microsoft.CodeAnalysis.Sarif.Multitool.Rules'.",
            "messageId": "Namespace"
          },
          "locations": [
            {
              "fullyQualifiedLogicalName": "Microsoft.CodeAnalysis.Sarif.Multitool.Rules"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Namespace"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in namespace name 'Microsoft.CodeAnalysis.Sarif.Processors'.",
            "messageId": "Namespace"
          },
          "locations": [
            {
              "fullyQualifiedLogicalName": "Microsoft.CodeAnalysis.Sarif.Processors"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Namespace"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in namespace name 'Microsoft.CodeAnalysis.Sarif.Readers'.",
            "messageId": "Namespace"
          },
          "locations": [
            {
              "fullyQualifiedLogicalName": "Microsoft.CodeAnalysis.Sarif.Readers"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Namespace"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in namespace name 'Microsoft.CodeAnalysis.Sarif.VersionOne'.",
            "messageId": "Namespace"
          },
          "locations": [
            {
              "fullyQualifiedLogicalName": "Microsoft.CodeAnalysis.Sarif.VersionOne"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Namespace"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1020",
          "level": "warning",
          "message": {
            "text": "Consider merging the types defined in 'Microsoft.CodeAnalysis.Sarif.VersionOne.Readers' with another namespace."
          },
          "locations": [
            {
              "fullyQualifiedLogicalName": "Microsoft.CodeAnalysis.Sarif.VersionOne.Readers"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in namespace name 'Microsoft.CodeAnalysis.Sarif.VersionOne.Readers'.",
            "messageId": "Namespace"
          },
          "locations": [
            {
              "fullyQualifiedLogicalName": "Microsoft.CodeAnalysis.Sarif.VersionOne.Readers"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Namespace"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in namespace name 'Microsoft.CodeAnalysis.Sarif.Visitors'.",
            "messageId": "Namespace"
          },
          "locations": [
            {
              "fullyQualifiedLogicalName": "Microsoft.CodeAnalysis.Sarif.Visitors"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Namespace"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1020",
          "level": "warning",
          "message": {
            "text": "Consider merging the types defined in 'Microsoft.CodeAnalysis.Sarif.Writers' with another namespace."
          },
          "locations": [
            {
              "fullyQualifiedLogicalName": "Microsoft.CodeAnalysis.Sarif.Writers"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in namespace name 'Microsoft.CodeAnalysis.Sarif.Writers'.",
            "messageId": "Namespace"
          },
          "locations": [
            {
              "fullyQualifiedLogicalName": "Microsoft.CodeAnalysis.Sarif.Writers"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Namespace"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1020",
          "level": "warning",
          "message": {
            "text": "Consider merging the types defined in 'Microsoft.CodeAnalysisDriver' with another namespace."
          },
          "locations": [
            {
              "fullyQualifiedLogicalName": "Microsoft.CodeAnalysisDriver"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1020",
          "level": "warning",
          "message": {
            "text": "Consider merging the types defined in 'Microsoft.Json.Pointer' with another namespace."
          },
          "locations": [
            {
              "fullyQualifiedLogicalName": "Microsoft.Json.Pointer"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1014",
          "level": "error",
          "message": {
            "text": "Mark 'Microsoft.Json.Pointer.dll' with CLSCompliant(true) because it exposes externally visible types."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Pointer.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.pointer.dll"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1824",
          "level": "warning",
          "message": {
            "text": "Because assembly 'Microsoft.Json.Pointer.dll' contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Pointer.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.pointer.dll"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1026",
          "level": "error",
          "message": {
            "text": "Replace method 'JsonPointer.JsonPointer(string, JsonPointerRepresentation)' with an overload that supplies all default arguments."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Pointer.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.pointer.dll!Microsoft.Json.Pointer.JsonPointer..ctor(System.String,Microsoft.Json.Pointer.JsonPointerRepresentation)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1812",
          "level": "warning",
          "message": {
            "text": "'Resources' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Pointer.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.pointer.dll!Microsoft.Json.Pointer.Resources"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "In method 'StringExtensions.AtIndex(this string, int)', correct the spelling of 'j' in parameter name 'jPointer' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "MemberParameter"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Pointer.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.pointer.dll!Microsoft.Json.Pointer.StringExtensions.AtIndex(System.String,System.Int32)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "j#MemberParameter"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1305",
          "level": "error",
          "message": {
            "text": "Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'StringExtensions.AtIndex(this string, int)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.",
            "messageId": "IFormatProviderAlternateString"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Pointer.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.pointer.dll!Microsoft.Json.Pointer.StringExtensions.AtIndex(System.String,System.Int32)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.String.Format(System.String,System.Object,System.Object)#IFormatProviderAlternateString"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "In method 'StringExtensions.AtProperty(this string, string)', correct the spelling of 'j' in parameter name 'jPointer' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "MemberParameter"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Pointer.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.pointer.dll!Microsoft.Json.Pointer.StringExtensions.AtProperty(System.String,System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "j#MemberParameter"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1305",
          "level": "error",
          "message": {
            "text": "Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'StringExtensions.AtProperty(this string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.",
            "messageId": "IFormatProviderAlternateString"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Pointer.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.pointer.dll!Microsoft.Json.Pointer.StringExtensions.AtProperty(System.String,System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.String.Format(System.String,System.Object,System.Object)#IFormatProviderAlternateString"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "In method 'StringExtensions.UnescapeJsonPointer(this string)', correct the spelling of 'j' in parameter name 'jPointer' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "MemberParameter"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Pointer.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.pointer.dll!Microsoft.Json.Pointer.StringExtensions.UnescapeJsonPointer(System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "j#MemberParameter"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1702",
          "level": "error",
          "message": {
            "text": "The compound word 'PreRelease' in member name 'VersionConstants.PreRelease' exists as a discrete term. If your usage is intended to be single word, case it as 'Prerelease' or strip the first token entirely if it represents any sort of Hungarian notation.",
            "messageId": "MemberShouldBeDiscreteTerm"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Pointer.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.pointer.dll!Microsoft.Json.Pointer.VersionConstants.PreRelease"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "PreRelease#MemberShouldBeDiscreteTerm"
          },
          "properties": {
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1014",
          "level": "error",
          "message": {
            "text": "Mark 'Microsoft.Json.Schema.dll' with CLSCompliant(true) because it exposes externally visible types."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1824",
          "level": "warning",
          "message": {
            "text": "Because assembly 'Microsoft.Json.Schema.dll' contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'AdditionalItems.AdditionalItems(AdditionalItems)', validate parameter 'other' before using it."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.AdditionalItems..ctor(Microsoft.Json.Schema.AdditionalItems)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'AdditionalProperties.AdditionalProperties(AdditionalProperties)', validate parameter 'other' before using it."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.AdditionalProperties..ctor(Microsoft.Json.Schema.AdditionalProperties)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'Dependency.Dependency(Dependency)', validate parameter 'other' before using it."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.Dependency..ctor(Microsoft.Json.Schema.Dependency)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1002",
          "level": "error",
          "message": {
            "text": "Change 'List<string>' in 'Dependency.PropertyDependencies' to use Collection<T>, ReadOnlyCollection<T> or KeyedCollection<K,V>"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.Dependency.PropertyDependencies"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'DependencyConverter.WriteJson(JsonWriter, object, JsonSerializer)', validate parameter 'writer' before using it."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.DependencyConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1716",
          "level": "error",
          "message": {
            "text": "Rename type 'Error' so that it no longer conflicts with the reserved language keyword 'Error'. Using a reserved keyword as the name of a type makes it harder for consumers in other languages to use the type.",
            "messageId": "Type"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.Error"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Error#Type"
          },
          "properties": {
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2201",
          "level": "error",
          "message": {
            "text": "'Error.CreateException(string, params object[])' creates an exception of type 'ApplicationException', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.",
            "messageId": "TooGeneric"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.Error.CreateException(System.String,System.Object[])"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "TooGeneric"
          },
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'Items.Items(Items)', validate parameter 'other' before using it."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.Items..ctor(Microsoft.Json.Schema.Items)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'Items.Schemas' to be read-only by removing the property setter."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.Items.Schemas"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2104",
          "level": "error",
          "message": {
            "text": "Remove the read-only designation from 'ItemsConverter.Instance' or change the field to one that is an immutable reference type. If the reference type 'ItemsConverter' is, in fact, immutable, exclude this message."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.ItemsConverter.Instance"
            }
          ],
          "properties": {
            "Category": "Microsoft.Security",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'ItemsConverter.WriteJson(JsonWriter, object, JsonSerializer)', validate parameter 'writer' before using it."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.ItemsConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'JsonSchema.JsonSchema(JsonSchema)', validate parameter 'other' before using it."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSchema..ctor(Microsoft.Json.Schema.JsonSchema)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'JsonSchema.AllOf' to be read-only by removing the property setter."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSchema.AllOf"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'JsonSchema.AnyOf' to be read-only by removing the property setter."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSchema.AnyOf"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1502",
          "level": "warning",
          "message": {
            "text": "'JsonSchema.Collapse(JsonSchema, JsonSchema)' has a cyclomatic complexity of 34. Rewrite or refactor the method to reduce complexity to 25."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSchema.Collapse(Microsoft.Json.Schema.JsonSchema,Microsoft.Json.Schema.JsonSchema)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Maintainability",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'JsonSchema.Definitions' to be read-only by removing the property setter."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSchema.Definitions"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'JsonSchema.Dependencies' to be read-only by removing the property setter."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSchema.Dependencies"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'JsonSchema.Enum' to be read-only by removing the property setter."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSchema.Enum"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1502",
          "level": "warning",
          "message": {
            "text": "'JsonSchema.Equals(JsonSchema)' has a cyclomatic complexity of 50. Rewrite or refactor the method to reduce complexity to 25."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSchema.Equals(Microsoft.Json.Schema.JsonSchema)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Maintainability",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'JsonSchema.OneOf' to be read-only by removing the property setter."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSchema.OneOf"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'JsonSchema.PatternProperties' to be read-only by removing the property setter."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSchema.PatternProperties"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'JsonSchema.Properties' to be read-only by removing the property setter."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSchema.Properties"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'JsonSchema.Required' to be read-only by removing the property setter."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSchema.Required"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'JsonSchema.Type' to be read-only by removing the property setter."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSchema.Type"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1721",
          "level": "error",
          "message": {
            "text": "The property name 'JsonSchema.Type' is confusing given the existence of inherited method 'object.GetType()'. Rename or remove this property.",
            "messageId": "BaseType"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSchema.Type"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "BaseType"
          },
          "properties": {
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1725",
          "level": "error",
          "message": {
            "text": "In member 'JsonSchemaContractResolver.ResolveContract(Type)', change parameter name 'objectType' to 'type' in order to match the identifier as it has been declared in 'CamelCasePropertyNamesContractResolver.ResolveContract(Type)'."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSchemaContractResolver.ResolveContract(System.Type)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0#"
          },
          "properties": {
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'JsonSchemaExtensions.SafeGetType(this JsonSchema)', validate parameter 'schema' before using it."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSchemaExtensions.SafeGetType(Microsoft.Json.Schema.JsonSchema)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "In method 'JsonSerializerExtensions.CaptureError(this JsonSerializer, JToken, ErrorNumber, params object[])', correct the spelling of 'j' in parameter name 'jToken' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "MemberParameter"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSerializerExtensions.CaptureError(Newtonsoft.Json.JsonSerializer,Newtonsoft.Json.Linq.JToken,Microsoft.Json.Schema.ErrorNumber,System.Object[])"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "j#MemberParameter"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'JsonSerializerExtensions.CaptureError(this JsonSerializer, JToken, ErrorNumber, params object[])', validate parameter 'serializer' before using it."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSerializerExtensions.CaptureError(Newtonsoft.Json.JsonSerializer,Newtonsoft.Json.Linq.JToken,Microsoft.Json.Schema.ErrorNumber,System.Object[])"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA2237",
          "level": "error",
          "message": {
            "text": "Add [Serializable] to 'JsonSyntaxException' as this type implements ISerializable."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSyntaxException"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1032",
          "level": "error",
          "message": {
            "text": "Change the accessibility of 'JsonSyntaxException.JsonSyntaxException(SerializationInfo, StreamingContext)' to protected.",
            "messageId": "Accessibility"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.JsonSyntaxException..ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Accessibility"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "In method 'JTokenTypeExtensions.ToSchemaType(this JTokenType)', correct the spelling of 'j' in parameter name 'jTokenType' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "MemberParameter"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.JTokenTypeExtensions.ToSchemaType(Newtonsoft.Json.Linq.JTokenType)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "j#MemberParameter"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'MustBeStringConverter.CanConvert(Type)', validate parameter 'objectType' before using it."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.MustBeStringConverter.CanConvert(System.Type)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'MustBeStringConverter.ReadJson(JsonReader, Type, object, JsonSerializer)', validate parameter 'reader' before using it."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.MustBeStringConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1802",
          "level": "warning",
          "message": {
            "text": "Field 'RefProperty.s_inputPattern' is declared as 'static readonly' but is initialized with a constant value '(?<before>[^\"]\")\\$ref(?<after>\"\\s*:)'. Mark this field as 'const' instead."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.RefProperty.s_inputPattern"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1802",
          "level": "warning",
          "message": {
            "text": "Field 'RefProperty.s_outputPattern' is declared as 'static readonly' but is initialized with a constant value '(?<before>[^\"]\")\\$\\$ref(?<after>\"\\s*:)'. Mark this field as 'const' instead."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.RefProperty.s_outputPattern"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'SchemaReader.ReadSchema(TextReader, string)', validate parameter 'reader' before using it."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.SchemaReader.ReadSchema(System.IO.TextReader,System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA2000",
          "level": "warning",
          "message": {
            "text": "In method 'SchemaReader.ReadSchema(string, string)', object 'new StringReader(jsonText)' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'new StringReader(jsonText)' before all references to it are out of scope.",
            "messageId": "ExceptionEdge"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.SchemaReader.ReadSchema(System.String,System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "ExceptionEdge"
          },
          "properties": {
            "Category": "Microsoft.Reliability",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1806",
          "level": "warning",
          "message": {
            "text": "'SchemaTypeConverter.SchemaTypeFromString(string)' calls 'Enum.TryParse<SchemaType>(string, out SchemaType)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.",
            "messageId": "TryParse"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.SchemaTypeConverter.SchemaTypeFromString(System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.Enum.TryParse<Microsoft.Json.Schema.SchemaType>(System.String,Microsoft.Json.Schema.SchemaType@)#TryParse"
          },
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1308",
          "level": "error",
          "message": {
            "text": "In method 'SchemaTypeConverter.WriteJson(JsonWriter, object, JsonSerializer)', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().",
            "messageId": "ToUpperInvariant"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.SchemaTypeConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "ToUpperInvariant"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'SchemaTypeConverter.WriteJson(JsonWriter, object, JsonSerializer)', validate parameter 'writer' before using it."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.SchemaTypeConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1308",
          "level": "error",
          "message": {
            "text": "In method 'SchemaTypeConverter.WriteJson(JsonWriter, object, JsonSerializer)', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().",
            "messageId": "ToUpperInvariant"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.SchemaTypeConverter+<>c.<WriteJson>b__3_0(Microsoft.Json.Schema.SchemaType)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "ToUpperInvariant"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2237",
          "level": "error",
          "message": {
            "text": "Add [Serializable] to 'SchemaValidationException' as this type implements ISerializable."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.SchemaValidationException"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "In method 'SchemaValidationException.SchemaValidationException(JToken, ErrorNumber, params object[])', correct the spelling of 'j' in parameter name 'jToken' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "MemberParameter"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.SchemaValidationException..ctor(Newtonsoft.Json.Linq.JToken,Microsoft.Json.Schema.ErrorNumber,System.Object[])"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "j#MemberParameter"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1032",
          "level": "error",
          "message": {
            "text": "Change the accessibility of 'SchemaValidationException.SchemaValidationException(SerializationInfo, StreamingContext)' to protected.",
            "messageId": "Accessibility"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.SchemaValidationException..ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Accessibility"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1819",
          "level": "warning",
          "message": {
            "text": "Change 'SchemaValidationException.Args' to return a collection or make it a method."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.SchemaValidationException.Args"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1026",
          "level": "error",
          "message": {
            "text": "Replace method 'SchemaWriter.WriteSchema(JsonWriter, JsonSchema, Formatting)' with an overload that supplies all default arguments."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.SchemaWriter.WriteSchema(Newtonsoft.Json.JsonWriter,Microsoft.Json.Schema.JsonSchema,Newtonsoft.Json.Formatting)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1026",
          "level": "error",
          "message": {
            "text": "Replace method 'SchemaWriter.WriteSchema(TextWriter, JsonSchema, Formatting)' with an overload that supplies all default arguments."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.SchemaWriter.WriteSchema(System.IO.TextWriter,Microsoft.Json.Schema.JsonSchema,Newtonsoft.Json.Formatting)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2000",
          "level": "warning",
          "message": {
            "text": "In method 'SchemaWriter.WriteSchema(TextWriter, JsonSchema, Formatting)', call System.IDisposable.Dispose on object 'new StringWriter()' before all references to it are out of scope.",
            "messageId": "NonExceptionEdge"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.SchemaWriter.WriteSchema(System.IO.TextWriter,Microsoft.Json.Schema.JsonSchema,Newtonsoft.Json.Formatting)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "NonExceptionEdge"
          },
          "properties": {
            "Category": "Microsoft.Reliability",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1305",
          "level": "error",
          "message": {
            "text": "Because the behavior of 'StringWriter.StringWriter()' could vary based on the current user's locale settings, replace this call in 'SchemaWriter.WriteSchema(TextWriter, JsonSchema, Formatting)' with a call to 'StringWriter.StringWriter(IFormatProvider)'. If the result of 'StringWriter.StringWriter(IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.",
            "messageId": "IFormatProviderAlternate"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.SchemaWriter.WriteSchema(System.IO.TextWriter,Microsoft.Json.Schema.JsonSchema,Newtonsoft.Json.Formatting)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.IO.StringWriter.#ctor#IFormatProviderAlternate"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'SchemaWriter.WriteSchema(TextWriter, JsonSchema, Formatting)', validate parameter 'writer' before using it."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.SchemaWriter.WriteSchema(System.IO.TextWriter,Microsoft.Json.Schema.JsonSchema,Newtonsoft.Json.Formatting)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'UriOrFragment.UriOrFragment(UriOrFragment)', validate parameter 'other' before using it."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.UriOrFragment..ctor(Microsoft.Json.Schema.UriOrFragment)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1720",
          "level": "error",
          "message": {
            "text": "In member 'UriOrFragment.UriOrFragment(string)', consider replacing the data type identifier 'String' in parameter name 'uriString' with a more generic term, such as 'value'.",
            "messageId": "LanguageIndependentMemberParameter"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.UriOrFragment..ctor(System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "string#LanguageIndependentMemberParameter"
          },
          "properties": {
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1307",
          "level": "error",
          "message": {
            "text": "Because the behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings, replace this call in 'UriOrFragment.UriOrFragment(string)' with a call to 'string.StartsWith(string, StringComparison)'. If the result of 'string.StartsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.UriOrFragment..ctor(System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.String.StartsWith(System.String)"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1054",
          "level": "error",
          "message": {
            "text": "Change the type of parameter 'uriString' of method 'UriOrFragment.UriOrFragment(string)' from string to System.Uri, or provide an overload of 'UriOrFragment.UriOrFragment(string)', that allows 'uriString' to be passed as a System.Uri object."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.UriOrFragment..ctor(System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0#"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'UriOrFragment.UriOrFragment(string)', validate parameter 'uriString' before using it."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.UriOrFragment..ctor(System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1725",
          "level": "error",
          "message": {
            "text": "In member 'UriOrFragment.Equals(object)', change parameter name 'comparand' to 'obj' in order to match the identifier as it has been declared in 'object.Equals(object)'."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.UriOrFragment.Equals(System.Object)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0#"
          },
          "properties": {
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'UriOrFragmentConverter.ReadJson(JsonReader, Type, object, JsonSerializer)', validate parameter 'reader' before using it."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.UriOrFragmentConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'UriOrFragmentConverter.WriteJson(JsonWriter, object, JsonSerializer)', validate parameter 'writer' before using it."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.UriOrFragmentConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'UriOrFragmentExtensions.GetDefinitionName(this UriOrFragment)', validate parameter 'reference' before using it."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.UriOrFragmentExtensions.GetDefinitionName(Microsoft.Json.Schema.UriOrFragment)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1702",
          "level": "error",
          "message": {
            "text": "The compound word 'PreRelease' in member name 'VersionConstants.PreRelease' exists as a discrete term. If your usage is intended to be single word, case it as 'Prerelease' or strip the first token entirely if it represents any sort of Hungarian notation.",
            "messageId": "MemberShouldBeDiscreteTerm"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.dll!Microsoft.Json.Schema.VersionConstants.PreRelease"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "PreRelease#MemberShouldBeDiscreteTerm"
          },
          "properties": {
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1014",
          "level": "error",
          "message": {
            "text": "Mark 'Microsoft.Json.Schema.Validation.dll' with CLSCompliant(true) because it exposes externally visible types."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.Validation.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.validation.dll"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1824",
          "level": "warning",
          "message": {
            "text": "Because assembly 'Microsoft.Json.Schema.Validation.dll' contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.Validation.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.validation.dll"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in member name 'JsonSyntaxErrorExceptionExtensions.ToSarifResult(this JsonSyntaxException)' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.Validation.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation.JsonSyntaxErrorExceptionExtensions.ToSarifResult(Microsoft.Json.Schema.JsonSyntaxException)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'JsonSyntaxErrorExceptionExtensions.ToSarifResult(this JsonSyntaxException)', validate parameter 'ex' before using it."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.Validation.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation.JsonSyntaxErrorExceptionExtensions.ToSarifResult(Microsoft.Json.Schema.JsonSyntaxException)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1800",
          "level": "warning",
          "message": {
            "text": "'obj', a parameter, is cast to type 'JToken' multiple times in method 'JTokenEqualityComparer.NullEquals(object)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.",
            "messageId": "Parameter"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.Validation.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation.JTokenEqualityComparer.NullEquals(System.Object)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Parameter"
          },
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1053",
          "level": "error",
          "message": {
            "text": "Because type 'ResultFactory' contains only 'static' ('Shared' in Visual Basic) members, add a default private constructor to prevent the compiler from adding a default public constructor."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.Validation.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation.ResultFactory"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "In method 'ResultFactory.CreateResult(JToken, ErrorNumber, object[])', correct the spelling of 'j' in parameter name 'jToken' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "MemberParameter"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.Validation.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation.ResultFactory.CreateResult(Newtonsoft.Json.Linq.JToken,Microsoft.Json.Schema.ErrorNumber,System.Object[])"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "j#MemberParameter"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'ResultFactory.CreateResult(JToken, ErrorNumber, object[])', validate parameter 'jToken' before using it."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.Validation.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation.ResultFactory.CreateResult(Newtonsoft.Json.Linq.JToken,Microsoft.Json.Schema.ErrorNumber,System.Object[])"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'RuleExtensions.SetResultFile(this Result, string)', validate parameter 'result' before using it."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.Validation.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation.RuleExtensions.SetResultFile(Microsoft.CodeAnalysis.Sarif.Result,System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1802",
          "level": "warning",
          "message": {
            "text": "Field 'RuleFactory.ErrorCodeFormat' is declared as 'static readonly' but is initialized with a constant value 'JSON{0:D4}'. Mark this field as 'const' instead."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.Validation.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation.RuleFactory.ErrorCodeFormat"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1305",
          "level": "error",
          "message": {
            "text": "Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'RuleFactory.GetRuleFromRuleId(string)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.",
            "messageId": "IFormatProviderAlternate"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.Validation.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation.RuleFactory.GetRuleFromRuleId(System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.Int32.Parse(System.String)#IFormatProviderAlternate"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'RuleFactory.GetRuleFromRuleId(string)', validate parameter 'ruleId' before using it."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.Validation.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation.RuleFactory.GetRuleFromRuleId(System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1812",
          "level": "warning",
          "message": {
            "text": "'RuleResources' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.Validation.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation.RuleResources"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1308",
          "level": "error",
          "message": {
            "text": "In method 'Validator.FormatBoolean(string)', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().",
            "messageId": "ToUpperInvariant"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.Validation.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation.Validator.FormatBoolean(System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "ToUpperInvariant"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1800",
          "level": "warning",
          "message": {
            "text": "'obj', a parameter, is cast to type 'JToken' multiple times in method 'Validator.FormatObject(object)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.",
            "messageId": "Parameter"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.Validation.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation.Validator.FormatObject(System.Object)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Parameter"
          },
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1822",
          "level": "warning",
          "message": {
            "text": "The 'this' parameter (or 'Me' in Visual Basic) of 'Validator.GetPropertyNames(JObject)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.Validation.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation.Validator.GetPropertyNames(Newtonsoft.Json.Linq.JObject)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1822",
          "level": "warning",
          "message": {
            "text": "The 'this' parameter (or 'Me' in Visual Basic) of 'Validator.TokenMatchesEnum(JToken, IList<object>)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.Validation.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation.Validator.TokenMatchesEnum(Newtonsoft.Json.Linq.JToken,System.Collections.Generic.IList`1<System.Object>)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1822",
          "level": "warning",
          "message": {
            "text": "The 'this' parameter (or 'Me' in Visual Basic) of 'Validator.UnicodeLength(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.Validation.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation.Validator.UnicodeLength(System.String)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1811",
          "level": "warning",
          "message": {
            "text": "'Validator.ValidateAdditionalProperties(JObject, List<string>, AdditionalProperties)' appears to have no upstream public or protected callers."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.Validation.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation.Validator.ValidateAdditionalProperties(Newtonsoft.Json.Linq.JObject,System.Collections.Generic.List`1<System.String>,Microsoft.Json.Schema.AdditionalProperties)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1800",
          "level": "warning",
          "message": {
            "text": "'jToken', a parameter, is cast to type 'JValue' multiple times in method 'Validator.ValidateToken(JToken, JsonSchema)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.",
            "messageId": "Parameter"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.Validation.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation.Validator.ValidateToken(Newtonsoft.Json.Linq.JToken,Microsoft.Json.Schema.JsonSchema)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Parameter"
          },
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1702",
          "level": "error",
          "message": {
            "text": "The compound word 'PreRelease' in member name 'VersionConstants.PreRelease' exists as a discrete term. If your usage is intended to be single word, case it as 'Prerelease' or strip the first token entirely if it represents any sort of Hungarian notation.",
            "messageId": "MemberShouldBeDiscreteTerm"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Microsoft.Json.Schema.Validation.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "microsoft.json.schema.validation.dll!Microsoft.Json.Schema.Validation.VersionConstants.PreRelease"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "PreRelease#MemberShouldBeDiscreteTerm"
          },
          "properties": {
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2243",
          "level": "warning",
          "message": {
            "text": "In the constructor of 'AssemblyInformationalVersionAttribute', change the value of argument 'informationalVersion', which is currently \"2.0.0-csd.1.0.1\", to something that can be correctly parsed as 'Version'."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in assembly name 'Sarif.Converters.dll'.",
            "messageId": "Assembly"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Assembly"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA3053",
          "level": "warning",
          "message": {
            "text": "'AndroidStudioConverter.Convert(Stream, IResultLogWriter, OptionallyEmittedData)' instantiates an XmlReader instance by calling System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings) and provided an XmlReaderSettings instance with an insecure XmlResolver property value. This usage is potentially unsafe as untrusted external resources may be resolved during read operations. Provide a XmlReaderSettings instance and set the XmlResolver property to null or an instance of XmlSecureResolver.",
            "messageId": "XmlReaderCreateInsecureXmlResolver"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/AndroidStudioConverter.cs"
                },
                "region": {
                  "startLine": 63,
                  "snippet": {
                    "text": "            using (XmlReader xmlReader = XmlReader.Create(input, settings))"
                  }
                },
                "contextRegion": {
                  "startLine": 62,
                  "startColumn": 1,
                  "endLine": 64,
                  "endColumn": 14,
                  "charOffset": 2230,
                  "charLength": 125,
                  "snippet": {
                    "text": "            ISet<Result> results;\r\n            using (XmlReader xmlReader = XmlReader.Create(input, settings))\r\n            {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.AndroidStudioConverter.Convert(System.IO.Stream,Microsoft.CodeAnalysis.Sarif.IResultLogWriter,Microsoft.CodeAnalysis.Sarif.OptionallyEmittedData)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "XmlReaderCreateInsecureXmlResolver"
          },
          "properties": {
            "Category": "Microsoft.Security.Xml",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1711",
          "level": "error",
          "message": {
            "text": "Rename type name 'AssemblyLoadFileDelegate' so that it does not end in 'Delegate'.",
            "messageId": "TypeNoAlternate"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.AssemblyLoadFileDelegate"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "TypeNoAlternate"
          },
          "properties": {
            "Level": "CriticalError",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA3053",
          "level": "warning",
          "message": {
            "text": "'ClangAnalyzerConverter.Convert(Stream, IResultLogWriter, OptionallyEmittedData)' instantiates an XmlReader instance by calling System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings) and provided an XmlReaderSettings instance with an insecure XmlResolver property value. This usage is potentially unsafe as untrusted external resources may be resolved during read operations. Provide a XmlReaderSettings instance and set the XmlResolver property to null or an instance of XmlSecureResolver.",
            "messageId": "XmlReaderCreateInsecureXmlResolver"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/ClangAnalyzerConverter.cs"
                },
                "region": {
                  "startLine": 48,
                  "snippet": {
                    "text": "                using (XmlReader xmlReader = XmlReader.Create(input, settings))"
                  }
                },
                "contextRegion": {
                  "startLine": 47,
                  "startColumn": 1,
                  "endLine": 49,
                  "endColumn": 18,
                  "charOffset": 1963,
                  "charLength": 100,
                  "snippet": {
                    "text": "\r\n                using (XmlReader xmlReader = XmlReader.Create(input, settings))\r\n                {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.ClangAnalyzerConverter.Convert(System.IO.Stream,Microsoft.CodeAnalysis.Sarif.IResultLogWriter,Microsoft.CodeAnalysis.Sarif.OptionallyEmittedData)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "XmlReaderCreateInsecureXmlResolver"
          },
          "properties": {
            "Category": "Microsoft.Security.Xml",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1502",
          "level": "warning",
          "message": {
            "text": "'ClangAnalyzerConverter.ReadDictionary(XmlReader)' has a cyclomatic complexity of 30. Rewrite or refactor the method to reduce complexity to 25."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/ClangAnalyzerConverter.cs"
                },
                "region": {
                  "startLine": 258,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 257,
                  "startColumn": 1,
                  "endLine": 259,
                  "endColumn": 87,
                  "charOffset": 9911,
                  "charLength": 185,
                  "snippet": {
                    "text": "        private static IDictionary<string, object> ReadDictionary(XmlReader xmlReader)\r\n        {\r\n            IDictionary<string, object> dictionary = new Dictionary<string, object>();"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.ClangAnalyzerConverter.ReadDictionary(System.Xml.XmlReader)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Maintainability",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1811",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.ConverterResources..ctor()"
            }
          ],
          "suppressionStates": ["suppressedInSource"],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Cpp' in type name 'CppCheckConverter'.",
            "messageId": "Type"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.CppCheckConverter"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Cpp#Type"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA3053",
          "level": "warning",
          "message": {
            "text": "'CppCheckConverter.Convert(Stream, IResultLogWriter, OptionallyEmittedData)' instantiates an XmlReader instance by calling System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings) and provided an XmlReaderSettings instance with an insecure XmlResolver property value. This usage is potentially unsafe as untrusted external resources may be resolved during read operations. Provide a XmlReaderSettings instance and set the XmlResolver property to null or an instance of XmlSecureResolver.",
            "messageId": "XmlReaderCreateInsecureXmlResolver"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/CppCheckConverter.cs"
                },
                "region": {
                  "startLine": 52,
                  "snippet": {
                    "text": "            using (XmlReader xmlReader = XmlReader.Create(input, settings))"
                  }
                },
                "contextRegion": {
                  "startLine": 51,
                  "startColumn": 1,
                  "endLine": 53,
                  "endColumn": 14,
                  "charOffset": 1951,
                  "charLength": 92,
                  "snippet": {
                    "text": "\r\n            using (XmlReader xmlReader = XmlReader.Create(input, settings))\r\n            {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.CppCheckConverter.Convert(System.IO.Stream,Microsoft.CodeAnalysis.Sarif.IResultLogWriter,Microsoft.CodeAnalysis.Sarif.OptionallyEmittedData)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "XmlReaderCreateInsecureXmlResolver"
          },
          "properties": {
            "Category": "Microsoft.Security.Xml",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'Extensions.HasDefaultConstructor(this Type)', validate parameter 'type' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/Extensions.cs"
                },
                "region": {
                  "startLine": 22,
                  "snippet": {
                    "text": "            return type.GetConstructor("
                  }
                },
                "contextRegion": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 23,
                  "endColumn": 73,
                  "charOffset": 753,
                  "charLength": 124,
                  "snippet": {
                    "text": "        {\r\n            return type.GetConstructor(\r\n                            BindingFlags.Instance | BindingFlags.Public,"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.Extensions.HasDefaultConstructor(System.Type)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'Extensions.MatchesToolFormat(this string, string)', validate parameter 'toolFormat' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/Extensions.cs"
                },
                "region": {
                  "startLine": 16,
                  "snippet": {
                    "text": "            return toolFormat.Equals(other, StringComparison.OrdinalIgnoreCase);"
                  }
                },
                "contextRegion": {
                  "startLine": 15,
                  "startColumn": 1,
                  "endLine": 17,
                  "endColumn": 10,
                  "charOffset": 501,
                  "charLength": 102,
                  "snippet": {
                    "text": "        {\r\n            return toolFormat.Equals(other, StringComparison.OrdinalIgnoreCase);\r\n        }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.Extensions.MatchesToolFormat(System.String,System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA3053",
          "level": "warning",
          "message": {
            "text": "'FortifyConverter.Convert(Stream, IResultLogWriter, OptionallyEmittedData)' instantiates an XmlReader instance by calling System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings) and provided an XmlReaderSettings instance with an insecure XmlResolver property value. This usage is potentially unsafe as untrusted external resources may be resolved during read operations. Provide a XmlReaderSettings instance and set the XmlResolver property to null or an instance of XmlSecureResolver.",
            "messageId": "XmlReaderCreateInsecureXmlResolver"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/FortifyConverter.cs"
                },
                "region": {
                  "startLine": 57,
                  "snippet": {
                    "text": "            using (XmlReader reader = XmlReader.Create(input, settings))"
                  }
                },
                "contextRegion": {
                  "startLine": 56,
                  "startColumn": 1,
                  "endLine": 58,
                  "endColumn": 14,
                  "charOffset": 2101,
                  "charLength": 89,
                  "snippet": {
                    "text": "\r\n            using (XmlReader reader = XmlReader.Create(input, settings))\r\n            {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.FortifyConverter.Convert(System.IO.Stream,Microsoft.CodeAnalysis.Sarif.IResultLogWriter,Microsoft.CodeAnalysis.Sarif.OptionallyEmittedData)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "XmlReaderCreateInsecureXmlResolver"
          },
          "properties": {
            "Category": "Microsoft.Security.Xml",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1303",
          "level": "warning",
          "message": {
            "text": "Method 'FortifyFprConverter.AddMessagesToResults()' passes a literal string as parameter 'value' of a call to 'Message.Text.set(string)'. Retrieve the following string(s) from a resource table instead: \"[, ](1)\".",
            "messageId": "KnownValue"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/FortifyFprConverter.cs"
                },
                "region": {
                  "startLine": 854,
                  "snippet": {
                    "text": "                        message.Text = messageText;"
                  }
                },
                "contextRegion": {
                  "startLine": 853,
                  "startColumn": 1,
                  "endLine": 855,
                  "endColumn": 22,
                  "charOffset": 30889,
                  "charLength": 130,
                  "snippet": {
                    "text": "                        message = message.DeepClone();\r\n                        message.Text = messageText;\r\n                    }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.FortifyFprConverter.AddMessagesToResults()"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Microsoft.CodeAnalysis.Sarif.Message.set_Text(System.String)#KnownValue"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1305",
          "level": "error",
          "message": {
            "text": "Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'FortifyFprConverter.AddMessagesToResults()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.",
            "messageId": "IFormatProviderAlternateString"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/FortifyFprConverter.cs"
                },
                "region": {
                  "startLine": 843,
                  "snippet": {
                    "text": "                                messageText = messageText.Replace(string.Format(ReplacementTokenFormat, key),"
                  }
                },
                "contextRegion": {
                  "startLine": 842,
                  "startColumn": 1,
                  "endLine": 844,
                  "endColumn": 109,
                  "charOffset": 30242,
                  "charLength": 300,
                  "snippet": {
                    "text": "                                // Replace the token with an embedded hyperlink\r\n                                messageText = messageText.Replace(string.Format(ReplacementTokenFormat, key),\r\n                                                                  string.Format(EmbeddedLinkFormat, value));"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.FortifyFprConverter.AddMessagesToResults()"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.String.Format(System.String,System.Object)#IFormatProviderAlternateString"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1305",
          "level": "error",
          "message": {
            "text": "Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'FortifyFprConverter.AddMessagesToResults()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.",
            "messageId": "IFormatProviderAlternateString"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/FortifyFprConverter.cs"
                },
                "region": {
                  "startLine": 843,
                  "snippet": {
                    "text": "                                messageText = messageText.Replace(string.Format(ReplacementTokenFormat, key),"
                  }
                },
                "contextRegion": {
                  "startLine": 842,
                  "startColumn": 1,
                  "endLine": 844,
                  "endColumn": 109,
                  "charOffset": 30242,
                  "charLength": 300,
                  "snippet": {
                    "text": "                                // Replace the token with an embedded hyperlink\r\n                                messageText = messageText.Replace(string.Format(ReplacementTokenFormat, key),\r\n                                                                  string.Format(EmbeddedLinkFormat, value));"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.FortifyFprConverter.AddMessagesToResults()"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.String.Format(System.String,System.Object)#IFormatProviderAlternateString"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1305",
          "level": "error",
          "message": {
            "text": "Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'FortifyFprConverter.AddMessagesToResults()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.",
            "messageId": "IFormatProviderAlternateString"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/FortifyFprConverter.cs"
                },
                "region": {
                  "startLine": 849,
                  "snippet": {
                    "text": "                                messageText = messageText.Replace(string.Format(ReplacementTokenFormat, key), value);"
                  }
                },
                "contextRegion": {
                  "startLine": 848,
                  "startColumn": 1,
                  "endLine": 850,
                  "endColumn": 30,
                  "charOffset": 30640,
                  "charLength": 218,
                  "snippet": {
                    "text": "                                // Replace the token with plain text\r\n                                messageText = messageText.Replace(string.Format(ReplacementTokenFormat, key), value);\r\n                            }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.FortifyFprConverter.AddMessagesToResults()"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.String.Format(System.String,System.Object)#IFormatProviderAlternateString"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA3053",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.FortifyFprConverter.ParseAuditStream(System.IO.Stream)"
            }
          ],
          "suppressionStates": ["suppressedInSource"],
          "properties": {
            "Category": "Microsoft.Security.Xml",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1806",
          "level": "warning",
          "message": {
            "text": "'FortifyFprConverter.ParseFile()' calls 'int.TryParse(string, out int)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.",
            "messageId": "TryParse"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/FortifyFprConverter.cs"
                },
                "region": {
                  "startLine": 276,
                  "snippet": {
                    "text": "                int.TryParse(sizeAttribute, out length);"
                  }
                },
                "contextRegion": {
                  "startLine": 275,
                  "startColumn": 1,
                  "endLine": 277,
                  "endColumn": 14,
                  "charOffset": 10480,
                  "charLength": 86,
                  "snippet": {
                    "text": "            {\r\n                int.TryParse(sizeAttribute, out length);\r\n            }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.FortifyFprConverter.ParseFile()"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.Int32.TryParse(System.String,System.Int32@)#TryParse"
          },
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1806",
          "level": "warning",
          "message": {
            "text": "'FortifyFprConverter.ParseRegion()' calls 'int.TryParse(string, out int)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.",
            "messageId": "TryParse"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/FortifyFprConverter.cs"
                },
                "region": {
                  "startLine": 508,
                  "snippet": {
                    "text": "                int.TryParse(lineAttr, out startLine);"
                  }
                },
                "contextRegion": {
                  "startLine": 507,
                  "startColumn": 1,
                  "endLine": 509,
                  "endColumn": 14,
                  "charOffset": 18718,
                  "charLength": 84,
                  "snippet": {
                    "text": "            {\r\n                int.TryParse(lineAttr, out startLine);\r\n            }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.FortifyFprConverter.ParseRegion()"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.Int32.TryParse(System.String,System.Int32@)#TryParse"
          },
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1806",
          "level": "warning",
          "message": {
            "text": "'FortifyFprConverter.ParseRegion()' calls 'int.TryParse(string, out int)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.",
            "messageId": "TryParse"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/FortifyFprConverter.cs"
                },
                "region": {
                  "startLine": 515,
                  "snippet": {
                    "text": "                int.TryParse(linelEndAttr, out endLine);"
                  }
                },
                "contextRegion": {
                  "startLine": 514,
                  "startColumn": 1,
                  "endLine": 516,
                  "endColumn": 14,
                  "charOffset": 18959,
                  "charLength": 86,
                  "snippet": {
                    "text": "            {\r\n                int.TryParse(linelEndAttr, out endLine);\r\n            }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.FortifyFprConverter.ParseRegion()"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.Int32.TryParse(System.String,System.Int32@)#TryParse"
          },
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1806",
          "level": "warning",
          "message": {
            "text": "'FortifyFprConverter.ParseRegion()' calls 'int.TryParse(string, out int)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.",
            "messageId": "TryParse"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/FortifyFprConverter.cs"
                },
                "region": {
                  "startLine": 522,
                  "snippet": {
                    "text": "                int.TryParse(colStartAttr, out startColumn);"
                  }
                },
                "contextRegion": {
                  "startLine": 521,
                  "startColumn": 1,
                  "endLine": 523,
                  "endColumn": 14,
                  "charOffset": 19207,
                  "charLength": 90,
                  "snippet": {
                    "text": "            {\r\n                int.TryParse(colStartAttr, out startColumn);\r\n            }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.FortifyFprConverter.ParseRegion()"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.Int32.TryParse(System.String,System.Int32@)#TryParse"
          },
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1806",
          "level": "warning",
          "message": {
            "text": "'FortifyFprConverter.ParseRegion()' calls 'int.TryParse(string, out int)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.",
            "messageId": "TryParse"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/FortifyFprConverter.cs"
                },
                "region": {
                  "startLine": 529,
                  "snippet": {
                    "text": "                int.TryParse(colEndAttr, out endColumn);"
                  }
                },
                "contextRegion": {
                  "startLine": 528,
                  "startColumn": 1,
                  "endLine": 530,
                  "endColumn": 14,
                  "charOffset": 19451,
                  "charLength": 86,
                  "snippet": {
                    "text": "            {\r\n                int.TryParse(colEndAttr, out endColumn);\r\n            }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.FortifyFprConverter.ParseRegion()"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.Int32.TryParse(System.String,System.Int32@)#TryParse"
          },
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1806",
          "level": "warning",
          "message": {
            "text": "'FortifyFprConverter.ParseSnippet()' calls 'int.TryParse(string, out int)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.",
            "messageId": "TryParse"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/FortifyFprConverter.cs"
                },
                "region": {
                  "startLine": 659,
                  "snippet": {
                    "text": "            int.TryParse(parts[parts.Length - 2], out regionStartLine);"
                  }
                },
                "contextRegion": {
                  "startLine": 658,
                  "startColumn": 1,
                  "endLine": 660,
                  "endColumn": 70,
                  "charOffset": 23723,
                  "charLength": 144,
                  "snippet": {
                    "text": "\r\n            int.TryParse(parts[parts.Length - 2], out regionStartLine);\r\n            int.TryParse(parts[parts.Length - 1], out regionEndLine);"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.FortifyFprConverter.ParseSnippet()"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.Int32.TryParse(System.String,System.Int32@)#TryParse"
          },
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1806",
          "level": "warning",
          "message": {
            "text": "'FortifyFprConverter.ParseSnippet()' calls 'int.TryParse(string, out int)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.",
            "messageId": "TryParse"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/FortifyFprConverter.cs"
                },
                "region": {
                  "startLine": 660,
                  "snippet": {
                    "text": "            int.TryParse(parts[parts.Length - 1], out regionEndLine);"
                  }
                },
                "contextRegion": {
                  "startLine": 659,
                  "startColumn": 1,
                  "endLine": 661,
                  "endColumn": 32,
                  "charOffset": 23725,
                  "charLength": 175,
                  "snippet": {
                    "text": "            int.TryParse(parts[parts.Length - 2], out regionStartLine);\r\n            int.TryParse(parts[parts.Length - 1], out regionEndLine);\r\n            string text = null;"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.FortifyFprConverter.ParseSnippet()"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.Int32.TryParse(System.String,System.Int32@)#TryParse"
          },
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1806",
          "level": "warning",
          "message": {
            "text": "'FortifyFprConverter.ParseSnippet()' calls 'int.TryParse(string, out int)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.",
            "messageId": "TryParse"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/FortifyFprConverter.cs"
                },
                "region": {
                  "startLine": 670,
                  "snippet": {
                    "text": "                    int.TryParse(value, out snippetStartLine);"
                  }
                },
                "contextRegion": {
                  "startLine": 669,
                  "startColumn": 1,
                  "endLine": 671,
                  "endColumn": 18,
                  "charOffset": 24077,
                  "charLength": 155,
                  "snippet": {
                    "text": "                    string value = _reader.ReadElementContentAsString();\r\n                    int.TryParse(value, out snippetStartLine);\r\n                }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.FortifyFprConverter.ParseSnippet()"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.Int32.TryParse(System.String,System.Int32@)#TryParse"
          },
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1806",
          "level": "warning",
          "message": {
            "text": "'FortifyFprConverter.ParseSnippet()' calls 'int.TryParse(string, out int)' but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails.",
            "messageId": "TryParse"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/FortifyFprConverter.cs"
                },
                "region": {
                  "startLine": 675,
                  "snippet": {
                    "text": "                    int.TryParse(value, out snippetEndLine);"
                  }
                },
                "contextRegion": {
                  "startLine": 674,
                  "startColumn": 1,
                  "endLine": 676,
                  "endColumn": 18,
                  "charOffset": 24316,
                  "charLength": 153,
                  "snippet": {
                    "text": "                    string value = _reader.ReadElementContentAsString();\r\n                    int.TryParse(value, out snippetEndLine);\r\n                }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.FortifyFprConverter.ParseSnippet()"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.Int32.TryParse(System.String,System.Int32@)#TryParse"
          },
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1822",
          "level": "warning",
          "message": {
            "text": "The 'this' parameter (or 'Me' in Visual Basic) of 'FxCopConverter.BuildFileLocationFromFxCopReference(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/FxCopConverter.cs"
                },
                "region": {
                  "startLine": 193,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 192,
                  "startColumn": 1,
                  "endLine": 194,
                  "endColumn": 37,
                  "charOffset": 6972,
                  "charLength": 135,
                  "snippet": {
                    "text": "        private FileLocation BuildFileLocationFromFxCopReference(string fileReference)\r\n        {\r\n            string uriBaseId = null;"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.FxCopConverter.BuildFileLocationFromFxCopReference(System.String)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1307",
          "level": "error",
          "message": {
            "text": "Because the behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings, replace this call in 'FxCopConverter.BuildFileLocationFromFxCopReference(string)' with a call to 'string.StartsWith(string, StringComparison)'. If the result of 'string.StartsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/FxCopConverter.cs"
                },
                "region": {
                  "startLine": 196,
                  "snippet": {
                    "text": "            if (fileReference.StartsWith(ProjectDirectoryVariable + \"/\"))"
                  }
                },
                "contextRegion": {
                  "startLine": 195,
                  "startColumn": 1,
                  "endLine": 197,
                  "endColumn": 14,
                  "charOffset": 7109,
                  "charLength": 90,
                  "snippet": {
                    "text": "\r\n            if (fileReference.StartsWith(ProjectDirectoryVariable + \"/\"))\r\n            {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.FxCopConverter.BuildFileLocationFromFxCopReference(System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.String.StartsWith(System.String)"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1822",
          "level": "warning",
          "message": {
            "text": "The 'this' parameter (or 'Me' in Visual Basic) of 'FxCopConverter.CreateRule(FxCopLogReader.Context)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/FxCopConverter.cs"
                },
                "region": {
                  "startLine": 99,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 98,
                  "startColumn": 1,
                  "endLine": 100,
                  "endColumn": 32,
                  "charOffset": 3329,
                  "charLength": 108,
                  "snippet": {
                    "text": "        internal Rule CreateRule(FxCopLogReader.Context context)\r\n        {\r\n            var rule = new Rule"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.FxCopConverter.CreateRule(Microsoft.CodeAnalysis.Sarif.Converters.FxCopLogReader+Context)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2202",
          "level": "warning",
          "message": {
            "text": "Object 'stream' can be disposed more than once in method 'FxCopLogReader.Read(FxCopLogReader.Context, Stream)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 734"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/FxCopConverter.cs"
                },
                "region": {
                  "startLine": 734,
                  "snippet": {
                    "text": "            }"
                  }
                },
                "contextRegion": {
                  "startLine": 733,
                  "startColumn": 1,
                  "endLine": 735,
                  "endColumn": 1,
                  "charOffset": 27311,
                  "charLength": 55,
                  "snippet": {
                    "text": "                schemaSet.Add(schema);\r\n            }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.FxCopLogReader.Read(Microsoft.CodeAnalysis.Sarif.Converters.FxCopLogReader+Context,System.IO.Stream)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA3053",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.FxCopLogReader.Read(Microsoft.CodeAnalysis.Sarif.Converters.FxCopLogReader+Context,System.IO.Stream)"
            }
          ],
          "suppressionStates": ["suppressedInSource"],
          "properties": {
            "Category": "Microsoft.Security.Xml",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2000",
          "level": "warning",
          "message": {
            "text": "In method 'LogReader<TLog>.ReadLog(string, Encoding)', call System.IDisposable.Dispose on object 'new MemoryStream(encoding.GetBytes(input))' before all references to it are out of scope.",
            "messageId": "NonExceptionEdge"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/LogReader.cs"
                },
                "region": {
                  "startLine": 18,
                  "snippet": {
                    "text": "            return ReadLog(new MemoryStream(encoding.GetBytes(input)));"
                  }
                },
                "contextRegion": {
                  "startLine": 17,
                  "startColumn": 1,
                  "endLine": 19,
                  "endColumn": 10,
                  "charOffset": 498,
                  "charLength": 93,
                  "snippet": {
                    "text": "        {\r\n            return ReadLog(new MemoryStream(encoding.GetBytes(input)));\r\n        }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.LogReader`1.ReadLog(System.String,System.Text.Encoding)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "NonExceptionEdge"
          },
          "properties": {
            "Category": "Microsoft.Reliability",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'LogReader<TLog>.ReadLog(string, Encoding)', validate parameter 'encoding' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/LogReader.cs"
                },
                "region": {
                  "startLine": 18,
                  "snippet": {
                    "text": "            return ReadLog(new MemoryStream(encoding.GetBytes(input)));"
                  }
                },
                "contextRegion": {
                  "startLine": 17,
                  "startColumn": 1,
                  "endLine": 19,
                  "endColumn": 10,
                  "charOffset": 498,
                  "charLength": 93,
                  "snippet": {
                    "text": "        {\r\n            return ReadLog(new MemoryStream(encoding.GetBytes(input)));\r\n        }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.LogReader`1.ReadLog(System.String,System.Text.Encoding)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "1"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA2208",
          "level": "error",
          "message": {
            "text": "Method 'PluginConverterFactory.CreateConverterCore(string)' passes 'pluginAssemblyPath' as the 'paramName' argument to a 'ArgumentException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.",
            "messageId": "IncorrectParameterName"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/PluginConverterFactory.cs"
                },
                "region": {
                  "startLine": 39,
                  "snippet": {
                    "text": "                throw new ArgumentException(message, nameof(this.pluginAssemblyPath));"
                  }
                },
                "contextRegion": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 40,
                  "endColumn": 14,
                  "charOffset": 1461,
                  "charLength": 103,
                  "snippet": {
                    "text": "\r\n                throw new ArgumentException(message, nameof(this.pluginAssemblyPath));\r\n            }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PluginConverterFactory.CreateConverterCore(System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "IncorrectParameterName"
          },
          "properties": {
            "Level": "CriticalError",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2208",
          "level": "error",
          "message": {
            "text": "Method 'PluginConverterFactory.CreateConverterCore(string)' passes 'pluginAssemblyPath' as the 'paramName' argument to a 'ArgumentException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.",
            "messageId": "IncorrectParameterName"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/PluginConverterFactory.cs"
                },
                "region": {
                  "startLine": 58,
                  "snippet": {
                    "text": "                throw new ArgumentException(message, nameof(this.pluginAssemblyPath));"
                  }
                },
                "contextRegion": {
                  "startLine": 57,
                  "startColumn": 1,
                  "endLine": 59,
                  "endColumn": 14,
                  "charOffset": 2297,
                  "charLength": 103,
                  "snippet": {
                    "text": "\r\n                throw new ArgumentException(message, nameof(this.pluginAssemblyPath));\r\n            }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PluginConverterFactory.CreateConverterCore(System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "IncorrectParameterName"
          },
          "properties": {
            "Level": "CriticalError",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Efast' in type name 'PREfastConverter'.",
            "messageId": "Type"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PREfastConverter"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Efast#Type"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA3053",
          "level": "warning",
          "message": {
            "text": "'PREfastConverter.Convert(Stream, IResultLogWriter, OptionallyEmittedData)' instantiates an XmlReader instance by calling System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings) and provided an XmlReaderSettings instance with an insecure XmlResolver property value. This usage is potentially unsafe as untrusted external resources may be resolved during read operations. Provide a XmlReaderSettings instance and set the XmlResolver property to null or an instance of XmlSecureResolver.",
            "messageId": "XmlReaderCreateInsecureXmlResolver"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/PREFastConverter.cs"
                },
                "region": {
                  "startLine": 50,
                  "snippet": {
                    "text": "            using (var reader = XmlReader.Create(input, settings))"
                  }
                },
                "contextRegion": {
                  "startLine": 49,
                  "startColumn": 1,
                  "endLine": 51,
                  "endColumn": 14,
                  "charOffset": 1584,
                  "charLength": 83,
                  "snippet": {
                    "text": "\r\n            using (var reader = XmlReader.Create(input, settings))\r\n            {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PREfastConverter.Convert(System.IO.Stream,Microsoft.CodeAnalysis.Sarif.IResultLogWriter,Microsoft.CodeAnalysis.Sarif.OptionallyEmittedData)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "XmlReaderCreateInsecureXmlResolver"
          },
          "properties": {
            "Category": "Microsoft.Security.Xml",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1305",
          "level": "error",
          "message": {
            "text": "Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'PREfastConverter.CreateResult(Defect)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.",
            "messageId": "IFormatProviderAlternateString"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/PREFastConverter.cs"
                },
                "region": {
                  "startLine": 86,
                  "snippet": {
                    "text": "            var resultsFileUri = new Uri($\"{defect.SFA.FilePath}{defect.SFA.FileName}\", UriKind.Relative);"
                  }
                },
                "contextRegion": {
                  "startLine": 85,
                  "startColumn": 1,
                  "endLine": 87,
                  "endColumn": 171,
                  "charOffset": 2908,
                  "charLength": 280,
                  "snippet": {
                    "text": "\r\n            var resultsFileUri = new Uri($\"{defect.SFA.FilePath}{defect.SFA.FileName}\", UriKind.Relative);\r\n            var physicalLocation = new PhysicalLocation(id: 0, fileLocation: new FileLocation(uri: resultsFileUri, uriBaseId: null), region: region, contextRegion: null);"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PREfastConverter.CreateResult(Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel.Defect)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.String.Format(System.String,System.Object,System.Object)#IFormatProviderAlternateString"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1822",
          "level": "warning",
          "message": {
            "text": "The 'this' parameter (or 'Me' in Visual Basic) of 'PREfastConverter.GenerateCodeFlows(Defect, Result)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/PREFastConverter.cs"
                },
                "region": {
                  "startLine": 144,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 143,
                  "startColumn": 1,
                  "endLine": 145,
                  "endColumn": 49,
                  "charOffset": 4926,
                  "charLength": 129,
                  "snippet": {
                    "text": "        private void GenerateCodeFlows(Defect defect, Result result)\r\n        {\r\n            List<SFA> sfas = defect?.Path?.SFAs;"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PREfastConverter.GenerateCodeFlows(Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel.Defect,Microsoft.CodeAnalysis.Sarif.Result)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1305",
          "level": "error",
          "message": {
            "text": "Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'PREfastConverter.GenerateCodeFlows(Defect, Result)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.",
            "messageId": "IFormatProviderAlternateString"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/PREFastConverter.cs"
                },
                "region": {
                  "startLine": 163,
                  "snippet": {
                    "text": "                var uri = new Uri($\"{sfa.FilePath}{sfa.FileName}\", UriKind.Relative);"
                  }
                },
                "contextRegion": {
                  "startLine": 162,
                  "startColumn": 1,
                  "endLine": 164,
                  "endColumn": 160,
                  "charOffset": 5605,
                  "charLength": 248,
                  "snippet": {
                    "text": "\r\n                var uri = new Uri($\"{sfa.FilePath}{sfa.FileName}\", UriKind.Relative);\r\n                var fileLocation = new PhysicalLocation(id: 0, fileLocation: new FileLocation(uri: uri, uriBaseId: null), region: region, contextRegion: null);"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PREfastConverter.GenerateCodeFlows(Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel.Defect,Microsoft.CodeAnalysis.Sarif.Result)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.String.Format(System.String,System.Object,System.Object)#IFormatProviderAlternateString"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1822",
          "level": "warning",
          "message": {
            "text": "The 'this' parameter (or 'Me' in Visual Basic) of 'PREfastConverter.RemovePREfastNewLine(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/PREFastConverter.cs"
                },
                "region": {
                  "startLine": 224,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 223,
                  "startColumn": 1,
                  "endLine": 225,
                  "endColumn": 71,
                  "charOffset": 7959,
                  "charLength": 142,
                  "snippet": {
                    "text": "        private string RemovePREfastNewLine(string content)\r\n        {\r\n            return content.Replace(\"PREFAST_NEWLINE\\n\", string.Empty);"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PREfastConverter.RemovePREfastNewLine(System.String)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1822",
          "level": "warning",
          "message": {
            "text": "The 'this' parameter (or 'Me' in Visual Basic) of 'PREfastConverter.SetProbability(Defect, Result)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/PREFastConverter.cs"
                },
                "region": {
                  "startLine": 136,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 135,
                  "startColumn": 1,
                  "endLine": 137,
                  "endColumn": 63,
                  "charOffset": 4676,
                  "charLength": 140,
                  "snippet": {
                    "text": "        private void SetProbability(Defect defect, Result result)\r\n        {\r\n            if (string.IsNullOrWhiteSpace(defect.Probability))"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PREfastConverter.SetProbability(Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel.Defect,Microsoft.CodeAnalysis.Sarif.Result)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1822",
          "level": "warning",
          "message": {
            "text": "The 'this' parameter (or 'Me' in Visual Basic) of 'PREfastConverter.SetRank(Defect, Result)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/PREFastConverter.cs"
                },
                "region": {
                  "startLine": 128,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 127,
                  "startColumn": 1,
                  "endLine": 129,
                  "endColumn": 56,
                  "charOffset": 4454,
                  "charLength": 126,
                  "snippet": {
                    "text": "        private void SetRank(Defect defect, Result result)\r\n        {\r\n            if (string.IsNullOrWhiteSpace(defect.Rank))"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PREfastConverter.SetRank(Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel.Defect,Microsoft.CodeAnalysis.Sarif.Result)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Pylint' in type name 'PylintConverter'.",
            "messageId": "Type"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PylintConverter"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Pylint#Type"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1822",
          "level": "warning",
          "message": {
            "text": "The 'this' parameter (or 'Me' in Visual Basic) of 'PylintConverter.CreateResult(PylintLogEntry)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/PylintConverter.cs"
                },
                "region": {
                  "startLine": 62,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 61,
                  "startColumn": 1,
                  "endLine": 63,
                  "endColumn": 80,
                  "charOffset": 1860,
                  "charLength": 151,
                  "snippet": {
                    "text": "        internal Result CreateResult(PylintLogEntry defect)\r\n        {\r\n            defect = defect ?? throw new ArgumentNullException(nameof(defect));"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PylintConverter.CreateResult(Microsoft.CodeAnalysis.Sarif.Converters.PylintObjectModel.PylintLogEntry)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1305",
          "level": "error",
          "message": {
            "text": "Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'PylintConverter.CreateResult(PylintLogEntry)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.",
            "messageId": "IFormatProviderAlternate"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/PylintConverter.cs"
                },
                "region": {
                  "startLine": 87,
                  "snippet": {
                    "text": "            var region = new Region"
                  }
                },
                "contextRegion": {
                  "startLine": 86,
                  "startColumn": 1,
                  "endLine": 88,
                  "endColumn": 14,
                  "charOffset": 2725,
                  "charLength": 52,
                  "snippet": {
                    "text": "\r\n            var region = new Region\r\n            {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PylintConverter.CreateResult(Microsoft.CodeAnalysis.Sarif.Converters.PylintObjectModel.PylintLogEntry)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.Int32.Parse(System.String)#IFormatProviderAlternate"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1305",
          "level": "error",
          "message": {
            "text": "Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'PylintConverter.CreateResult(PylintLogEntry)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.",
            "messageId": "IFormatProviderAlternate"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/PylintConverter.cs"
                },
                "region": {
                  "startLine": 87,
                  "snippet": {
                    "text": "            var region = new Region"
                  }
                },
                "contextRegion": {
                  "startLine": 86,
                  "startColumn": 1,
                  "endLine": 88,
                  "endColumn": 14,
                  "charOffset": 2725,
                  "charLength": 52,
                  "snippet": {
                    "text": "\r\n            var region = new Region\r\n            {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PylintConverter.CreateResult(Microsoft.CodeAnalysis.Sarif.Converters.PylintObjectModel.PylintLogEntry)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.Int32.Parse(System.String)#IFormatProviderAlternate"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1305",
          "level": "error",
          "message": {
            "text": "Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'PylintConverter.CreateResult(PylintLogEntry)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.",
            "messageId": "IFormatProviderAlternateString"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/PylintConverter.cs"
                },
                "region": {
                  "startLine": 93,
                  "snippet": {
                    "text": "            var fileUri = new Uri($\"{defect.FilePath}\", UriKind.RelativeOrAbsolute);"
                  }
                },
                "contextRegion": {
                  "startLine": 92,
                  "startColumn": 1,
                  "endLine": 94,
                  "endColumn": 164,
                  "charOffset": 2904,
                  "charLength": 251,
                  "snippet": {
                    "text": "\r\n            var fileUri = new Uri($\"{defect.FilePath}\", UriKind.RelativeOrAbsolute);\r\n            var physicalLocation = new PhysicalLocation(id: 0, fileLocation: new FileLocation(uri: fileUri, uriBaseId: null), region: region, contextRegion: null);"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PylintConverter.CreateResult(Microsoft.CodeAnalysis.Sarif.Converters.PylintObjectModel.PylintLogEntry)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.String.Format(System.String,System.Object)#IFormatProviderAlternateString"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1305",
          "level": "error",
          "message": {
            "text": "Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'PylintConverter.CreateResult(PylintLogEntry)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.",
            "messageId": "IFormatProviderAlternateString"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/PylintConverter.cs"
                },
                "region": {
                  "startLine": 65,
                  "snippet": {
                    "text": "            Result result = new Result"
                  }
                },
                "contextRegion": {
                  "startLine": 64,
                  "startColumn": 1,
                  "endLine": 66,
                  "endColumn": 14,
                  "charOffset": 2013,
                  "charLength": 55,
                  "snippet": {
                    "text": "\r\n            Result result = new Result\r\n            {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PylintConverter.CreateResult(Microsoft.CodeAnalysis.Sarif.Converters.PylintObjectModel.PylintLogEntry)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.String.Format(System.String,System.Object,System.Object)#IFormatProviderAlternateString"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Semmle' in type name 'SemmleQLConverter'.",
            "messageId": "Type"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.SemmleQLConverter"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Semmle#Type"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2202",
          "level": "warning",
          "message": {
            "text": "Object 'reader' can be disposed more than once in method 'SemmleQLConverter.GetResultsFromStream(Stream)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 110"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/SemmleQlConverter.cs"
                },
                "region": {
                  "startLine": 110,
                  "snippet": {
                    "text": "            }"
                  }
                },
                "contextRegion": {
                  "startLine": 109,
                  "startColumn": 1,
                  "endLine": 111,
                  "endColumn": 1,
                  "charOffset": 3450,
                  "charLength": 34,
                  "snippet": {
                    "text": "                }\r\n            }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.SemmleQLConverter.GetResultsFromStream(System.IO.Stream)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA2202",
          "level": "warning",
          "message": {
            "text": "Object 'this' can be disposed more than once in method 'SemmleQLConverter.GetResultsFromStream(Stream)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 110"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/SemmleQlConverter.cs"
                },
                "region": {
                  "startLine": 110,
                  "snippet": {
                    "text": "            }"
                  }
                },
                "contextRegion": {
                  "startLine": 109,
                  "startColumn": 1,
                  "endLine": 111,
                  "endColumn": 1,
                  "charOffset": 3450,
                  "charLength": 34,
                  "snippet": {
                    "text": "                }\r\n            }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.SemmleQLConverter.GetResultsFromStream(System.IO.Stream)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1822",
          "level": "warning",
          "message": {
            "text": "The 'this' parameter (or 'Me' in Visual Basic) of 'SemmleQLConverter.NormalizeRawMessage(string, out string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/SemmleQlConverter.cs"
                },
                "region": {
                  "startLine": 153,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 152,
                  "startColumn": 1,
                  "endLine": 154,
                  "endColumn": 174,
                  "charOffset": 4934,
                  "charLength": 286,
                  "snippet": {
                    "text": "        private IList<Location> NormalizeRawMessage(string rawMessage, out string normalizedMessage)\r\n        {\r\n            // The rawMessage contains embedded related locations. We need to extract the related locations and reformat the rawMessage embedded links wrapped in [brackets]."
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.SemmleQLConverter.NormalizeRawMessage(System.String,System.String&)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1305",
          "level": "error",
          "message": {
            "text": "Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'SemmleQLConverter.NormalizeRawMessage(string, out string)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.",
            "messageId": "IFormatProviderAlternate"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/SemmleQlConverter.cs"
                },
                "region": {
                  "startLine": 207,
                  "snippet": {
                    "text": "                        physicalLocation = new PhysicalLocation"
                  }
                },
                "contextRegion": {
                  "startLine": 206,
                  "startColumn": 1,
                  "endLine": 208,
                  "endColumn": 26,
                  "charOffset": 8084,
                  "charLength": 208,
                  "snippet": {
                    "text": "                        // \"IComparable\"|\"file://C:/Windows/Microsoft.NET/Framework/v2.0.50727/mscorlib.dll:0:0:0:0\"\r\n                        physicalLocation = new PhysicalLocation\r\n                        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.SemmleQLConverter.NormalizeRawMessage(System.String,System.String&)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.Int32.Parse(System.String)#IFormatProviderAlternate"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1305",
          "level": "error",
          "message": {
            "text": "Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'SemmleQLConverter.NormalizeRawMessage(string, out string)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.",
            "messageId": "IFormatProviderAlternate"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/SemmleQlConverter.cs"
                },
                "region": {
                  "startLine": 207,
                  "snippet": {
                    "text": "                        physicalLocation = new PhysicalLocation"
                  }
                },
                "contextRegion": {
                  "startLine": 206,
                  "startColumn": 1,
                  "endLine": 208,
                  "endColumn": 26,
                  "charOffset": 8084,
                  "charLength": 208,
                  "snippet": {
                    "text": "                        // \"IComparable\"|\"file://C:/Windows/Microsoft.NET/Framework/v2.0.50727/mscorlib.dll:0:0:0:0\"\r\n                        physicalLocation = new PhysicalLocation\r\n                        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.SemmleQLConverter.NormalizeRawMessage(System.String,System.String&)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.Int32.Parse(System.String)#IFormatProviderAlternate"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1305",
          "level": "error",
          "message": {
            "text": "Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'SemmleQLConverter.NormalizeRawMessage(string, out string)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.",
            "messageId": "IFormatProviderAlternate"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/SemmleQlConverter.cs"
                },
                "region": {
                  "startLine": 207,
                  "snippet": {
                    "text": "                        physicalLocation = new PhysicalLocation"
                  }
                },
                "contextRegion": {
                  "startLine": 206,
                  "startColumn": 1,
                  "endLine": 208,
                  "endColumn": 26,
                  "charOffset": 8084,
                  "charLength": 208,
                  "snippet": {
                    "text": "                        // \"IComparable\"|\"file://C:/Windows/Microsoft.NET/Framework/v2.0.50727/mscorlib.dll:0:0:0:0\"\r\n                        physicalLocation = new PhysicalLocation\r\n                        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.SemmleQLConverter.NormalizeRawMessage(System.String,System.String&)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.Int32.Parse(System.String)#IFormatProviderAlternate"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1305",
          "level": "error",
          "message": {
            "text": "Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'SemmleQLConverter.NormalizeRawMessage(string, out string)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.",
            "messageId": "IFormatProviderAlternate"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/SemmleQlConverter.cs"
                },
                "region": {
                  "startLine": 224,
                  "snippet": {
                    "text": "                        physicalLocation = new PhysicalLocation"
                  }
                },
                "contextRegion": {
                  "startLine": 223,
                  "startColumn": 1,
                  "endLine": 225,
                  "endColumn": 26,
                  "charOffset": 9010,
                  "charLength": 113,
                  "snippet": {
                    "text": "                    {\r\n                        physicalLocation = new PhysicalLocation\r\n                        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.SemmleQLConverter.NormalizeRawMessage(System.String,System.String&)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.Int32.Parse(System.String)#IFormatProviderAlternate"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1305",
          "level": "error",
          "message": {
            "text": "Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'SemmleQLConverter.NormalizeRawMessage(string, out string)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.",
            "messageId": "IFormatProviderAlternate"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/SemmleQlConverter.cs"
                },
                "region": {
                  "startLine": 224,
                  "snippet": {
                    "text": "                        physicalLocation = new PhysicalLocation"
                  }
                },
                "contextRegion": {
                  "startLine": 223,
                  "startColumn": 1,
                  "endLine": 225,
                  "endColumn": 26,
                  "charOffset": 9010,
                  "charLength": 113,
                  "snippet": {
                    "text": "                    {\r\n                        physicalLocation = new PhysicalLocation\r\n                        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.SemmleQLConverter.NormalizeRawMessage(System.String,System.String&)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.Int32.Parse(System.String)#IFormatProviderAlternate"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1305",
          "level": "error",
          "message": {
            "text": "Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'SemmleQLConverter.NormalizeRawMessage(string, out string)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.",
            "messageId": "IFormatProviderAlternate"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/SemmleQlConverter.cs"
                },
                "region": {
                  "startLine": 224,
                  "snippet": {
                    "text": "                        physicalLocation = new PhysicalLocation"
                  }
                },
                "contextRegion": {
                  "startLine": 223,
                  "startColumn": 1,
                  "endLine": 225,
                  "endColumn": 26,
                  "charOffset": 9010,
                  "charLength": 113,
                  "snippet": {
                    "text": "                    {\r\n                        physicalLocation = new PhysicalLocation\r\n                        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.SemmleQLConverter.NormalizeRawMessage(System.String,System.String&)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.Int32.Parse(System.String)#IFormatProviderAlternate"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1305",
          "level": "error",
          "message": {
            "text": "Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'SemmleQLConverter.NormalizeRawMessage(string, out string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.",
            "messageId": "IFormatProviderAlternateString"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/SemmleQlConverter.cs"
                },
                "region": {
                  "startLine": 250,
                  "snippet": {
                    "text": "                sb.Append($\"[{embeddedLinksText}]({relatedLocations[linkIndex++].PhysicalLocation.Id})\");"
                  }
                },
                "contextRegion": {
                  "startLine": 249,
                  "startColumn": 1,
                  "endLine": 251,
                  "endColumn": 1,
                  "charOffset": 10089,
                  "charLength": 228,
                  "snippet": {
                    "text": "                // Re-add the text portion of the link in brackets with the location id in parens, e.g. [link text](id)\r\n                sb.Append($\"[{embeddedLinksText}]({relatedLocations[linkIndex++].PhysicalLocation.Id})\");\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.SemmleQLConverter.NormalizeRawMessage(System.String,System.String&)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.String.Format(System.String,System.Object,System.Object)#IFormatProviderAlternateString"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1305",
          "level": "error",
          "message": {
            "text": "Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'SemmleQLConverter.NormalizeRawMessage(string, out string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.",
            "messageId": "IFormatProviderAlternateString"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/SemmleQlConverter.cs"
                },
                "region": {
                  "startLine": 207,
                  "snippet": {
                    "text": "                        physicalLocation = new PhysicalLocation"
                  }
                },
                "contextRegion": {
                  "startLine": 206,
                  "startColumn": 1,
                  "endLine": 208,
                  "endColumn": 26,
                  "charOffset": 8084,
                  "charLength": 208,
                  "snippet": {
                    "text": "                        // \"IComparable\"|\"file://C:/Windows/Microsoft.NET/Framework/v2.0.50727/mscorlib.dll:0:0:0:0\"\r\n                        physicalLocation = new PhysicalLocation\r\n                        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.SemmleQLConverter.NormalizeRawMessage(System.String,System.String&)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.String.Format(System.String,System.Object,System.Object,System.Object)#IFormatProviderAlternateString"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1307",
          "level": "error",
          "message": {
            "text": "Because the behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings, replace this call in 'SemmleQLConverter.NormalizeRawMessage(string, out string)' with a call to 'string.IndexOf(string, StringComparison)'. If the result of 'string.IndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/SemmleQlConverter.cs"
                },
                "region": {
                  "startLine": 170,
                  "snippet": {
                    "text": "            int index = rawMessage.IndexOf(\"[[\");"
                  }
                },
                "contextRegion": {
                  "startLine": 169,
                  "startColumn": 1,
                  "endLine": 171,
                  "endColumn": 31,
                  "charOffset": 6203,
                  "charLength": 113,
                  "snippet": {
                    "text": "            int linkIndex = 0;\r\n            int index = rawMessage.IndexOf(\"[[\");\r\n            while (index > -1)"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.SemmleQLConverter.NormalizeRawMessage(System.String,System.String&)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.String.IndexOf(System.String)"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1307",
          "level": "error",
          "message": {
            "text": "Because the behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings, replace this call in 'SemmleQLConverter.NormalizeRawMessage(string, out string)' with a call to 'string.IndexOf(string, StringComparison)'. If the result of 'string.IndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/SemmleQlConverter.cs"
                },
                "region": {
                  "startLine": 177,
                  "snippet": {
                    "text": "                index = rawMessage.IndexOf(\"]]\");"
                  }
                },
                "contextRegion": {
                  "startLine": 176,
                  "startColumn": 1,
                  "endLine": 178,
                  "endColumn": 1,
                  "charOffset": 6458,
                  "charLength": 53,
                  "snippet": {
                    "text": "\r\n                index = rawMessage.IndexOf(\"]]\");\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.SemmleQLConverter.NormalizeRawMessage(System.String,System.String&)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.String.IndexOf(System.String)"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1307",
          "level": "error",
          "message": {
            "text": "Because the behavior of 'string.IndexOf(string)' could vary based on the current user's locale settings, replace this call in 'SemmleQLConverter.NormalizeRawMessage(string, out string)' with a call to 'string.IndexOf(string, StringComparison)'. If the result of 'string.IndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/SemmleQlConverter.cs"
                },
                "region": {
                  "startLine": 253,
                  "snippet": {
                    "text": "                index = rawMessage.IndexOf(\"[[\");"
                  }
                },
                "contextRegion": {
                  "startLine": 252,
                  "startColumn": 1,
                  "endLine": 254,
                  "endColumn": 14,
                  "charOffset": 10319,
                  "charLength": 137,
                  "snippet": {
                    "text": "                rawMessage = rawMessage.Substring(index + \"]]\".Length);\r\n                index = rawMessage.IndexOf(\"[[\");\r\n            }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.SemmleQLConverter.NormalizeRawMessage(System.String,System.String&)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.String.IndexOf(System.String)"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1823",
          "level": "warning",
          "message": {
            "text": "It appears that field 'SemmleQLConverter.s_delimiters' is never used or is only ever assigned to. Use this field or remove it."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.SemmleQLConverter.s_delimiters"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Semmle' in member name 'SemmleQLConverter.SemmleError' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.SemmleQLConverter.SemmleError"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Semmle#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Semmle' in member name 'SemmleQLConverter.SemmleRecommendation' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.SemmleQLConverter.SemmleRecommendation"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Semmle#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Semmle' in member name 'SemmleQLConverter.SemmleWarning' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.SemmleQLConverter.SemmleWarning"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Semmle#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA3053",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.SparseReader.CreateFromStream(Microsoft.CodeAnalysis.Sarif.Converters.SparseReaderDispatchTable,System.IO.Stream,System.Xml.Schema.XmlSchemaSet)"
            }
          ],
          "suppressionStates": ["suppressedInSource"],
          "properties": {
            "Category": "Microsoft.Security.Xml",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1021",
          "level": "warning",
          "message": {
            "text": "Consider a design that does not require that 'innerText' be an out parameter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/SparseReader.cs"
                },
                "region": {
                  "startLine": 103,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 102,
                  "startColumn": 1,
                  "endLine": 104,
                  "endColumn": 30,
                  "charOffset": 4682,
                  "charLength": 127,
                  "snippet": {
                    "text": "        public void ReadChildren(string tagName, object parent, out string innerText)\r\n        {\r\n            innerText = null;"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.SparseReader.ReadChildren(System.String,System.Object,System.String&)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "2#"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1710",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.SparseReaderDispatchTable"
            }
          ],
          "suppressionStates": ["suppressedInSource"],
          "properties": {
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1823",
          "level": "warning",
          "message": {
            "text": "It appears that field 'StaticDriverVerifierConverter._sb' is never used or is only ever assigned to. Use this field or remove it."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.StaticDriverVerifierConverter._sb"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1822",
          "level": "warning",
          "message": {
            "text": "The 'this' parameter (or 'Me' in Visual Basic) of 'StaticDriverVerifierConverter.IsHarnessOrRulesFiles(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/StaticDriverVerifierConverter.cs"
                },
                "region": {
                  "startLine": 288,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 287,
                  "startColumn": 1,
                  "endLine": 289,
                  "endColumn": 82,
                  "charOffset": 10742,
                  "charLength": 153,
                  "snippet": {
                    "text": "        private bool IsHarnessOrRulesFiles(string fileName)\r\n        {\r\n            return fileName.EndsWith(\".slic\", StringComparison.OrdinalIgnoreCase)"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.StaticDriverVerifierConverter.IsHarnessOrRulesFiles(System.String)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1303",
          "level": "warning",
          "message": {
            "text": "Method 'StaticDriverVerifierConverter.ProcessLine(string, ref int, Result)' passes a literal string as parameter 'text' of a call to 'StaticDriverVerifierConverter.ExtractCallerAndCallee(string, out string, out string)'. Retrieve the following string(s) from a resource table instead: \" \".",
            "messageId": "KnownValue"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/StaticDriverVerifierConverter.cs"
                },
                "region": {
                  "startLine": 181,
                  "snippet": {
                    "text": "                    if (ExtractCallerAndCallee(extraMsg.Trim(), out caller, out callee))"
                  }
                },
                "contextRegion": {
                  "startLine": 180,
                  "startColumn": 1,
                  "endLine": 182,
                  "endColumn": 22,
                  "charOffset": 6278,
                  "charLength": 113,
                  "snippet": {
                    "text": "\r\n                    if (ExtractCallerAndCallee(extraMsg.Trim(), out caller, out callee))\r\n                    {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.StaticDriverVerifierConverter.ProcessLine(System.String,System.Int32&,Microsoft.CodeAnalysis.Sarif.Result)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Microsoft.CodeAnalysis.Sarif.Converters.StaticDriverVerifierConverter.ExtractCallerAndCallee(System.String,System.String@,System.String@)#KnownValue"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1305",
          "level": "error",
          "message": {
            "text": "Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'StaticDriverVerifierConverter.ProcessLine(string, ref int, Result)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.",
            "messageId": "IFormatProviderAlternate"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/StaticDriverVerifierConverter.cs"
                },
                "region": {
                  "startLine": 136,
                  "snippet": {
                    "text": "                int line = int.Parse(tokens[LINE]);"
                  }
                },
                "contextRegion": {
                  "startLine": 135,
                  "startColumn": 1,
                  "endLine": 137,
                  "endColumn": 1,
                  "charOffset": 4643,
                  "charLength": 131,
                  "snippet": {
                    "text": "                // We assume a valid line here. This code will throw if not.\r\n                int line = int.Parse(tokens[LINE]);\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.StaticDriverVerifierConverter.ProcessLine(System.String,System.Int32&,Microsoft.CodeAnalysis.Sarif.Result)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.Int32.Parse(System.String)#IFormatProviderAlternate"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1305",
          "level": "error",
          "message": {
            "text": "Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'StaticDriverVerifierConverter.ProcessLine(string, ref int, Result)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.",
            "messageId": "IFormatProviderAlternateString"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/StaticDriverVerifierConverter.cs"
                },
                "region": {
                  "startLine": 177,
                  "snippet": {
                    "text": "                    string extraMsg = $\"{tokens[KIND1]} {tokens[CALLER]} {tokens[CALLEE]}\";"
                  }
                },
                "contextRegion": {
                  "startLine": 176,
                  "startColumn": 1,
                  "endLine": 178,
                  "endColumn": 1,
                  "charOffset": 6120,
                  "charLength": 112,
                  "snippet": {
                    "text": "                {\r\n                    string extraMsg = $\"{tokens[KIND1]} {tokens[CALLER]} {tokens[CALLEE]}\";\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.StaticDriverVerifierConverter.ProcessLine(System.String,System.Int32&,Microsoft.CodeAnalysis.Sarif.Result)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.String.Format(System.String,System.Object,System.Object,System.Object)#IFormatProviderAlternateString"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1307",
          "level": "error",
          "message": {
            "text": "Because the behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings, replace this call in 'StaticDriverVerifierConverter.ProcessLine(string, ref int, Result)' with a call to 'string.StartsWith(string, StringComparison)'. If the result of 'string.StartsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/StaticDriverVerifierConverter.cs"
                },
                "region": {
                  "startLine": 235,
                  "snippet": {
                    "text": "                        if (stateTokens[0].StartsWith(separatorText))"
                  }
                },
                "contextRegion": {
                  "startLine": 234,
                  "startColumn": 1,
                  "endLine": 236,
                  "endColumn": 26,
                  "charOffset": 8613,
                  "charLength": 160,
                  "snippet": {
                    "text": "                        Debug.Assert(stateTokens.Length == 1);\r\n                        if (stateTokens[0].StartsWith(separatorText))\r\n                        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.StaticDriverVerifierConverter.ProcessLine(System.String,System.Int32&,Microsoft.CodeAnalysis.Sarif.Result)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.String.StartsWith(System.String)"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1801",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.StringReference.Equals(System.Object,System.Object)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "unusedA"
          },
          "suppressionStates": ["suppressedInSource"],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1801",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.StringReference.Equals(System.Object,System.Object)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "unusedB"
          },
          "suppressionStates": ["suppressedInSource"],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1307",
          "level": "error",
          "message": {
            "text": "Because the behavior of 'string.LastIndexOf(string)' could vary based on the current user's locale settings, replace this call in 'ToolFileConverterBase.GetLogicalLocationName(string, string, string)' with a call to 'string.LastIndexOf(string, StringComparison)'. If the result of 'string.LastIndexOf(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/ToolFileConverterBase.cs"
                },
                "region": {
                  "startLine": 90,
                  "snippet": {
                    "text": "                index = !string.IsNullOrWhiteSpace(delimiter) ? fullyQualifiedLogicalName.LastIndexOf(delimiter) : -1;"
                  }
                },
                "contextRegion": {
                  "startLine": 89,
                  "startColumn": 1,
                  "endLine": 91,
                  "endColumn": 14,
                  "charOffset": 3432,
                  "charLength": 148,
                  "snippet": {
                    "text": "            {\r\n                index = !string.IsNullOrWhiteSpace(delimiter) ? fullyQualifiedLogicalName.LastIndexOf(delimiter) : -1;\r\n            }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.ToolFileConverterBase.GetLogicalLocationName(System.String,System.String,System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.String.LastIndexOf(System.String)"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Cpp' in member name 'ToolFormat.CppCheck' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.ToolFormat.CppCheck"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Cpp#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Fpr' in member name 'ToolFormat.FortifyFpr' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.ToolFormat.FortifyFpr"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Fpr#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Efast' in member name 'ToolFormat.PREfast' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.ToolFormat.PREfast"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Efast#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Pylint' in member name 'ToolFormat.Pylint' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.ToolFormat.Pylint"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Pylint#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Semmle' in member name 'ToolFormat.SemmleQL' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.ToolFormat.SemmleQL"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Semmle#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1026",
          "level": "error",
          "message": {
            "text": "Replace method 'ToolFormatConverter.ToolFormatConverter(AssemblyLoadFileDelegate)' with an overload that supplies all default arguments."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/ToolFormatConverter.cs"
                },
                "region": {
                  "startLine": 19,
                  "snippet": {
                    "text": "        public ToolFormatConverter(AssemblyLoadFileDelegate assemblyLoadFileDelegate = null)"
                  }
                },
                "contextRegion": {
                  "startLine": 18,
                  "startColumn": 1,
                  "endLine": 20,
                  "endColumn": 10,
                  "charOffset": 615,
                  "charLength": 105,
                  "snippet": {
                    "text": "\r\n        public ToolFormatConverter(AssemblyLoadFileDelegate assemblyLoadFileDelegate = null)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.ToolFormatConverter..ctor(Microsoft.CodeAnalysis.Sarif.Converters.AssemblyLoadFileDelegate)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1026",
          "level": "error",
          "message": {
            "text": "Replace method 'ToolFormatConverter.ConvertToStandardFormat(string, Stream, IResultLogWriter, OptionallyEmittedData, string)' with an overload that supplies all default arguments."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/ToolFormatConverter.cs"
                },
                "region": {
                  "startLine": 90,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 89,
                  "startColumn": 1,
                  "endLine": 91,
                  "endColumn": 95,
                  "charOffset": 4722,
                  "charLength": 152,
                  "snippet": {
                    "text": "            string pluginAssemblyPath = null)\r\n        {\r\n            if (inputStream == null) { throw new ArgumentNullException(nameof(inputStream)); }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.ToolFormatConverter.ConvertToStandardFormat(System.String,System.IO.Stream,Microsoft.CodeAnalysis.Sarif.IResultLogWriter,Microsoft.CodeAnalysis.Sarif.OptionallyEmittedData,System.String)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1026",
          "level": "error",
          "message": {
            "text": "Replace method 'ToolFormatConverter.ConvertToStandardFormat(string, string, string, LoggingOptions, OptionallyEmittedData, string)' with an overload that supplies all default arguments."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/ToolFormatConverter.cs"
                },
                "region": {
                  "startLine": 42,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 41,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 99,
                  "charOffset": 2075,
                  "charLength": 156,
                  "snippet": {
                    "text": "            string pluginAssemblyPath = null)\r\n        {\r\n            if (inputFileName == null) { throw new ArgumentNullException(nameof(inputFileName)); }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.ToolFormatConverter.ConvertToStandardFormat(System.String,System.String,System.String,Microsoft.CodeAnalysis.Sarif.Writers.LoggingOptions,Microsoft.CodeAnalysis.Sarif.OptionallyEmittedData,System.String)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2202",
          "level": "warning",
          "message": {
            "text": "Object 'outputTextStream' can be disposed more than once in method 'ToolFormatConverter.ConvertToStandardFormat(string, string, string, LoggingOptions, OptionallyEmittedData, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 72"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/ToolFormatConverter.cs"
                },
                "region": {
                  "startLine": 72,
                  "snippet": {
                    "text": "            }"
                  }
                },
                "contextRegion": {
                  "startLine": 71,
                  "startColumn": 1,
                  "endLine": 73,
                  "endColumn": 10,
                  "charOffset": 3692,
                  "charLength": 43,
                  "snippet": {
                    "text": "                }\r\n            }\r\n        }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.ToolFormatConverter.ConvertToStandardFormat(System.String,System.String,System.String,Microsoft.CodeAnalysis.Sarif.Writers.LoggingOptions,Microsoft.CodeAnalysis.Sarif.OptionallyEmittedData,System.String)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA2202",
          "level": "warning",
          "message": {
            "text": "Object 'outputTextWriter' can be disposed more than once in method 'ToolFormatConverter.ConvertToStandardFormat(string, string, string, LoggingOptions, OptionallyEmittedData, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 72"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/ToolFormatConverter.cs"
                },
                "region": {
                  "startLine": 72,
                  "snippet": {
                    "text": "            }"
                  }
                },
                "contextRegion": {
                  "startLine": 71,
                  "startColumn": 1,
                  "endLine": 73,
                  "endColumn": 10,
                  "charOffset": 3692,
                  "charLength": 43,
                  "snippet": {
                    "text": "                }\r\n            }\r\n        }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.ToolFormatConverter.ConvertToStandardFormat(System.String,System.String,System.String,Microsoft.CodeAnalysis.Sarif.Writers.LoggingOptions,Microsoft.CodeAnalysis.Sarif.OptionallyEmittedData,System.String)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1822",
          "level": "warning",
          "message": {
            "text": "The 'this' parameter (or 'Me' in Visual Basic) of 'TSLintConverter.CreateResult(TSLintLogEntry)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/TSLintConverter.cs"
                },
                "region": {
                  "startLine": 62,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 61,
                  "startColumn": 1,
                  "endLine": 63,
                  "endColumn": 77,
                  "charOffset": 1899,
                  "charLength": 147,
                  "snippet": {
                    "text": "        internal Result CreateResult(TSLintLogEntry entry)\r\n        {\r\n            entry = entry ?? throw new ArgumentNullException(nameof(entry));"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.TSLintConverter.CreateResult(Microsoft.CodeAnalysis.Sarif.Converters.TSLintObjectModel.TSLintLogEntry)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2201",
          "level": "error",
          "message": {
            "text": "'TSLintLogReader.NormalizeEntries(JArray)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.",
            "messageId": "TooGeneric"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/TSLintLogReader.cs"
                },
                "region": {
                  "startLine": 105,
                  "snippet": {
                    "text": "                    throw new Exception("
                  }
                },
                "contextRegion": {
                  "startLine": 104,
                  "startColumn": 1,
                  "endLine": 106,
                  "endColumn": 39,
                  "charOffset": 3976,
                  "charLength": 145,
                  "snippet": {
                    "text": "                    var lineInfo = entryToken as IJsonLineInfo;\r\n                    throw new Exception(\r\n                        string.Format("
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.TSLintLogReader.NormalizeEntries(Newtonsoft.Json.Linq.JArray)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "TooGeneric"
          },
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1822",
          "level": "warning",
          "message": {
            "text": "The 'this' parameter (or 'Me' in Visual Basic) of 'TSLintLogReader.NormalizeEntries(JArray)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/TSLintLogReader.cs"
                },
                "region": {
                  "startLine": 95,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 94,
                  "startColumn": 1,
                  "endLine": 96,
                  "endColumn": 51,
                  "charOffset": 3670,
                  "charLength": 116,
                  "snippet": {
                    "text": "        private void NormalizeEntries(JArray entries)\r\n        {\r\n            foreach (JToken entryToken in entries)"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.TSLintLogReader.NormalizeEntries(Newtonsoft.Json.Linq.JArray)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2201",
          "level": "error",
          "message": {
            "text": "'TSLintLogReader.NormalizeFixProperty(JProperty)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.",
            "messageId": "TooGeneric"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/TSLintLogReader.cs"
                },
                "region": {
                  "startLine": 143,
                  "snippet": {
                    "text": "                throw new Exception("
                  }
                },
                "contextRegion": {
                  "startLine": 142,
                  "startColumn": 1,
                  "endLine": 144,
                  "endColumn": 35,
                  "charOffset": 5495,
                  "charLength": 136,
                  "snippet": {
                    "text": "                var lineInfo = fixValueToken as IJsonLineInfo;\r\n                throw new Exception(\r\n                    string.Format("
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.TSLintLogReader.NormalizeFixProperty(Newtonsoft.Json.Linq.JProperty)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "TooGeneric"
          },
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2201",
          "level": "error",
          "message": {
            "text": "'TSLintLogReader.NormalizeLog(JToken)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.",
            "messageId": "TooGeneric"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/TSLintLogReader.cs"
                },
                "region": {
                  "startLine": 84,
                  "snippet": {
                    "text": "                throw new Exception("
                  }
                },
                "contextRegion": {
                  "startLine": 83,
                  "startColumn": 1,
                  "endLine": 85,
                  "endColumn": 35,
                  "charOffset": 3330,
                  "charLength": 87,
                  "snippet": {
                    "text": "            {\r\n                throw new Exception(\r\n                    string.Format("
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.TSLintLogReader.NormalizeLog(Newtonsoft.Json.Linq.JToken)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "TooGeneric"
          },
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2202",
          "level": "warning",
          "message": {
            "text": "Object 'streamReader' can be disposed more than once in method 'TSLintLogReader.ReadLog(Stream)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 38"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/TSLintLogReader.cs"
                },
                "region": {
                  "startLine": 38,
                  "snippet": {
                    "text": "                    return (TSLintLog)Serializer.ReadObject(normalizedLogStream);"
                  }
                },
                "contextRegion": {
                  "startLine": 37,
                  "startColumn": 1,
                  "endLine": 39,
                  "endColumn": 18,
                  "charOffset": 1381,
                  "charLength": 119,
                  "snippet": {
                    "text": "                {\r\n                    return (TSLintLog)Serializer.ReadObject(normalizedLogStream);\r\n                }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.TSLintLogReader.ReadLog(System.IO.Stream)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA2202",
          "level": "warning",
          "message": {
            "text": "Object 'this' can be disposed more than once in method 'TSLintLogReader.ReadLog(Stream)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 38"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/TSLintLogReader.cs"
                },
                "region": {
                  "startLine": 38,
                  "snippet": {
                    "text": "                    return (TSLintLog)Serializer.ReadObject(normalizedLogStream);"
                  }
                },
                "contextRegion": {
                  "startLine": 37,
                  "startColumn": 1,
                  "endLine": 39,
                  "endColumn": 18,
                  "charOffset": 1381,
                  "charLength": 119,
                  "snippet": {
                    "text": "                {\r\n                    return (TSLintLog)Serializer.ReadObject(normalizedLogStream);\r\n                }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.TSLintLogReader.ReadLog(System.IO.Stream)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1002",
          "level": "error",
          "message": {
            "text": "Change 'TSLintLog' in 'TSLintLogReader.ReadLog(Stream)' to use Collection<T>, ReadOnlyCollection<T> or KeyedCollection<K,V>"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/TSLintLogReader.cs"
                },
                "region": {
                  "startLine": 27,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 26,
                  "startColumn": 1,
                  "endLine": 28,
                  "endColumn": 77,
                  "charOffset": 770,
                  "charLength": 144,
                  "snippet": {
                    "text": "        public override TSLintLog ReadLog(Stream input)\r\n        {\r\n            input = input ?? throw new ArgumentNullException(nameof(input));"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.TSLintLogReader.ReadLog(System.IO.Stream)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1710",
          "level": "error",
          "message": {
            "text": "Rename 'Category' to end in 'Dictionary'."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel.Category"
            }
          ],
          "properties": {
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2237",
          "level": "warning",
          "message": {
            "text": "Add [Serializable] to 'Category' as this type implements ISerializable."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel.Category"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'Category.ReadXml(XmlReader)', validate parameter 'reader' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/PREFastObjectModel/Category.cs"
                },
                "region": {
                  "startLine": 19,
                  "snippet": {
                    "text": "            bool wasEmpty = reader.IsEmptyElement;"
                  }
                },
                "contextRegion": {
                  "startLine": 18,
                  "startColumn": 1,
                  "endLine": 20,
                  "endColumn": 27,
                  "charOffset": 505,
                  "charLength": 89,
                  "snippet": {
                    "text": "        {\r\n            bool wasEmpty = reader.IsEmptyElement;\r\n            reader.Read();"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel.Category.ReadXml(System.Xml.XmlReader)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'Defect.Category' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/PREFastObjectModel/Defect.cs"
                },
                "region": {
                  "startLine": 35,
                  "snippet": {
                    "text": "        public Category Category { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 34,
                  "startColumn": 1,
                  "endLine": 36,
                  "endColumn": 6,
                  "charOffset": 872,
                  "charLength": 87,
                  "snippet": {
                    "text": "        [XmlElement(\"CATEGORY\")]\r\n        public Category Category { get; set; }\r\n    }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel.Defect.Category"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Funcline' in member name 'Defect.Funcline' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/PREFastObjectModel/Defect.cs"
                },
                "region": {
                  "startLine": 23,
                  "snippet": {
                    "text": "        public string Funcline { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 22,
                  "startColumn": 1,
                  "endLine": 24,
                  "endColumn": 1,
                  "charOffset": 549,
                  "charLength": 80,
                  "snippet": {
                    "text": "        [XmlElement(\"FUNCLINE\")]\r\n        public string Funcline { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel.Defect.Funcline"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Funcline#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1709",
          "level": "error",
          "message": {
            "text": "Correct the casing of 'SFA' in member name 'Defect.SFA' by changing it to 'Sfa'.",
            "messageId": "Member"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/PREFastObjectModel/Defect.cs"
                },
                "region": {
                  "startLine": 8,
                  "snippet": {
                    "text": "        public SFA SFA { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 7,
                  "startColumn": 1,
                  "endLine": 9,
                  "endColumn": 1,
                  "charOffset": 140,
                  "charLength": 67,
                  "snippet": {
                    "text": "        [XmlElement(\"SFA\")]\r\n        public SFA SFA { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel.Defect.SFA"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "SFA#Member"
          },
          "properties": {
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'DefectList.Defects' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/PREFastObjectModel/DefectList.cs"
                },
                "region": {
                  "startLine": 10,
                  "snippet": {
                    "text": "        public List<Defect> Defects { get; set; } = new List<Defect>();"
                  }
                },
                "contextRegion": {
                  "startLine": 9,
                  "startColumn": 1,
                  "endLine": 11,
                  "endColumn": 6,
                  "charOffset": 205,
                  "charLength": 110,
                  "snippet": {
                    "text": "        [XmlElement(\"DEFECT\")]\r\n        public List<Defect> Defects { get; set; } = new List<Defect>();\r\n    }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel.DefectList.Defects"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1002",
          "level": "error",
          "message": {
            "text": "Change 'List<Defect>' in 'DefectList.Defects' to use Collection<T>, ReadOnlyCollection<T> or KeyedCollection<K,V>"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/PREFastObjectModel/DefectList.cs"
                },
                "region": {
                  "startLine": 10,
                  "snippet": {
                    "text": "        public List<Defect> Defects { get; set; } = new List<Defect>();"
                  }
                },
                "contextRegion": {
                  "startLine": 9,
                  "startColumn": 1,
                  "endLine": 11,
                  "endColumn": 6,
                  "charOffset": 205,
                  "charLength": 110,
                  "snippet": {
                    "text": "        [XmlElement(\"DEFECT\")]\r\n        public List<Defect> Defects { get; set; } = new List<Defect>();\r\n    }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel.DefectList.Defects"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1709",
          "level": "error",
          "message": {
            "text": "Correct the casing of 'PRE' in type name 'PREFastPath' by changing it to 'Pre'.",
            "messageId": "Type"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel.PREFastPath"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "PRE#Type"
          },
          "properties": {
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'PREFastPath.SFAs' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/PREFastObjectModel/PREFastPath.cs"
                },
                "region": {
                  "startLine": 9,
                  "snippet": {
                    "text": "        public List<SFA> SFAs { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 8,
                  "startColumn": 1,
                  "endLine": 10,
                  "endColumn": 6,
                  "charOffset": 180,
                  "charLength": 79,
                  "snippet": {
                    "text": "        [XmlElement(\"SFA\")]\r\n        public List<SFA> SFAs { get; set; }\r\n    }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel.PREFastPath.SFAs"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1002",
          "level": "error",
          "message": {
            "text": "Change 'List<SFA>' in 'PREFastPath.SFAs' to use Collection<T>, ReadOnlyCollection<T> or KeyedCollection<K,V>"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/PREFastObjectModel/PREFastPath.cs"
                },
                "region": {
                  "startLine": 9,
                  "snippet": {
                    "text": "        public List<SFA> SFAs { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 8,
                  "startColumn": 1,
                  "endLine": 10,
                  "endColumn": 6,
                  "charOffset": 180,
                  "charLength": 79,
                  "snippet": {
                    "text": "        [XmlElement(\"SFA\")]\r\n        public List<SFA> SFAs { get; set; }\r\n    }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel.PREFastPath.SFAs"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1709",
          "level": "error",
          "message": {
            "text": "Correct the casing of 'SFAs' in member name 'PREFastPath.SFAs' by changing it to 'Sfas'.",
            "messageId": "Member"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/PREFastObjectModel/PREFastPath.cs"
                },
                "region": {
                  "startLine": 9,
                  "snippet": {
                    "text": "        public List<SFA> SFAs { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 8,
                  "startColumn": 1,
                  "endLine": 10,
                  "endColumn": 6,
                  "charOffset": 180,
                  "charLength": 79,
                  "snippet": {
                    "text": "        [XmlElement(\"SFA\")]\r\n        public List<SFA> SFAs { get; set; }\r\n    }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel.PREFastPath.SFAs"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "SFAs#Member"
          },
          "properties": {
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1709",
          "level": "error",
          "message": {
            "text": "Correct the casing of 'SFA' in type name 'SFA' by changing it to 'Sfa'.",
            "messageId": "Type"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PREFastObjectModel.SFA"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "SFA#Type"
          },
          "properties": {
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Pylint' in type name 'PylintLog'.",
            "messageId": "Type"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PylintObjectModel.PylintLog"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Pylint#Type"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1710",
          "level": "error",
          "message": {
            "text": "Rename 'PylintLog' to end in 'Collection'."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PylintObjectModel.PylintLog"
            }
          ],
          "properties": {
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Pylint' in type name 'PylintLogEntry'.",
            "messageId": "Type"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PylintObjectModel.PylintLogEntry"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Pylint#Type"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1721",
          "level": "error",
          "message": {
            "text": "The property name 'PylintLogEntry.Type' is confusing given the existence of inherited method 'object.GetType()'. Rename or remove this property.",
            "messageId": "BaseType"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/PylintObjectModel/PylintLogEntry.cs"
                },
                "region": {
                  "startLine": 11,
                  "snippet": {
                    "text": "        public string Type { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 10,
                  "startColumn": 1,
                  "endLine": 12,
                  "endColumn": 1,
                  "charOffset": 293,
                  "charLength": 74,
                  "snippet": {
                    "text": "        [JsonProperty(\"type\")]\r\n        public string Type { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PylintObjectModel.PylintLogEntry.Type"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "BaseType"
          },
          "properties": {
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Pylint' in type name 'PylintLogReader'.",
            "messageId": "Type"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PylintObjectModel.PylintLogReader"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Pylint#Type"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1002",
          "level": "error",
          "message": {
            "text": "Change 'PylintLog' in 'PylintLogReader.ReadLog(Stream)' to use Collection<T>, ReadOnlyCollection<T> or KeyedCollection<K,V>"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/PylintObjectModel/PylintLogReader.cs"
                },
                "region": {
                  "startLine": 12,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 11,
                  "startColumn": 1,
                  "endLine": 13,
                  "endColumn": 31,
                  "charOffset": 335,
                  "charLength": 98,
                  "snippet": {
                    "text": "        public override PylintLog ReadLog(Stream input)\r\n        {\r\n            string pylintText;"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.PylintObjectModel.PylintLogReader.ReadLog(System.IO.Stream)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1710",
          "level": "error",
          "message": {
            "text": "Rename 'TSLintLog' to end in 'Collection'."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.TSLintObjectModel.TSLintLog"
            }
          ],
          "properties": {
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'TSLintLogEntry.Fixes' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Converters/TSLintObjectModel/TSLintLogEntry.cs"
                },
                "region": {
                  "startLine": 31,
                  "snippet": {
                    "text": "        public IList<TSLintLogFix> Fixes { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 30,
                  "startColumn": 1,
                  "endLine": 32,
                  "endColumn": 6,
                  "charOffset": 1198,
                  "charLength": 142,
                  "snippet": {
                    "text": "        [DataMember(Name = \"fix\", IsRequired = false, EmitDefaultValue = true)]\r\n        public IList<TSLintLogFix> Fixes { get; set; }\r\n    }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.TSLintObjectModel.TSLintLogEntry.Fixes"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1703",
          "level": "warning",
          "message": {
            "text": "In resource 'Microsoft.CodeAnalysis.Sarif.Converters.ConverterResources.resx', referenced by name 'CppCheckCppCheckElementMissing', correct the spelling of 'Cpp' in string value 'CppCheck file did not start with \"results/cppcheck\" element with version information.'.",
            "messageId": "StringResource"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.ConverterResources.resources"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Cpp#StringResource"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1703",
          "level": "warning",
          "message": {
            "text": "In resource 'Microsoft.CodeAnalysis.Sarif.Converters.ConverterResources.resx', referenced by name 'CppCheckElementNotError', correct the spelling of 'Cpp' in string value 'Could not parse CppCheck error node; element name was not error.'.",
            "messageId": "StringResource"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.ConverterResources.resources"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Cpp#StringResource"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1703",
          "level": "warning",
          "message": {
            "text": "In resource 'Microsoft.CodeAnalysis.Sarif.Converters.ConverterResources.resx', referenced by name 'CppCheckErrorsElementMissing', correct the spelling of 'Cpp' in string value 'CppCheck file did not contain the errors element in the expected location.'.",
            "messageId": "StringResource"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.ConverterResources.resources"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Cpp#StringResource"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1703",
          "level": "warning",
          "message": {
            "text": "In resource 'Microsoft.CodeAnalysis.Sarif.Converters.ConverterResources.resx', referenced by name 'CppCheckLocationElementNameIncorrect', correct the spelling of 'Cpp' in string value 'Could not parse CppCheck location node; element name was not 'location'.'.",
            "messageId": "StringResource"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.ConverterResources.resources"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Cpp#StringResource"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1703",
          "level": "warning",
          "message": {
            "text": "In resource 'Microsoft.CodeAnalysis.Sarif.Converters.ConverterResources.resx', referenced by name 'CppCheckLocationMissingLine', correct the spelling of 'Cpp' in string value 'The `line` attribute for a CppCheck <location> was not set.'.",
            "messageId": "StringResource"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.ConverterResources.resources"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Cpp#StringResource"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1703",
          "level": "warning",
          "message": {
            "text": "In resource 'Microsoft.CodeAnalysis.Sarif.Converters.ConverterResources.resx', referenced by name 'CppCheckLocationMissingName', correct the spelling of 'Cpp' in string value 'The `file` attribute for a CppCheck <location> was not set.'.",
            "messageId": "StringResource"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.ConverterResources.resources"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Cpp#StringResource"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1703",
          "level": "warning",
          "message": {
            "text": "In resource 'Microsoft.CodeAnalysis.Sarif.Converters.ConverterResources.resx', referenced by name 'CppCheckLocationNameEmpty', correct the spelling of 'Cpp' in string value 'The `file` value for a CppCheckLocation was empty.'.",
            "messageId": "StringResource"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.ConverterResources.resources"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Cpp#StringResource"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1703",
          "level": "warning",
          "message": {
            "text": "In resource 'Microsoft.CodeAnalysis.Sarif.Converters.ConverterResources.resx', referenced by name 'CppCheckLocationNegativeLine', correct the spelling of 'Cpp' in string value 'The `line` value for a CppCheckLocation must be positive.'.",
            "messageId": "StringResource"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.ConverterResources.resources"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Cpp#StringResource"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1703",
          "level": "warning",
          "message": {
            "text": "In resource 'Microsoft.CodeAnalysis.Sarif.Converters.ConverterResources.resx', referenced by name 'CppCheckMissingLocation', correct the spelling of 'Cpp' in string value 'A CppCheck entry must have a nonzero number of locations.'.",
            "messageId": "StringResource"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.ConverterResources.resources"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Cpp#StringResource"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1703",
          "level": "warning",
          "message": {
            "text": "In resource 'Microsoft.CodeAnalysis.Sarif.Converters.ConverterResources.resx', referenced by name 'CppCheckCppCheckElementMissing', correct the spelling of 'cppcheck' in string value 'CppCheck file did not start with \"results/cppcheck\" element with version information.'.",
            "messageId": "StringResource"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Converters.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.converters.dll!Microsoft.CodeAnalysis.Sarif.Converters.ConverterResources.resources"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "cppcheck#StringResource"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2243",
          "level": "warning",
          "message": {
            "text": "In the constructor of 'AssemblyInformationalVersionAttribute', change the value of argument 'informationalVersion', which is currently \"2.0.0-csd.1.0.1\", to something that can be correctly parsed as 'Version'."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in assembly name 'Sarif.dll'.",
            "messageId": "Assembly"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Assembly"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'Attachment.Rectangles' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Attachment.cs"
                },
                "region": {
                  "startLine": 56,
                  "snippet": {
                    "text": "        public IList<Rectangle> Rectangles { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 55,
                  "startColumn": 1,
                  "endLine": 57,
                  "endColumn": 1,
                  "charOffset": 2005,
                  "charLength": 147,
                  "snippet": {
                    "text": "        [DataMember(Name = \"rectangles\", IsRequired = false, EmitDefaultValue = false)]\r\n        public IList<Rectangle> Rectangles { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Attachment.Rectangles"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'Attachment.Regions' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Attachment.cs"
                },
                "region": {
                  "startLine": 50,
                  "snippet": {
                    "text": "        public IList<Region> Regions { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 49,
                  "startColumn": 1,
                  "endLine": 51,
                  "endColumn": 1,
                  "charOffset": 1735,
                  "charLength": 138,
                  "snippet": {
                    "text": "        [DataMember(Name = \"regions\", IsRequired = false, EmitDefaultValue = false)]\r\n        public IList<Region> Regions { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Attachment.Regions"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'CodeFlow.CodeFlow(CodeFlow)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nCodeFlow..ctor(CodeFlow)\r\nCodeFlow.Init(Message, IEnumerable<ThreadFlow>, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/CodeFlow.cs"
                },
                "region": {
                  "startLine": 86,
                  "snippet": {
                    "text": "        public CodeFlow(CodeFlow other)"
                  }
                },
                "contextRegion": {
                  "startLine": 85,
                  "startColumn": 1,
                  "endLine": 87,
                  "endColumn": 10,
                  "charOffset": 3488,
                  "charLength": 76,
                  "snippet": {
                    "text": "        /// </exception>\r\n        public CodeFlow(CodeFlow other)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.CodeFlow..ctor(Microsoft.CodeAnalysis.Sarif.CodeFlow)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'CodeFlow.CodeFlow(Message, IEnumerable<ThreadFlow>, IDictionary<string, SerializedPropertyInfo>)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nCodeFlow..ctor(Message, IEnumerable<ThreadFlow>, IDictionary<String,SerializedPropertyInfo>)\r\nCodeFlow.Init(Message, IEnumerable<ThreadFlow>, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/CodeFlow.cs"
                },
                "region": {
                  "startLine": 72,
                  "snippet": {
                    "text": "        public CodeFlow(Message message, IEnumerable<ThreadFlow> threadFlows, IDictionary<string, SerializedPropertyInfo> properties)"
                  }
                },
                "contextRegion": {
                  "startLine": 71,
                  "startColumn": 1,
                  "endLine": 73,
                  "endColumn": 10,
                  "charOffset": 2857,
                  "charLength": 166,
                  "snippet": {
                    "text": "        /// </param>\r\n        public CodeFlow(Message message, IEnumerable<ThreadFlow> threadFlows, IDictionary<string, SerializedPropertyInfo> properties)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.CodeFlow..ctor(Microsoft.CodeAnalysis.Sarif.Message,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.ThreadFlow>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'CodeFlow.ThreadFlows' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/CodeFlow.cs"
                },
                "region": {
                  "startLine": 45,
                  "snippet": {
                    "text": "        public IList<ThreadFlow> ThreadFlows { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 44,
                  "startColumn": 1,
                  "endLine": 46,
                  "endColumn": 1,
                  "charOffset": 1677,
                  "charLength": 123,
                  "snippet": {
                    "text": "        [DataMember(Name = \"threadFlows\", IsRequired = true)]\r\n        public IList<ThreadFlow> ThreadFlows { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.CodeFlow.ThreadFlows"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1822",
          "level": "warning",
          "message": {
            "text": "The 'this' parameter (or 'Me' in Visual Basic) of 'ConsoleLogger.FormatNotificationMessage(Notification)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/ConsoleLogger.cs"
                },
                "region": {
                  "startLine": 257,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 256,
                  "startColumn": 1,
                  "endLine": 258,
                  "endColumn": 37,
                  "charOffset": 8248,
                  "charLength": 124,
                  "snippet": {
                    "text": "        private string FormatNotificationMessage(Notification notification)\r\n        {\r\n            string issueType = null;"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.ConsoleLogger.FormatNotificationMessage(Microsoft.CodeAnalysis.Sarif.Notification)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "In method 'ConsoleLogger.NormalizeMessage(string, bool)', correct the spelling of 'enquote' in parameter name 'enquote' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "MemberParameter"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/ConsoleLogger.cs"
                },
                "region": {
                  "startLine": 212,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 211,
                  "startColumn": 1,
                  "endLine": 213,
                  "endColumn": 33,
                  "charOffset": 6800,
                  "charLength": 120,
                  "snippet": {
                    "text": "        public static string NormalizeMessage(string message, bool enquote)\r\n        {\r\n            if (message == null)"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.ConsoleLogger.NormalizeMessage(System.String,System.Boolean)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "enquote#MemberParameter"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'Conversion.AnalysisToolLogFiles' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Conversion.cs"
                },
                "region": {
                  "startLine": 50,
                  "snippet": {
                    "text": "        public IList<FileLocation> AnalysisToolLogFiles { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 49,
                  "startColumn": 1,
                  "endLine": 51,
                  "endColumn": 1,
                  "charOffset": 1829,
                  "charLength": 170,
                  "snippet": {
                    "text": "        [DataMember(Name = \"analysisToolLogFiles\", IsRequired = false, EmitDefaultValue = false)]\r\n        public IList<FileLocation> AnalysisToolLogFiles { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Conversion.AnalysisToolLogFiles"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'Edge.Edge(Edge)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nEdge..ctor(Edge)\r\nEdge.Init(String, Message, String, String, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Edge.cs"
                },
                "region": {
                  "startLine": 104,
                  "snippet": {
                    "text": "        public Edge(Edge other)"
                  }
                },
                "contextRegion": {
                  "startLine": 103,
                  "startColumn": 1,
                  "endLine": 105,
                  "endColumn": 10,
                  "charOffset": 4054,
                  "charLength": 68,
                  "snippet": {
                    "text": "        /// </exception>\r\n        public Edge(Edge other)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Edge..ctor(Microsoft.CodeAnalysis.Sarif.Edge)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'Edge.Edge(string, Message, string, string, IDictionary<string, SerializedPropertyInfo>)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nEdge..ctor(String, Message, String, String, IDictionary<String,SerializedPropertyInfo>)\r\nEdge.Init(String, Message, String, String, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Edge.cs"
                },
                "region": {
                  "startLine": 90,
                  "snippet": {
                    "text": "        public Edge(string id, Message label, string sourceNodeId, string targetNodeId, IDictionary<string, SerializedPropertyInfo> properties)"
                  }
                },
                "contextRegion": {
                  "startLine": 89,
                  "startColumn": 1,
                  "endLine": 91,
                  "endColumn": 10,
                  "charOffset": 3400,
                  "charLength": 176,
                  "snippet": {
                    "text": "        /// </param>\r\n        public Edge(string id, Message label, string sourceNodeId, string targetNodeId, IDictionary<string, SerializedPropertyInfo> properties)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Edge..ctor(System.String,Microsoft.CodeAnalysis.Sarif.Message,System.String,System.String,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'EdgeTraversal.EdgeTraversal(EdgeTraversal)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nEdgeTraversal..ctor(EdgeTraversal)\r\nEdgeTraversal.Init(String, Message, IDictionary<String,String>, Int32, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/EdgeTraversal.cs"
                },
                "region": {
                  "startLine": 104,
                  "snippet": {
                    "text": "        public EdgeTraversal(EdgeTraversal other)"
                  }
                },
                "contextRegion": {
                  "startLine": 103,
                  "startColumn": 1,
                  "endLine": 105,
                  "endColumn": 10,
                  "charOffset": 4344,
                  "charLength": 86,
                  "snippet": {
                    "text": "        /// </exception>\r\n        public EdgeTraversal(EdgeTraversal other)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.EdgeTraversal..ctor(Microsoft.CodeAnalysis.Sarif.EdgeTraversal)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'EdgeTraversal.EdgeTraversal(string, Message, IDictionary<string, string>, int, IDictionary<string, SerializedPropertyInfo>)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nEdgeTraversal..ctor(String, Message, IDictionary<String,String>, Int32, IDictionary<String,SerializedPropertyInfo>)\r\nEdgeTraversal.Init(String, Message, IDictionary<String,String>, Int32, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/EdgeTraversal.cs"
                },
                "region": {
                  "startLine": 90,
                  "snippet": {
                    "text": "        public EdgeTraversal(string edgeId, Message message, IDictionary<string, string> finalState, int stepOverEdgeCount, IDictionary<string, SerializedPropertyInfo> properties)"
                  }
                },
                "contextRegion": {
                  "startLine": 89,
                  "startColumn": 1,
                  "endLine": 91,
                  "endColumn": 10,
                  "charOffset": 3636,
                  "charLength": 212,
                  "snippet": {
                    "text": "        /// </param>\r\n        public EdgeTraversal(string edgeId, Message message, IDictionary<string, string> finalState, int stepOverEdgeCount, IDictionary<string, SerializedPropertyInfo> properties)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.EdgeTraversal..ctor(System.String,Microsoft.CodeAnalysis.Sarif.Message,System.Collections.Generic.IDictionary`2<System.String,System.String>,System.Int32,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'EdgeTraversal.FinalState' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/EdgeTraversal.cs"
                },
                "region": {
                  "startLine": 51,
                  "snippet": {
                    "text": "        public IDictionary<string, string> FinalState { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 50,
                  "startColumn": 1,
                  "endLine": 52,
                  "endColumn": 1,
                  "charOffset": 1826,
                  "charLength": 158,
                  "snippet": {
                    "text": "        [DataMember(Name = \"finalState\", IsRequired = false, EmitDefaultValue = false)]\r\n        public IDictionary<string, string> FinalState { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.EdgeTraversal.FinalState"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'ExceptionData.Create(Exception)', validate parameter 'exception' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Core/ExceptionData.cs"
                },
                "region": {
                  "startLine": 16,
                  "snippet": {
                    "text": "            return new ExceptionData"
                  }
                },
                "contextRegion": {
                  "startLine": 15,
                  "startColumn": 1,
                  "endLine": 17,
                  "endColumn": 14,
                  "charOffset": 529,
                  "charLength": 62,
                  "snippet": {
                    "text": "        {\r\n            return new ExceptionData\r\n            {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.ExceptionData.Create(System.Exception)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'ExceptionData.InnerExceptions' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/ExceptionData.cs"
                },
                "region": {
                  "startLine": 53,
                  "snippet": {
                    "text": "        public IList<ExceptionData> InnerExceptions { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 52,
                  "startColumn": 1,
                  "endLine": 54,
                  "endColumn": 1,
                  "charOffset": 2038,
                  "charLength": 161,
                  "snippet": {
                    "text": "        [DataMember(Name = \"innerExceptions\", IsRequired = false, EmitDefaultValue = false)]\r\n        public IList<ExceptionData> InnerExceptions { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.ExceptionData.InnerExceptions"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'ExtensionMethods.GetFileName(this Uri)', validate parameter 'uri' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/ExtensionMethods.cs"
                },
                "region": {
                  "startLine": 46,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 45,
                  "startColumn": 1,
                  "endLine": 47,
                  "endColumn": 82,
                  "charOffset": 1590,
                  "charLength": 201,
                  "snippet": {
                    "text": "        public static bool Includes(this LoggingOptions loggingOptions, LoggingOptions otherLoggingOptions)\r\n        {\r\n            return (loggingOptions & otherLoggingOptions) == otherLoggingOptions;"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.ExtensionMethods.GetFileName(System.Uri)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1726",
          "level": "error",
          "message": {
            "text": "Replace the term 'Flags' in member name 'ExtensionMethods.ToFlags(this IEnumerable<OptionallyEmittedData>)' with an appropriate alternate or remove it entirely.",
            "messageId": "MemberNoAlternate"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/ExtensionMethods.cs"
                },
                "region": {
                  "startLine": 24,
                  "snippet": {
                    "text": "        public static Message ToMessage(this string text)"
                  }
                },
                "contextRegion": {
                  "startLine": 23,
                  "startColumn": 1,
                  "endLine": 25,
                  "endColumn": 10,
                  "charOffset": 752,
                  "charLength": 70,
                  "snippet": {
                    "text": "\r\n        public static Message ToMessage(this string text)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.ExtensionMethods.ToFlags(System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.OptionallyEmittedData>)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Flags#MemberNoAlternate"
          },
          "properties": {
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'FileChange.Replacements' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/FileChange.cs"
                },
                "region": {
                  "startLine": 44,
                  "snippet": {
                    "text": "        public IList<Replacement> Replacements { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 45,
                  "endColumn": 1,
                  "charOffset": 1539,
                  "charLength": 126,
                  "snippet": {
                    "text": "        [DataMember(Name = \"replacements\", IsRequired = true)]\r\n        public IList<Replacement> Replacements { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.FileChange.Replacements"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'FileData.FileData(FileData)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nFileData..ctor(FileData)\r\nFileData.Init(FileLocation, String, Int32, Int32, FileRoles, String, FileContent, String, IEnumerable<Hash>, DateTime, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/FileData.cs"
                },
                "region": {
                  "startLine": 158,
                  "snippet": {
                    "text": "        /// <exception cref=\"ArgumentNullException\">"
                  }
                },
                "contextRegion": {
                  "startLine": 157,
                  "startColumn": 1,
                  "endLine": 159,
                  "endColumn": 57,
                  "charOffset": 6896,
                  "charLength": 132,
                  "snippet": {
                    "text": "        /// </param>\r\n        /// <exception cref=\"ArgumentNullException\">\r\n        /// Thrown if <paramref name=\"other\" /> is null."
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.FileData..ctor(Microsoft.CodeAnalysis.Sarif.FileData)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'FileData.FileData(FileLocation, string, int, int, FileRoles, string, FileContent, string, IEnumerable<Hash>, DateTime, IDictionary<string, SerializedPropertyInfo>)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nFileData..ctor(FileLocation, String, Int32, Int32, FileRoles, String, FileContent, String, IEnumerable<Hash>, DateTime, IDictionary<String,SerializedPropertyInfo>)\r\nFileData.Init(FileLocation, String, Int32, Int32, FileRoles, String, FileContent, String, IEnumerable<Hash>, DateTime, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/FileData.cs"
                },
                "region": {
                  "startLine": 144,
                  "snippet": {
                    "text": "        /// <param name=\"properties\">"
                  }
                },
                "contextRegion": {
                  "startLine": 143,
                  "startColumn": 1,
                  "endLine": 145,
                  "endColumn": 83,
                  "charOffset": 6031,
                  "charLength": 143,
                  "snippet": {
                    "text": "        /// </param>\r\n        /// <param name=\"properties\">\r\n        /// An initialization value for the <see cref=\"P: Properties\" /> property."
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.FileData..ctor(Microsoft.CodeAnalysis.Sarif.FileLocation,System.String,System.Int32,System.Int32,Microsoft.CodeAnalysis.Sarif.FileRoles,System.String,Microsoft.CodeAnalysis.Sarif.FileContent,System.String,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Hash>,System.DateTime,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1026",
          "level": "error",
          "message": {
            "text": "Replace method 'FileData.Create(Uri, OptionallyEmittedData, string, Encoding, IFileSystem)' with an overload that supplies all default arguments."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Core/FileData.cs"
                },
                "region": {
                  "startLine": 23,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 22,
                  "startColumn": 1,
                  "endLine": 24,
                  "endColumn": 79,
                  "charOffset": 759,
                  "charLength": 133,
                  "snippet": {
                    "text": "            IFileSystem fileSystem = null)\r\n        {\r\n            if (uri == null) { throw new ArgumentNullException(nameof(uri)); }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.FileData.Create(System.Uri,Microsoft.CodeAnalysis.Sarif.OptionallyEmittedData,System.String,System.Text.Encoding,Microsoft.CodeAnalysis.Sarif.IFileSystem)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'FileData.Hashes' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/FileData.cs"
                },
                "region": {
                  "startLine": 87,
                  "snippet": {
                    "text": "        /// </summary>"
                  }
                },
                "contextRegion": {
                  "startLine": 86,
                  "startColumn": 1,
                  "endLine": 88,
                  "endColumn": 84,
                  "charOffset": 3276,
                  "charLength": 266,
                  "snippet": {
                    "text": "        /// An array of hash objects, each of which specifies a hashed value for the file, along with the name of the hash function used to compute the hash.\r\n        /// </summary>\r\n        [DataMember(Name = \"hashes\", IsRequired = false, EmitDefaultValue = false)]"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.FileData.Hashes"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1502",
          "level": "warning",
          "message": {
            "text": "'FileDataEqualityComparer.Equals(FileData, FileData)' has a cyclomatic complexity of 27. Rewrite or refactor the method to reduce complexity to 25."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/FileDataEqualityComparer.cs"
                },
                "region": {
                  "startLine": 20,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 19,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 46,
                  "charOffset": 720,
                  "charLength": 115,
                  "snippet": {
                    "text": "        public bool Equals(FileData left, FileData right)\r\n        {\r\n            if (ReferenceEquals(left, right))"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.FileDataEqualityComparer.Equals(Microsoft.CodeAnalysis.Sarif.FileData,Microsoft.CodeAnalysis.Sarif.FileData)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Maintainability",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1054",
          "level": "error",
          "message": {
            "text": "Change the type of parameter 'uriBaseId' of method 'FileLocation.FileLocation(Uri, string)' from string to System.Uri, or provide an overload of 'FileLocation.FileLocation(Uri, string)', that allows 'uriBaseId' to be passed as a System.Uri object."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/FileLocation.cs"
                },
                "region": {
                  "startLine": 62,
                  "snippet": {
                    "text": "        /// An initialization value for the <see cref=\"P: UriBaseId\" /> property."
                  }
                },
                "contextRegion": {
                  "startLine": 61,
                  "startColumn": 1,
                  "endLine": 63,
                  "endColumn": 21,
                  "charOffset": 2250,
                  "charLength": 141,
                  "snippet": {
                    "text": "        /// <param name=\"uriBaseId\">\r\n        /// An initialization value for the <see cref=\"P: UriBaseId\" /> property.\r\n        /// </param>"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.FileLocation..ctor(System.Uri,System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "1#"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1307",
          "level": "error",
          "message": {
            "text": "Because the behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings, replace this call in 'FileLocation.CreateFromFilesDictionaryKey(string)' with a call to 'string.StartsWith(string, StringComparison)'. If the result of 'string.StartsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Core/FileLocation.cs"
                },
                "region": {
                  "startLine": 53,
                  "snippet": {
                    "text": "            if (key.StartsWith(\"#\"))"
                  }
                },
                "contextRegion": {
                  "startLine": 52,
                  "startColumn": 1,
                  "endLine": 54,
                  "endColumn": 14,
                  "charOffset": 2317,
                  "charLength": 53,
                  "snippet": {
                    "text": "\r\n            if (key.StartsWith(\"#\"))\r\n            {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.FileLocation.CreateFromFilesDictionaryKey(System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.String.StartsWith(System.String)"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'FileLocation.CreateFromFilesDictionaryKey(string)', validate parameter 'key' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Core/FileLocation.cs"
                },
                "region": {
                  "startLine": 53,
                  "snippet": {
                    "text": "            if (key.StartsWith(\"#\"))"
                  }
                },
                "contextRegion": {
                  "startLine": 52,
                  "startColumn": 1,
                  "endLine": 54,
                  "endColumn": 14,
                  "charOffset": 2317,
                  "charLength": 53,
                  "snippet": {
                    "text": "\r\n            if (key.StartsWith(\"#\"))\r\n            {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.FileLocation.CreateFromFilesDictionaryKey(System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA2234",
          "level": "warning",
          "message": {
            "text": "Modify 'FileLocation.TryReconstructAbsoluteUri(IDictionary<string, Uri>, out Uri)' to call 'Uri.Uri(Uri, Uri)' instead of 'Uri.Uri(Uri, string)'."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Core/FileLocation.cs"
                },
                "region": {
                  "startLine": 22,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 23,
                  "endColumn": 68,
                  "charOffset": 1049,
                  "charLength": 191,
                  "snippet": {
                    "text": "        public bool TryReconstructAbsoluteUri(IDictionary<string, Uri> originalUriBaseIds, out Uri resolvedUri)\r\n        {\r\n            resolvedUri = this.Uri.IsAbsoluteUri ? this.Uri : null;"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.FileLocation.TryReconstructAbsoluteUri(System.Collections.Generic.IDictionary`2<System.String,System.Uri>,System.Uri&)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1056",
          "level": "error",
          "message": {
            "text": "Change the type of property 'FileLocation.UriBaseId' from string to System.Uri."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/FileLocation.cs"
                },
                "region": {
                  "startLine": 44,
                  "snippet": {
                    "text": "        /// </summary>"
                  }
                },
                "contextRegion": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 45,
                  "endColumn": 87,
                  "charOffset": 1479,
                  "charLength": 251,
                  "snippet": {
                    "text": "        /// A string which indirectly specifies the absolute URI with respect to which a relative URI in the \"uri\" property is interpreted.\r\n        /// </summary>\r\n        [DataMember(Name = \"uriBaseId\", IsRequired = false, EmitDefaultValue = false)]"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.FileLocation.UriBaseId"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1823",
          "level": "warning",
          "message": {
            "text": "It appears that field 'FileRegionsCache._filePathToNewLineIndexMap' is never used or is only ever assigned to. Use this field or remove it."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.FileRegionsCache._filePathToNewLineIndexMap"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1823",
          "level": "warning",
          "message": {
            "text": "It appears that field 'FileRegionsCache._run' is never used or is only ever assigned to. Use this field or remove it."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.FileRegionsCache._run"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1822",
          "level": "warning",
          "message": {
            "text": "The 'this' parameter (or 'Me' in Visual Basic) of 'FileRegionsCache.PopulateCharLength(NewLineIndex, Region)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/FileRegionsCache.cs"
                },
                "region": {
                  "startLine": 259,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 258,
                  "startColumn": 1,
                  "endLine": 260,
                  "endColumn": 95,
                  "charOffset": 11630,
                  "charLength": 185,
                  "snippet": {
                    "text": "        private void PopulateCharLength(NewLineIndex lineIndex, Region region)\r\n        {\r\n            // Populated at this point: StartLine, EndLine, StartColumn, EndColumn, CharOffset"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.FileRegionsCache.PopulateCharLength(Microsoft.CodeAnalysis.Sarif.NewLineIndex,Microsoft.CodeAnalysis.Sarif.Region)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1822",
          "level": "warning",
          "message": {
            "text": "The 'this' parameter (or 'Me' in Visual Basic) of 'FileRegionsCache.PopulateEndColumn(NewLineIndex, Region, string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/FileRegionsCache.cs"
                },
                "region": {
                  "startLine": 213,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 212,
                  "startColumn": 1,
                  "endLine": 214,
                  "endColumn": 72,
                  "charOffset": 9732,
                  "charLength": 178,
                  "snippet": {
                    "text": "        private void PopulateEndColumn(NewLineIndex lineIndex, Region region, string fileText)\r\n        {\r\n            // Populated at this point: StartLine, EndLine, StartColumn"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.FileRegionsCache.PopulateEndColumn(Microsoft.CodeAnalysis.Sarif.NewLineIndex,Microsoft.CodeAnalysis.Sarif.Region,System.String)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1822",
          "level": "warning",
          "message": {
            "text": "The 'this' parameter (or 'Me' in Visual Basic) of 'FileRegionsCache.PopulatePropertiesFromCharOffsetAndLength(NewLineIndex, Region)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/FileRegionsCache.cs"
                },
                "region": {
                  "startLine": 129,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 128,
                  "startColumn": 1,
                  "endLine": 130,
                  "endColumn": 50,
                  "charOffset": 5767,
                  "charLength": 166,
                  "snippet": {
                    "text": "        private void PopulatePropertiesFromCharOffsetAndLength(NewLineIndex newLineIndex, Region region)\r\n        {\r\n            Debug.Assert(!region.IsBinaryRegion);"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.FileRegionsCache.PopulatePropertiesFromCharOffsetAndLength(Microsoft.CodeAnalysis.Sarif.NewLineIndex,Microsoft.CodeAnalysis.Sarif.Region)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'Fix.FileChanges' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Fix.cs"
                },
                "region": {
                  "startLine": 44,
                  "snippet": {
                    "text": "        public IList<FileChange> FileChanges { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 45,
                  "endColumn": 1,
                  "charOffset": 1695,
                  "charLength": 123,
                  "snippet": {
                    "text": "        [DataMember(Name = \"fileChanges\", IsRequired = true)]\r\n        public IList<FileChange> FileChanges { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Fix.FileChanges"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'Graph.Graph(Graph)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nGraph..ctor(Graph)\r\nGraph.Init(String, Message, IEnumerable<Node>, IEnumerable<Edge>, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Graph.cs"
                },
                "region": {
                  "startLine": 104,
                  "snippet": {
                    "text": "        public Graph(Graph other)"
                  }
                },
                "contextRegion": {
                  "startLine": 103,
                  "startColumn": 1,
                  "endLine": 105,
                  "endColumn": 10,
                  "charOffset": 4153,
                  "charLength": 70,
                  "snippet": {
                    "text": "        /// </exception>\r\n        public Graph(Graph other)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Graph..ctor(Microsoft.CodeAnalysis.Sarif.Graph)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'Graph.Graph(string, Message, IEnumerable<Node>, IEnumerable<Edge>, IDictionary<string, SerializedPropertyInfo>)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nGraph..ctor(String, Message, IEnumerable<Node>, IEnumerable<Edge>, IDictionary<String,SerializedPropertyInfo>)\r\nGraph.Init(String, Message, IEnumerable<Node>, IEnumerable<Edge>, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Graph.cs"
                },
                "region": {
                  "startLine": 90,
                  "snippet": {
                    "text": "        public Graph(string id, Message description, IEnumerable<Node> nodes, IEnumerable<Edge> edges, IDictionary<string, SerializedPropertyInfo> properties)"
                  }
                },
                "contextRegion": {
                  "startLine": 89,
                  "startColumn": 1,
                  "endLine": 91,
                  "endColumn": 10,
                  "charOffset": 3491,
                  "charLength": 191,
                  "snippet": {
                    "text": "        /// </param>\r\n        public Graph(string id, Message description, IEnumerable<Node> nodes, IEnumerable<Edge> edges, IDictionary<string, SerializedPropertyInfo> properties)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Graph..ctor(System.String,Microsoft.CodeAnalysis.Sarif.Message,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Node>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Edge>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'Graph.Edges' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Graph.cs"
                },
                "region": {
                  "startLine": 57,
                  "snippet": {
                    "text": "        public IList<Edge> Edges { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 56,
                  "startColumn": 1,
                  "endLine": 58,
                  "endColumn": 1,
                  "charOffset": 2082,
                  "charLength": 105,
                  "snippet": {
                    "text": "        [DataMember(Name = \"edges\", IsRequired = true)]\r\n        public IList<Edge> Edges { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Graph.Edges"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'Graph.Nodes' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Graph.cs"
                },
                "region": {
                  "startLine": 51,
                  "snippet": {
                    "text": "        public IList<Node> Nodes { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 50,
                  "startColumn": 1,
                  "endLine": 52,
                  "endColumn": 1,
                  "charOffset": 1853,
                  "charLength": 105,
                  "snippet": {
                    "text": "        [DataMember(Name = \"nodes\", IsRequired = true)]\r\n        public IList<Node> Nodes { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Graph.Nodes"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1502",
          "level": "warning",
          "message": {
            "text": "'GraphEqualityComparer.Equals(Graph, Graph)' has a cyclomatic complexity of 26. Rewrite or refactor the method to reduce complexity to 25."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/GraphEqualityComparer.cs"
                },
                "region": {
                  "startLine": 20,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 19,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 46,
                  "charOffset": 705,
                  "charLength": 109,
                  "snippet": {
                    "text": "        public bool Equals(Graph left, Graph right)\r\n        {\r\n            if (ReferenceEquals(left, right))"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.GraphEqualityComparer.Equals(Microsoft.CodeAnalysis.Sarif.Graph,Microsoft.CodeAnalysis.Sarif.Graph)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Maintainability",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'GraphTraversal.GraphTraversal(GraphTraversal)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nGraphTraversal..ctor(GraphTraversal)\r\nGraphTraversal.Init(String, Message, IDictionary<String,String>, IEnumerable<EdgeTraversal>, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/GraphTraversal.cs"
                },
                "region": {
                  "startLine": 104,
                  "snippet": {
                    "text": "        public GraphTraversal(GraphTraversal other)"
                  }
                },
                "contextRegion": {
                  "startLine": 103,
                  "startColumn": 1,
                  "endLine": 105,
                  "endColumn": 10,
                  "charOffset": 4349,
                  "charLength": 88,
                  "snippet": {
                    "text": "        /// </exception>\r\n        public GraphTraversal(GraphTraversal other)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.GraphTraversal..ctor(Microsoft.CodeAnalysis.Sarif.GraphTraversal)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'GraphTraversal.GraphTraversal(string, Message, IDictionary<string, string>, IEnumerable<EdgeTraversal>, IDictionary<string, SerializedPropertyInfo>)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nGraphTraversal..ctor(String, Message, IDictionary<String,String>, IEnumerable<EdgeTraversal>, IDictionary<String,SerializedPropertyInfo>)\r\nGraphTraversal.Init(String, Message, IDictionary<String,String>, IEnumerable<EdgeTraversal>, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/GraphTraversal.cs"
                },
                "region": {
                  "startLine": 90,
                  "snippet": {
                    "text": "        public GraphTraversal(string graphId, Message description, IDictionary<string, string> initialState, IEnumerable<EdgeTraversal> edgeTraversals, IDictionary<string, SerializedPropertyInfo> properties)"
                  }
                },
                "contextRegion": {
                  "startLine": 89,
                  "startColumn": 1,
                  "endLine": 91,
                  "endColumn": 10,
                  "charOffset": 3608,
                  "charLength": 240,
                  "snippet": {
                    "text": "        /// </param>\r\n        public GraphTraversal(string graphId, Message description, IDictionary<string, string> initialState, IEnumerable<EdgeTraversal> edgeTraversals, IDictionary<string, SerializedPropertyInfo> properties)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.GraphTraversal..ctor(System.String,Microsoft.CodeAnalysis.Sarif.Message,System.Collections.Generic.IDictionary`2<System.String,System.String>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.EdgeTraversal>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'GraphTraversal.EdgeTraversals' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/GraphTraversal.cs"
                },
                "region": {
                  "startLine": 57,
                  "snippet": {
                    "text": "        public IList<EdgeTraversal> EdgeTraversals { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 56,
                  "startColumn": 1,
                  "endLine": 58,
                  "endColumn": 1,
                  "charOffset": 2093,
                  "charLength": 132,
                  "snippet": {
                    "text": "        [DataMember(Name = \"edgeTraversals\", IsRequired = true)]\r\n        public IList<EdgeTraversal> EdgeTraversals { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.GraphTraversal.EdgeTraversals"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'GraphTraversal.InitialState' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/GraphTraversal.cs"
                },
                "region": {
                  "startLine": 51,
                  "snippet": {
                    "text": "        public IDictionary<string, string> InitialState { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 50,
                  "startColumn": 1,
                  "endLine": 52,
                  "endColumn": 1,
                  "charOffset": 1811,
                  "charLength": 162,
                  "snippet": {
                    "text": "        [DataMember(Name = \"initialState\", IsRequired = false, EmitDefaultValue = false)]\r\n        public IDictionary<string, string> InitialState { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.GraphTraversal.InitialState"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1502",
          "level": "warning",
          "message": {
            "text": "'GraphTraversalEqualityComparer.Equals(GraphTraversal, GraphTraversal)' has a cyclomatic complexity of 28. Rewrite or refactor the method to reduce complexity to 25."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/GraphTraversalEqualityComparer.cs"
                },
                "region": {
                  "startLine": 20,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 19,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 46,
                  "charOffset": 750,
                  "charLength": 127,
                  "snippet": {
                    "text": "        public bool Equals(GraphTraversal left, GraphTraversal right)\r\n        {\r\n            if (ReferenceEquals(left, right))"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.GraphTraversalEqualityComparer.Equals(Microsoft.CodeAnalysis.Sarif.GraphTraversal,Microsoft.CodeAnalysis.Sarif.GraphTraversal)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Maintainability",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "In method 'HashData.HashData(string, string, string)', correct the spelling of 'sha' in parameter name 'sha1' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "MemberParameter"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/HashData.cs"
                },
                "region": {
                  "startLine": 8,
                  "snippet": {
                    "text": "        public HashData(string md5, string sha1, string sha256)"
                  }
                },
                "contextRegion": {
                  "startLine": 7,
                  "startColumn": 1,
                  "endLine": 9,
                  "endColumn": 10,
                  "charOffset": 225,
                  "charLength": 81,
                  "snippet": {
                    "text": "    {\r\n        public HashData(string md5, string sha1, string sha256)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.HashData..ctor(System.String,System.String,System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "sha#MemberParameter"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "In method 'HashData.HashData(string, string, string)', correct the spelling of 'sha' in parameter name 'sha256' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "MemberParameter"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/HashData.cs"
                },
                "region": {
                  "startLine": 8,
                  "snippet": {
                    "text": "        public HashData(string md5, string sha1, string sha256)"
                  }
                },
                "contextRegion": {
                  "startLine": 7,
                  "startColumn": 1,
                  "endLine": 9,
                  "endColumn": 10,
                  "charOffset": 225,
                  "charLength": 81,
                  "snippet": {
                    "text": "    {\r\n        public HashData(string md5, string sha1, string sha256)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.HashData..ctor(System.String,System.String,System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "sha#MemberParameter"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sha' in member name 'HashData.Sha1' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/HashData.cs"
                },
                "region": {
                  "startLine": 17,
                  "snippet": {
                    "text": "        public string Sha1 { get; }"
                  }
                },
                "contextRegion": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 18,
                  "endColumn": 1,
                  "charOffset": 437,
                  "charLength": 39,
                  "snippet": {
                    "text": "\r\n        public string Sha1 { get; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.HashData.Sha1"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sha#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sha' in member name 'HashData.Sha256' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/HashData.cs"
                },
                "region": {
                  "startLine": 19,
                  "snippet": {
                    "text": "        public string Sha256 { get; }"
                  }
                },
                "contextRegion": {
                  "startLine": 18,
                  "startColumn": 1,
                  "endLine": 20,
                  "endColumn": 1,
                  "charOffset": 476,
                  "charLength": 41,
                  "snippet": {
                    "text": "\r\n        public string Sha256 { get; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.HashData.Sha256"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sha#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2202",
          "level": "warning",
          "message": {
            "text": "Object 'stream' can be disposed more than once in method 'HashUtilities.ComputeHashes(string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 50"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/HashUtilities.cs"
                },
                "region": {
                  "startLine": 50,
                  "snippet": {
                    "text": "                        return new HashData(md5, sha1, sha256);"
                  }
                },
                "contextRegion": {
                  "startLine": 49,
                  "startColumn": 1,
                  "endLine": 51,
                  "endColumn": 22,
                  "charOffset": 2061,
                  "charLength": 88,
                  "snippet": {
                    "text": "\r\n                        return new HashData(md5, sha1, sha256);\r\n                    }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.HashUtilities.ComputeHashes(System.String)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA5350",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.HashUtilities.ComputeHashes(System.String)"
            }
          ],
          "suppressionStates": ["suppressedInSource"],
          "properties": {
            "Category": "Microsoft.Security.Cryptography",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA5354",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.HashUtilities.ComputeHashes(System.String)"
            }
          ],
          "suppressionStates": ["suppressedInSource"],
          "properties": {
            "Category": "Microsoft.Security.Cryptography",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2202",
          "level": "warning",
          "message": {
            "text": "Object 'stream' can be disposed more than once in method 'HashUtilities.ComputeMD5Hash(string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 124"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/HashUtilities.cs"
                },
                "region": {
                  "startLine": 124,
                  "snippet": {
                    "text": "                }"
                  }
                },
                "contextRegion": {
                  "startLine": 123,
                  "startColumn": 1,
                  "endLine": 125,
                  "endColumn": 14,
                  "charOffset": 4764,
                  "charLength": 55,
                  "snippet": {
                    "text": "                    }\r\n                }\r\n            }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.HashUtilities.ComputeMD5Hash(System.String)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA5350",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.HashUtilities.ComputeMD5Hash(System.String)"
            }
          ],
          "suppressionStates": ["suppressedInSource"],
          "properties": {
            "Category": "Microsoft.Security.Cryptography",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2202",
          "level": "warning",
          "message": {
            "text": "Object 'stream' can be disposed more than once in method 'HashUtilities.ComputeSha1Hash(string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 100"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/HashUtilities.cs"
                },
                "region": {
                  "startLine": 100,
                  "snippet": {
                    "text": "                }"
                  }
                },
                "contextRegion": {
                  "startLine": 99,
                  "startColumn": 1,
                  "endLine": 101,
                  "endColumn": 14,
                  "charOffset": 3867,
                  "charLength": 55,
                  "snippet": {
                    "text": "                    }\r\n                }\r\n            }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.HashUtilities.ComputeSha1Hash(System.String)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sha' in member name 'HashUtilities.ComputeSha1Hash(string)' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/HashUtilities.cs"
                },
                "region": {
                  "startLine": 85,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 84,
                  "startColumn": 1,
                  "endLine": 86,
                  "endColumn": 32,
                  "charOffset": 3240,
                  "charLength": 105,
                  "snippet": {
                    "text": "        public static string ComputeSha1Hash(string fileName)\r\n        {\r\n            string sha1 = null;"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.HashUtilities.ComputeSha1Hash(System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sha#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA5354",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.HashUtilities.ComputeSha1Hash(System.String)"
            }
          ],
          "suppressionStates": ["suppressedInSource"],
          "properties": {
            "Category": "Microsoft.Security.Cryptography",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2202",
          "level": "warning",
          "message": {
            "text": "Object 'stream' can be disposed more than once in method 'HashUtilities.ComputeSha256Hash(string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 76"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/HashUtilities.cs"
                },
                "region": {
                  "startLine": 76,
                  "snippet": {
                    "text": "                }"
                  }
                },
                "contextRegion": {
                  "startLine": 75,
                  "startColumn": 1,
                  "endLine": 77,
                  "endColumn": 14,
                  "charOffset": 2959,
                  "charLength": 55,
                  "snippet": {
                    "text": "                    }\r\n                }\r\n            }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.HashUtilities.ComputeSha256Hash(System.String)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sha' in member name 'HashUtilities.ComputeSha256Hash(string)' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/HashUtilities.cs"
                },
                "region": {
                  "startLine": 60,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 59,
                  "startColumn": 1,
                  "endLine": 61,
                  "endColumn": 38,
                  "charOffset": 2314,
                  "charLength": 113,
                  "snippet": {
                    "text": "        public static string ComputeSha256Hash(string fileName)\r\n        {\r\n            string sha256Hash = null;"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.HashUtilities.ComputeSha256Hash(System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sha#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.IAnalysisContext.Policy"
            }
          ],
          "suppressionStates": ["suppressedInSource"],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1720",
          "level": "error",
          "message": {
            "text": "In member 'IFileSystem.WriteAllBytes(string, byte[])', consider replacing the data type identifier 'bytes' in parameter name 'bytes' with a more generic term, such as 'value'.",
            "messageId": "LanguageIndependentMemberParameter"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.IFileSystem.WriteAllBytes(System.String,System.Byte[])"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "bytes#LanguageIndependentMemberParameter"
          },
          "properties": {
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1040",
          "level": "warning",
          "message": {
            "text": "Define a custom attribute to replace 'IMarker'."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.IMarker"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1710",
          "level": "error",
          "message": {
            "text": "Rename 'IntegerSet' to end in 'Collection'."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.IntegerSet"
            }
          ],
          "properties": {
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'Invocation.Invocation(Invocation)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nInvocation..ctor(Invocation)\r\nInvocation.Init(IEnumerable<Attachment>, String, IEnumerable<String>, IEnumerable<FileLocation>, DateTime, DateTime, Int32, IEnumerable<Notification>, IEnumerable<Notification>, String, String, Int32, String, Boolean, String, String, Int32, FileLocation, String, IDictionary<String,String>, FileLocation, FileLocation, FileLocation, FileLocation, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Invocation.cs"
                },
                "region": {
                  "startLine": 284,
                  "snippet": {
                    "text": "        /// <exception cref=\"ArgumentNullException\">"
                  }
                },
                "contextRegion": {
                  "startLine": 283,
                  "startColumn": 1,
                  "endLine": 285,
                  "endColumn": 57,
                  "charOffset": 13926,
                  "charLength": 132,
                  "snippet": {
                    "text": "        /// </param>\r\n        /// <exception cref=\"ArgumentNullException\">\r\n        /// Thrown if <paramref name=\"other\" /> is null."
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Invocation..ctor(Microsoft.CodeAnalysis.Sarif.Invocation)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'Invocation.Invocation(IEnumerable<Attachment>, string, IEnumerable<string>, IEnumerable<FileLocation>, DateTime, DateTime, int, IEnumerable<Notification>, IEnumerable<Notification>, string, string, int, string, bool, string, string, int, FileLocation, string, IDictionary<string, string>, FileLocation, FileLocation, FileLocation, FileLocation, IDictionary<string, SerializedPropertyInfo>)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nInvocation..ctor(IEnumerable<Attachment>, String, IEnumerable<String>, IEnumerable<FileLocation>, DateTime, DateTime, Int32, IEnumerable<Notification>, IEnumerable<Notification>, String, String, Int32, String, Boolean, String, String, Int32, FileLocation, String, IDictionary<String,String>, FileLocation, FileLocation, FileLocation, FileLocation, IDictionary<String,SerializedPropertyInfo>)\r\nInvocation.Init(IEnumerable<Attachment>, String, IEnumerable<String>, IEnumerable<FileLocation>, DateTime, DateTime, Int32, IEnumerable<Notification>, IEnumerable<Notification>, String, String, Int32, String, Boolean, String, String, Int32, FileLocation, String, IDictionary<String,String>, FileLocation, FileLocation, FileLocation, FileLocation, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Invocation.cs"
                },
                "region": {
                  "startLine": 270,
                  "snippet": {
                    "text": "        /// <param name=\"properties\">"
                  }
                },
                "contextRegion": {
                  "startLine": 269,
                  "startColumn": 1,
                  "endLine": 271,
                  "endColumn": 83,
                  "charOffset": 12325,
                  "charLength": 143,
                  "snippet": {
                    "text": "        /// </param>\r\n        /// <param name=\"properties\">\r\n        /// An initialization value for the <see cref=\"P: Properties\" /> property."
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Invocation..ctor(System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Attachment>,System.String,System.Collections.Generic.IEnumerable`1<System.String>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.FileLocation>,System.DateTime,System.DateTime,System.Int32,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Notification>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Notification>,System.String,System.String,System.Int32,System.String,System.Boolean,System.String,System.String,System.Int32,Microsoft.CodeAnalysis.Sarif.FileLocation,System.String,System.Collections.Generic.IDictionary`2<System.String,System.String>,Microsoft.CodeAnalysis.Sarif.FileLocation,Microsoft.CodeAnalysis.Sarif.FileLocation,Microsoft.CodeAnalysis.Sarif.FileLocation,Microsoft.CodeAnalysis.Sarif.FileLocation,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "In method 'Invocation.Invocation(IEnumerable<Attachment>, string, IEnumerable<string>, IEnumerable<FileLocation>, DateTime, DateTime, int, IEnumerable<Notification>, IEnumerable<Notification>, string, string, int, string, bool, string, string, int, FileLocation, string, IDictionary<string, string>, FileLocation, FileLocation, FileLocation, FileLocation, IDictionary<string, SerializedPropertyInfo>)', correct the spelling of 'Stderr' in parameter name 'stdoutStderr' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "MemberParameter"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Invocation.cs"
                },
                "region": {
                  "startLine": 270,
                  "snippet": {
                    "text": "        /// <param name=\"properties\">"
                  }
                },
                "contextRegion": {
                  "startLine": 269,
                  "startColumn": 1,
                  "endLine": 271,
                  "endColumn": 83,
                  "charOffset": 12325,
                  "charLength": 143,
                  "snippet": {
                    "text": "        /// </param>\r\n        /// <param name=\"properties\">\r\n        /// An initialization value for the <see cref=\"P: Properties\" /> property."
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Invocation..ctor(System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Attachment>,System.String,System.Collections.Generic.IEnumerable`1<System.String>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.FileLocation>,System.DateTime,System.DateTime,System.Int32,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Notification>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Notification>,System.String,System.String,System.Int32,System.String,System.Boolean,System.String,System.String,System.Int32,Microsoft.CodeAnalysis.Sarif.FileLocation,System.String,System.Collections.Generic.IDictionary`2<System.String,System.String>,Microsoft.CodeAnalysis.Sarif.FileLocation,Microsoft.CodeAnalysis.Sarif.FileLocation,Microsoft.CodeAnalysis.Sarif.FileLocation,Microsoft.CodeAnalysis.Sarif.FileLocation,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Stderr#MemberParameter"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "In method 'Invocation.Invocation(IEnumerable<Attachment>, string, IEnumerable<string>, IEnumerable<FileLocation>, DateTime, DateTime, int, IEnumerable<Notification>, IEnumerable<Notification>, string, string, int, string, bool, string, string, int, FileLocation, string, IDictionary<string, string>, FileLocation, FileLocation, FileLocation, FileLocation, IDictionary<string, SerializedPropertyInfo>)', correct the spelling of 'stderr' in parameter name 'stderr' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "MemberParameter"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Invocation.cs"
                },
                "region": {
                  "startLine": 270,
                  "snippet": {
                    "text": "        /// <param name=\"properties\">"
                  }
                },
                "contextRegion": {
                  "startLine": 269,
                  "startColumn": 1,
                  "endLine": 271,
                  "endColumn": 83,
                  "charOffset": 12325,
                  "charLength": 143,
                  "snippet": {
                    "text": "        /// </param>\r\n        /// <param name=\"properties\">\r\n        /// An initialization value for the <see cref=\"P: Properties\" /> property."
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Invocation..ctor(System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Attachment>,System.String,System.Collections.Generic.IEnumerable`1<System.String>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.FileLocation>,System.DateTime,System.DateTime,System.Int32,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Notification>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Notification>,System.String,System.String,System.Int32,System.String,System.Boolean,System.String,System.String,System.Int32,Microsoft.CodeAnalysis.Sarif.FileLocation,System.String,System.Collections.Generic.IDictionary`2<System.String,System.String>,Microsoft.CodeAnalysis.Sarif.FileLocation,Microsoft.CodeAnalysis.Sarif.FileLocation,Microsoft.CodeAnalysis.Sarif.FileLocation,Microsoft.CodeAnalysis.Sarif.FileLocation,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "stderr#MemberParameter"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "In method 'Invocation.Invocation(IEnumerable<Attachment>, string, IEnumerable<string>, IEnumerable<FileLocation>, DateTime, DateTime, int, IEnumerable<Notification>, IEnumerable<Notification>, string, string, int, string, bool, string, string, int, FileLocation, string, IDictionary<string, string>, FileLocation, FileLocation, FileLocation, FileLocation, IDictionary<string, SerializedPropertyInfo>)', correct the spelling of 'stdin' in parameter name 'stdin' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "MemberParameter"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Invocation.cs"
                },
                "region": {
                  "startLine": 270,
                  "snippet": {
                    "text": "        /// <param name=\"properties\">"
                  }
                },
                "contextRegion": {
                  "startLine": 269,
                  "startColumn": 1,
                  "endLine": 271,
                  "endColumn": 83,
                  "charOffset": 12325,
                  "charLength": 143,
                  "snippet": {
                    "text": "        /// </param>\r\n        /// <param name=\"properties\">\r\n        /// An initialization value for the <see cref=\"P: Properties\" /> property."
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Invocation..ctor(System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Attachment>,System.String,System.Collections.Generic.IEnumerable`1<System.String>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.FileLocation>,System.DateTime,System.DateTime,System.Int32,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Notification>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Notification>,System.String,System.String,System.Int32,System.String,System.Boolean,System.String,System.String,System.Int32,Microsoft.CodeAnalysis.Sarif.FileLocation,System.String,System.Collections.Generic.IDictionary`2<System.String,System.String>,Microsoft.CodeAnalysis.Sarif.FileLocation,Microsoft.CodeAnalysis.Sarif.FileLocation,Microsoft.CodeAnalysis.Sarif.FileLocation,Microsoft.CodeAnalysis.Sarif.FileLocation,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "stdin#MemberParameter"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "In method 'Invocation.Invocation(IEnumerable<Attachment>, string, IEnumerable<string>, IEnumerable<FileLocation>, DateTime, DateTime, int, IEnumerable<Notification>, IEnumerable<Notification>, string, string, int, string, bool, string, string, int, FileLocation, string, IDictionary<string, string>, FileLocation, FileLocation, FileLocation, FileLocation, IDictionary<string, SerializedPropertyInfo>)', correct the spelling of 'stdout' in parameter name 'stdout' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "MemberParameter"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Invocation.cs"
                },
                "region": {
                  "startLine": 270,
                  "snippet": {
                    "text": "        /// <param name=\"properties\">"
                  }
                },
                "contextRegion": {
                  "startLine": 269,
                  "startColumn": 1,
                  "endLine": 271,
                  "endColumn": 83,
                  "charOffset": 12325,
                  "charLength": 143,
                  "snippet": {
                    "text": "        /// </param>\r\n        /// <param name=\"properties\">\r\n        /// An initialization value for the <see cref=\"P: Properties\" /> property."
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Invocation..ctor(System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Attachment>,System.String,System.Collections.Generic.IEnumerable`1<System.String>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.FileLocation>,System.DateTime,System.DateTime,System.Int32,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Notification>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Notification>,System.String,System.String,System.Int32,System.String,System.Boolean,System.String,System.String,System.Int32,Microsoft.CodeAnalysis.Sarif.FileLocation,System.String,System.Collections.Generic.IDictionary`2<System.String,System.String>,Microsoft.CodeAnalysis.Sarif.FileLocation,Microsoft.CodeAnalysis.Sarif.FileLocation,Microsoft.CodeAnalysis.Sarif.FileLocation,Microsoft.CodeAnalysis.Sarif.FileLocation,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "stdout#MemberParameter"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "In method 'Invocation.Invocation(IEnumerable<Attachment>, string, IEnumerable<string>, IEnumerable<FileLocation>, DateTime, DateTime, int, IEnumerable<Notification>, IEnumerable<Notification>, string, string, int, string, bool, string, string, int, FileLocation, string, IDictionary<string, string>, FileLocation, FileLocation, FileLocation, FileLocation, IDictionary<string, SerializedPropertyInfo>)', correct the spelling of 'stdout' in parameter name 'stdoutStderr' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "MemberParameter"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Invocation.cs"
                },
                "region": {
                  "startLine": 270,
                  "snippet": {
                    "text": "        /// <param name=\"properties\">"
                  }
                },
                "contextRegion": {
                  "startLine": 269,
                  "startColumn": 1,
                  "endLine": 271,
                  "endColumn": 83,
                  "charOffset": 12325,
                  "charLength": 143,
                  "snippet": {
                    "text": "        /// </param>\r\n        /// <param name=\"properties\">\r\n        /// An initialization value for the <see cref=\"P: Properties\" /> property."
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Invocation..ctor(System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Attachment>,System.String,System.Collections.Generic.IEnumerable`1<System.String>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.FileLocation>,System.DateTime,System.DateTime,System.Int32,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Notification>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Notification>,System.String,System.String,System.Int32,System.String,System.Boolean,System.String,System.String,System.Int32,Microsoft.CodeAnalysis.Sarif.FileLocation,System.String,System.Collections.Generic.IDictionary`2<System.String,System.String>,Microsoft.CodeAnalysis.Sarif.FileLocation,Microsoft.CodeAnalysis.Sarif.FileLocation,Microsoft.CodeAnalysis.Sarif.FileLocation,Microsoft.CodeAnalysis.Sarif.FileLocation,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "stdout#MemberParameter"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'Invocation.Arguments' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Invocation.cs"
                },
                "region": {
                  "startLine": 51,
                  "snippet": {
                    "text": "        [DataMember(Name = \"responseFiles\", IsRequired = false, EmitDefaultValue = false)]"
                  }
                },
                "contextRegion": {
                  "startLine": 50,
                  "startColumn": 1,
                  "endLine": 52,
                  "endColumn": 63,
                  "charOffset": 1904,
                  "charLength": 178,
                  "snippet": {
                    "text": "        /// </summary>\r\n        [DataMember(Name = \"responseFiles\", IsRequired = false, EmitDefaultValue = false)]\r\n        public IList<FileLocation> ResponseFiles { get; set; }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Invocation.Arguments"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'Invocation.Attachments' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Invocation.cs"
                },
                "region": {
                  "startLine": 39,
                  "snippet": {
                    "text": "        [DataMember(Name = \"commandLine\", IsRequired = false, EmitDefaultValue = false)]"
                  }
                },
                "contextRegion": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 40,
                  "endColumn": 48,
                  "charOffset": 1311,
                  "charLength": 161,
                  "snippet": {
                    "text": "        /// </summary>\r\n        [DataMember(Name = \"commandLine\", IsRequired = false, EmitDefaultValue = false)]\r\n        public string CommandLine { get; set; }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Invocation.Attachments"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'Invocation.ConfigurationNotifications' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Invocation.cs"
                },
                "region": {
                  "startLine": 87,
                  "snippet": {
                    "text": "        /// A list of conditions detected by the tool that are relevant to the tool's configuration."
                  }
                },
                "contextRegion": {
                  "startLine": 86,
                  "startColumn": 1,
                  "endLine": 88,
                  "endColumn": 23,
                  "charOffset": 3589,
                  "charLength": 147,
                  "snippet": {
                    "text": "        /// <summary>\r\n        /// A list of conditions detected by the tool that are relevant to the tool's configuration.\r\n        /// </summary>"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Invocation.ConfigurationNotifications"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1026",
          "level": "error",
          "message": {
            "text": "Replace method 'Invocation.Create(bool, IEnumerable<string>)' with an overload that supplies all default arguments."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Core/Invocation.cs"
                },
                "region": {
                  "startLine": 19,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 18,
                  "startColumn": 1,
                  "endLine": 20,
                  "endColumn": 44,
                  "charOffset": 528,
                  "charLength": 111,
                  "snippet": {
                    "text": "            IEnumerable<string> propertiesToLog = null)\r\n        {\r\n            var invocation = new Invocation"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Invocation.Create(System.Boolean,System.Collections.Generic.IEnumerable`1<System.String>)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'Invocation.EnvironmentVariables' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Invocation.cs"
                },
                "region": {
                  "startLine": 153,
                  "snippet": {
                    "text": "        /// The environment variables associated with the analysis tool process, expressed as key/value pairs."
                  }
                },
                "contextRegion": {
                  "startLine": 152,
                  "startColumn": 1,
                  "endLine": 154,
                  "endColumn": 23,
                  "charOffset": 6580,
                  "charLength": 157,
                  "snippet": {
                    "text": "        /// <summary>\r\n        /// The environment variables associated with the analysis tool process, expressed as key/value pairs.\r\n        /// </summary>"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Invocation.EnvironmentVariables"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1502",
          "level": "warning",
          "message": {
            "text": "'Invocation.Init(IEnumerable<Attachment>, string, IEnumerable<string>, IEnumerable<FileLocation>, DateTime, DateTime, int, IEnumerable<Notification>, IEnumerable<Notification>, string, string, int, string, bool, string, string, int, FileLocation, string, IDictionary<string, string>, FileLocation, FileLocation, FileLocation, FileLocation, IDictionary<string, SerializedPropertyInfo>)' has a cyclomatic complexity of 27. Rewrite or refactor the method to reduce complexity to 25."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Invocation.cs"
                },
                "region": {
                  "startLine": 313,
                  "snippet": {
                    "text": "        }"
                  }
                },
                "contextRegion": {
                  "startLine": 312,
                  "startColumn": 1,
                  "endLine": 314,
                  "endColumn": 1,
                  "charOffset": 15197,
                  "charLength": 53,
                  "snippet": {
                    "text": "            return new Invocation(this);\r\n        }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Invocation.Init(System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Attachment>,System.String,System.Collections.Generic.IEnumerable`1<System.String>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.FileLocation>,System.DateTime,System.DateTime,System.Int32,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Notification>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Notification>,System.String,System.String,System.Int32,System.String,System.Boolean,System.String,System.String,System.Int32,Microsoft.CodeAnalysis.Sarif.FileLocation,System.String,System.Collections.Generic.IDictionary`2<System.String,System.String>,Microsoft.CodeAnalysis.Sarif.FileLocation,Microsoft.CodeAnalysis.Sarif.FileLocation,Microsoft.CodeAnalysis.Sarif.FileLocation,Microsoft.CodeAnalysis.Sarif.FileLocation,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Maintainability",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'Invocation.ResponseFiles' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Invocation.cs"
                },
                "region": {
                  "startLine": 57,
                  "snippet": {
                    "text": "        [DataMember(Name = \"attachments\", IsRequired = false, EmitDefaultValue = false)]"
                  }
                },
                "contextRegion": {
                  "startLine": 56,
                  "startColumn": 1,
                  "endLine": 58,
                  "endColumn": 59,
                  "charOffset": 2177,
                  "charLength": 172,
                  "snippet": {
                    "text": "        /// </summary>\r\n        [DataMember(Name = \"attachments\", IsRequired = false, EmitDefaultValue = false)]\r\n        public IList<Attachment> Attachments { get; set; }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Invocation.ResponseFiles"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Stderr' in member name 'Invocation.Stderr' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Invocation.cs"
                },
                "region": {
                  "startLine": 171,
                  "snippet": {
                    "text": "        /// A file containing the standard error stream from the process that was invoked."
                  }
                },
                "contextRegion": {
                  "startLine": 170,
                  "startColumn": 1,
                  "endLine": 172,
                  "endColumn": 23,
                  "charOffset": 7468,
                  "charLength": 137,
                  "snippet": {
                    "text": "        /// <summary>\r\n        /// A file containing the standard error stream from the process that was invoked.\r\n        /// </summary>"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Invocation.Stderr"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Stderr#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Stdin' in member name 'Invocation.Stdin' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Invocation.cs"
                },
                "region": {
                  "startLine": 159,
                  "snippet": {
                    "text": "        /// A file containing the standard input stream to the process that was invoked."
                  }
                },
                "contextRegion": {
                  "startLine": 158,
                  "startColumn": 1,
                  "endLine": 160,
                  "endColumn": 23,
                  "charOffset": 6919,
                  "charLength": 135,
                  "snippet": {
                    "text": "        /// <summary>\r\n        /// A file containing the standard input stream to the process that was invoked.\r\n        /// </summary>"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Invocation.Stdin"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Stdin#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Stdout' in member name 'Invocation.Stdout' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Invocation.cs"
                },
                "region": {
                  "startLine": 165,
                  "snippet": {
                    "text": "        /// A file containing the standard output stream from the process that was invoked."
                  }
                },
                "contextRegion": {
                  "startLine": 164,
                  "startColumn": 1,
                  "endLine": 166,
                  "endColumn": 23,
                  "charOffset": 7191,
                  "charLength": 138,
                  "snippet": {
                    "text": "        /// <summary>\r\n        /// A file containing the standard output stream from the process that was invoked.\r\n        /// </summary>"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Invocation.Stdout"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Stdout#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Stderr' in member name 'Invocation.StdoutStderr' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Invocation.cs"
                },
                "region": {
                  "startLine": 177,
                  "snippet": {
                    "text": "        /// A file containing the interleaved standard output and standard error stream from the process that was invoked."
                  }
                },
                "contextRegion": {
                  "startLine": 176,
                  "startColumn": 1,
                  "endLine": 178,
                  "endColumn": 23,
                  "charOffset": 7744,
                  "charLength": 169,
                  "snippet": {
                    "text": "        /// <summary>\r\n        /// A file containing the interleaved standard output and standard error stream from the process that was invoked.\r\n        /// </summary>"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Invocation.StdoutStderr"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Stderr#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Stdout' in member name 'Invocation.StdoutStderr' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Invocation.cs"
                },
                "region": {
                  "startLine": 177,
                  "snippet": {
                    "text": "        /// A file containing the interleaved standard output and standard error stream from the process that was invoked."
                  }
                },
                "contextRegion": {
                  "startLine": 176,
                  "startColumn": 1,
                  "endLine": 178,
                  "endColumn": 23,
                  "charOffset": 7744,
                  "charLength": 169,
                  "snippet": {
                    "text": "        /// <summary>\r\n        /// A file containing the interleaved standard output and standard error stream from the process that was invoked.\r\n        /// </summary>"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Invocation.StdoutStderr"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Stdout#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'Invocation.ToolNotifications' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Invocation.cs"
                },
                "region": {
                  "startLine": 81,
                  "snippet": {
                    "text": "        /// A list of runtime conditions detected by the tool during the analysis."
                  }
                },
                "contextRegion": {
                  "startLine": 80,
                  "startColumn": 1,
                  "endLine": 82,
                  "endColumn": 23,
                  "charOffset": 3292,
                  "charLength": 129,
                  "snippet": {
                    "text": "        /// <summary>\r\n        /// A list of runtime conditions detected by the tool during the analysis.\r\n        /// </summary>"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Invocation.ToolNotifications"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1502",
          "level": "warning",
          "message": {
            "text": "'InvocationEqualityComparer.Equals(Invocation, Invocation)' has a cyclomatic complexity of 68. Rewrite or refactor the method to reduce complexity to 25."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/InvocationEqualityComparer.cs"
                },
                "region": {
                  "startLine": 20,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 19,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 46,
                  "charOffset": 730,
                  "charLength": 119,
                  "snippet": {
                    "text": "        public bool Equals(Invocation left, Invocation right)\r\n        {\r\n            if (ReferenceEquals(left, right))"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.InvocationEqualityComparer.Equals(Microsoft.CodeAnalysis.Sarif.Invocation,Microsoft.CodeAnalysis.Sarif.Invocation)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Maintainability",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1809",
          "level": "warning",
          "message": {
            "text": "'InvocationEqualityComparer.Equals(Invocation, Invocation)' has 65 local variables, 56 of which were generated by the compiler. Refactor 'InvocationEqualityComparer.Equals(Invocation, Invocation)' so that it uses fewer than 64 local variables.",
            "messageId": "Compiler"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/InvocationEqualityComparer.cs"
                },
                "region": {
                  "startLine": 20,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 19,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 46,
                  "charOffset": 730,
                  "charLength": 119,
                  "snippet": {
                    "text": "        public bool Equals(Invocation left, Invocation right)\r\n        {\r\n            if (ReferenceEquals(left, right))"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.InvocationEqualityComparer.Equals(Microsoft.CodeAnalysis.Sarif.Invocation,Microsoft.CodeAnalysis.Sarif.Invocation)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Compiler"
          },
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1502",
          "level": "warning",
          "message": {
            "text": "'InvocationEqualityComparer.GetHashCode(Invocation)' has a cyclomatic complexity of 42. Rewrite or refactor the method to reduce complexity to 25."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/InvocationEqualityComparer.cs"
                },
                "region": {
                  "startLine": 274,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 273,
                  "startColumn": 1,
                  "endLine": 275,
                  "endColumn": 44,
                  "charOffset": 8898,
                  "charLength": 102,
                  "snippet": {
                    "text": "        public int GetHashCode(Invocation obj)\r\n        {\r\n            if (ReferenceEquals(obj, null))"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.InvocationEqualityComparer.GetHashCode(Microsoft.CodeAnalysis.Sarif.Invocation)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Maintainability",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1024",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.IOptionsProvider.GetOptions()"
            }
          ],
          "suppressionStates": ["suppressedInSource"],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in type name 'ISarifNode'.",
            "messageId": "Type"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.ISarifNode"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Type"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in member name 'ISarifNode.SarifNodeKind' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.ISarifNode.SarifNodeKind"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'Location.Location(Location)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nLocation..ctor(Location)\r\nLocation.Init(PhysicalLocation, String, Message, IEnumerable<Region>, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Location.cs"
                },
                "region": {
                  "startLine": 104,
                  "snippet": {
                    "text": "        public Location(Location other)"
                  }
                },
                "contextRegion": {
                  "startLine": 103,
                  "startColumn": 1,
                  "endLine": 105,
                  "endColumn": 10,
                  "charOffset": 4512,
                  "charLength": 76,
                  "snippet": {
                    "text": "        /// </exception>\r\n        public Location(Location other)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Location..ctor(Microsoft.CodeAnalysis.Sarif.Location)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'Location.Location(PhysicalLocation, string, Message, IEnumerable<Region>, IDictionary<string, SerializedPropertyInfo>)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nLocation..ctor(PhysicalLocation, String, Message, IEnumerable<Region>, IDictionary<String,SerializedPropertyInfo>)\r\nLocation.Init(PhysicalLocation, String, Message, IEnumerable<Region>, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Location.cs"
                },
                "region": {
                  "startLine": 90,
                  "snippet": {
                    "text": "        public Location(PhysicalLocation physicalLocation, string fullyQualifiedLogicalName, Message message, IEnumerable<Region> annotations, IDictionary<string, SerializedPropertyInfo> properties)"
                  }
                },
                "contextRegion": {
                  "startLine": 89,
                  "startColumn": 1,
                  "endLine": 91,
                  "endColumn": 10,
                  "charOffset": 3771,
                  "charLength": 231,
                  "snippet": {
                    "text": "        /// </param>\r\n        public Location(PhysicalLocation physicalLocation, string fullyQualifiedLogicalName, Message message, IEnumerable<Region> annotations, IDictionary<string, SerializedPropertyInfo> properties)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Location..ctor(Microsoft.CodeAnalysis.Sarif.PhysicalLocation,System.String,Microsoft.CodeAnalysis.Sarif.Message,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Region>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'Location.Annotations' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Location.cs"
                },
                "region": {
                  "startLine": 57,
                  "snippet": {
                    "text": "        public IList<Region> Annotations { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 56,
                  "startColumn": 1,
                  "endLine": 58,
                  "endColumn": 1,
                  "charOffset": 2237,
                  "charLength": 146,
                  "snippet": {
                    "text": "        [DataMember(Name = \"annotations\", IsRequired = false, EmitDefaultValue = false)]\r\n        public IList<Region> Annotations { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Location.Annotations"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'Message.Arguments' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Message.cs"
                },
                "region": {
                  "startLine": 62,
                  "snippet": {
                    "text": "        public IList<string> Arguments { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 61,
                  "startColumn": 1,
                  "endLine": 63,
                  "endColumn": 1,
                  "charOffset": 2197,
                  "charLength": 142,
                  "snippet": {
                    "text": "        [DataMember(Name = \"arguments\", IsRequired = false, EmitDefaultValue = false)]\r\n        public IList<string> Arguments { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Message.Arguments"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1062",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.MultiplyByPrimesHash.AddRange(System.Collections.Generic.IEnumerable`1<System.Int32>)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "suppressionStates": ["suppressedInSource"],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.MultiplyByPrimesHash.AddRange(System.Collections.IEnumerable)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "suppressionStates": ["suppressedInSource"],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.MultiplyByPrimesHash.AddRange(System.Int32[])"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "suppressionStates": ["suppressedInSource"],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.NewLineIndex..ctor(System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "suppressionStates": ["suppressedInSource"],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'Node.Node(Node)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nNode..ctor(Node)\r\nNode.Init(String, Message, Location, IEnumerable<Node>, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Node.cs"
                },
                "region": {
                  "startLine": 104,
                  "snippet": {
                    "text": "        public Node(Node other)"
                  }
                },
                "contextRegion": {
                  "startLine": 103,
                  "startColumn": 1,
                  "endLine": 105,
                  "endColumn": 10,
                  "charOffset": 4009,
                  "charLength": 68,
                  "snippet": {
                    "text": "        /// </exception>\r\n        public Node(Node other)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Node..ctor(Microsoft.CodeAnalysis.Sarif.Node)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'Node.Node(string, Message, Location, IEnumerable<Node>, IDictionary<string, SerializedPropertyInfo>)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nNode..ctor(String, Message, Location, IEnumerable<Node>, IDictionary<String,SerializedPropertyInfo>)\r\nNode.Init(String, Message, Location, IEnumerable<Node>, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Node.cs"
                },
                "region": {
                  "startLine": 90,
                  "snippet": {
                    "text": "        public Node(string id, Message label, Location location, IEnumerable<Node> children, IDictionary<string, SerializedPropertyInfo> properties)"
                  }
                },
                "contextRegion": {
                  "startLine": 89,
                  "startColumn": 1,
                  "endLine": 91,
                  "endColumn": 10,
                  "charOffset": 3358,
                  "charLength": 181,
                  "snippet": {
                    "text": "        /// </param>\r\n        public Node(string id, Message label, Location location, IEnumerable<Node> children, IDictionary<string, SerializedPropertyInfo> properties)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Node..ctor(System.String,Microsoft.CodeAnalysis.Sarif.Message,Microsoft.CodeAnalysis.Sarif.Location,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Node>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'Node.Children' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Node.cs"
                },
                "region": {
                  "startLine": 57,
                  "snippet": {
                    "text": "        public IList<Node> Children { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 56,
                  "startColumn": 1,
                  "endLine": 58,
                  "endColumn": 1,
                  "charOffset": 1920,
                  "charLength": 138,
                  "snippet": {
                    "text": "        [DataMember(Name = \"children\", IsRequired = false, EmitDefaultValue = false)]\r\n        public IList<Node> Children { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Node.Children"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Msg' in member name 'Notes.Msg001AnalyzingTarget' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Notes.Msg001AnalyzingTarget"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Msg#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'Notification.Notification(Notification)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nNotification..ctor(Notification)\r\nNotification.Init(String, String, PhysicalLocation, Message, NotificationLevel, Int32, DateTime, ExceptionData, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Notification.cs"
                },
                "region": {
                  "startLine": 140,
                  "snippet": {
                    "text": "        /// <exception cref=\"ArgumentNullException\">"
                  }
                },
                "contextRegion": {
                  "startLine": 139,
                  "startColumn": 1,
                  "endLine": 141,
                  "endColumn": 57,
                  "charOffset": 6126,
                  "charLength": 132,
                  "snippet": {
                    "text": "        /// </param>\r\n        /// <exception cref=\"ArgumentNullException\">\r\n        /// Thrown if <paramref name=\"other\" /> is null."
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Notification..ctor(Microsoft.CodeAnalysis.Sarif.Notification)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'Notification.Notification(string, string, PhysicalLocation, Message, NotificationLevel, int, DateTime, ExceptionData, IDictionary<string, SerializedPropertyInfo>)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nNotification..ctor(String, String, PhysicalLocation, Message, NotificationLevel, Int32, DateTime, ExceptionData, IDictionary<String,SerializedPropertyInfo>)\r\nNotification.Init(String, String, PhysicalLocation, Message, NotificationLevel, Int32, DateTime, ExceptionData, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Notification.cs"
                },
                "region": {
                  "startLine": 126,
                  "snippet": {
                    "text": "        /// <param name=\"properties\">"
                  }
                },
                "contextRegion": {
                  "startLine": 125,
                  "startColumn": 1,
                  "endLine": 127,
                  "endColumn": 83,
                  "charOffset": 5322,
                  "charLength": 143,
                  "snippet": {
                    "text": "        /// </param>\r\n        /// <param name=\"properties\">\r\n        /// An initialization value for the <see cref=\"P: Properties\" /> property."
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Notification..ctor(System.String,System.String,Microsoft.CodeAnalysis.Sarif.PhysicalLocation,Microsoft.CodeAnalysis.Sarif.Message,Microsoft.CodeAnalysis.Sarif.NotificationLevel,System.Int32,System.DateTime,Microsoft.CodeAnalysis.Sarif.ExceptionData,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1028",
          "level": "warning",
          "message": {
            "text": "If possible, make the underlying type of 'OptionallyEmittedData' Int32 instead of 'uint'. Otherwise consider Byte, Int16, or Int64.",
            "messageId": "NotIntegral"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.OptionallyEmittedData"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "NotIntegral"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1714",
          "level": "error",
          "message": {
            "text": "If enumeration name 'OptionallyEmittedData' is singular, change it to a plural form."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.OptionallyEmittedData"
            }
          ],
          "properties": {
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2240",
          "level": "error",
          "message": {
            "text": "Add an implementation of GetObjectData to type 'PropertiesDictionary'."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.PropertiesDictionary"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA3053",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.PropertiesDictionary.LoadFromXml(System.IO.Stream)"
            }
          ],
          "suppressionStates": ["suppressedInSource"],
          "properties": {
            "Category": "Microsoft.Security.Xml",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1026",
          "level": "error",
          "message": {
            "text": "Replace method 'PropertiesDictionary.SaveToJson(string, bool)' with an overload that supplies all default arguments."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/PropertiesDictionary.cs"
                },
                "region": {
                  "startLine": 152,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 151,
                  "startColumn": 1,
                  "endLine": 153,
                  "endColumn": 1,
                  "charOffset": 5111,
                  "charLength": 85,
                  "snippet": {
                    "text": "        public void SaveToJson(string filePath, bool prettyPrint = true)\r\n        {\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.PropertiesDictionary.SaveToJson(System.String,System.Boolean)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1800",
          "level": "warning",
          "message": {
            "text": "'result', a variable, is cast to type 'JToken' multiple times in method 'PropertiesDictionary.TryGetProperty<T>(string, out T)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.",
            "messageId": "Local"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/PropertiesDictionary.cs"
                },
                "region": {
                  "startLine": 111,
                  "snippet": {
                    "text": "                    value = ((JToken)result).ToObject<T>();"
                  }
                },
                "contextRegion": {
                  "startLine": 110,
                  "startColumn": 1,
                  "endLine": 112,
                  "endColumn": 33,
                  "charOffset": 3620,
                  "charLength": 112,
                  "snippet": {
                    "text": "                {\r\n                    value = ((JToken)result).ToObject<T>();\r\n                    return true;"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.PropertiesDictionary.TryGetProperty`1(System.String,!!0&)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Local"
          },
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1307",
          "level": "error",
          "message": {
            "text": "Because the behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings, replace this call in 'PropertyBagHolder.SetProperty<T>(string, T)' with a call to 'string.StartsWith(string, StringComparison)'. If the result of 'string.StartsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Core/PropertyBagHolder.cs"
                },
                "region": {
                  "startLine": 130,
                  "snippet": {
                    "text": "                }"
                  }
                },
                "contextRegion": {
                  "startLine": 129,
                  "startColumn": 1,
                  "endLine": 131,
                  "endColumn": 21,
                  "charOffset": 4273,
                  "charLength": 107,
                  "snippet": {
                    "text": "                    serializedValue = JsonConvert.ToString(value);\r\n                }\r\n                else"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.PropertyBagHolder.SetProperty`1(System.String,!!0)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.String.StartsWith(System.String)"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1307",
          "level": "error",
          "message": {
            "text": "Because the behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings, replace this call in 'PropertyBagHolder.SetProperty<T>(string, T)' with a call to 'string.StartsWith(string, StringComparison)'. If the result of 'string.StartsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Core/PropertyBagHolder.cs"
                },
                "region": {
                  "startLine": 134,
                  "snippet": {
                    "text": "                    JsonSerializerSettings settings = null;"
                  }
                },
                "contextRegion": {
                  "startLine": 133,
                  "startColumn": 1,
                  "endLine": 135,
                  "endColumn": 1,
                  "charOffset": 4401,
                  "charLength": 125,
                  "snippet": {
                    "text": "                    // Use the appropriate serializer settings\r\n                    JsonSerializerSettings settings = null;\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.PropertyBagHolder.SetProperty`1(System.String,!!0)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.String.StartsWith(System.String)"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'PropertyBagHolder.SetProperty<T>(string, T)', validate parameter 'propertyName' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Core/PropertyBagHolder.cs"
                },
                "region": {
                  "startLine": 130,
                  "snippet": {
                    "text": "                }"
                  }
                },
                "contextRegion": {
                  "startLine": 129,
                  "startColumn": 1,
                  "endLine": 131,
                  "endColumn": 21,
                  "charOffset": 4273,
                  "charLength": 107,
                  "snippet": {
                    "text": "                    serializedValue = JsonConvert.ToString(value);\r\n                }\r\n                else"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.PropertyBagHolder.SetProperty`1(System.String,!!0)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1720",
          "level": "error",
          "message": {
            "text": "In member 'Region.Region(int, int, int, int, int, int, int, int, FileContent, Message)', consider replacing the data type identifier 'byte' in parameter name 'byteLength' with a more generic term, such as 'value'.",
            "messageId": "LanguageIndependentMemberParameter"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Region.cs"
                },
                "region": {
                  "startLine": 134,
                  "snippet": {
                    "text": "        public Region(int startLine, int startColumn, int endLine, int endColumn, int charOffset, int charLength, int byteOffset, int byteLength, FileContent snippet, Message message)"
                  }
                },
                "contextRegion": {
                  "startLine": 133,
                  "startColumn": 1,
                  "endLine": 135,
                  "endColumn": 10,
                  "charOffset": 5386,
                  "charLength": 216,
                  "snippet": {
                    "text": "        /// </param>\r\n        public Region(int startLine, int startColumn, int endLine, int endColumn, int charOffset, int charLength, int byteOffset, int byteLength, FileContent snippet, Message message)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Region..ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.CodeAnalysis.Sarif.FileContent,Microsoft.CodeAnalysis.Sarif.Message)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "byte#LanguageIndependentMemberParameter"
          },
          "properties": {
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1720",
          "level": "error",
          "message": {
            "text": "In member 'Region.Region(int, int, int, int, int, int, int, int, FileContent, Message)', consider replacing the data type identifier 'byte' in parameter name 'byteOffset' with a more generic term, such as 'value'.",
            "messageId": "LanguageIndependentMemberParameter"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Region.cs"
                },
                "region": {
                  "startLine": 134,
                  "snippet": {
                    "text": "        public Region(int startLine, int startColumn, int endLine, int endColumn, int charOffset, int charLength, int byteOffset, int byteLength, FileContent snippet, Message message)"
                  }
                },
                "contextRegion": {
                  "startLine": 133,
                  "startColumn": 1,
                  "endLine": 135,
                  "endColumn": 10,
                  "charOffset": 5386,
                  "charLength": 216,
                  "snippet": {
                    "text": "        /// </param>\r\n        public Region(int startLine, int startColumn, int endLine, int endColumn, int charOffset, int charLength, int byteOffset, int byteLength, FileContent snippet, Message message)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Region..ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.CodeAnalysis.Sarif.FileContent,Microsoft.CodeAnalysis.Sarif.Message)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "byte#LanguageIndependentMemberParameter"
          },
          "properties": {
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1724",
          "level": "error",
          "message": {
            "text": "The type name 'Resources' conflicts in whole or in part with the namespace name 'System.Resources' defined in the .NET Framework. Rename the type to eliminate the conflict.",
            "messageId": "System"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Resources"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System"
          },
          "properties": {
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'Resources.MessageStrings' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Resources.cs"
                },
                "region": {
                  "startLine": 39,
                  "snippet": {
                    "text": "        public IDictionary<string, string> MessageStrings { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 40,
                  "endColumn": 1,
                  "charOffset": 1346,
                  "charLength": 166,
                  "snippet": {
                    "text": "        [DataMember(Name = \"messageStrings\", IsRequired = false, EmitDefaultValue = false)]\r\n        public IDictionary<string, string> MessageStrings { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Resources.MessageStrings"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'Resources.Rules' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Resources.cs"
                },
                "region": {
                  "startLine": 45,
                  "snippet": {
                    "text": "        [JsonConverter(typeof(Microsoft.CodeAnalysis.Sarif.Readers.RuleDictionaryConverter))]"
                  }
                },
                "contextRegion": {
                  "startLine": 44,
                  "startColumn": 1,
                  "endLine": 46,
                  "endColumn": 61,
                  "charOffset": 1760,
                  "charLength": 239,
                  "snippet": {
                    "text": "        [DataMember(Name = \"rules\", IsRequired = false, EmitDefaultValue = false)]\r\n        [JsonConverter(typeof(Microsoft.CodeAnalysis.Sarif.Readers.RuleDictionaryConverter))]\r\n        public IDictionary<string, Rule> Rules { get; set; }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Resources.Rules"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'Result.Result(Result)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nResult..ctor(Result)\r\nResult.Init(String, ResultLevel, Message, String, FileLocation, IEnumerable<Location>, String, String, IDictionary<String,String>, IDictionary<String,String>, IEnumerable<Stack>, IEnumerable<CodeFlow>, IEnumerable<Graph>, IEnumerable<GraphTraversal>, IEnumerable<Location>, SuppressionStates, BaselineState, IEnumerable<Attachment>, IEnumerable<Uri>, IEnumerable<PhysicalLocation>, IEnumerable<Fix>, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Result.cs"
                },
                "region": {
                  "startLine": 253,
                  "snippet": {
                    "text": "        /// <summary>"
                  }
                },
                "contextRegion": {
                  "startLine": 252,
                  "startColumn": 1,
                  "endLine": 254,
                  "endColumn": 103,
                  "charOffset": 12755,
                  "charLength": 127,
                  "snippet": {
                    "text": "\r\n        /// <summary>\r\n        /// Initializes a new instance of the <see cref=\"Result\" /> class from the specified instance."
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Result..ctor(Microsoft.CodeAnalysis.Sarif.Result)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'Result.Result(string, ResultLevel, Message, string, FileLocation, IEnumerable<Location>, string, string, IDictionary<string, string>, IDictionary<string, string>, IEnumerable<Stack>, IEnumerable<CodeFlow>, IEnumerable<Graph>, IEnumerable<GraphTraversal>, IEnumerable<Location>, SuppressionStates, BaselineState, IEnumerable<Attachment>, IEnumerable<Uri>, IEnumerable<PhysicalLocation>, IEnumerable<Fix>, IDictionary<string, SerializedPropertyInfo>)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nResult..ctor(String, ResultLevel, Message, String, FileLocation, IEnumerable<Location>, String, String, IDictionary<String,String>, IDictionary<String,String>, IEnumerable<Stack>, IEnumerable<CodeFlow>, IEnumerable<Graph>, IEnumerable<GraphTraversal>, IEnumerable<Location>, SuppressionStates, BaselineState, IEnumerable<Attachment>, IEnumerable<Uri>, IEnumerable<PhysicalLocation>, IEnumerable<Fix>, IDictionary<String,SerializedPropertyInfo>)\r\nResult.Init(String, ResultLevel, Message, String, FileLocation, IEnumerable<Location>, String, String, IDictionary<String,String>, IDictionary<String,String>, IEnumerable<Stack>, IEnumerable<CodeFlow>, IEnumerable<Graph>, IEnumerable<GraphTraversal>, IEnumerable<Location>, SuppressionStates, BaselineState, IEnumerable<Attachment>, IEnumerable<Uri>, IEnumerable<PhysicalLocation>, IEnumerable<Fix>, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Result.cs"
                },
                "region": {
                  "startLine": 239,
                  "snippet": {
                    "text": "        /// <param name=\"conversionProvenance\">"
                  }
                },
                "contextRegion": {
                  "startLine": 238,
                  "startColumn": 1,
                  "endLine": 240,
                  "endColumn": 93,
                  "charOffset": 11210,
                  "charLength": 163,
                  "snippet": {
                    "text": "        /// </param>\r\n        /// <param name=\"conversionProvenance\">\r\n        /// An initialization value for the <see cref=\"P: ConversionProvenance\" /> property."
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Result..ctor(System.String,Microsoft.CodeAnalysis.Sarif.ResultLevel,Microsoft.CodeAnalysis.Sarif.Message,System.String,Microsoft.CodeAnalysis.Sarif.FileLocation,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Location>,System.String,System.String,System.Collections.Generic.IDictionary`2<System.String,System.String>,System.Collections.Generic.IDictionary`2<System.String,System.String>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Stack>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.CodeFlow>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Graph>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.GraphTraversal>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Location>,Microsoft.CodeAnalysis.Sarif.SuppressionStates,Microsoft.CodeAnalysis.Sarif.BaselineState,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Attachment>,System.Collections.Generic.IEnumerable`1<System.Uri>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.PhysicalLocation>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Fix>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'Result.Attachments' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Result.cs"
                },
                "region": {
                  "startLine": 137,
                  "snippet": {
                    "text": "        [DataMember(Name = \"baselineState\", IsRequired = false, EmitDefaultValue = false)]"
                  }
                },
                "contextRegion": {
                  "startLine": 136,
                  "startColumn": 1,
                  "endLine": 138,
                  "endColumn": 47,
                  "charOffset": 6316,
                  "charLength": 162,
                  "snippet": {
                    "text": "        /// </summary>\r\n        [DataMember(Name = \"baselineState\", IsRequired = false, EmitDefaultValue = false)]\r\n        [JsonConverter(typeof(EnumConverter))]"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Result.Attachments"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'Result.CodeFlows' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Result.cs"
                },
                "region": {
                  "startLine": 105,
                  "snippet": {
                    "text": "        /// </summary>"
                  }
                },
                "contextRegion": {
                  "startLine": 104,
                  "startColumn": 1,
                  "endLine": 106,
                  "endColumn": 87,
                  "charOffset": 4770,
                  "charLength": 178,
                  "snippet": {
                    "text": "        /// An array of 'codeFlow' objects relevant to the result.\r\n        /// </summary>\r\n        [DataMember(Name = \"codeFlows\", IsRequired = false, EmitDefaultValue = false)]"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Result.CodeFlows"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'Result.ConversionProvenance' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Result.cs"
                },
                "region": {
                  "startLine": 149,
                  "snippet": {
                    "text": "        /// </summary>"
                  }
                },
                "contextRegion": {
                  "startLine": 148,
                  "startColumn": 1,
                  "endLine": 150,
                  "endColumn": 90,
                  "charOffset": 6814,
                  "charLength": 181,
                  "snippet": {
                    "text": "        /// The URIs of the work items associated with this result\r\n        /// </summary>\r\n        [DataMember(Name = \"workItemUris\", IsRequired = false, EmitDefaultValue = false)]"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Result.ConversionProvenance"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'Result.Fingerprints' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Result.cs"
                },
                "region": {
                  "startLine": 93,
                  "snippet": {
                    "text": "        /// </summary>"
                  }
                },
                "contextRegion": {
                  "startLine": 92,
                  "startColumn": 1,
                  "endLine": 94,
                  "endColumn": 90,
                  "charOffset": 4203,
                  "charLength": 220,
                  "snippet": {
                    "text": "        /// A set of strings each of which individually defines a stable, unique identity for the result.\r\n        /// </summary>\r\n        [DataMember(Name = \"fingerprints\", IsRequired = false, EmitDefaultValue = false)]"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Result.Fingerprints"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'Result.Fixes' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Result.cs"
                },
                "region": {
                  "startLine": 155,
                  "snippet": {
                    "text": "        /// An array of physicalLocation objects which specify the portions of an analysis tool's output that a converter transformed into the result object."
                  }
                },
                "contextRegion": {
                  "startLine": 154,
                  "startColumn": 1,
                  "endLine": 156,
                  "endColumn": 23,
                  "charOffset": 7100,
                  "charLength": 204,
                  "snippet": {
                    "text": "        /// <summary>\r\n        /// An array of physicalLocation objects which specify the portions of an analysis tool's output that a converter transformed into the result object.\r\n        /// </summary>"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Result.Fixes"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'Result.Graphs' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Result.cs"
                },
                "region": {
                  "startLine": 111,
                  "snippet": {
                    "text": "        /// </summary>"
                  }
                },
                "contextRegion": {
                  "startLine": 110,
                  "startColumn": 1,
                  "endLine": 112,
                  "endColumn": 84,
                  "charOffset": 5031,
                  "charLength": 233,
                  "snippet": {
                    "text": "        /// A dictionary, each of whose keys is the id of a graph and each of whose values is a 'graph' object with that id.\r\n        /// </summary>\r\n        [DataMember(Name = \"graphs\", IsRequired = false, EmitDefaultValue = false)]"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Result.Graphs"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'Result.GraphTraversals' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Result.cs"
                },
                "region": {
                  "startLine": 117,
                  "snippet": {
                    "text": "        /// </summary>"
                  }
                },
                "contextRegion": {
                  "startLine": 116,
                  "startColumn": 1,
                  "endLine": 118,
                  "endColumn": 93,
                  "charOffset": 5355,
                  "charLength": 186,
                  "snippet": {
                    "text": "        /// An array of one or more unique 'graphTraversal' objects.\r\n        /// </summary>\r\n        [DataMember(Name = \"graphTraversals\", IsRequired = false, EmitDefaultValue = false)]"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Result.GraphTraversals"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1502",
          "level": "warning",
          "message": {
            "text": "'Result.Init(string, ResultLevel, Message, string, FileLocation, IEnumerable<Location>, string, string, IDictionary<string, string>, IDictionary<string, string>, IEnumerable<Stack>, IEnumerable<CodeFlow>, IEnumerable<Graph>, IEnumerable<GraphTraversal>, IEnumerable<Location>, SuppressionStates, BaselineState, IEnumerable<Attachment>, IEnumerable<Uri>, IEnumerable<PhysicalLocation>, IEnumerable<Fix>, IDictionary<string, SerializedPropertyInfo>)' has a cyclomatic complexity of 45. Rewrite or refactor the method to reduce complexity to 25."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Result.cs"
                },
                "region": {
                  "startLine": 282,
                  "snippet": {
                    "text": "            return (Result)DeepCloneCore();"
                  }
                },
                "contextRegion": {
                  "startLine": 281,
                  "startColumn": 1,
                  "endLine": 283,
                  "endColumn": 10,
                  "charOffset": 14054,
                  "charLength": 65,
                  "snippet": {
                    "text": "        {\r\n            return (Result)DeepCloneCore();\r\n        }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Result.Init(System.String,Microsoft.CodeAnalysis.Sarif.ResultLevel,Microsoft.CodeAnalysis.Sarif.Message,System.String,Microsoft.CodeAnalysis.Sarif.FileLocation,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Location>,System.String,System.String,System.Collections.Generic.IDictionary`2<System.String,System.String>,System.Collections.Generic.IDictionary`2<System.String,System.String>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Stack>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.CodeFlow>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Graph>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.GraphTraversal>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Location>,Microsoft.CodeAnalysis.Sarif.SuppressionStates,Microsoft.CodeAnalysis.Sarif.BaselineState,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Attachment>,System.Collections.Generic.IEnumerable`1<System.Uri>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.PhysicalLocation>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Fix>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Maintainability",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'Result.Locations' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Result.cs"
                },
                "region": {
                  "startLine": 69,
                  "snippet": {
                    "text": "        /// </summary>"
                  }
                },
                "contextRegion": {
                  "startLine": 68,
                  "startColumn": 1,
                  "endLine": 70,
                  "endColumn": 90,
                  "charOffset": 2960,
                  "charLength": 191,
                  "snippet": {
                    "text": "        /// A stable, unique identifer for the result in the form of a GUID.\r\n        /// </summary>\r\n        [DataMember(Name = \"instanceGuid\", IsRequired = false, EmitDefaultValue = false)]"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Result.Locations"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'Result.PartialFingerprints' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Result.cs"
                },
                "region": {
                  "startLine": 87,
                  "snippet": {
                    "text": "        /// </summary>"
                  }
                },
                "contextRegion": {
                  "startLine": 86,
                  "startColumn": 1,
                  "endLine": 88,
                  "endColumn": 97,
                  "charOffset": 3886,
                  "charLength": 212,
                  "snippet": {
                    "text": "        /// A set of strings that contribute to the stable, unique identity of the result.\r\n        /// </summary>\r\n        [DataMember(Name = \"partialFingerprints\", IsRequired = false, EmitDefaultValue = false)]"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Result.PartialFingerprints"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'Result.RelatedLocations' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Result.cs"
                },
                "region": {
                  "startLine": 123,
                  "snippet": {
                    "text": "        /// </summary>"
                  }
                },
                "contextRegion": {
                  "startLine": 122,
                  "startColumn": 1,
                  "endLine": 124,
                  "endColumn": 94,
                  "charOffset": 5636,
                  "charLength": 174,
                  "snippet": {
                    "text": "        /// A set of locations relevant to this result.\r\n        /// </summary>\r\n        [DataMember(Name = \"relatedLocations\", IsRequired = false, EmitDefaultValue = false)]"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Result.RelatedLocations"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'Result.Stacks' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Result.cs"
                },
                "region": {
                  "startLine": 99,
                  "snippet": {
                    "text": "        /// </summary>"
                  }
                },
                "contextRegion": {
                  "startLine": 98,
                  "startColumn": 1,
                  "endLine": 100,
                  "endColumn": 84,
                  "charOffset": 4521,
                  "charLength": 172,
                  "snippet": {
                    "text": "        /// An array of 'stack' objects relevant to the result.\r\n        /// </summary>\r\n        [DataMember(Name = \"stacks\", IsRequired = false, EmitDefaultValue = false)]"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Result.Stacks"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'Result.WorkItemUris' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Result.cs"
                },
                "region": {
                  "startLine": 143,
                  "snippet": {
                    "text": "        /// </summary>"
                  }
                },
                "contextRegion": {
                  "startLine": 142,
                  "startColumn": 1,
                  "endLine": 144,
                  "endColumn": 89,
                  "charOffset": 6563,
                  "charLength": 164,
                  "snippet": {
                    "text": "        /// A set of files relevant to the result.\r\n        /// </summary>\r\n        [DataMember(Name = \"attachments\", IsRequired = false, EmitDefaultValue = false)]"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Result.WorkItemUris"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1502",
          "level": "error",
          "message": {
            "text": "'ResultEqualityComparer.Equals(Result, Result)' has a cyclomatic complexity of 97. Rewrite or refactor the method to reduce complexity to 25."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/ResultEqualityComparer.cs"
                },
                "region": {
                  "startLine": 20,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 19,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 46,
                  "charOffset": 710,
                  "charLength": 111,
                  "snippet": {
                    "text": "        public bool Equals(Result left, Result right)\r\n        {\r\n            if (ReferenceEquals(left, right))"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.ResultEqualityComparer.Equals(Microsoft.CodeAnalysis.Sarif.Result,Microsoft.CodeAnalysis.Sarif.Result)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Maintainability",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1809",
          "level": "warning",
          "message": {
            "text": "'ResultEqualityComparer.Equals(Result, Result)' has 93 local variables, 77 of which were generated by the compiler. Refactor 'ResultEqualityComparer.Equals(Result, Result)' so that it uses fewer than 64 local variables.",
            "messageId": "Compiler"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/ResultEqualityComparer.cs"
                },
                "region": {
                  "startLine": 20,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 19,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 46,
                  "charOffset": 710,
                  "charLength": 111,
                  "snippet": {
                    "text": "        public bool Equals(Result left, Result right)\r\n        {\r\n            if (ReferenceEquals(left, right))"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.ResultEqualityComparer.Equals(Microsoft.CodeAnalysis.Sarif.Result,Microsoft.CodeAnalysis.Sarif.Result)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Compiler"
          },
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1505",
          "level": "warning",
          "message": {
            "text": "'ResultEqualityComparer.Equals(Result, Result)' has a maintainability index of 14. Rewrite or refactor the method to increase its maintainability index (MI). An MI below 10 indicates poor maintainability, an MI between 10 and 20 indicates moderate maintainability, and an MI above 20 indicates good maintainability.",
            "messageId": "Method"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/ResultEqualityComparer.cs"
                },
                "region": {
                  "startLine": 20,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 19,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 46,
                  "charOffset": 710,
                  "charLength": 111,
                  "snippet": {
                    "text": "        public bool Equals(Result left, Result right)\r\n        {\r\n            if (ReferenceEquals(left, right))"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.ResultEqualityComparer.Equals(Microsoft.CodeAnalysis.Sarif.Result,Microsoft.CodeAnalysis.Sarif.Result)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Method"
          },
          "properties": {
            "Category": "Microsoft.Maintainability",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1502",
          "level": "warning",
          "message": {
            "text": "'ResultEqualityComparer.GetHashCode(Result)' has a cyclomatic complexity of 60. Rewrite or refactor the method to reduce complexity to 25."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/ResultEqualityComparer.cs"
                },
                "region": {
                  "startLine": 356,
                  "snippet": {
                    "text": "        public int GetHashCode(Result obj)"
                  }
                },
                "contextRegion": {
                  "startLine": 355,
                  "startColumn": 1,
                  "endLine": 357,
                  "endColumn": 10,
                  "charOffset": 11873,
                  "charLength": 55,
                  "snippet": {
                    "text": "\r\n        public int GetHashCode(Result obj)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.ResultEqualityComparer.GetHashCode(Microsoft.CodeAnalysis.Sarif.Result)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Maintainability",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1809",
          "level": "warning",
          "message": {
            "text": "'ResultEqualityComparer.GetHashCode(Result)' has 67 local variables, 50 of which were generated by the compiler. Refactor 'ResultEqualityComparer.GetHashCode(Result)' so that it uses fewer than 64 local variables.",
            "messageId": "Compiler"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/ResultEqualityComparer.cs"
                },
                "region": {
                  "startLine": 356,
                  "snippet": {
                    "text": "        public int GetHashCode(Result obj)"
                  }
                },
                "contextRegion": {
                  "startLine": 355,
                  "startColumn": 1,
                  "endLine": 357,
                  "endColumn": 10,
                  "charOffset": 11873,
                  "charLength": 55,
                  "snippet": {
                    "text": "\r\n        public int GetHashCode(Result obj)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.ResultEqualityComparer.GetHashCode(Microsoft.CodeAnalysis.Sarif.Result)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Compiler"
          },
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'Rule.Rule(Rule)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nRule..ctor(Rule)\r\nRule.Init(String, Message, Message, Message, IDictionary<String,String>, IDictionary<String,String>, RuleConfiguration, Uri, Message, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Rule.cs"
                },
                "region": {
                  "startLine": 149,
                  "snippet": {
                    "text": "        public Rule(Rule other)"
                  }
                },
                "contextRegion": {
                  "startLine": 148,
                  "startColumn": 1,
                  "endLine": 150,
                  "endColumn": 10,
                  "charOffset": 7077,
                  "charLength": 68,
                  "snippet": {
                    "text": "        /// </exception>\r\n        public Rule(Rule other)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Rule..ctor(Microsoft.CodeAnalysis.Sarif.Rule)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'Rule.Rule(string, Message, Message, Message, IDictionary<string, string>, IDictionary<string, string>, RuleConfiguration, Uri, Message, IDictionary<string, SerializedPropertyInfo>)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nRule..ctor(String, Message, Message, Message, IDictionary<String,String>, IDictionary<String,String>, RuleConfiguration, Uri, Message, IDictionary<String,SerializedPropertyInfo>)\r\nRule.Init(String, Message, Message, Message, IDictionary<String,String>, IDictionary<String,String>, RuleConfiguration, Uri, Message, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Rule.cs"
                },
                "region": {
                  "startLine": 135,
                  "snippet": {
                    "text": "        public Rule(string id, Message name, Message shortDescription, Message fullDescription, IDictionary<string, string> messageStrings, IDictionary<string, string> richMessageStrings, RuleConfiguration configuration, Uri helpUri, Message help, IDictionary<string, SerializedPropertyInfo> properties)"
                  }
                },
                "contextRegion": {
                  "startLine": 134,
                  "startColumn": 1,
                  "endLine": 136,
                  "endColumn": 10,
                  "charOffset": 6191,
                  "charLength": 336,
                  "snippet": {
                    "text": "        /// </param>\r\n        public Rule(string id, Message name, Message shortDescription, Message fullDescription, IDictionary<string, string> messageStrings, IDictionary<string, string> richMessageStrings, RuleConfiguration configuration, Uri helpUri, Message help, IDictionary<string, SerializedPropertyInfo> properties)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Rule..ctor(System.String,Microsoft.CodeAnalysis.Sarif.Message,Microsoft.CodeAnalysis.Sarif.Message,Microsoft.CodeAnalysis.Sarif.Message,System.Collections.Generic.IDictionary`2<System.String,System.String>,System.Collections.Generic.IDictionary`2<System.String,System.String>,Microsoft.CodeAnalysis.Sarif.RuleConfiguration,System.Uri,Microsoft.CodeAnalysis.Sarif.Message,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'Rule.MessageStrings' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Rule.cs"
                },
                "region": {
                  "startLine": 63,
                  "snippet": {
                    "text": "        public IDictionary<string, string> MessageStrings { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 62,
                  "startColumn": 1,
                  "endLine": 64,
                  "endColumn": 1,
                  "charOffset": 2655,
                  "charLength": 166,
                  "snippet": {
                    "text": "        [DataMember(Name = \"messageStrings\", IsRequired = false, EmitDefaultValue = false)]\r\n        public IDictionary<string, string> MessageStrings { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Rule.MessageStrings"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'Rule.RichMessageStrings' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Rule.cs"
                },
                "region": {
                  "startLine": 69,
                  "snippet": {
                    "text": "        public IDictionary<string, string> RichMessageStrings { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 68,
                  "startColumn": 1,
                  "endLine": 70,
                  "endColumn": 1,
                  "charOffset": 3136,
                  "charLength": 174,
                  "snippet": {
                    "text": "        [DataMember(Name = \"richMessageStrings\", IsRequired = false, EmitDefaultValue = false)]\r\n        public IDictionary<string, string> RichMessageStrings { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Rule.RichMessageStrings"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'RuleConfiguration.Parameters' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/RuleConfiguration.cs"
                },
                "region": {
                  "startLine": 51,
                  "snippet": {
                    "text": "        /// </summary>"
                  }
                },
                "contextRegion": {
                  "startLine": 50,
                  "startColumn": 1,
                  "endLine": 52,
                  "endColumn": 88,
                  "charOffset": 1861,
                  "charLength": 182,
                  "snippet": {
                    "text": "        /// Contains configuration information specific to this rule.\r\n        /// </summary>\r\n        [DataMember(Name = \"parameters\", IsRequired = false, EmitDefaultValue = false)]"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.RuleConfiguration.Parameters"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1502",
          "level": "warning",
          "message": {
            "text": "'RuleEqualityComparer.Equals(Rule, Rule)' has a cyclomatic complexity of 35. Rewrite or refactor the method to reduce complexity to 25."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/RuleEqualityComparer.cs"
                },
                "region": {
                  "startLine": 20,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 19,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 46,
                  "charOffset": 700,
                  "charLength": 107,
                  "snippet": {
                    "text": "        public bool Equals(Rule left, Rule right)\r\n        {\r\n            if (ReferenceEquals(left, right))"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.RuleEqualityComparer.Equals(Microsoft.CodeAnalysis.Sarif.Rule,Microsoft.CodeAnalysis.Sarif.Rule)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Maintainability",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1026",
          "level": "error",
          "message": {
            "text": "Replace method 'RuleUtilities.BuildDictionary(ResourceManager, IEnumerable<string>, string, string)' with an overload that supplies all default arguments."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/RuleUtilities.cs"
                },
                "region": {
                  "startLine": 74,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 73,
                  "startColumn": 1,
                  "endLine": 75,
                  "endColumn": 25,
                  "charOffset": 2335,
                  "charLength": 70,
                  "snippet": {
                    "text": "            string prefix = null)\r\n        {\r\n            //validation"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.RuleUtilities.BuildDictionary(System.Resources.ResourceManager,System.Collections.Generic.IEnumerable`1<System.String>,System.String,System.String)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1026",
          "level": "error",
          "message": {
            "text": "Replace method 'RuleUtilities.NormalizeRuleMessageId(string, string, string)' with an overload that supplies all default arguments."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/RuleUtilities.cs"
                },
                "region": {
                  "startLine": 104,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 103,
                  "startColumn": 1,
                  "endLine": 105,
                  "endColumn": 39,
                  "charOffset": 3504,
                  "charLength": 161,
                  "snippet": {
                    "text": "        public static string NormalizeRuleMessageId(string ruleMessageId, string ruleId, string prefix = null)\r\n        {\r\n            if (ruleMessageId == null)"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.RuleUtilities.NormalizeRuleMessageId(System.String,System.String,System.String)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'Run.Run(Run)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nRun..ctor(Run)\r\nRun.Init(Tool, IEnumerable<Invocation>, Conversion, IEnumerable<VersionControlDetails>, IDictionary<String,Uri>, IDictionary<String,FileData>, IDictionary<String,LogicalLocation>, IEnumerable<Graph>, IEnumerable<Result>, Resources, String, String, Message, String, String, String, String, String, String, ColumnKind, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Run.cs"
                },
                "region": {
                  "startLine": 248,
                  "snippet": {
                    "text": "        }"
                  }
                },
                "contextRegion": {
                  "startLine": 247,
                  "startColumn": 1,
                  "endLine": 249,
                  "endColumn": 1,
                  "charOffset": 12561,
                  "charLength": 354,
                  "snippet": {
                    "text": "            Init(tool, invocations, conversion, versionControlProvenance, originalUriBaseIds, files, logicalLocations, graphs, results, resources, instanceGuid, correlationGuid, logicalId, description, automationLogicalId, baselineInstanceGuid, architecture, richMessageMimeType, redactionToken, defaultFileEncoding, columnKind, properties);\r\n        }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Run..ctor(Microsoft.CodeAnalysis.Sarif.Run)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'Run.Run(Tool, IEnumerable<Invocation>, Conversion, IEnumerable<VersionControlDetails>, IDictionary<string, Uri>, IDictionary<string, FileData>, IDictionary<string, LogicalLocation>, IEnumerable<Graph>, IEnumerable<Result>, Resources, string, string, Message, string, string, string, string, string, string, ColumnKind, IDictionary<string, SerializedPropertyInfo>)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nRun..ctor(Tool, IEnumerable<Invocation>, Conversion, IEnumerable<VersionControlDetails>, IDictionary<String,Uri>, IDictionary<String,FileData>, IDictionary<String,LogicalLocation>, IEnumerable<Graph>, IEnumerable<Result>, Resources, String, String, Message, String, String, String, String, String, String, ColumnKind, IDictionary<String,SerializedPropertyInfo>)\r\nRun.Init(Tool, IEnumerable<Invocation>, Conversion, IEnumerable<VersionControlDetails>, IDictionary<String,Uri>, IDictionary<String,FileData>, IDictionary<String,LogicalLocation>, IEnumerable<Graph>, IEnumerable<Result>, Resources, String, String, Message, String, String, String, String, String, String, ColumnKind, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Run.cs"
                },
                "region": {
                  "startLine": 234,
                  "snippet": {
                    "text": "        /// An initialization value for the <see cref=\"P: RedactionToken\" /> property."
                  }
                },
                "contextRegion": {
                  "startLine": 233,
                  "startColumn": 1,
                  "endLine": 235,
                  "endColumn": 21,
                  "charOffset": 11250,
                  "charLength": 151,
                  "snippet": {
                    "text": "        /// <param name=\"redactionToken\">\r\n        /// An initialization value for the <see cref=\"P: RedactionToken\" /> property.\r\n        /// </param>"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Run..ctor(Microsoft.CodeAnalysis.Sarif.Tool,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Invocation>,Microsoft.CodeAnalysis.Sarif.Conversion,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.VersionControlDetails>,System.Collections.Generic.IDictionary`2<System.String,System.Uri>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.FileData>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.LogicalLocation>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Graph>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Result>,Microsoft.CodeAnalysis.Sarif.Resources,System.String,System.String,Microsoft.CodeAnalysis.Sarif.Message,System.String,System.String,System.String,System.String,System.String,System.String,Microsoft.CodeAnalysis.Sarif.ColumnKind,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'Run.Files' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Run.cs"
                },
                "region": {
                  "startLine": 69,
                  "snippet": {
                    "text": "        /// </summary>"
                  }
                },
                "contextRegion": {
                  "startLine": 68,
                  "startColumn": 1,
                  "endLine": 70,
                  "endColumn": 83,
                  "charOffset": 3032,
                  "charLength": 204,
                  "snippet": {
                    "text": "        /// A dictionary, each of whose keys is a URI and each of whose values is a file object.\r\n        /// </summary>\r\n        [DataMember(Name = \"files\", IsRequired = false, EmitDefaultValue = false)]"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Run.Files"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'Run.Graphs' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Run.cs"
                },
                "region": {
                  "startLine": 81,
                  "snippet": {
                    "text": "        /// </summary>"
                  }
                },
                "contextRegion": {
                  "startLine": 80,
                  "startColumn": 1,
                  "endLine": 82,
                  "endColumn": 84,
                  "charOffset": 3671,
                  "charLength": 233,
                  "snippet": {
                    "text": "        /// A dictionary, each of whose keys is the id of a graph and each of whose values is a 'graph' object with that id.\r\n        /// </summary>\r\n        [DataMember(Name = \"graphs\", IsRequired = false, EmitDefaultValue = false)]"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Run.Graphs"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1502",
          "level": "warning",
          "message": {
            "text": "'Run.Init(Tool, IEnumerable<Invocation>, Conversion, IEnumerable<VersionControlDetails>, IDictionary<string, Uri>, IDictionary<string, FileData>, IDictionary<string, LogicalLocation>, IEnumerable<Graph>, IEnumerable<Result>, Resources, string, string, Message, string, string, string, string, string, string, ColumnKind, IDictionary<string, SerializedPropertyInfo>)' has a cyclomatic complexity of 28. Rewrite or refactor the method to reduce complexity to 25."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Run.cs"
                },
                "region": {
                  "startLine": 277,
                  "snippet": {
                    "text": "        public Run DeepClone()"
                  }
                },
                "contextRegion": {
                  "startLine": 276,
                  "startColumn": 1,
                  "endLine": 278,
                  "endColumn": 10,
                  "charOffset": 14172,
                  "charLength": 65,
                  "snippet": {
                    "text": "        /// </summary>\r\n        public Run DeepClone()\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Run.Init(Microsoft.CodeAnalysis.Sarif.Tool,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Invocation>,Microsoft.CodeAnalysis.Sarif.Conversion,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.VersionControlDetails>,System.Collections.Generic.IDictionary`2<System.String,System.Uri>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.FileData>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.LogicalLocation>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Graph>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Result>,Microsoft.CodeAnalysis.Sarif.Resources,System.String,System.String,Microsoft.CodeAnalysis.Sarif.Message,System.String,System.String,System.String,System.String,System.String,System.String,Microsoft.CodeAnalysis.Sarif.ColumnKind,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Maintainability",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1801",
          "level": "warning",
          "message": {
            "text": "Parameter 'originalUriBaseIds' of 'Run.Init(Tool, IEnumerable<Invocation>, Conversion, IEnumerable<VersionControlDetails>, IDictionary<string, Uri>, IDictionary<string, FileData>, IDictionary<string, LogicalLocation>, IEnumerable<Graph>, IEnumerable<Result>, Resources, string, string, Message, string, string, string, string, string, string, ColumnKind, IDictionary<string, SerializedPropertyInfo>)' is never used. Remove the parameter or use it in the method body."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Run.cs"
                },
                "region": {
                  "startLine": 277,
                  "snippet": {
                    "text": "        public Run DeepClone()"
                  }
                },
                "contextRegion": {
                  "startLine": 276,
                  "startColumn": 1,
                  "endLine": 278,
                  "endColumn": 10,
                  "charOffset": 14172,
                  "charLength": 65,
                  "snippet": {
                    "text": "        /// </summary>\r\n        public Run DeepClone()\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Run.Init(Microsoft.CodeAnalysis.Sarif.Tool,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Invocation>,Microsoft.CodeAnalysis.Sarif.Conversion,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.VersionControlDetails>,System.Collections.Generic.IDictionary`2<System.String,System.Uri>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.FileData>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.LogicalLocation>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Graph>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Result>,Microsoft.CodeAnalysis.Sarif.Resources,System.String,System.String,Microsoft.CodeAnalysis.Sarif.Message,System.String,System.String,System.String,System.String,System.String,System.String,Microsoft.CodeAnalysis.Sarif.ColumnKind,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "originalUriBaseIds"
          },
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'Run.Invocations' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Run.cs"
                },
                "region": {
                  "startLine": 45,
                  "snippet": {
                    "text": "        [DataMember(Name = \"invocations\", IsRequired = false, EmitDefaultValue = false)]"
                  }
                },
                "contextRegion": {
                  "startLine": 44,
                  "startColumn": 1,
                  "endLine": 46,
                  "endColumn": 59,
                  "charOffset": 1803,
                  "charLength": 172,
                  "snippet": {
                    "text": "        /// </summary>\r\n        [DataMember(Name = \"invocations\", IsRequired = false, EmitDefaultValue = false)]\r\n        public IList<Invocation> Invocations { get; set; }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Run.Invocations"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'Run.LogicalLocations' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Run.cs"
                },
                "region": {
                  "startLine": 75,
                  "snippet": {
                    "text": "        /// </summary>"
                  }
                },
                "contextRegion": {
                  "startLine": 74,
                  "startColumn": 1,
                  "endLine": 76,
                  "endColumn": 94,
                  "charOffset": 3329,
                  "charLength": 231,
                  "snippet": {
                    "text": "        /// A dictionary, each of whose keys specifies a logical location such as a namespace, type or function.\r\n        /// </summary>\r\n        [DataMember(Name = \"logicalLocations\", IsRequired = false, EmitDefaultValue = false)]"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Run.LogicalLocations"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'Run.OriginalUriBaseIds' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Run.cs"
                },
                "region": {
                  "startLine": 63,
                  "snippet": {
                    "text": "        [DataMember(Name = \"originalUriBaseIds\", IsRequired = false, EmitDefaultValue = false)]"
                  }
                },
                "contextRegion": {
                  "startLine": 62,
                  "startColumn": 1,
                  "endLine": 64,
                  "endColumn": 46,
                  "charOffset": 2765,
                  "charLength": 166,
                  "snippet": {
                    "text": "        /// </summary>\r\n        [DataMember(Name = \"originalUriBaseIds\", IsRequired = false, EmitDefaultValue = false)]\r\n        [JsonConverter(typeof(UriConverter))]"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Run.OriginalUriBaseIds"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'Run.Results' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Run.cs"
                },
                "region": {
                  "startLine": 87,
                  "snippet": {
                    "text": "        /// </summary>"
                  }
                },
                "contextRegion": {
                  "startLine": 86,
                  "startColumn": 1,
                  "endLine": 88,
                  "endColumn": 85,
                  "charOffset": 3995,
                  "charLength": 326,
                  "snippet": {
                    "text": "        /// The set of results contained in an SARIF log. The results array can be omitted when a run is solely exporting rules metadata. It must be present (but may be empty) if a log file represents an actual scan.\r\n        /// </summary>\r\n        [DataMember(Name = \"results\", IsRequired = false, EmitDefaultValue = false)]"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Run.Results"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'Run.VersionControlProvenance' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Run.cs"
                },
                "region": {
                  "startLine": 57,
                  "snippet": {
                    "text": "        [DataMember(Name = \"versionControlProvenance\", IsRequired = false, EmitDefaultValue = false)]"
                  }
                },
                "contextRegion": {
                  "startLine": 56,
                  "startColumn": 1,
                  "endLine": 58,
                  "endColumn": 83,
                  "charOffset": 2418,
                  "charLength": 209,
                  "snippet": {
                    "text": "        /// </summary>\r\n        [DataMember(Name = \"versionControlProvenance\", IsRequired = false, EmitDefaultValue = false)]\r\n        public IList<VersionControlDetails> VersionControlProvenance { get; set; }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Run.VersionControlProvenance"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1502",
          "level": "warning",
          "message": {
            "text": "'RunEqualityComparer.Equals(Run, Run)' has a cyclomatic complexity of 73. Rewrite or refactor the method to reduce complexity to 25."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/RunEqualityComparer.cs"
                },
                "region": {
                  "startLine": 20,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 19,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 46,
                  "charOffset": 695,
                  "charLength": 105,
                  "snippet": {
                    "text": "        public bool Equals(Run left, Run right)\r\n        {\r\n            if (ReferenceEquals(left, right))"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.RunEqualityComparer.Equals(Microsoft.CodeAnalysis.Sarif.Run,Microsoft.CodeAnalysis.Sarif.Run)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Maintainability",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1809",
          "level": "warning",
          "message": {
            "text": "'RunEqualityComparer.Equals(Run, Run)' has 68 local variables, 56 of which were generated by the compiler. Refactor 'RunEqualityComparer.Equals(Run, Run)' so that it uses fewer than 64 local variables.",
            "messageId": "Compiler"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/RunEqualityComparer.cs"
                },
                "region": {
                  "startLine": 20,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 19,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 46,
                  "charOffset": 695,
                  "charLength": 105,
                  "snippet": {
                    "text": "        public bool Equals(Run left, Run right)\r\n        {\r\n            if (ReferenceEquals(left, right))"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.RunEqualityComparer.Equals(Microsoft.CodeAnalysis.Sarif.Run,Microsoft.CodeAnalysis.Sarif.Run)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Compiler"
          },
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1502",
          "level": "warning",
          "message": {
            "text": "'RunEqualityComparer.GetHashCode(Run)' has a cyclomatic complexity of 46. Rewrite or refactor the method to reduce complexity to 25."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/RunEqualityComparer.cs"
                },
                "region": {
                  "startLine": 272,
                  "snippet": {
                    "text": "            }"
                  }
                },
                "contextRegion": {
                  "startLine": 271,
                  "startColumn": 1,
                  "endLine": 273,
                  "endColumn": 1,
                  "charOffset": 8995,
                  "charLength": 34,
                  "snippet": {
                    "text": "                }\r\n            }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.RunEqualityComparer.GetHashCode(Microsoft.CodeAnalysis.Sarif.Run)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Maintainability",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2217",
          "level": "error",
          "message": {
            "text": "'RuntimeConditions' is marked with FlagsAttribute but a discrete member cannot be found for every settable bit that is used across the range of enum values. Remove FlagsAttribute from the type or define new members for the following (currently missing) values: 0x100000, 0x200000, 0x400000, 0x800000, 0x1000000, 0x2000000"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.RuntimeConditions"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1028",
          "level": "warning",
          "message": {
            "text": "If possible, make the underlying type of 'RuntimeConditions' Int32 instead of 'uint'. Otherwise consider Byte, Int16, or Int64.",
            "messageId": "NotIntegral"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.RuntimeConditions"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "NotIntegral"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in type name 'SarifConstants'.",
            "messageId": "Type"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifConstants"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Type"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in type name 'SarifLog'.",
            "messageId": "Type"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifLog"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Type"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'SarifLog.Runs' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/SarifLog.cs"
                },
                "region": {
                  "startLine": 50,
                  "snippet": {
                    "text": "        /// </summary>"
                  }
                },
                "contextRegion": {
                  "startLine": 49,
                  "startColumn": 1,
                  "endLine": 51,
                  "endColumn": 55,
                  "charOffset": 1830,
                  "charLength": 135,
                  "snippet": {
                    "text": "        /// The set of runs contained in this log file.\r\n        /// </summary>\r\n        [DataMember(Name = \"runs\", IsRequired = true)]"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifLog.Runs"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in type name 'SarifNodeKind'.",
            "messageId": "Type"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifNodeKind"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Type"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in member name 'SarifNodeKind.SarifLog' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifNodeKind.SarifLog"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in type name 'SarifRewritingVisitor'.",
            "messageId": "Type"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifRewritingVisitor"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Type"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1506",
          "level": "warning",
          "message": {
            "text": "'SarifRewritingVisitor.VisitActual(ISarifNode)' is coupled with 39 different types from 2 different namespaces. Rewrite or refactor the method to decrease its class coupling, or consider moving the method to one of the other types it is tightly coupled with. A class coupling above 40 indicates poor maintainability, a class coupling between 40 and 30 indicates moderate maintainability, and a class coupling below 30 indicates good maintainability.",
            "messageId": "Method"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/SarifRewritingVisitor.cs"
                },
                "region": {
                  "startLine": 41,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 40,
                  "startColumn": 1,
                  "endLine": 42,
                  "endColumn": 30,
                  "charOffset": 1244,
                  "charLength": 100,
                  "snippet": {
                    "text": "        public virtual object VisitActual(ISarifNode node)\r\n        {\r\n            if (node == null)"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifRewritingVisitor.VisitActual(Microsoft.CodeAnalysis.Sarif.ISarifNode)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Method"
          },
          "properties": {
            "Category": "Microsoft.Maintainability",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1502",
          "level": "warning",
          "message": {
            "text": "'SarifRewritingVisitor.VisitActual(ISarifNode)' has a cyclomatic complexity of 38. Rewrite or refactor the method to reduce complexity to 25."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/SarifRewritingVisitor.cs"
                },
                "region": {
                  "startLine": 41,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 40,
                  "startColumn": 1,
                  "endLine": 42,
                  "endColumn": 30,
                  "charOffset": 1244,
                  "charLength": 100,
                  "snippet": {
                    "text": "        public virtual object VisitActual(ISarifNode node)\r\n        {\r\n            if (node == null)"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifRewritingVisitor.VisitActual(Microsoft.CodeAnalysis.Sarif.ISarifNode)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Maintainability",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in member name 'SarifRewritingVisitor.VisitSarifLog(SarifLog)' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/SarifRewritingVisitor.cs"
                },
                "region": {
                  "startLine": 697,
                  "snippet": {
                    "text": "                node.Name = VisitNullChecked(node.Name);"
                  }
                },
                "contextRegion": {
                  "startLine": 696,
                  "startColumn": 1,
                  "endLine": 698,
                  "endColumn": 81,
                  "charOffset": 24469,
                  "charLength": 153,
                  "snippet": {
                    "text": "            {\r\n                node.Name = VisitNullChecked(node.Name);\r\n                node.ShortDescription = VisitNullChecked(node.ShortDescription);"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifRewritingVisitor.VisitSarifLog(Microsoft.CodeAnalysis.Sarif.SarifLog)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in type name 'SarifUtilities'.",
            "messageId": "Type"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifUtilities"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Type"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "In method 'SarifUtilities.AddOrUpdateDictionaryEntry<TKey, TValue>(IDictionary<TKey, TValue>, TKey, TValue)', correct the spelling of 'val' in parameter name 'val' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "MemberParameter"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/SarifUtilities.cs"
                },
                "region": {
                  "startLine": 130,
                  "snippet": {
                    "text": "            if (dictionary.ContainsKey(key))"
                  }
                },
                "contextRegion": {
                  "startLine": 129,
                  "startColumn": 1,
                  "endLine": 131,
                  "endColumn": 14,
                  "charOffset": 5248,
                  "charLength": 70,
                  "snippet": {
                    "text": "        {\r\n            if (dictionary.ContainsKey(key))\r\n            {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifUtilities.AddOrUpdateDictionaryEntry`2(System.Collections.Generic.IDictionary`2<!!0,!!1>,!!0,!!1)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "val#MemberParameter"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'SarifUtilities.AddOrUpdateDictionaryEntry<TKey, TValue>(IDictionary<TKey, TValue>, TKey, TValue)', validate parameter 'dictionary' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/SarifUtilities.cs"
                },
                "region": {
                  "startLine": 131,
                  "snippet": {
                    "text": "            {"
                  }
                },
                "contextRegion": {
                  "startLine": 130,
                  "startColumn": 1,
                  "endLine": 132,
                  "endColumn": 39,
                  "charOffset": 5259,
                  "charLength": 99,
                  "snippet": {
                    "text": "            if (dictionary.ContainsKey(key))\r\n            {\r\n                dictionary[key] = val;"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifUtilities.AddOrUpdateDictionaryEntry`2(System.Collections.Generic.IDictionary`2<!!0,!!1>,!!0,!!1)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in member name 'SarifUtilities.ConvertToSarifVersion(this string)' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/SarifUtilities.cs"
                },
                "region": {
                  "startLine": 40,
                  "snippet": {
                    "text": "        public static SarifVersion ConvertToSarifVersion(this string sarifVersionText)"
                  }
                },
                "contextRegion": {
                  "startLine": 39,
                  "startColumn": 1,
                  "endLine": 41,
                  "endColumn": 10,
                  "charOffset": 1716,
                  "charLength": 99,
                  "snippet": {
                    "text": "\r\n        public static SarifVersion ConvertToSarifVersion(this string sarifVersionText)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifUtilities.ConvertToSarifVersion(System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "In method 'SarifUtilities.ConvertToSarifVersion(this string)', correct the spelling of 'sarif' in parameter name 'sarifVersionText' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "MemberParameter"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/SarifUtilities.cs"
                },
                "region": {
                  "startLine": 40,
                  "snippet": {
                    "text": "        public static SarifVersion ConvertToSarifVersion(this string sarifVersionText)"
                  }
                },
                "contextRegion": {
                  "startLine": 39,
                  "startColumn": 1,
                  "endLine": 41,
                  "endColumn": 10,
                  "charOffset": 1716,
                  "charLength": 99,
                  "snippet": {
                    "text": "\r\n        public static SarifVersion ConvertToSarifVersion(this string sarifVersionText)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifUtilities.ConvertToSarifVersion(System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "sarif#MemberParameter"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "In method 'SarifUtilities.ConvertToSchemaUri(this SarifVersion)', correct the spelling of 'sarif' in parameter name 'sarifVersion' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "MemberParameter"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/SarifUtilities.cs"
                },
                "region": {
                  "startLine": 63,
                  "snippet": {
                    "text": "            return new Uri(SarifSchemaUriBase + sarifVersion.ConvertToText(), UriKind.Absolute);"
                  }
                },
                "contextRegion": {
                  "startLine": 62,
                  "startColumn": 1,
                  "endLine": 64,
                  "endColumn": 10,
                  "charOffset": 2521,
                  "charLength": 118,
                  "snippet": {
                    "text": "        {\r\n            return new Uri(SarifSchemaUriBase + sarifVersion.ConvertToText(), UriKind.Absolute);\r\n        }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifUtilities.ConvertToSchemaUri(Microsoft.CodeAnalysis.Sarif.SarifVersion)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "sarif#MemberParameter"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "In method 'SarifUtilities.ConvertToText(this SarifVersion)', correct the spelling of 'sarif' in parameter name 'sarifVersion' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "MemberParameter"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/SarifUtilities.cs"
                },
                "region": {
                  "startLine": 52,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 51,
                  "startColumn": 1,
                  "endLine": 53,
                  "endColumn": 34,
                  "charOffset": 2091,
                  "charLength": 120,
                  "snippet": {
                    "text": "        public static string ConvertToText(this SarifVersion sarifVersion)\r\n        {\r\n            switch (sarifVersion)"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifUtilities.ConvertToText(Microsoft.CodeAnalysis.Sarif.SarifVersion)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "sarif#MemberParameter"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1026",
          "level": "error",
          "message": {
            "text": "Replace method 'SarifUtilities.CreateSingleThreadedCodeFlow(IEnumerable<ThreadFlowLocation>)' with an overload that supplies all default arguments."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/SarifUtilities.cs"
                },
                "region": {
                  "startLine": 142,
                  "snippet": {
                    "text": "            return new CodeFlow"
                  }
                },
                "contextRegion": {
                  "startLine": 141,
                  "startColumn": 1,
                  "endLine": 143,
                  "endColumn": 14,
                  "charOffset": 5590,
                  "charLength": 57,
                  "snippet": {
                    "text": "        {\r\n            return new CodeFlow\r\n            {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifUtilities.CreateSingleThreadedCodeFlow(System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.ThreadFlowLocation>)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1026",
          "level": "error",
          "message": {
            "text": "Replace method 'SarifUtilities.DecodeBase64String(string, Encoding)' with an overload that supplies all default arguments."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/SarifUtilities.cs"
                },
                "region": {
                  "startLine": 167,
                  "snippet": {
                    "text": "            encoding = encoding ?? Encoding.UTF8;"
                  }
                },
                "contextRegion": {
                  "startLine": 166,
                  "startColumn": 1,
                  "endLine": 168,
                  "endColumn": 56,
                  "charOffset": 6384,
                  "charLength": 117,
                  "snippet": {
                    "text": "        {\r\n            encoding = encoding ?? Encoding.UTF8;\r\n            byte[] bytes = Convert.FromBase64String(s);"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifUtilities.DecodeBase64String(System.String,System.Text.Encoding)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "In method 'SarifUtilities.DecodeBase64String(string, Encoding)', consider providing a more meaningful name than parameter name 's'.",
            "messageId": "MemberParameterMoreMeaningfulName"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/SarifUtilities.cs"
                },
                "region": {
                  "startLine": 167,
                  "snippet": {
                    "text": "            encoding = encoding ?? Encoding.UTF8;"
                  }
                },
                "contextRegion": {
                  "startLine": 166,
                  "startColumn": 1,
                  "endLine": 168,
                  "endColumn": 56,
                  "charOffset": 6384,
                  "charLength": 117,
                  "snippet": {
                    "text": "        {\r\n            encoding = encoding ?? Encoding.UTF8;\r\n            byte[] bytes = Convert.FromBase64String(s);"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifUtilities.DecodeBase64String(System.String,System.Text.Encoding)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "s#MemberParameterMoreMeaningfulName"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "In method 'SarifUtilities.GetBase64String(string, Encoding)', consider providing a more meaningful name than parameter name 's'.",
            "messageId": "MemberParameterMoreMeaningfulName"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/SarifUtilities.cs"
                },
                "region": {
                  "startLine": 161,
                  "snippet": {
                    "text": "            byte[] bytes = encoding.GetBytes(s);"
                  }
                },
                "contextRegion": {
                  "startLine": 160,
                  "startColumn": 1,
                  "endLine": 162,
                  "endColumn": 50,
                  "charOffset": 6174,
                  "charLength": 110,
                  "snippet": {
                    "text": "        {\r\n            byte[] bytes = encoding.GetBytes(s);\r\n            return Convert.ToBase64String(bytes);"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifUtilities.GetBase64String(System.String,System.Text.Encoding)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "s#MemberParameterMoreMeaningfulName"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'SarifUtilities.GetBase64String(string, Encoding)', validate parameter 'encoding' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/SarifUtilities.cs"
                },
                "region": {
                  "startLine": 162,
                  "snippet": {
                    "text": "            return Convert.ToBase64String(bytes);"
                  }
                },
                "contextRegion": {
                  "startLine": 161,
                  "startColumn": 1,
                  "endLine": 163,
                  "endColumn": 10,
                  "charOffset": 6185,
                  "charLength": 110,
                  "snippet": {
                    "text": "            byte[] bytes = encoding.GetBytes(s);\r\n            return Convert.ToBase64String(bytes);\r\n        }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifUtilities.GetBase64String(System.String,System.Text.Encoding)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "1"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1720",
          "level": "error",
          "message": {
            "text": "In member 'SarifUtilities.GetByteLength(char[], Encoding)', consider replacing the data type identifier 'chars' in parameter name 'chars' with a more generic term, such as 'value'.",
            "messageId": "LanguageIndependentMemberParameter"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/SarifUtilities.cs"
                },
                "region": {
                  "startLine": 174,
                  "snippet": {
                    "text": "            chars = chars ?? throw new ArgumentNullException(nameof(chars));"
                  }
                },
                "contextRegion": {
                  "startLine": 173,
                  "startColumn": 1,
                  "endLine": 175,
                  "endColumn": 86,
                  "charOffset": 6637,
                  "charLength": 174,
                  "snippet": {
                    "text": "        {\r\n            chars = chars ?? throw new ArgumentNullException(nameof(chars));\r\n            encoding = encoding ?? throw new ArgumentNullException(nameof(encoding));"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifUtilities.GetByteLength(System.Char[],System.Text.Encoding)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "chars#LanguageIndependentMemberParameter"
          },
          "properties": {
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "In method 'SarifUtilities.GetByteLength(string, Encoding)', consider providing a more meaningful name than parameter name 's'.",
            "messageId": "MemberParameterMoreMeaningfulName"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/SarifUtilities.cs"
                },
                "region": {
                  "startLine": 183,
                  "snippet": {
                    "text": "            s = s ?? throw new ArgumentNullException(nameof(s));"
                  }
                },
                "contextRegion": {
                  "startLine": 182,
                  "startColumn": 1,
                  "endLine": 184,
                  "endColumn": 86,
                  "charOffset": 6989,
                  "charLength": 162,
                  "snippet": {
                    "text": "        {\r\n            s = s ?? throw new ArgumentNullException(nameof(s));\r\n            encoding = encoding ?? throw new ArgumentNullException(nameof(encoding));"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifUtilities.GetByteLength(System.String,System.Text.Encoding)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "s#MemberParameterMoreMeaningfulName"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "In method 'SarifUtilities.GetUtf8Base64String(string)', consider providing a more meaningful name than parameter name 's'.",
            "messageId": "MemberParameterMoreMeaningfulName"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/SarifUtilities.cs"
                },
                "region": {
                  "startLine": 156,
                  "snippet": {
                    "text": "            return GetBase64String(s, Encoding.UTF8);"
                  }
                },
                "contextRegion": {
                  "startLine": 155,
                  "startColumn": 1,
                  "endLine": 157,
                  "endColumn": 10,
                  "charOffset": 6020,
                  "charLength": 75,
                  "snippet": {
                    "text": "        {\r\n            return GetBase64String(s, Encoding.UTF8);\r\n        }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifUtilities.GetUtf8Base64String(System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "s#MemberParameterMoreMeaningfulName"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in member name 'SarifUtilities.SarifDateTimeFormatMillisecondsPrecision' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifUtilities.SarifDateTimeFormatMillisecondsPrecision"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in member name 'SarifUtilities.SarifDateTimeFormatSecondsPrecision' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifUtilities.SarifDateTimeFormatSecondsPrecision"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in type name 'SarifUtilitiesVersionOne'.",
            "messageId": "Type"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifUtilitiesVersionOne"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Type"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "In method 'SarifUtilitiesVersionOne.ConvertToSchemaUri(this SarifVersionVersionOne)', correct the spelling of 'sarif' in parameter name 'sarifVersion' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "MemberParameter"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/SarifUtilitiesVersionOne.cs"
                },
                "region": {
                  "startLine": 25,
                  "snippet": {
                    "text": "        }"
                  }
                },
                "contextRegion": {
                  "startLine": 24,
                  "startColumn": 1,
                  "endLine": 26,
                  "endColumn": 6,
                  "charOffset": 830,
                  "charLength": 129,
                  "snippet": {
                    "text": "            return new Uri(SarifUtilities.SarifSchemaUriBase + sarifVersion.ConvertToText(), UriKind.Absolute);\r\n        }\r\n    }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifUtilitiesVersionOne.ConvertToSchemaUri(Microsoft.CodeAnalysis.Sarif.VersionOne.SarifVersionVersionOne)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "sarif#MemberParameter"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "In method 'SarifUtilitiesVersionOne.ConvertToText(this SarifVersionVersionOne)', correct the spelling of 'sarif' in parameter name 'sarifVersion' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "MemberParameter"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/SarifUtilitiesVersionOne.cs"
                },
                "region": {
                  "startLine": 14,
                  "snippet": {
                    "text": "            {"
                  }
                },
                "contextRegion": {
                  "startLine": 13,
                  "startColumn": 1,
                  "endLine": 15,
                  "endColumn": 57,
                  "charOffset": 417,
                  "charLength": 106,
                  "snippet": {
                    "text": "            switch (sarifVersion)\r\n            {\r\n                case SarifVersionVersionOne.OneZeroZero:"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifUtilitiesVersionOne.ConvertToText(Microsoft.CodeAnalysis.Sarif.VersionOne.SarifVersionVersionOne)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "sarif#MemberParameter"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in type name 'SarifVersion'.",
            "messageId": "Type"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.SarifVersion"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Type"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1811",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.SdkResources..ctor()"
            }
          ],
          "suppressionStates": ["suppressedInSource"],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1711",
          "level": "error",
          "message": {
            "text": "Rename type name 'Stack' so that it does not end in 'Stack'.",
            "messageId": "TypeNoAlternate"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Stack"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "TypeNoAlternate"
          },
          "properties": {
            "Level": "CriticalError",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'Stack.Stack(Message, IEnumerable<StackFrame>, IDictionary<string, SerializedPropertyInfo>)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nStack..ctor(Message, IEnumerable<StackFrame>, IDictionary<String,SerializedPropertyInfo>)\r\nStack.Init(Message, IEnumerable<StackFrame>, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Stack.cs"
                },
                "region": {
                  "startLine": 72,
                  "snippet": {
                    "text": "        public Stack(Message message, IEnumerable<StackFrame> frames, IDictionary<string, SerializedPropertyInfo> properties)"
                  }
                },
                "contextRegion": {
                  "startLine": 71,
                  "startColumn": 1,
                  "endLine": 73,
                  "endColumn": 10,
                  "charOffset": 2749,
                  "charLength": 158,
                  "snippet": {
                    "text": "        /// </param>\r\n        public Stack(Message message, IEnumerable<StackFrame> frames, IDictionary<string, SerializedPropertyInfo> properties)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Stack..ctor(Microsoft.CodeAnalysis.Sarif.Message,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.StackFrame>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'Stack.Stack(Stack)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nStack..ctor(Stack)\r\nStack.Init(Message, IEnumerable<StackFrame>, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Stack.cs"
                },
                "region": {
                  "startLine": 86,
                  "snippet": {
                    "text": "        public Stack(Stack other)"
                  }
                },
                "contextRegion": {
                  "startLine": 85,
                  "startColumn": 1,
                  "endLine": 87,
                  "endColumn": 10,
                  "charOffset": 3364,
                  "charLength": 70,
                  "snippet": {
                    "text": "        /// </exception>\r\n        public Stack(Stack other)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Stack..ctor(Microsoft.CodeAnalysis.Sarif.Stack)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'Stack.Stack(StackTrace)', validate parameter 'stackTrace' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Core/Stack.cs"
                },
                "region": {
                  "startLine": 79,
                  "snippet": {
                    "text": "            if (stackTrace.FrameCount == 0)"
                  }
                },
                "contextRegion": {
                  "startLine": 78,
                  "startColumn": 1,
                  "endLine": 80,
                  "endColumn": 14,
                  "charOffset": 2548,
                  "charLength": 69,
                  "snippet": {
                    "text": "        {\r\n            if (stackTrace.FrameCount == 0)\r\n            {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Stack..ctor(System.Diagnostics.StackTrace)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1804",
          "level": "warning",
          "message": {
            "text": "'Stack.Create(string)' declares a variable, 'current', of type 'string', which is never used or is only assigned to. Use this variable or remove it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Core/Stack.cs"
                },
                "region": {
                  "startLine": 113,
                  "snippet": {
                    "text": "                string current = line;"
                  }
                },
                "contextRegion": {
                  "startLine": 112,
                  "startColumn": 1,
                  "endLine": 114,
                  "endColumn": 1,
                  "charOffset": 3738,
                  "charLength": 97,
                  "snippet": {
                    "text": "                // at Type.Method() in File.cs : line X\r\n                string current = line;\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Stack.Create(System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "current"
          },
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1305",
          "level": "error",
          "message": {
            "text": "Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'Stack.Create(string)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.",
            "messageId": "IFormatProviderAlternate"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Core/Stack.cs"
                },
                "region": {
                  "startLine": 129,
                  "snippet": {
                    "text": "                        int lineNumber = int.Parse(match.Groups[4].Value);"
                  }
                },
                "contextRegion": {
                  "startLine": 128,
                  "startColumn": 1,
                  "endLine": 130,
                  "endColumn": 1,
                  "charOffset": 4272,
                  "charLength": 142,
                  "snippet": {
                    "text": "                        string fileName = match.Groups[3].Value;\r\n                        int lineNumber = int.Parse(match.Groups[4].Value);\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Stack.Create(System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.Int32.Parse(System.String)#IFormatProviderAlternate"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'Stack.Frames' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Stack.cs"
                },
                "region": {
                  "startLine": 45,
                  "snippet": {
                    "text": "        public IList<StackFrame> Frames { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 44,
                  "startColumn": 1,
                  "endLine": 46,
                  "endColumn": 1,
                  "charOffset": 1602,
                  "charLength": 113,
                  "snippet": {
                    "text": "        [DataMember(Name = \"frames\", IsRequired = true)]\r\n        public IList<StackFrame> Frames { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Stack.Frames"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'StackFrame.StackFrame(Location, string, int, int, int, IEnumerable<string>, IDictionary<string, SerializedPropertyInfo>)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nStackFrame..ctor(Location, String, Int32, Int32, Int32, IEnumerable<String>, IDictionary<String,SerializedPropertyInfo>)\r\nStackFrame.Init(Location, String, Int32, Int32, Int32, IEnumerable<String>, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/StackFrame.cs"
                },
                "region": {
                  "startLine": 108,
                  "snippet": {
                    "text": "        public StackFrame(Location location, string module, int threadId, int address, int offset, IEnumerable<string> parameters, IDictionary<string, SerializedPropertyInfo> properties)"
                  }
                },
                "contextRegion": {
                  "startLine": 107,
                  "startColumn": 1,
                  "endLine": 109,
                  "endColumn": 10,
                  "charOffset": 4295,
                  "charLength": 219,
                  "snippet": {
                    "text": "        /// </param>\r\n        public StackFrame(Location location, string module, int threadId, int address, int offset, IEnumerable<string> parameters, IDictionary<string, SerializedPropertyInfo> properties)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.StackFrame..ctor(Microsoft.CodeAnalysis.Sarif.Location,System.String,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IEnumerable`1<System.String>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'StackFrame.StackFrame(StackFrame)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nStackFrame..ctor(StackFrame)\r\nStackFrame.Init(Location, String, Int32, Int32, Int32, IEnumerable<String>, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/StackFrame.cs"
                },
                "region": {
                  "startLine": 122,
                  "snippet": {
                    "text": "        public StackFrame(StackFrame other)"
                  }
                },
                "contextRegion": {
                  "startLine": 121,
                  "startColumn": 1,
                  "endLine": 123,
                  "endColumn": 10,
                  "charOffset": 5016,
                  "charLength": 80,
                  "snippet": {
                    "text": "        /// </exception>\r\n        public StackFrame(StackFrame other)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.StackFrame..ctor(Microsoft.CodeAnalysis.Sarif.StackFrame)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'StackFrame.Create(StackFrame)', validate parameter 'dotNetStackFrame' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Core/StackFrame.cs"
                },
                "region": {
                  "startLine": 28,
                  "snippet": {
                    "text": "            int ilOffset = dotNetStackFrame.GetILOffset();"
                  }
                },
                "contextRegion": {
                  "startLine": 27,
                  "startColumn": 1,
                  "endLine": 29,
                  "endColumn": 62,
                  "charOffset": 862,
                  "charLength": 169,
                  "snippet": {
                    "text": "            // This value is -1 if not present\r\n            int ilOffset = dotNetStackFrame.GetILOffset();\r\n            string fileName = dotNetStackFrame.GetFileName();"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.StackFrame.Create(System.Diagnostics.StackFrame)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1800",
          "level": "warning",
          "message": {
            "text": "'methodBase', a parameter, is cast to type 'MethodInfo' multiple times in method 'StackFrame.CreateFullyQualifiedName(MethodBase)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.",
            "messageId": "Parameter"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Core/StackFrame.cs"
                },
                "region": {
                  "startLine": 111,
                  "snippet": {
                    "text": "            if (methodBase is MethodInfo && ((MethodInfo)methodBase).IsGenericMethod)"
                  }
                },
                "contextRegion": {
                  "startLine": 110,
                  "startColumn": 1,
                  "endLine": 112,
                  "endColumn": 14,
                  "charOffset": 3846,
                  "charLength": 160,
                  "snippet": {
                    "text": "            // deal with the generic portion of the method\r\n            if (methodBase is MethodInfo && ((MethodInfo)methodBase).IsGenericMethod)\r\n            {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.StackFrame.CreateFullyQualifiedName(System.Reflection.MethodBase)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Parameter"
          },
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1800",
          "level": "warning",
          "message": {
            "text": "'methodBase', a parameter, is cast to type 'MethodInfo' multiple times in method 'StackFrame.CreateFullyQualifiedName(MethodBase)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.",
            "messageId": "Parameter"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Core/StackFrame.cs"
                },
                "region": {
                  "startLine": 113,
                  "snippet": {
                    "text": "                Type[] typeArguments = ((MethodInfo)methodBase).GetGenericArguments();"
                  }
                },
                "contextRegion": {
                  "startLine": 112,
                  "startColumn": 1,
                  "endLine": 114,
                  "endColumn": 32,
                  "charOffset": 3993,
                  "charLength": 134,
                  "snippet": {
                    "text": "            {\r\n                Type[] typeArguments = ((MethodInfo)methodBase).GetGenericArguments();\r\n                sb.Append(\"[\");"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.StackFrame.CreateFullyQualifiedName(System.Reflection.MethodBase)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Parameter"
          },
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'StackFrame.Parameters' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/StackFrame.cs"
                },
                "region": {
                  "startLine": 69,
                  "snippet": {
                    "text": "        public IList<string> Parameters { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 68,
                  "startColumn": 1,
                  "endLine": 70,
                  "endColumn": 1,
                  "charOffset": 2532,
                  "charLength": 144,
                  "snippet": {
                    "text": "        [DataMember(Name = \"parameters\", IsRequired = false, EmitDefaultValue = false)]\r\n        public IList<string> Parameters { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.StackFrame.Parameters"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1710",
          "level": "error",
          "message": {
            "text": "Rename 'StringSet' to end in 'Collection'."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.StringSet"
            }
          ],
          "properties": {
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1710",
          "level": "error",
          "message": {
            "text": "Rename 'StringToVersionMap' to end in 'Dictionary'."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.StringToVersionMap"
            }
          ],
          "properties": {
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2237",
          "level": "warning",
          "message": {
            "text": "Add [Serializable] to 'StringToVersionMap' as this type implements ISerializable."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.StringToVersionMap"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1008",
          "level": "error",
          "message": {
            "text": "In enum 'SupportedPlatform', change the name of 'SupportedPlatform.Unknown' to 'None'.",
            "messageId": "FlagsRename"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.SupportedPlatform"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "FlagsRename"
          },
          "properties": {
            "Level": "CriticalError",
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1714",
          "level": "error",
          "message": {
            "text": "If enumeration name 'SupportedPlatform' is singular, change it to a plural form."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.SupportedPlatform"
            }
          ],
          "properties": {
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1709",
          "level": "error",
          "message": {
            "text": "Correct the casing of 'OSX' in member name 'SupportedPlatform.OSX' by changing it to 'Osx'.",
            "messageId": "Member"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.SupportedPlatform.OSX"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "OSX#Member"
          },
          "properties": {
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'ThreadFlow.ThreadFlow(ThreadFlow)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nThreadFlow..ctor(ThreadFlow)\r\nThreadFlow.Init(String, Message, IEnumerable<ThreadFlowLocation>, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/ThreadFlow.cs"
                },
                "region": {
                  "startLine": 92,
                  "snippet": {
                    "text": "        public ThreadFlow(ThreadFlow other)"
                  }
                },
                "contextRegion": {
                  "startLine": 91,
                  "startColumn": 1,
                  "endLine": 93,
                  "endColumn": 10,
                  "charOffset": 3791,
                  "charLength": 80,
                  "snippet": {
                    "text": "        /// </exception>\r\n        public ThreadFlow(ThreadFlow other)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.ThreadFlow..ctor(Microsoft.CodeAnalysis.Sarif.ThreadFlow)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'ThreadFlow.ThreadFlow(string, Message, IEnumerable<ThreadFlowLocation>, IDictionary<string, SerializedPropertyInfo>)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nThreadFlow..ctor(String, Message, IEnumerable<ThreadFlowLocation>, IDictionary<String,SerializedPropertyInfo>)\r\nThreadFlow.Init(String, Message, IEnumerable<ThreadFlowLocation>, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/ThreadFlow.cs"
                },
                "region": {
                  "startLine": 78,
                  "snippet": {
                    "text": "        public ThreadFlow(string id, Message message, IEnumerable<ThreadFlowLocation> locations, IDictionary<string, SerializedPropertyInfo> properties)"
                  }
                },
                "contextRegion": {
                  "startLine": 77,
                  "startColumn": 1,
                  "endLine": 79,
                  "endColumn": 10,
                  "charOffset": 3137,
                  "charLength": 185,
                  "snippet": {
                    "text": "        /// </param>\r\n        public ThreadFlow(string id, Message message, IEnumerable<ThreadFlowLocation> locations, IDictionary<string, SerializedPropertyInfo> properties)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.ThreadFlow..ctor(System.String,Microsoft.CodeAnalysis.Sarif.Message,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.ThreadFlowLocation>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'ThreadFlow.Locations' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/ThreadFlow.cs"
                },
                "region": {
                  "startLine": 48,
                  "snippet": {
                    "text": "        public IList<ThreadFlowLocation> Locations { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 47,
                  "startColumn": 1,
                  "endLine": 49,
                  "endColumn": 1,
                  "charOffset": 1820,
                  "charLength": 127,
                  "snippet": {
                    "text": "        [DataMember(Name = \"locations\", IsRequired = true)]\r\n        public IList<ThreadFlowLocation> Locations { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.ThreadFlow.Locations"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'ThreadFlowLocation.ThreadFlowLocation(ThreadFlowLocation)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nThreadFlowLocation..ctor(ThreadFlowLocation)\r\nThreadFlowLocation.Init(Int32, Location, Stack, String, String, IDictionary<String,String>, Int32, Int32, DateTime, ThreadFlowLocationImportance, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/ThreadFlowLocation.cs"
                },
                "region": {
                  "startLine": 158,
                  "snippet": {
                    "text": "        /// Thrown if <paramref name=\"other\" /> is null."
                  }
                },
                "contextRegion": {
                  "startLine": 157,
                  "startColumn": 1,
                  "endLine": 159,
                  "endColumn": 25,
                  "charOffset": 7261,
                  "charLength": 136,
                  "snippet": {
                    "text": "        /// <exception cref=\"ArgumentNullException\">\r\n        /// Thrown if <paramref name=\"other\" /> is null.\r\n        /// </exception>"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.ThreadFlowLocation..ctor(Microsoft.CodeAnalysis.Sarif.ThreadFlowLocation)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'ThreadFlowLocation.ThreadFlowLocation(int, Location, Stack, string, string, IDictionary<string, string>, int, int, DateTime, ThreadFlowLocationImportance, IDictionary<string, SerializedPropertyInfo>)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nThreadFlowLocation..ctor(Int32, Location, Stack, String, String, IDictionary<String,String>, Int32, Int32, DateTime, ThreadFlowLocationImportance, IDictionary<String,SerializedPropertyInfo>)\r\nThreadFlowLocation.Init(Int32, Location, Stack, String, String, IDictionary<String,String>, Int32, Int32, DateTime, ThreadFlowLocationImportance, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/ThreadFlowLocation.cs"
                },
                "region": {
                  "startLine": 144,
                  "snippet": {
                    "text": "        /// An initialization value for the <see cref=\"P: Properties\" /> property."
                  }
                },
                "contextRegion": {
                  "startLine": 143,
                  "startColumn": 1,
                  "endLine": 145,
                  "endColumn": 21,
                  "charOffset": 6374,
                  "charLength": 143,
                  "snippet": {
                    "text": "        /// <param name=\"properties\">\r\n        /// An initialization value for the <see cref=\"P: Properties\" /> property.\r\n        /// </param>"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.ThreadFlowLocation..ctor(System.Int32,Microsoft.CodeAnalysis.Sarif.Location,Microsoft.CodeAnalysis.Sarif.Stack,System.String,System.String,System.Collections.Generic.IDictionary`2<System.String,System.String>,System.Int32,System.Int32,System.DateTime,Microsoft.CodeAnalysis.Sarif.ThreadFlowLocationImportance,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'ThreadFlowLocation.State' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/ThreadFlowLocation.cs"
                },
                "region": {
                  "startLine": 69,
                  "snippet": {
                    "text": "        [DataMember(Name = \"state\", IsRequired = false, EmitDefaultValue = false)]"
                  }
                },
                "contextRegion": {
                  "startLine": 68,
                  "startColumn": 1,
                  "endLine": 70,
                  "endColumn": 63,
                  "charOffset": 2844,
                  "charLength": 170,
                  "snippet": {
                    "text": "        /// </summary>\r\n        [DataMember(Name = \"state\", IsRequired = false, EmitDefaultValue = false)]\r\n        public IDictionary<string, string> State { get; set; }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.ThreadFlowLocation.State"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1502",
          "level": "warning",
          "message": {
            "text": "'ThreadFlowLocationEqualityComparer.Equals(ThreadFlowLocation, ThreadFlowLocation)' has a cyclomatic complexity of 29. Rewrite or refactor the method to reduce complexity to 25."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/ThreadFlowLocationEqualityComparer.cs"
                },
                "region": {
                  "startLine": 20,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 19,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 46,
                  "charOffset": 770,
                  "charLength": 135,
                  "snippet": {
                    "text": "        public bool Equals(ThreadFlowLocation left, ThreadFlowLocation right)\r\n        {\r\n            if (ReferenceEquals(left, right))"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.ThreadFlowLocationEqualityComparer.Equals(Microsoft.CodeAnalysis.Sarif.ThreadFlowLocation,Microsoft.CodeAnalysis.Sarif.ThreadFlowLocation)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Maintainability",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'Tool.Tool(Tool)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nTool..ctor(Tool)\r\nTool.Init(String, String, String, String, String, Uri, String, String, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Tool.cs"
                },
                "region": {
                  "startLine": 140,
                  "snippet": {
                    "text": "        /// Thrown if <paramref name=\"other\" /> is null."
                  }
                },
                "contextRegion": {
                  "startLine": 139,
                  "startColumn": 1,
                  "endLine": 141,
                  "endColumn": 25,
                  "charOffset": 6172,
                  "charLength": 136,
                  "snippet": {
                    "text": "        /// <exception cref=\"ArgumentNullException\">\r\n        /// Thrown if <paramref name=\"other\" /> is null.\r\n        /// </exception>"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Tool..ctor(Microsoft.CodeAnalysis.Sarif.Tool)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'Tool.Tool(string, string, string, string, string, Uri, string, string, IDictionary<string, SerializedPropertyInfo>)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nTool..ctor(String, String, String, String, String, Uri, String, String, IDictionary<String,SerializedPropertyInfo>)\r\nTool.Init(String, String, String, String, String, Uri, String, String, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Tool.cs"
                },
                "region": {
                  "startLine": 126,
                  "snippet": {
                    "text": "        /// An initialization value for the <see cref=\"P: Properties\" /> property."
                  }
                },
                "contextRegion": {
                  "startLine": 125,
                  "startColumn": 1,
                  "endLine": 127,
                  "endColumn": 21,
                  "charOffset": 5365,
                  "charLength": 143,
                  "snippet": {
                    "text": "        /// <param name=\"properties\">\r\n        /// An initialization value for the <see cref=\"P: Properties\" /> property.\r\n        /// </param>"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Tool..ctor(System.String,System.String,System.String,System.String,System.String,System.Uri,System.String,System.String,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "In method 'Tool.Tool(string, string, string, string, string, Uri, string, string, IDictionary<string, SerializedPropertyInfo>)', correct the spelling of 'sarif' in parameter name 'sarifLoggerVersion' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "MemberParameter"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Tool.cs"
                },
                "region": {
                  "startLine": 126,
                  "snippet": {
                    "text": "        /// An initialization value for the <see cref=\"P: Properties\" /> property."
                  }
                },
                "contextRegion": {
                  "startLine": 125,
                  "startColumn": 1,
                  "endLine": 127,
                  "endColumn": 21,
                  "charOffset": 5365,
                  "charLength": 143,
                  "snippet": {
                    "text": "        /// <param name=\"properties\">\r\n        /// An initialization value for the <see cref=\"P: Properties\" /> property.\r\n        /// </param>"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Tool..ctor(System.String,System.String,System.String,System.String,System.String,System.Uri,System.String,System.String,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "sarif#MemberParameter"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1026",
          "level": "error",
          "message": {
            "text": "Replace method 'Tool.CreateFromAssemblyData(string)' with an overload that supplies all default arguments."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Core/Tool.cs"
                },
                "region": {
                  "startLine": 18,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 17,
                  "startColumn": 1,
                  "endLine": 19,
                  "endColumn": 96,
                  "charOffset": 435,
                  "charLength": 187,
                  "snippet": {
                    "text": "        public static Tool CreateFromAssemblyData(string prereleaseInfo = null)\r\n        {\r\n            Assembly assembly = Assembly.GetEntryAssembly() ?? Assembly.GetExecutingAssembly();"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Tool.CreateFromAssemblyData(System.String)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1305",
          "level": "error",
          "message": {
            "text": "Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'Tool.CreateFromAssemblyData(string)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.",
            "messageId": "IFormatProviderAlternateString"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Core/Tool.cs"
                },
                "region": {
                  "startLine": 32,
                  "snippet": {
                    "text": "            tool.SemanticVersion = version.Major.ToString() + \".\" + version.Minor.ToString() + \".\" + version.Build.ToString();"
                  }
                },
                "contextRegion": {
                  "startLine": 31,
                  "startColumn": 1,
                  "endLine": 33,
                  "endColumn": 1,
                  "charOffset": 960,
                  "charLength": 192,
                  "snippet": {
                    "text": "            // Synthesized semver 2.0 version required by spec\r\n            tool.SemanticVersion = version.Major.ToString() + \".\" + version.Minor.ToString() + \".\" + version.Build.ToString();\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Tool.CreateFromAssemblyData(System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.Int32.ToString#IFormatProviderAlternateString"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1305",
          "level": "error",
          "message": {
            "text": "Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'Tool.CreateFromAssemblyData(string)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.",
            "messageId": "IFormatProviderAlternateString"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Core/Tool.cs"
                },
                "region": {
                  "startLine": 32,
                  "snippet": {
                    "text": "            tool.SemanticVersion = version.Major.ToString() + \".\" + version.Minor.ToString() + \".\" + version.Build.ToString();"
                  }
                },
                "contextRegion": {
                  "startLine": 31,
                  "startColumn": 1,
                  "endLine": 33,
                  "endColumn": 1,
                  "charOffset": 960,
                  "charLength": 192,
                  "snippet": {
                    "text": "            // Synthesized semver 2.0 version required by spec\r\n            tool.SemanticVersion = version.Major.ToString() + \".\" + version.Minor.ToString() + \".\" + version.Build.ToString();\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Tool.CreateFromAssemblyData(System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.Int32.ToString#IFormatProviderAlternateString"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1305",
          "level": "error",
          "message": {
            "text": "Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'Tool.CreateFromAssemblyData(string)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.",
            "messageId": "IFormatProviderAlternateString"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Core/Tool.cs"
                },
                "region": {
                  "startLine": 32,
                  "snippet": {
                    "text": "            tool.SemanticVersion = version.Major.ToString() + \".\" + version.Minor.ToString() + \".\" + version.Build.ToString();"
                  }
                },
                "contextRegion": {
                  "startLine": 31,
                  "startColumn": 1,
                  "endLine": 33,
                  "endColumn": 1,
                  "charOffset": 960,
                  "charLength": 192,
                  "snippet": {
                    "text": "            // Synthesized semver 2.0 version required by spec\r\n            tool.SemanticVersion = version.Major.ToString() + \".\" + version.Minor.ToString() + \".\" + version.Build.ToString();\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Tool.CreateFromAssemblyData(System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.Int32.ToString#IFormatProviderAlternateString"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in member name 'Tool.SarifLoggerVersion' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/Tool.cs"
                },
                "region": {
                  "startLine": 75,
                  "snippet": {
                    "text": "        /// </summary>"
                  }
                },
                "contextRegion": {
                  "startLine": 74,
                  "startColumn": 1,
                  "endLine": 76,
                  "endColumn": 96,
                  "charOffset": 2861,
                  "charLength": 266,
                  "snippet": {
                    "text": "        /// A version that uniquely identifies the SARIF logging component that generated this file, if it is versioned separately from the tool.\r\n        /// </summary>\r\n        [DataMember(Name = \"sarifLoggerVersion\", IsRequired = false, EmitDefaultValue = false)]"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Tool.SarifLoggerVersion"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2240",
          "level": "error",
          "message": {
            "text": "Add an implementation of GetObjectData to type 'TypedPropertiesDictionary<T>'."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.TypedPropertiesDictionary`1"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2227",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.TypedPropertiesDictionary`1.SettingNameToDescriptionsMap"
            }
          ],
          "suppressionStates": ["suppressedInSource"],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1305",
          "level": "error",
          "message": {
            "text": "Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'TypedPropertiesDictionaryConverter.ReadJson(JsonReader, Type, object, JsonSerializer)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.",
            "messageId": "IFormatProviderAlternate"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/TypedPropertiesDictionaryConverter.cs"
                },
                "region": {
                  "startLine": 43,
                  "snippet": {
                    "text": "                return new IntegerSet(ja.Values().Select(token => Int32.Parse(token.ToString())));"
                  }
                },
                "contextRegion": {
                  "startLine": 42,
                  "startColumn": 1,
                  "endLine": 44,
                  "endColumn": 14,
                  "charOffset": 1399,
                  "charLength": 156,
                  "snippet": {
                    "text": "                ja = JArray.Load(reader);\r\n                return new IntegerSet(ja.Values().Select(token => Int32.Parse(token.ToString())));\r\n            }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.TypedPropertiesDictionaryConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.Int32.Parse(System.String)#IFormatProviderAlternate"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'TypedPropertiesDictionaryConverter.ReadJson(JsonReader, Type, object, JsonSerializer)', validate parameter 'reader' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/TypedPropertiesDictionaryConverter.cs"
                },
                "region": {
                  "startLine": 47,
                  "snippet": {
                    "text": "                return JsonConvert.DeserializeObject<Version>(reader.ReadAsString(), _versionConverter);"
                  }
                },
                "contextRegion": {
                  "startLine": 46,
                  "startColumn": 1,
                  "endLine": 48,
                  "endColumn": 14,
                  "charOffset": 1610,
                  "charLength": 134,
                  "snippet": {
                    "text": "            {\r\n                return JsonConvert.DeserializeObject<Version>(reader.ReadAsString(), _versionConverter);\r\n            }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.TypedPropertiesDictionaryConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1800",
          "level": "warning",
          "message": {
            "text": "'value', a parameter, is cast to type 'IntegerSet' multiple times in method 'TypedPropertiesDictionaryConverter.WriteJson(JsonWriter, object, JsonSerializer)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.",
            "messageId": "Parameter"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/TypedPropertiesDictionaryConverter.cs"
                },
                "region": {
                  "startLine": 112,
                  "snippet": {
                    "text": "                IntegerSet hashSet = (IntegerSet)value;"
                  }
                },
                "contextRegion": {
                  "startLine": 111,
                  "startColumn": 1,
                  "endLine": 113,
                  "endColumn": 69,
                  "charOffset": 4027,
                  "charLength": 140,
                  "snippet": {
                    "text": "            {\r\n                IntegerSet hashSet = (IntegerSet)value;\r\n                ja = new JArray(hashSet.Select(i => new JValue(i)));"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.TypedPropertiesDictionaryConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Parameter"
          },
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1800",
          "level": "warning",
          "message": {
            "text": "'value', a parameter, is cast to type 'StringSet' multiple times in method 'TypedPropertiesDictionaryConverter.WriteJson(JsonWriter, object, JsonSerializer)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.",
            "messageId": "Parameter"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/TypedPropertiesDictionaryConverter.cs"
                },
                "region": {
                  "startLine": 106,
                  "snippet": {
                    "text": "                StringSet hashSet = (StringSet)value;"
                  }
                },
                "contextRegion": {
                  "startLine": 105,
                  "startColumn": 1,
                  "endLine": 107,
                  "endColumn": 69,
                  "charOffset": 3792,
                  "charLength": 138,
                  "snippet": {
                    "text": "            {\r\n                StringSet hashSet = (StringSet)value;\r\n                ja = new JArray(hashSet.Select(i => new JValue(i)));"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.TypedPropertiesDictionaryConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Parameter"
          },
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1804",
          "level": "warning",
          "message": {
            "text": "'TypedPropertiesDictionaryConverter.WriteJson(JsonWriter, object, JsonSerializer)' declares a variable, 't', of type 'Type', which is never used or is only assigned to. Use this variable or remove it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/TypedPropertiesDictionaryConverter.cs"
                },
                "region": {
                  "startLine": 127,
                  "snippet": {
                    "text": "                    Type t = typeof(object);"
                  }
                },
                "contextRegion": {
                  "startLine": 126,
                  "startColumn": 1,
                  "endLine": 128,
                  "endColumn": 58,
                  "charOffset": 4547,
                  "charLength": 105,
                  "snippet": {
                    "text": "\r\n                    Type t = typeof(object);\r\n                    if (dictionaryValue is IDictionary ||"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.TypedPropertiesDictionaryConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "t"
          },
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'TypedPropertiesDictionaryConverter.WriteJson(JsonWriter, object, JsonSerializer)', validate parameter 'writer' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/TypedPropertiesDictionaryConverter.cs"
                },
                "region": {
                  "startLine": 119,
                  "snippet": {
                    "text": "                writer.WriteStartObject();"
                  }
                },
                "contextRegion": {
                  "startLine": 118,
                  "startColumn": 1,
                  "endLine": 120,
                  "endColumn": 1,
                  "charOffset": 4254,
                  "charLength": 98,
                  "snippet": {
                    "text": "                var dictionary = (IDictionary)value;\r\n                writer.WriteStartObject();\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.TypedPropertiesDictionaryConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'TypedPropertiesDictionaryConverter.WriteJson(JsonWriter, object, JsonSerializer)', validate parameter 'serializer' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/TypedPropertiesDictionaryConverter.cs"
                },
                "region": {
                  "startLine": 136,
                  "snippet": {
                    "text": "                        serializer.Serialize(writer, dictionaryValue.ToString());"
                  }
                },
                "contextRegion": {
                  "startLine": 135,
                  "startColumn": 1,
                  "endLine": 137,
                  "endColumn": 22,
                  "charOffset": 4945,
                  "charLength": 127,
                  "snippet": {
                    "text": "                    {\r\n                        serializer.Serialize(writer, dictionaryValue.ToString());\r\n                    }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.TypedPropertiesDictionaryConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "2"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1305",
          "level": "error",
          "message": {
            "text": "Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'TypedPropertiesDictionaryConverter.ReadJson(JsonReader, Type, object, JsonSerializer)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.",
            "messageId": "IFormatProviderAlternate"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/TypedPropertiesDictionaryConverter.cs"
                },
                "region": {
                  "startLine": 43,
                  "snippet": {
                    "text": "                return new IntegerSet(ja.Values().Select(token => Int32.Parse(token.ToString())));"
                  }
                },
                "contextRegion": {
                  "startLine": 42,
                  "startColumn": 1,
                  "endLine": 44,
                  "endColumn": 14,
                  "charOffset": 1399,
                  "charLength": 156,
                  "snippet": {
                    "text": "                ja = JArray.Load(reader);\r\n                return new IntegerSet(ja.Values().Select(token => Int32.Parse(token.ToString())));\r\n            }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.TypedPropertiesDictionaryConverter+<>c.<ReadJson>b__3_1(Newtonsoft.Json.Linq.JToken)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.Int32.Parse(System.String)#IFormatProviderAlternate"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1055",
          "level": "error",
          "message": {
            "text": "Change the return type of 'UriHelper.MakeValidUri(string)' from string to System.Uri."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/UriHelper.cs"
                },
                "region": {
                  "startLine": 51,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 50,
                  "startColumn": 1,
                  "endLine": 52,
                  "endColumn": 44,
                  "charOffset": 2229,
                  "charLength": 110,
                  "snippet": {
                    "text": "        public static string MakeValidUri(string path)\r\n        {\r\n            if (string.IsNullOrEmpty(path))"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.UriHelper.MakeValidUri(System.String)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'VersionControlDetails.VersionControlDetails(VersionControlDetails)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nVersionControlDetails..ctor(VersionControlDetails)\r\nVersionControlDetails.Init(Uri, String, String, String, DateTime, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/VersionControlDetails.cs"
                },
                "region": {
                  "startLine": 110,
                  "snippet": {
                    "text": "        /// <exception cref=\"ArgumentNullException\">"
                  }
                },
                "contextRegion": {
                  "startLine": 109,
                  "startColumn": 1,
                  "endLine": 111,
                  "endColumn": 57,
                  "charOffset": 4541,
                  "charLength": 132,
                  "snippet": {
                    "text": "        /// </param>\r\n        /// <exception cref=\"ArgumentNullException\">\r\n        /// Thrown if <paramref name=\"other\" /> is null."
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionControlDetails..ctor(Microsoft.CodeAnalysis.Sarif.VersionControlDetails)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'VersionControlDetails.VersionControlDetails(Uri, string, string, string, DateTime, IDictionary<string, SerializedPropertyInfo>)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nVersionControlDetails..ctor(Uri, String, String, String, DateTime, IDictionary<String,SerializedPropertyInfo>)\r\nVersionControlDetails.Init(Uri, String, String, String, DateTime, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Autogenerated/VersionControlDetails.cs"
                },
                "region": {
                  "startLine": 96,
                  "snippet": {
                    "text": "        /// <param name=\"properties\">"
                  }
                },
                "contextRegion": {
                  "startLine": 95,
                  "startColumn": 1,
                  "endLine": 97,
                  "endColumn": 83,
                  "charOffset": 3833,
                  "charLength": 143,
                  "snippet": {
                    "text": "        /// </param>\r\n        /// <param name=\"properties\">\r\n        /// An initialization value for the <see cref=\"P: Properties\" /> property."
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionControlDetails..ctor(System.Uri,System.String,System.String,System.String,System.DateTime,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Wrn' in member name 'Warnings.Wrn997_InvalidTarget' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Warnings.Wrn997_InvalidTarget"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Wrn#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1707",
          "level": "error",
          "message": {
            "text": "Remove the underscores from member name 'Warnings.Wrn997_InvalidTarget'.",
            "messageId": "Member"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Warnings.Wrn997_InvalidTarget"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Member"
          },
          "properties": {
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Wrn' in member name 'Warnings.Wrn998_UnsupportedPlatform' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Warnings.Wrn998_UnsupportedPlatform"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Wrn#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1707",
          "level": "error",
          "message": {
            "text": "Remove the underscores from member name 'Warnings.Wrn998_UnsupportedPlatform'.",
            "messageId": "Member"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Warnings.Wrn998_UnsupportedPlatform"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Member"
          },
          "properties": {
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Wrn' in member name 'Warnings.Wrn999_RuleExplicitlyDisabled' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Warnings.Wrn999_RuleExplicitlyDisabled"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Wrn#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1707",
          "level": "error",
          "message": {
            "text": "Remove the underscores from member name 'Warnings.Wrn999_RuleExplicitlyDisabled'.",
            "messageId": "Member"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Warnings.Wrn999_RuleExplicitlyDisabled"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Member"
          },
          "properties": {
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in type name 'ISarifLogBaseliner'.",
            "messageId": "Type"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.ISarifLogBaseliner"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Type"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1702",
          "level": "error",
          "message": {
            "text": "In member 'ISarifLogBaseliner.CreateBaselinedRun(Run, Run)', the compound word 'baseLine' in parameter name 'baseLine' exists as a discrete term. If your usage is intended to be single word, case it as 'baseline' or strip the first token entirely if it represents any sort of Hungarian notation.",
            "messageId": "MemberParameterShouldBeDiscreteTerm"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.ISarifLogBaseliner.CreateBaselinedRun(Microsoft.CodeAnalysis.Sarif.Run,Microsoft.CodeAnalysis.Sarif.Run)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "baseLine#MemberParameterShouldBeDiscreteTerm"
          },
          "properties": {
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Baselined' in member name 'ISarifLogBaseliner.CreateBaselinedRun(Run, Run)' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.ISarifLogBaseliner.CreateBaselinedRun(Microsoft.CodeAnalysis.Sarif.Run,Microsoft.CodeAnalysis.Sarif.Run)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Baselined#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in type name 'SarifBaselineType'.",
            "messageId": "Type"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.SarifBaselineType"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Type"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'SarifLogBaseliner.CreateBaselinedRun(Run, Run)', validate parameter 'baseLine' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Baseline/SarifLogBaseliner.cs"
                },
                "region": {
                  "startLine": 27,
                  "snippet": {
                    "text": "                newResult.BaselineState = "
                  }
                },
                "contextRegion": {
                  "startLine": 26,
                  "startColumn": 1,
                  "endLine": 28,
                  "endColumn": 118,
                  "charOffset": 853,
                  "charLength": 163,
                  "snippet": {
                    "text": "\r\n                newResult.BaselineState = \r\n                    baseLine.Results.Contains(result, ResultComparator) ? BaselineState.Existing : BaselineState.New;"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.SarifLogBaseliner.CreateBaselinedRun(Microsoft.CodeAnalysis.Sarif.Run,Microsoft.CodeAnalysis.Sarif.Run)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'SarifLogBaseliner.CreateBaselinedRun(Run, Run)', validate parameter 'nextLog' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Baseline/SarifLogBaseliner.cs"
                },
                "region": {
                  "startLine": 20,
                  "snippet": {
                    "text": "            Run differencedRun = nextLog.DeepClone();"
                  }
                },
                "contextRegion": {
                  "startLine": 19,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 57,
                  "charOffset": 591,
                  "charLength": 122,
                  "snippet": {
                    "text": "        {\r\n            Run differencedRun = nextLog.DeepClone();\r\n            differencedRun.Results = new List<Result>();"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.SarifLogBaseliner.CreateBaselinedRun(Microsoft.CodeAnalysis.Sarif.Run,Microsoft.CodeAnalysis.Sarif.Run)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "1"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in type name 'SarifLogBaselinerFactory'.",
            "messageId": "Type"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.SarifLogBaselinerFactory"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Type"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1053",
          "level": "error",
          "message": {
            "text": "Because type 'SarifLogBaselinerFactory' contains only 'static' members, mark it as 'static' to prevent the compiler from adding a default public constructor.",
            "messageId": "CSharp2_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.SarifLogBaselinerFactory"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "CSharp2_0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in member name 'SarifLogBaselinerFactory.CreateSarifLogBaseliner(SarifBaselineType)' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Baseline/SarifLogBaselinerFactory.cs"
                },
                "region": {
                  "startLine": 9,
                  "snippet": {
                    "text": "    {"
                  }
                },
                "contextRegion": {
                  "startLine": 8,
                  "startColumn": 1,
                  "endLine": 10,
                  "endColumn": 101,
                  "charOffset": 224,
                  "charLength": 150,
                  "snippet": {
                    "text": "    public class SarifLogBaselinerFactory\r\n    {\r\n        public static ISarifLogBaseliner CreateSarifLogBaseliner(SarifBaselineType logBaselinerType)"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.SarifLogBaselinerFactory.CreateSarifLogBaseliner(Microsoft.CodeAnalysis.Sarif.Baseline.SarifBaselineType)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'CodeFlowBaselineEqualityComparator.Equals(CodeFlow, CodeFlow)', validate parameter 'x' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Baseline/DefaultBaseline/CodeFlowBaselineEquals.cs"
                },
                "region": {
                  "startLine": 16,
                  "snippet": {
                    "text": "                if (!ListComparisonHelpers.CompareListsOrdered(x.ThreadFlows, y.ThreadFlows, ThreadFlowBaselineEqualityComparator.Instance))"
                  }
                },
                "contextRegion": {
                  "startLine": 15,
                  "startColumn": 1,
                  "endLine": 17,
                  "endColumn": 18,
                  "charOffset": 587,
                  "charLength": 174,
                  "snippet": {
                    "text": "            {\r\n                if (!ListComparisonHelpers.CompareListsOrdered(x.ThreadFlows, y.ThreadFlows, ThreadFlowBaselineEqualityComparator.Instance))\r\n                {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline.CodeFlowBaselineEqualityComparator.Equals(Microsoft.CodeAnalysis.Sarif.CodeFlow,Microsoft.CodeAnalysis.Sarif.CodeFlow)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'CodeFlowBaselineEqualityComparator.Equals(CodeFlow, CodeFlow)', validate parameter 'y' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Baseline/DefaultBaseline/CodeFlowBaselineEquals.cs"
                },
                "region": {
                  "startLine": 16,
                  "snippet": {
                    "text": "                if (!ListComparisonHelpers.CompareListsOrdered(x.ThreadFlows, y.ThreadFlows, ThreadFlowBaselineEqualityComparator.Instance))"
                  }
                },
                "contextRegion": {
                  "startLine": 15,
                  "startColumn": 1,
                  "endLine": 17,
                  "endColumn": 18,
                  "charOffset": 587,
                  "charLength": 174,
                  "snippet": {
                    "text": "            {\r\n                if (!ListComparisonHelpers.CompareListsOrdered(x.ThreadFlows, y.ThreadFlows, ThreadFlowBaselineEqualityComparator.Instance))\r\n                {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline.CodeFlowBaselineEqualityComparator.Equals(Microsoft.CodeAnalysis.Sarif.CodeFlow,Microsoft.CodeAnalysis.Sarif.CodeFlow)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "1"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1720",
          "level": "error",
          "message": {
            "text": "In member 'DefaultBaselineExtensions.GetNullCheckedHashCode(this object)', consider replacing the data type identifier 'obj' in parameter name 'obj' with a more generic term, such as 'value'.",
            "messageId": "LanguageIndependentMemberParameter"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Baseline/DefaultBaseline/DefaultBaselineExtensions.cs"
                },
                "region": {
                  "startLine": 9,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 8,
                  "startColumn": 1,
                  "endLine": 10,
                  "endColumn": 29,
                  "charOffset": 281,
                  "charLength": 106,
                  "snippet": {
                    "text": "        public static int GetNullCheckedHashCode(this object obj)\r\n        {\r\n            if (obj == null)"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline.DefaultBaselineExtensions.GetNullCheckedHashCode(System.Object)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "obj#LanguageIndependentMemberParameter"
          },
          "properties": {
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'LocationBaselineEquals.Equals(Location, Location)', validate parameter 'x' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Baseline/DefaultBaseline/LocationBaselineEquals.cs"
                },
                "region": {
                  "startLine": 17,
                  "snippet": {
                    "text": "                if (!PhysicalLocationBaselineEquals.Instance.Equals(x.PhysicalLocation, y.PhysicalLocation))"
                  }
                },
                "contextRegion": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 18,
                  "endColumn": 18,
                  "charOffset": 564,
                  "charLength": 174,
                  "snippet": {
                    "text": "                // Result files should match.\r\n                if (!PhysicalLocationBaselineEquals.Instance.Equals(x.PhysicalLocation, y.PhysicalLocation))\r\n                {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline.LocationBaselineEquals.Equals(Microsoft.CodeAnalysis.Sarif.Location,Microsoft.CodeAnalysis.Sarif.Location)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'LocationBaselineEquals.Equals(Location, Location)', validate parameter 'y' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Baseline/DefaultBaseline/LocationBaselineEquals.cs"
                },
                "region": {
                  "startLine": 17,
                  "snippet": {
                    "text": "                if (!PhysicalLocationBaselineEquals.Instance.Equals(x.PhysicalLocation, y.PhysicalLocation))"
                  }
                },
                "contextRegion": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 18,
                  "endColumn": 18,
                  "charOffset": 564,
                  "charLength": 174,
                  "snippet": {
                    "text": "                // Result files should match.\r\n                if (!PhysicalLocationBaselineEquals.Instance.Equals(x.PhysicalLocation, y.PhysicalLocation))\r\n                {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline.LocationBaselineEquals.Equals(Microsoft.CodeAnalysis.Sarif.Location,Microsoft.CodeAnalysis.Sarif.Location)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "1"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'ResultBaselineEquals.Equals(Result, Result)', validate parameter 'x' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Baseline/DefaultBaseline/ResultBaselineEquals.cs"
                },
                "region": {
                  "startLine": 19,
                  "snippet": {
                    "text": "                if (x.RuleId != y.RuleId)"
                  }
                },
                "contextRegion": {
                  "startLine": 18,
                  "startColumn": 1,
                  "endLine": 20,
                  "endColumn": 18,
                  "charOffset": 604,
                  "charLength": 101,
                  "snippet": {
                    "text": "                // Rule ID should match\r\n                if (x.RuleId != y.RuleId)\r\n                {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline.ResultBaselineEquals.Equals(Microsoft.CodeAnalysis.Sarif.Result,Microsoft.CodeAnalysis.Sarif.Result)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'ResultBaselineEquals.Equals(Result, Result)', validate parameter 'y' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Baseline/DefaultBaseline/ResultBaselineEquals.cs"
                },
                "region": {
                  "startLine": 19,
                  "snippet": {
                    "text": "                if (x.RuleId != y.RuleId)"
                  }
                },
                "contextRegion": {
                  "startLine": 18,
                  "startColumn": 1,
                  "endLine": 20,
                  "endColumn": 18,
                  "charOffset": 604,
                  "charLength": 101,
                  "snippet": {
                    "text": "                // Rule ID should match\r\n                if (x.RuleId != y.RuleId)\r\n                {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline.ResultBaselineEquals.Equals(Microsoft.CodeAnalysis.Sarif.Result,Microsoft.CodeAnalysis.Sarif.Result)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "1"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'StackBaselineEquals.Equals(Stack, Stack)', validate parameter 'x' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Baseline/DefaultBaseline/StackBaselineEquals.cs"
                },
                "region": {
                  "startLine": 16,
                  "snippet": {
                    "text": "                if (!ListComparisonHelpers.CompareListsOrdered(x.Frames, y.Frames))"
                  }
                },
                "contextRegion": {
                  "startLine": 15,
                  "startColumn": 1,
                  "endLine": 17,
                  "endColumn": 18,
                  "charOffset": 531,
                  "charLength": 117,
                  "snippet": {
                    "text": "            {\r\n                if (!ListComparisonHelpers.CompareListsOrdered(x.Frames, y.Frames))\r\n                {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline.StackBaselineEquals.Equals(Microsoft.CodeAnalysis.Sarif.Stack,Microsoft.CodeAnalysis.Sarif.Stack)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'StackBaselineEquals.Equals(Stack, Stack)', validate parameter 'y' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Baseline/DefaultBaseline/StackBaselineEquals.cs"
                },
                "region": {
                  "startLine": 16,
                  "snippet": {
                    "text": "                if (!ListComparisonHelpers.CompareListsOrdered(x.Frames, y.Frames))"
                  }
                },
                "contextRegion": {
                  "startLine": 15,
                  "startColumn": 1,
                  "endLine": 17,
                  "endColumn": 18,
                  "charOffset": 531,
                  "charLength": 117,
                  "snippet": {
                    "text": "            {\r\n                if (!ListComparisonHelpers.CompareListsOrdered(x.Frames, y.Frames))\r\n                {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline.StackBaselineEquals.Equals(Microsoft.CodeAnalysis.Sarif.Stack,Microsoft.CodeAnalysis.Sarif.Stack)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "1"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'StackFrameBaselineEquals.Equals(StackFrame, StackFrame)', validate parameter 'x' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Baseline/DefaultBaseline/StackFrameBaselineEquals.cs"
                },
                "region": {
                  "startLine": 16,
                  "snippet": {
                    "text": "                if (x.Location?.PhysicalLocation?.FileLocation?.Uri != y.Location?.PhysicalLocation?.FileLocation?.Uri)"
                  }
                },
                "contextRegion": {
                  "startLine": 15,
                  "startColumn": 1,
                  "endLine": 17,
                  "endColumn": 18,
                  "charOffset": 561,
                  "charLength": 153,
                  "snippet": {
                    "text": "            {\r\n                if (x.Location?.PhysicalLocation?.FileLocation?.Uri != y.Location?.PhysicalLocation?.FileLocation?.Uri)\r\n                {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline.StackFrameBaselineEquals.Equals(Microsoft.CodeAnalysis.Sarif.StackFrame,Microsoft.CodeAnalysis.Sarif.StackFrame)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'StackFrameBaselineEquals.Equals(StackFrame, StackFrame)', validate parameter 'y' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Baseline/DefaultBaseline/StackFrameBaselineEquals.cs"
                },
                "region": {
                  "startLine": 16,
                  "snippet": {
                    "text": "                if (x.Location?.PhysicalLocation?.FileLocation?.Uri != y.Location?.PhysicalLocation?.FileLocation?.Uri)"
                  }
                },
                "contextRegion": {
                  "startLine": 15,
                  "startColumn": 1,
                  "endLine": 17,
                  "endColumn": 18,
                  "charOffset": 561,
                  "charLength": 153,
                  "snippet": {
                    "text": "            {\r\n                if (x.Location?.PhysicalLocation?.FileLocation?.Uri != y.Location?.PhysicalLocation?.FileLocation?.Uri)\r\n                {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline.StackFrameBaselineEquals.Equals(Microsoft.CodeAnalysis.Sarif.StackFrame,Microsoft.CodeAnalysis.Sarif.StackFrame)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "1"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'ThreadFlowBaselineEqualityComparator.Equals(ThreadFlow, ThreadFlow)', validate parameter 'x' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Baseline/DefaultBaseline/ThreadFlowBaselineEquals.cs"
                },
                "region": {
                  "startLine": 16,
                  "snippet": {
                    "text": "                if (!ListComparisonHelpers.CompareListsOrdered(x.Locations, y.Locations, ThreadFlowLocationBaselineEquals.DefaultInstance))"
                  }
                },
                "contextRegion": {
                  "startLine": 15,
                  "startColumn": 1,
                  "endLine": 17,
                  "endColumn": 18,
                  "charOffset": 599,
                  "charLength": 173,
                  "snippet": {
                    "text": "            {\r\n                if (!ListComparisonHelpers.CompareListsOrdered(x.Locations, y.Locations, ThreadFlowLocationBaselineEquals.DefaultInstance))\r\n                {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline.ThreadFlowBaselineEqualityComparator.Equals(Microsoft.CodeAnalysis.Sarif.ThreadFlow,Microsoft.CodeAnalysis.Sarif.ThreadFlow)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'ThreadFlowBaselineEqualityComparator.Equals(ThreadFlow, ThreadFlow)', validate parameter 'y' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Baseline/DefaultBaseline/ThreadFlowBaselineEquals.cs"
                },
                "region": {
                  "startLine": 16,
                  "snippet": {
                    "text": "                if (!ListComparisonHelpers.CompareListsOrdered(x.Locations, y.Locations, ThreadFlowLocationBaselineEquals.DefaultInstance))"
                  }
                },
                "contextRegion": {
                  "startLine": 15,
                  "startColumn": 1,
                  "endLine": 17,
                  "endColumn": 18,
                  "charOffset": 599,
                  "charLength": 173,
                  "snippet": {
                    "text": "            {\r\n                if (!ListComparisonHelpers.CompareListsOrdered(x.Locations, y.Locations, ThreadFlowLocationBaselineEquals.DefaultInstance))\r\n                {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline.ThreadFlowBaselineEqualityComparator.Equals(Microsoft.CodeAnalysis.Sarif.ThreadFlow,Microsoft.CodeAnalysis.Sarif.ThreadFlow)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "1"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'ThreadFlowLocationBaselineEquals.Equals(ThreadFlowLocation, ThreadFlowLocation)', validate parameter 'x' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Baseline/DefaultBaseline/ThreadFlowLocationBaselineEquals.cs"
                },
                "region": {
                  "startLine": 16,
                  "snippet": {
                    "text": "                if (x.Importance != y.Importance)"
                  }
                },
                "contextRegion": {
                  "startLine": 15,
                  "startColumn": 1,
                  "endLine": 17,
                  "endColumn": 18,
                  "charOffset": 626,
                  "charLength": 83,
                  "snippet": {
                    "text": "            {\r\n                if (x.Importance != y.Importance)\r\n                {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline.ThreadFlowLocationBaselineEquals.Equals(Microsoft.CodeAnalysis.Sarif.ThreadFlowLocation,Microsoft.CodeAnalysis.Sarif.ThreadFlowLocation)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'ThreadFlowLocationBaselineEquals.Equals(ThreadFlowLocation, ThreadFlowLocation)', validate parameter 'y' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Baseline/DefaultBaseline/ThreadFlowLocationBaselineEquals.cs"
                },
                "region": {
                  "startLine": 16,
                  "snippet": {
                    "text": "                if (x.Importance != y.Importance)"
                  }
                },
                "contextRegion": {
                  "startLine": 15,
                  "startColumn": 1,
                  "endLine": 17,
                  "endColumn": 18,
                  "charOffset": 626,
                  "charLength": 83,
                  "snippet": {
                    "text": "            {\r\n                if (x.Importance != y.Importance)\r\n                {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Baseline.DefaultBaseline.ThreadFlowLocationBaselineEquals.Equals(Microsoft.CodeAnalysis.Sarif.ThreadFlowLocation,Microsoft.CodeAnalysis.Sarif.ThreadFlowLocation)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "1"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1006",
          "level": "error",
          "message": {
            "text": "Consider a design where 'GenericActionPipeline<T>.GenericActionPipeline(IEnumerable<IActionWrapper<T>>)' doesn't nest generic type 'IEnumerable<IActionWrapper<T>>'."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Processors/Generic/GenericActionPipeline.cs"
                },
                "region": {
                  "startLine": 12,
                  "snippet": {
                    "text": "        public GenericActionPipeline(IEnumerable<IActionWrapper<T>> stages)"
                  }
                },
                "contextRegion": {
                  "startLine": 11,
                  "startColumn": 1,
                  "endLine": 13,
                  "endColumn": 10,
                  "charOffset": 365,
                  "charLength": 88,
                  "snippet": {
                    "text": "\r\n        public GenericActionPipeline(IEnumerable<IActionWrapper<T>> stages)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.GenericActionPipeline`1..ctor(System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Processors.IActionWrapper`1<!0>>)"
            }
          ],
          "properties": {
            "Level": "CriticalError",
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1725",
          "level": "error",
          "message": {
            "text": "In member 'GenericMappingAction<T>.Act(IEnumerable<T>)', change parameter name 'list' to 'collection' in order to match the identifier as it has been declared in 'IActionWrapper<T>.Act(IEnumerable<T>)'."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Processors/Generic/GenericMappingAction.cs"
                },
                "region": {
                  "startLine": 29,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 28,
                  "startColumn": 1,
                  "endLine": 30,
                  "endColumn": 30,
                  "charOffset": 759,
                  "charLength": 96,
                  "snippet": {
                    "text": "        public IEnumerable<T> Act(IEnumerable<T> list)\r\n        {\r\n            return Map(list);"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.GenericMappingAction`1.Act(System.Collections.Generic.IEnumerable`1<!0>)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0#"
          },
          "properties": {
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1051",
          "level": "error",
          "message": {
            "text": "Because field 'GenericMappingAction<T>.Action' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.GenericMappingAction`1.Action"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'GenericMappingAction<T>.Map(IEnumerable<T>)', validate parameter 'collection' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Processors/Generic/GenericMappingAction.cs"
                },
                "region": {
                  "startLine": 21,
                  "snippet": {
                    "text": "            foreach(var value in collection)"
                  }
                },
                "contextRegion": {
                  "startLine": 20,
                  "startColumn": 1,
                  "endLine": 22,
                  "endColumn": 14,
                  "charOffset": 546,
                  "charLength": 104,
                  "snippet": {
                    "text": "            List<T> output = new List<T>();\r\n            foreach(var value in collection)\r\n            {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.GenericMappingAction`1.Map(System.Collections.Generic.IEnumerable`1<!0>)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in type name 'SarifLogAction'.",
            "messageId": "Type"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.SarifLogAction"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Type"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in type name 'SarifLogActionTuple'.",
            "messageId": "Type"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.SarifLogActionTuple"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Type"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1051",
          "level": "error",
          "message": {
            "text": "Because field 'SarifLogActionTuple.Action' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.SarifLogActionTuple.Action"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1051",
          "level": "error",
          "message": {
            "text": "Because field 'SarifLogActionTuple.Parameters' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.SarifLogActionTuple.Parameters"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in type name 'SarifLogExtensionMethods'.",
            "messageId": "Type"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.SarifLogExtensionMethods"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Type"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "In method 'SarifLogExtensionMethods.MakeUrisAbsolute(this SarifLog)', correct the spelling of 'sarif' in parameter name 'sarifLog' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "MemberParameter"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Processors/Log/SarifLogExtensionMethods.cs"
                },
                "region": {
                  "startLine": 36,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 35,
                  "startColumn": 1,
                  "endLine": 37,
                  "endColumn": 84,
                  "charOffset": 1527,
                  "charLength": 167,
                  "snippet": {
                    "text": "        public static SarifLog MakeUrisAbsolute(this SarifLog sarifLog)\r\n        {\r\n            return (new List<SarifLog>() { sarifLog }).MakeUrisAbsolute().Single();"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.SarifLogExtensionMethods.MakeUrisAbsolute(Microsoft.CodeAnalysis.Sarif.SarifLog)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "sarif#MemberParameter"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "In method 'SarifLogExtensionMethods.MakeUrisAbsolute(this IEnumerable<SarifLog>)', correct the spelling of 'sarif' in parameter name 'sarifLogs' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "MemberParameter"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Processors/Log/SarifLogExtensionMethods.cs"
                },
                "region": {
                  "startLine": 31,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 30,
                  "startColumn": 1,
                  "endLine": 32,
                  "endColumn": 108,
                  "charOffset": 1294,
                  "charLength": 218,
                  "snippet": {
                    "text": "        public static IEnumerable<SarifLog> MakeUrisAbsolute(this IEnumerable<SarifLog> sarifLogs)\r\n        {\r\n            return SarifLogProcessorFactory.GetActionStage(SarifLogAction.MakeUrisAbsolute).Act(sarifLogs);"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.SarifLogExtensionMethods.MakeUrisAbsolute(System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.SarifLog>)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "sarif#MemberParameter"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "In method 'SarifLogExtensionMethods.Merge(this IEnumerable<SarifLog>)', correct the spelling of 'sarif' in parameter name 'sarifLog' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "MemberParameter"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Processors/Log/SarifLogExtensionMethods.cs"
                },
                "region": {
                  "startLine": 16,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 15,
                  "startColumn": 1,
                  "endLine": 17,
                  "endColumn": 128,
                  "charOffset": 468,
                  "charLength": 213,
                  "snippet": {
                    "text": "        public static SarifLog Merge(this IEnumerable<SarifLog> sarifLog)\r\n        {\r\n            return ((GenericFoldAction<SarifLog>)SarifLogProcessorFactory.GetActionStage(SarifLogAction.Merge)).Fold(sarifLog);"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.SarifLogExtensionMethods.Merge(System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.SarifLog>)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "sarif#MemberParameter"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "In method 'SarifLogExtensionMethods.RebaseUri(this SarifLog, string, bool, Uri)', correct the spelling of 'sarif' in parameter name 'sarifLog' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "MemberParameter"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Processors/Log/SarifLogExtensionMethods.cs"
                },
                "region": {
                  "startLine": 26,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 25,
                  "startColumn": 1,
                  "endLine": 27,
                  "endColumn": 115,
                  "charOffset": 1032,
                  "charLength": 247,
                  "snippet": {
                    "text": "        public static SarifLog RebaseUri(this SarifLog sarifLog, string basePathToken, bool rebaseRelativeUris, Uri uri)\r\n        {\r\n            return (new List<SarifLog>() { sarifLog }).RebaseUri(basePathToken, rebaseRelativeUris, uri).Single();"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.SarifLogExtensionMethods.RebaseUri(Microsoft.CodeAnalysis.Sarif.SarifLog,System.String,System.Boolean,System.Uri)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "sarif#MemberParameter"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "In method 'SarifLogExtensionMethods.RebaseUri(this IEnumerable<SarifLog>, string, bool, Uri)', correct the spelling of 'sarif' in parameter name 'sarifLog' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "MemberParameter"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Processors/Log/SarifLogExtensionMethods.cs"
                },
                "region": {
                  "startLine": 21,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 20,
                  "startColumn": 1,
                  "endLine": 22,
                  "endColumn": 163,
                  "charOffset": 696,
                  "charLength": 321,
                  "snippet": {
                    "text": "        public static IEnumerable<SarifLog> RebaseUri(this IEnumerable<SarifLog> sarifLog, string basePathToken, bool rebaseRelativeUris, Uri uri)\r\n        {\r\n            return SarifLogProcessorFactory.GetActionStage(SarifLogAction.RebaseUri, basePathToken, rebaseRelativeUris.ToString(), uri.AbsoluteUri).Act(sarifLog);"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.SarifLogExtensionMethods.RebaseUri(System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.SarifLog>,System.String,System.Boolean,System.Uri)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "sarif#MemberParameter"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'SarifLogExtensionMethods.RebaseUri(this IEnumerable<SarifLog>, string, bool, Uri)', validate parameter 'uri' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Processors/Log/SarifLogExtensionMethods.cs"
                },
                "region": {
                  "startLine": 22,
                  "snippet": {
                    "text": "            return SarifLogProcessorFactory.GetActionStage(SarifLogAction.RebaseUri, basePathToken, rebaseRelativeUris.ToString(), uri.AbsoluteUri).Act(sarifLog);"
                  }
                },
                "contextRegion": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 23,
                  "endColumn": 10,
                  "charOffset": 844,
                  "charLength": 184,
                  "snippet": {
                    "text": "        {\r\n            return SarifLogProcessorFactory.GetActionStage(SarifLogAction.RebaseUri, basePathToken, rebaseRelativeUris.ToString(), uri.AbsoluteUri).Act(sarifLog);\r\n        }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.SarifLogExtensionMethods.RebaseUri(System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.SarifLog>,System.String,System.Boolean,System.Uri)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "3"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in type name 'SarifLogPipeline'.",
            "messageId": "Type"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.SarifLogPipeline"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Type"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1002",
          "level": "error",
          "message": {
            "text": "Change 'List<SarifLogActionTuple>' in 'SarifLogPipeline.SarifLogPipeline(List<SarifLogActionTuple>)' to use Collection<T>, ReadOnlyCollection<T> or KeyedCollection<K,V>"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Processors/Log/SarifLogPipeline.cs"
                },
                "region": {
                  "startLine": 27,
                  "snippet": {
                    "text": "        public SarifLogPipeline(List<SarifLogActionTuple> actions)"
                  }
                },
                "contextRegion": {
                  "startLine": 26,
                  "startColumn": 1,
                  "endLine": 28,
                  "endColumn": 10,
                  "charOffset": 753,
                  "charLength": 104,
                  "snippet": {
                    "text": "        [JsonConstructor]\r\n        public SarifLogPipeline(List<SarifLogActionTuple> actions)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.SarifLogPipeline..ctor(System.Collections.Generic.List`1<Microsoft.CodeAnalysis.Sarif.Processors.SarifLogActionTuple>)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2235",
          "level": "error",
          "message": {
            "text": "Field 'SarifLogPipeline._pipeline' is a member of type 'SarifLogPipeline', which is serializable, but is of type 'GenericActionPipeline<SarifLog>', which is not serializable. Add the NonSerializedAttribute to 'SarifLogPipeline._pipeline'."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.SarifLogPipeline._pipeline"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1002",
          "level": "error",
          "message": {
            "text": "Change 'List<SarifLogActionTuple>' in 'SarifLogPipeline.Actions' to use Collection<T>, ReadOnlyCollection<T> or KeyedCollection<K,V>"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Processors/Log/SarifLogPipeline.cs"
                },
                "region": {
                  "startLine": 20,
                  "snippet": {
                    "text": "            get;"
                  }
                },
                "contextRegion": {
                  "startLine": 19,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 25,
                  "charOffset": 615,
                  "charLength": 53,
                  "snippet": {
                    "text": "        {\r\n            get;\r\n            private set;"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.SarifLogPipeline.Actions"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in type name 'SarifLogProcessorFactory'.",
            "messageId": "Type"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.SarifLogProcessorFactory"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Type"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1053",
          "level": "error",
          "message": {
            "text": "Because type 'SarifLogProcessorFactory' contains only 'static' members, mark it as 'static' to prevent the compiler from adding a default public constructor.",
            "messageId": "CSharp2_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.SarifLogProcessorFactory"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "CSharp2_0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1305",
          "level": "error",
          "message": {
            "text": "Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'SarifLogProcessorFactory.GetActionStage(SarifLogAction, params string[])' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.",
            "messageId": "IFormatProviderAlternateString"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Processors/Log/SarifLogStageFactory.cs"
                },
                "region": {
                  "startLine": 55,
                  "snippet": {
                    "text": "                    throw new ArgumentException($\"Unknown/Not Supported Action {action}.\", nameof(action));"
                  }
                },
                "contextRegion": {
                  "startLine": 54,
                  "startColumn": 1,
                  "endLine": 56,
                  "endColumn": 14,
                  "charOffset": 2118,
                  "charLength": 148,
                  "snippet": {
                    "text": "                default:\r\n                    throw new ArgumentException($\"Unknown/Not Supported Action {action}.\", nameof(action));\r\n            }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Processors.SarifLogProcessorFactory.GetActionStage(Microsoft.CodeAnalysis.Sarif.Processors.SarifLogAction,System.String[])"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.String.Format(System.String,System.Object)#IFormatProviderAlternateString"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2104",
          "level": "error",
          "message": {
            "text": "Remove the read-only designation from 'DateTimeConverter.Instance' or change the field to one that is an immutable reference type. If the reference type 'DateTimeConverter' is, in fact, immutable, exclude this message."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.DateTimeConverter.Instance"
            }
          ],
          "properties": {
            "Category": "Microsoft.Security",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1308",
          "level": "error",
          "message": {
            "text": "In method 'EnumConverter.ConvertToCamelCase(string)', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().",
            "messageId": "ToUpperInvariant"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Readers/EnumConverter.cs"
                },
                "region": {
                  "startLine": 52,
                  "snippet": {
                    "text": "                return upperCaseName.ToLowerInvariant();"
                  }
                },
                "contextRegion": {
                  "startLine": 51,
                  "startColumn": 1,
                  "endLine": 53,
                  "endColumn": 14,
                  "charOffset": 1631,
                  "charLength": 86,
                  "snippet": {
                    "text": "            {\r\n                return upperCaseName.ToLowerInvariant();\r\n            }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.EnumConverter.ConvertToCamelCase(System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "ToUpperInvariant"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1308",
          "level": "error",
          "message": {
            "text": "In method 'EnumConverter.ConvertToCamelCase(string)', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().",
            "messageId": "ToUpperInvariant"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Readers/EnumConverter.cs"
                },
                "region": {
                  "startLine": 57,
                  "snippet": {
                    "text": "            return upperCaseName.Substring(0, prefixCount).ToLowerInvariant() + upperCaseName.Substring(prefixCount);"
                  }
                },
                "contextRegion": {
                  "startLine": 56,
                  "startColumn": 1,
                  "endLine": 58,
                  "endColumn": 10,
                  "charOffset": 1804,
                  "charLength": 130,
                  "snippet": {
                    "text": "\r\n            return upperCaseName.Substring(0, prefixCount).ToLowerInvariant() + upperCaseName.Substring(prefixCount);\r\n        }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.EnumConverter.ConvertToCamelCase(System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "ToUpperInvariant"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2104",
          "level": "error",
          "message": {
            "text": "Remove the read-only designation from 'EnumConverter.Instance' or change the field to one that is an immutable reference type. If the reference type 'EnumConverter' is, in fact, immutable, exclude this message."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.EnumConverter.Instance"
            }
          ],
          "properties": {
            "Category": "Microsoft.Security",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1726",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.FlagsEnumConverter"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Flags"
          },
          "suppressionStates": ["suppressedInSource"],
          "properties": {
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2104",
          "level": "error",
          "message": {
            "text": "Remove the read-only designation from 'FlagsEnumConverter.Instance' or change the field to one that is an immutable reference type. If the reference type 'FlagsEnumConverter' is, in fact, immutable, exclude this message."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.FlagsEnumConverter.Instance"
            }
          ],
          "properties": {
            "Category": "Microsoft.Security",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'FlagsEnumConverter.WriteJson(JsonWriter, object, JsonSerializer)', validate parameter 'value' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Readers/FlagsEnumConverter.cs"
                },
                "region": {
                  "startLine": 62,
                  "snippet": {
                    "text": "            string flagsEnumValue = value.ToString();"
                  }
                },
                "contextRegion": {
                  "startLine": 61,
                  "startColumn": 1,
                  "endLine": 63,
                  "endColumn": 1,
                  "charOffset": 2248,
                  "charLength": 57,
                  "snippet": {
                    "text": "\r\n            string flagsEnumValue = value.ToString();\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.FlagsEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "1"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1308",
          "level": "error",
          "message": {
            "text": "In method 'PropertyBagConverter.ReadJson(JsonReader, Type, object, JsonSerializer)', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().",
            "messageId": "ToUpperInvariant"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Readers/PropertyBagConverter.cs"
                },
                "region": {
                  "startLine": 44,
                  "snippet": {
                    "text": "                {"
                  }
                },
                "contextRegion": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 45,
                  "endColumn": 74,
                  "charOffset": 1715,
                  "charLength": 143,
                  "snippet": {
                    "text": "                if (propertyType == typeof(bool))\r\n                {\r\n                    serializedValue = serializedValue.ToLowerInvariant();"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.PropertyBagConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "ToUpperInvariant"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'ResultDiffingVisitor.ResultDiffingVisitor(SarifLog)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nResultDiffingVisitor..ctor(SarifLog)\r\nSarifRewritingVisitor.VisitSarifLog(SarifLog):SarifLog"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Readers/ResultDiffingVisitor.cs"
                },
                "region": {
                  "startLine": 10,
                  "snippet": {
                    "text": "        public ResultDiffingVisitor(SarifLog sarifLog)"
                  }
                },
                "contextRegion": {
                  "startLine": 9,
                  "startColumn": 1,
                  "endLine": 11,
                  "endColumn": 10,
                  "charOffset": 306,
                  "charLength": 72,
                  "snippet": {
                    "text": "    {\r\n        public ResultDiffingVisitor(SarifLog sarifLog)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.ResultDiffingVisitor..ctor(Microsoft.CodeAnalysis.Sarif.SarifLog)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "In method 'ResultDiffingVisitor.ResultDiffingVisitor(SarifLog)', correct the spelling of 'sarif' in parameter name 'sarifLog' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "MemberParameter"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Readers/ResultDiffingVisitor.cs"
                },
                "region": {
                  "startLine": 10,
                  "snippet": {
                    "text": "        public ResultDiffingVisitor(SarifLog sarifLog)"
                  }
                },
                "contextRegion": {
                  "startLine": 9,
                  "startColumn": 1,
                  "endLine": 11,
                  "endColumn": 10,
                  "charOffset": 306,
                  "charLength": 72,
                  "snippet": {
                    "text": "    {\r\n        public ResultDiffingVisitor(SarifLog sarifLog)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.ResultDiffingVisitor..ctor(Microsoft.CodeAnalysis.Sarif.SarifLog)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "sarif#MemberParameter"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.ResultDiffingVisitor.AbsentResults"
            }
          ],
          "suppressionStates": ["suppressedInSource"],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.ResultDiffingVisitor.NewResults"
            }
          ],
          "suppressionStates": ["suppressedInSource"],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.ResultDiffingVisitor.SharedResults"
            }
          ],
          "suppressionStates": ["suppressedInSource"],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2104",
          "level": "error",
          "message": {
            "text": "Remove the read-only designation from 'RuleDictionaryConverter.Instance' or change the field to one that is an immutable reference type. If the reference type 'RuleDictionaryConverter' is, in fact, immutable, exclude this message."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.RuleDictionaryConverter.Instance"
            }
          ],
          "properties": {
            "Category": "Microsoft.Security",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in type name 'SarifContractResolver'.",
            "messageId": "Type"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.SarifContractResolver"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Type"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2104",
          "level": "error",
          "message": {
            "text": "Remove the read-only designation from 'SarifContractResolver.Instance' or change the field to one that is an immutable reference type. If the reference type 'SarifContractResolver' is, in fact, immutable, exclude this message."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.SarifContractResolver.Instance"
            }
          ],
          "properties": {
            "Category": "Microsoft.Security",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in type name 'SarifContractResolverVersionOne'.",
            "messageId": "Type"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.SarifContractResolverVersionOne"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Type"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2104",
          "level": "error",
          "message": {
            "text": "Remove the read-only designation from 'SarifContractResolverVersionOne.Instance' or change the field to one that is an immutable reference type. If the reference type 'SarifContractResolverVersionOne' is, in fact, immutable, exclude this message."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.SarifContractResolverVersionOne.Instance"
            }
          ],
          "properties": {
            "Category": "Microsoft.Security",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in type name 'SarifVersionConverter'.",
            "messageId": "Type"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.SarifVersionConverter"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Type"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2104",
          "level": "error",
          "message": {
            "text": "Remove the read-only designation from 'SarifVersionConverter.Instance' or change the field to one that is an immutable reference type. If the reference type 'SarifVersionConverter' is, in fact, immutable, exclude this message."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.SarifVersionConverter.Instance"
            }
          ],
          "properties": {
            "Category": "Microsoft.Security",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2104",
          "level": "error",
          "message": {
            "text": "Remove the read-only designation from 'UriConverter.Instance' or change the field to one that is an immutable reference type. If the reference type 'UriConverter' is, in fact, immutable, exclude this message."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.UriConverter.Instance"
            }
          ],
          "properties": {
            "Category": "Microsoft.Security",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2104",
          "level": "error",
          "message": {
            "text": "Remove the read-only designation from 'VersionConverter.Instance' or change the field to one that is an immutable reference type. If the reference type 'VersionConverter' is, in fact, immutable, exclude this message."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Readers.VersionConverter.Instance"
            }
          ],
          "properties": {
            "Category": "Microsoft.Security",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Authentihash' in member name 'AlgorithmKindVersionOne.Authentihash' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AlgorithmKindVersionOne.Authentihash"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Authentihash#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Ecoh' in member name 'AlgorithmKindVersionOne.Ecoh' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AlgorithmKindVersionOne.Ecoh"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Ecoh#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Fsb' in member name 'AlgorithmKindVersionOne.Fsb' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AlgorithmKindVersionOne.Fsb"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Fsb#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Gost' in member name 'AlgorithmKindVersionOne.Gost' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AlgorithmKindVersionOne.Gost"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Gost#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Groestl' in member name 'AlgorithmKindVersionOne.Groestl' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AlgorithmKindVersionOne.Groestl"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Groestl#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Haval' in member name 'AlgorithmKindVersionOne.Haval' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AlgorithmKindVersionOne.Haval"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Haval#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sdhash' in member name 'AlgorithmKindVersionOne.Sdhash' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AlgorithmKindVersionOne.Sdhash"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sdhash#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sha' in member name 'AlgorithmKindVersionOne.Sha1' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AlgorithmKindVersionOne.Sha1"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sha#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sha' in member name 'AlgorithmKindVersionOne.Sha224' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AlgorithmKindVersionOne.Sha224"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sha#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sha' in member name 'AlgorithmKindVersionOne.Sha256' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AlgorithmKindVersionOne.Sha256"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sha#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sha' in member name 'AlgorithmKindVersionOne.Sha3' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AlgorithmKindVersionOne.Sha3"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sha#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sha' in member name 'AlgorithmKindVersionOne.Sha384' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AlgorithmKindVersionOne.Sha384"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sha#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sha' in member name 'AlgorithmKindVersionOne.Sha512' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AlgorithmKindVersionOne.Sha512"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sha#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Snefru' in member name 'AlgorithmKindVersionOne.Snefru' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AlgorithmKindVersionOne.Snefru"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Snefru#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Ssdeep' in member name 'AlgorithmKindVersionOne.Ssdeep' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AlgorithmKindVersionOne.Ssdeep"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Ssdeep#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Swifft' in member name 'AlgorithmKindVersionOne.Swifft' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AlgorithmKindVersionOne.Swifft"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Swifft#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Tlsh' in member name 'AlgorithmKindVersionOne.Tlsh' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AlgorithmKindVersionOne.Tlsh"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Tlsh#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'AnnotatedCodeLocationVersionOne.AnnotatedCodeLocationVersionOne(AnnotatedCodeLocationVersionOne)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nAnnotatedCodeLocationVersionOne..ctor(AnnotatedCodeLocationVersionOne)\r\nAnnotatedCodeLocationVersionOne.Init(Int32, Int32, PhysicalLocationVersionOne, String, String, String, Int32, String, AnnotatedCodeLocationKindVersionOne, TaintKindVersionOne, String, IEnumerable<String>, IDictionary<String,String>, String, Boolean, AnnotatedCodeLocationImportanceVersionOne, String, IEnumerable<AnnotationVersionOne>, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/AnnotatedCodeLocationVersionOne.cs"
                },
                "region": {
                  "startLine": 234,
                  "snippet": {
                    "text": "        public AnnotatedCodeLocationVersionOne(AnnotatedCodeLocationVersionOne other)"
                  }
                },
                "contextRegion": {
                  "startLine": 233,
                  "startColumn": 1,
                  "endLine": 235,
                  "endColumn": 10,
                  "charOffset": 12048,
                  "charLength": 122,
                  "snippet": {
                    "text": "        /// </exception>\r\n        public AnnotatedCodeLocationVersionOne(AnnotatedCodeLocationVersionOne other)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationVersionOne..ctor(Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationVersionOne)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'AnnotatedCodeLocationVersionOne.AnnotatedCodeLocationVersionOne(int, int, PhysicalLocationVersionOne, string, string, string, int, string, AnnotatedCodeLocationKindVersionOne, TaintKindVersionOne, string, IEnumerable<string>, IDictionary<string, string>, string, bool, AnnotatedCodeLocationImportanceVersionOne, string, IEnumerable<AnnotationVersionOne>, IDictionary<string, SerializedPropertyInfo>)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nAnnotatedCodeLocationVersionOne..ctor(Int32, Int32, PhysicalLocationVersionOne, String, String, String, Int32, String, AnnotatedCodeLocationKindVersionOne, TaintKindVersionOne, String, IEnumerable<String>, IDictionary<String,String>, String, Boolean, AnnotatedCodeLocationImportanceVersionOne, String, IEnumerable<AnnotationVersionOne>, IDictionary<String,SerializedPropertyInfo>)\r\nAnnotatedCodeLocationVersionOne.Init(Int32, Int32, PhysicalLocationVersionOne, String, String, String, Int32, String, AnnotatedCodeLocationKindVersionOne, TaintKindVersionOne, String, IEnumerable<String>, IDictionary<String,String>, String, Boolean, AnnotatedCodeLocationImportanceVersionOne, String, IEnumerable<AnnotationVersionOne>, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/AnnotatedCodeLocationVersionOne.cs"
                },
                "region": {
                  "startLine": 220,
                  "snippet": {
                    "text": "        public AnnotatedCodeLocationVersionOne(int id, int step, PhysicalLocationVersionOne physicalLocation, string fullyQualifiedLogicalName, string logicalLocationKey, string module, int threadId, string message, AnnotatedCodeLocationKindVersionOne kind, TaintKindVersionOne taintKind, string target, IEnumerable<string> values, IDictionary<string, string> state, string targetKey, bool essential, AnnotatedCodeLocationImportanceVersionOne importance, string snippet, IEnumerable<AnnotationVersionOne> annotations, IDictionary<string, SerializedPropertyInfo> properties)"
                  }
                },
                "contextRegion": {
                  "startLine": 219,
                  "startColumn": 1,
                  "endLine": 221,
                  "endColumn": 10,
                  "charOffset": 10778,
                  "charLength": 606,
                  "snippet": {
                    "text": "        /// </param>\r\n        public AnnotatedCodeLocationVersionOne(int id, int step, PhysicalLocationVersionOne physicalLocation, string fullyQualifiedLogicalName, string logicalLocationKey, string module, int threadId, string message, AnnotatedCodeLocationKindVersionOne kind, TaintKindVersionOne taintKind, string target, IEnumerable<string> values, IDictionary<string, string> state, string targetKey, bool essential, AnnotatedCodeLocationImportanceVersionOne importance, string snippet, IEnumerable<AnnotationVersionOne> annotations, IDictionary<string, SerializedPropertyInfo> properties)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationVersionOne..ctor(System.Int32,System.Int32,Microsoft.CodeAnalysis.Sarif.VersionOne.PhysicalLocationVersionOne,System.String,System.String,System.String,System.Int32,System.String,Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationKindVersionOne,Microsoft.CodeAnalysis.Sarif.VersionOne.TaintKindVersionOne,System.String,System.Collections.Generic.IEnumerable`1<System.String>,System.Collections.Generic.IDictionary`2<System.String,System.String>,System.String,System.Boolean,Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationImportanceVersionOne,System.String,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotationVersionOne>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'AnnotatedCodeLocationVersionOne.Annotations' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/AnnotatedCodeLocationVersionOne.cs"
                },
                "region": {
                  "startLine": 145,
                  "snippet": {
                    "text": "        public IList<AnnotationVersionOne> Annotations { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 144,
                  "startColumn": 1,
                  "endLine": 146,
                  "endColumn": 1,
                  "charOffset": 7200,
                  "charLength": 160,
                  "snippet": {
                    "text": "        [DataMember(Name = \"annotations\", IsRequired = false, EmitDefaultValue = false)]\r\n        public IList<AnnotationVersionOne> Annotations { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationVersionOne.Annotations"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'AnnotatedCodeLocationVersionOne.State' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/AnnotatedCodeLocationVersionOne.cs"
                },
                "region": {
                  "startLine": 114,
                  "snippet": {
                    "text": "        public IDictionary<string, string> State { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 113,
                  "startColumn": 1,
                  "endLine": 115,
                  "endColumn": 1,
                  "charOffset": 5561,
                  "charLength": 148,
                  "snippet": {
                    "text": "        [DataMember(Name = \"state\", IsRequired = false, EmitDefaultValue = false)]\r\n        public IDictionary<string, string> State { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationVersionOne.State"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'AnnotatedCodeLocationVersionOne.Values' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/AnnotatedCodeLocationVersionOne.cs"
                },
                "region": {
                  "startLine": 108,
                  "snippet": {
                    "text": "        public IList<string> Values { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 107,
                  "startColumn": 1,
                  "endLine": 109,
                  "endColumn": 1,
                  "charOffset": 5080,
                  "charLength": 136,
                  "snippet": {
                    "text": "        [DataMember(Name = \"values\", IsRequired = false, EmitDefaultValue = false)]\r\n        public IList<string> Values { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationVersionOne.Values"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1502",
          "level": "warning",
          "message": {
            "text": "'AnnotatedCodeLocationVersionOneEqualityComparer.Equals(AnnotatedCodeLocationVersionOne, AnnotatedCodeLocationVersionOne)' has a cyclomatic complexity of 47. Rewrite or refactor the method to reduce complexity to 25."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/AnnotatedCodeLocationVersionOneEqualityComparer.cs"
                },
                "region": {
                  "startLine": 20,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 19,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 46,
                  "charOffset": 846,
                  "charLength": 161,
                  "snippet": {
                    "text": "        public bool Equals(AnnotatedCodeLocationVersionOne left, AnnotatedCodeLocationVersionOne right)\r\n        {\r\n            if (ReferenceEquals(left, right))"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationVersionOneEqualityComparer.Equals(Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationVersionOne,Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationVersionOne)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Maintainability",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1502",
          "level": "warning",
          "message": {
            "text": "'AnnotatedCodeLocationVersionOneEqualityComparer.GetHashCode(AnnotatedCodeLocationVersionOne)' has a cyclomatic complexity of 26. Rewrite or refactor the method to reduce complexity to 25."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/AnnotatedCodeLocationVersionOneEqualityComparer.cs"
                },
                "region": {
                  "startLine": 196,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 195,
                  "startColumn": 1,
                  "endLine": 197,
                  "endColumn": 44,
                  "charOffset": 5911,
                  "charLength": 123,
                  "snippet": {
                    "text": "        public int GetHashCode(AnnotatedCodeLocationVersionOne obj)\r\n        {\r\n            if (ReferenceEquals(obj, null))"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationVersionOneEqualityComparer.GetHashCode(Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationVersionOne)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Maintainability",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'AnnotationVersionOne.Locations' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/AnnotationVersionOne.cs"
                },
                "region": {
                  "startLine": 41,
                  "snippet": {
                    "text": "        public IList<PhysicalLocationVersionOne> Locations { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 40,
                  "startColumn": 1,
                  "endLine": 42,
                  "endColumn": 1,
                  "charOffset": 1493,
                  "charLength": 135,
                  "snippet": {
                    "text": "        [DataMember(Name = \"locations\", IsRequired = true)]\r\n        public IList<PhysicalLocationVersionOne> Locations { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotationVersionOne.Locations"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'CodeFlowVersionOne.CodeFlowVersionOne(CodeFlowVersionOne)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nCodeFlowVersionOne..ctor(CodeFlowVersionOne)\r\nCodeFlowVersionOne.Init(String, IEnumerable<AnnotatedCodeLocationVersionOne>, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/CodeFlowVersionOne.cs"
                },
                "region": {
                  "startLine": 83,
                  "snippet": {
                    "text": "        public CodeFlowVersionOne(CodeFlowVersionOne other)"
                  }
                },
                "contextRegion": {
                  "startLine": 82,
                  "startColumn": 1,
                  "endLine": 84,
                  "endColumn": 10,
                  "charOffset": 3537,
                  "charLength": 96,
                  "snippet": {
                    "text": "        /// </exception>\r\n        public CodeFlowVersionOne(CodeFlowVersionOne other)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.CodeFlowVersionOne..ctor(Microsoft.CodeAnalysis.Sarif.VersionOne.CodeFlowVersionOne)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'CodeFlowVersionOne.CodeFlowVersionOne(string, IEnumerable<AnnotatedCodeLocationVersionOne>, IDictionary<string, SerializedPropertyInfo>)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nCodeFlowVersionOne..ctor(String, IEnumerable<AnnotatedCodeLocationVersionOne>, IDictionary<String,SerializedPropertyInfo>)\r\nCodeFlowVersionOne.Init(String, IEnumerable<AnnotatedCodeLocationVersionOne>, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/CodeFlowVersionOne.cs"
                },
                "region": {
                  "startLine": 69,
                  "snippet": {
                    "text": "        public CodeFlowVersionOne(string message, IEnumerable<AnnotatedCodeLocationVersionOne> locations, IDictionary<string, SerializedPropertyInfo> properties)"
                  }
                },
                "contextRegion": {
                  "startLine": 68,
                  "startColumn": 1,
                  "endLine": 70,
                  "endColumn": 10,
                  "charOffset": 2870,
                  "charLength": 194,
                  "snippet": {
                    "text": "        /// </param>\r\n        public CodeFlowVersionOne(string message, IEnumerable<AnnotatedCodeLocationVersionOne> locations, IDictionary<string, SerializedPropertyInfo> properties)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.CodeFlowVersionOne..ctor(System.String,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationVersionOne>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'CodeFlowVersionOne.Locations' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/CodeFlowVersionOne.cs"
                },
                "region": {
                  "startLine": 42,
                  "snippet": {
                    "text": "        public IList<AnnotatedCodeLocationVersionOne> Locations { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 41,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 1,
                  "charOffset": 1647,
                  "charLength": 140,
                  "snippet": {
                    "text": "        [DataMember(Name = \"locations\", IsRequired = true)]\r\n        public IList<AnnotatedCodeLocationVersionOne> Locations { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.CodeFlowVersionOne.Locations"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'ExceptionDataVersionOne.InnerExceptions' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/ExceptionDataVersionOne.cs"
                },
                "region": {
                  "startLine": 53,
                  "snippet": {
                    "text": "        public IList<ExceptionDataVersionOne> InnerExceptions { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 52,
                  "startColumn": 1,
                  "endLine": 54,
                  "endColumn": 1,
                  "charOffset": 2147,
                  "charLength": 171,
                  "snippet": {
                    "text": "        [DataMember(Name = \"innerExceptions\", IsRequired = false, EmitDefaultValue = false)]\r\n        public IList<ExceptionDataVersionOne> InnerExceptions { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.ExceptionDataVersionOne.InnerExceptions"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1054",
          "level": "error",
          "message": {
            "text": "Change the type of parameter 'uriBaseId' of method 'FileChangeVersionOne.FileChangeVersionOne(Uri, string, IEnumerable<ReplacementVersionOne>)' from string to System.Uri, or provide an overload of 'FileChangeVersionOne.FileChangeVersionOne(Uri, string, IEnumerable<ReplacementVersionOne>)', that allows 'uriBaseId' to be passed as a System.Uri object."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/FileChangeVersionOne.cs"
                },
                "region": {
                  "startLine": 71,
                  "snippet": {
                    "text": "        public FileChangeVersionOne(Uri uri, string uriBaseId, IEnumerable<ReplacementVersionOne> replacements)"
                  }
                },
                "contextRegion": {
                  "startLine": 70,
                  "startColumn": 1,
                  "endLine": 72,
                  "endColumn": 10,
                  "charOffset": 2887,
                  "charLength": 144,
                  "snippet": {
                    "text": "        /// </param>\r\n        public FileChangeVersionOne(Uri uri, string uriBaseId, IEnumerable<ReplacementVersionOne> replacements)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.FileChangeVersionOne..ctor(System.Uri,System.String,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.VersionOne.ReplacementVersionOne>)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "1#"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'FileChangeVersionOne.Replacements' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/FileChangeVersionOne.cs"
                },
                "region": {
                  "startLine": 50,
                  "snippet": {
                    "text": "        public IList<ReplacementVersionOne> Replacements { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 49,
                  "startColumn": 1,
                  "endLine": 51,
                  "endColumn": 1,
                  "charOffset": 1986,
                  "charLength": 136,
                  "snippet": {
                    "text": "        [DataMember(Name = \"replacements\", IsRequired = true)]\r\n        public IList<ReplacementVersionOne> Replacements { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.FileChangeVersionOne.Replacements"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1056",
          "level": "error",
          "message": {
            "text": "Change the type of property 'FileChangeVersionOne.UriBaseId' from string to System.Uri."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/FileChangeVersionOne.cs"
                },
                "region": {
                  "startLine": 44,
                  "snippet": {
                    "text": "        public string UriBaseId { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 45,
                  "endColumn": 1,
                  "charOffset": 1651,
                  "charLength": 135,
                  "snippet": {
                    "text": "        [DataMember(Name = \"uriBaseId\", IsRequired = false, EmitDefaultValue = false)]\r\n        public string UriBaseId { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.FileChangeVersionOne.UriBaseId"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'FileDataVersionOne.FileDataVersionOne(FileDataVersionOne)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nFileDataVersionOne..ctor(FileDataVersionOne)\r\nFileDataVersionOne.Init(Uri, String, String, Int32, Int32, String, String, IEnumerable<HashVersionOne>, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/FileDataVersionOne.cs"
                },
                "region": {
                  "startLine": 140,
                  "snippet": {
                    "text": "        public FileDataVersionOne(FileDataVersionOne other)"
                  }
                },
                "contextRegion": {
                  "startLine": 139,
                  "startColumn": 1,
                  "endLine": 141,
                  "endColumn": 10,
                  "charOffset": 6179,
                  "charLength": 96,
                  "snippet": {
                    "text": "        /// </exception>\r\n        public FileDataVersionOne(FileDataVersionOne other)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.FileDataVersionOne..ctor(Microsoft.CodeAnalysis.Sarif.VersionOne.FileDataVersionOne)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'FileDataVersionOne.FileDataVersionOne(Uri, string, string, int, int, string, string, IEnumerable<HashVersionOne>, IDictionary<string, SerializedPropertyInfo>)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nFileDataVersionOne..ctor(Uri, String, String, Int32, Int32, String, String, IEnumerable<HashVersionOne>, IDictionary<String,SerializedPropertyInfo>)\r\nFileDataVersionOne.Init(Uri, String, String, Int32, Int32, String, String, IEnumerable<HashVersionOne>, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/FileDataVersionOne.cs"
                },
                "region": {
                  "startLine": 126,
                  "snippet": {
                    "text": "        public FileDataVersionOne(Uri uri, string uriBaseId, string parentKey, int offset, int length, string mimeType, string contents, IEnumerable<HashVersionOne> hashes, IDictionary<string, SerializedPropertyInfo> properties)"
                  }
                },
                "contextRegion": {
                  "startLine": 125,
                  "startColumn": 1,
                  "endLine": 127,
                  "endColumn": 10,
                  "charOffset": 5394,
                  "charLength": 261,
                  "snippet": {
                    "text": "        /// </param>\r\n        public FileDataVersionOne(Uri uri, string uriBaseId, string parentKey, int offset, int length, string mimeType, string contents, IEnumerable<HashVersionOne> hashes, IDictionary<string, SerializedPropertyInfo> properties)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.FileDataVersionOne..ctor(System.Uri,System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.VersionOne.HashVersionOne>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1054",
          "level": "error",
          "message": {
            "text": "Change the type of parameter 'uriBaseId' of method 'FileDataVersionOne.FileDataVersionOne(Uri, string, string, int, int, string, string, IEnumerable<HashVersionOne>, IDictionary<string, SerializedPropertyInfo>)' from string to System.Uri, or provide an overload of 'FileDataVersionOne.FileDataVersionOne(Uri, string, string, int, int, string, string, IEnumerable<HashVersionOne>, IDictionary<string, SerializedPropertyInfo>)', that allows 'uriBaseId' to be passed as a System.Uri object."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/FileDataVersionOne.cs"
                },
                "region": {
                  "startLine": 126,
                  "snippet": {
                    "text": "        public FileDataVersionOne(Uri uri, string uriBaseId, string parentKey, int offset, int length, string mimeType, string contents, IEnumerable<HashVersionOne> hashes, IDictionary<string, SerializedPropertyInfo> properties)"
                  }
                },
                "contextRegion": {
                  "startLine": 125,
                  "startColumn": 1,
                  "endLine": 127,
                  "endColumn": 10,
                  "charOffset": 5394,
                  "charLength": 261,
                  "snippet": {
                    "text": "        /// </param>\r\n        public FileDataVersionOne(Uri uri, string uriBaseId, string parentKey, int offset, int length, string mimeType, string contents, IEnumerable<HashVersionOne> hashes, IDictionary<string, SerializedPropertyInfo> properties)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.FileDataVersionOne..ctor(System.Uri,System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.VersionOne.HashVersionOne>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "1#"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'FileDataVersionOne.Hashes' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/FileDataVersionOne.cs"
                },
                "region": {
                  "startLine": 81,
                  "snippet": {
                    "text": "        public IList<HashVersionOne> Hashes { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 80,
                  "startColumn": 1,
                  "endLine": 82,
                  "endColumn": 1,
                  "charOffset": 3344,
                  "charLength": 144,
                  "snippet": {
                    "text": "        [DataMember(Name = \"hashes\", IsRequired = false, EmitDefaultValue = false)]\r\n        public IList<HashVersionOne> Hashes { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.FileDataVersionOne.Hashes"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1056",
          "level": "error",
          "message": {
            "text": "Change the type of property 'FileDataVersionOne.UriBaseId' from string to System.Uri."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/FileDataVersionOne.cs"
                },
                "region": {
                  "startLine": 45,
                  "snippet": {
                    "text": "        public string UriBaseId { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 44,
                  "startColumn": 1,
                  "endLine": 46,
                  "endColumn": 1,
                  "charOffset": 1755,
                  "charLength": 135,
                  "snippet": {
                    "text": "        [DataMember(Name = \"uriBaseId\", IsRequired = false, EmitDefaultValue = false)]\r\n        public string UriBaseId { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.FileDataVersionOne.UriBaseId"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'FixVersionOne.FileChanges' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/FixVersionOne.cs"
                },
                "region": {
                  "startLine": 44,
                  "snippet": {
                    "text": "        public IList<FileChangeVersionOne> FileChanges { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 45,
                  "endColumn": 1,
                  "charOffset": 1802,
                  "charLength": 133,
                  "snippet": {
                    "text": "        [DataMember(Name = \"fileChanges\", IsRequired = true)]\r\n        public IList<FileChangeVersionOne> FileChanges { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.FixVersionOne.FileChanges"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'FormattedRuleMessageVersionOne.Arguments' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/FormattedRuleMessageVersionOne.cs"
                },
                "region": {
                  "startLine": 44,
                  "snippet": {
                    "text": "        public IList<string> Arguments { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 45,
                  "endColumn": 1,
                  "charOffset": 2004,
                  "charLength": 142,
                  "snippet": {
                    "text": "        [DataMember(Name = \"arguments\", IsRequired = false, EmitDefaultValue = false)]\r\n        public IList<string> Arguments { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.FormattedRuleMessageVersionOne.Arguments"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'InvocationVersionOne.InvocationVersionOne(InvocationVersionOne)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nInvocationVersionOne..ctor(InvocationVersionOne)\r\nInvocationVersionOne.Init(String, IDictionary<String,String>, DateTime, DateTime, String, String, Int32, String, String, IDictionary<String,String>, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/InvocationVersionOne.cs"
                },
                "region": {
                  "startLine": 158,
                  "snippet": {
                    "text": "        public InvocationVersionOne(InvocationVersionOne other)"
                  }
                },
                "contextRegion": {
                  "startLine": 157,
                  "startColumn": 1,
                  "endLine": 159,
                  "endColumn": 10,
                  "charOffset": 7242,
                  "charLength": 100,
                  "snippet": {
                    "text": "        /// </exception>\r\n        public InvocationVersionOne(InvocationVersionOne other)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.InvocationVersionOne..ctor(Microsoft.CodeAnalysis.Sarif.VersionOne.InvocationVersionOne)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'InvocationVersionOne.InvocationVersionOne(string, IDictionary<string, string>, DateTime, DateTime, string, string, int, string, string, IDictionary<string, string>, IDictionary<string, SerializedPropertyInfo>)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nInvocationVersionOne..ctor(String, IDictionary<String,String>, DateTime, DateTime, String, String, Int32, String, String, IDictionary<String,String>, IDictionary<String,SerializedPropertyInfo>)\r\nInvocationVersionOne.Init(String, IDictionary<String,String>, DateTime, DateTime, String, String, Int32, String, String, IDictionary<String,String>, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/InvocationVersionOne.cs"
                },
                "region": {
                  "startLine": 144,
                  "snippet": {
                    "text": "        public InvocationVersionOne(string commandLine, IDictionary<string, string> responseFiles, DateTime startTime, DateTime endTime, string machine, string account, int processId, string fileName, string workingDirectory, IDictionary<string, string> environmentVariables, IDictionary<string, SerializedPropertyInfo> properties)"
                  }
                },
                "contextRegion": {
                  "startLine": 143,
                  "startColumn": 1,
                  "endLine": 145,
                  "endColumn": 10,
                  "charOffset": 6296,
                  "charLength": 364,
                  "snippet": {
                    "text": "        /// </param>\r\n        public InvocationVersionOne(string commandLine, IDictionary<string, string> responseFiles, DateTime startTime, DateTime endTime, string machine, string account, int processId, string fileName, string workingDirectory, IDictionary<string, string> environmentVariables, IDictionary<string, SerializedPropertyInfo> properties)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.InvocationVersionOne..ctor(System.String,System.Collections.Generic.IDictionary`2<System.String,System.String>,System.DateTime,System.DateTime,System.String,System.String,System.Int32,System.String,System.String,System.Collections.Generic.IDictionary`2<System.String,System.String>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'InvocationVersionOne.EnvironmentVariables' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/InvocationVersionOne.cs"
                },
                "region": {
                  "startLine": 93,
                  "snippet": {
                    "text": "        public IDictionary<string, string> EnvironmentVariables { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 92,
                  "startColumn": 1,
                  "endLine": 94,
                  "endColumn": 1,
                  "charOffset": 3853,
                  "charLength": 178,
                  "snippet": {
                    "text": "        [DataMember(Name = \"environmentVariables\", IsRequired = false, EmitDefaultValue = false)]\r\n        public IDictionary<string, string> EnvironmentVariables { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.InvocationVersionOne.EnvironmentVariables"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'InvocationVersionOne.ResponseFiles' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/InvocationVersionOne.cs"
                },
                "region": {
                  "startLine": 45,
                  "snippet": {
                    "text": "        public IDictionary<string, string> ResponseFiles { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 44,
                  "startColumn": 1,
                  "endLine": 46,
                  "endColumn": 1,
                  "charOffset": 1696,
                  "charLength": 164,
                  "snippet": {
                    "text": "        [DataMember(Name = \"responseFiles\", IsRequired = false, EmitDefaultValue = false)]\r\n        public IDictionary<string, string> ResponseFiles { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.InvocationVersionOne.ResponseFiles"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1502",
          "level": "warning",
          "message": {
            "text": "'InvocationVersionOneEqualityComparer.Equals(InvocationVersionOne, InvocationVersionOne)' has a cyclomatic complexity of 36. Rewrite or refactor the method to reduce complexity to 25."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/InvocationVersionOneEqualityComparer.cs"
                },
                "region": {
                  "startLine": 20,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 19,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 46,
                  "charOffset": 791,
                  "charLength": 139,
                  "snippet": {
                    "text": "        public bool Equals(InvocationVersionOne left, InvocationVersionOne right)\r\n        {\r\n            if (ReferenceEquals(left, right))"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.InvocationVersionOneEqualityComparer.Equals(Microsoft.CodeAnalysis.Sarif.VersionOne.InvocationVersionOne,Microsoft.CodeAnalysis.Sarif.VersionOne.InvocationVersionOne)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Maintainability",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1040",
          "level": "warning",
          "message": {
            "text": "Define a custom attribute to replace 'IRuleVersionOne'."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.IRuleVersionOne"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in type name 'ISarifNodeVersionOne'.",
            "messageId": "Type"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.ISarifNodeVersionOne"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Type"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in member name 'ISarifNodeVersionOne.SarifNodeKindVersionOne' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.ISarifNodeVersionOne.SarifNodeKindVersionOne"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'LocationVersionOne.LocationVersionOne(LocationVersionOne)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nLocationVersionOne..ctor(LocationVersionOne)\r\nLocationVersionOne.Init(PhysicalLocationVersionOne, PhysicalLocationVersionOne, String, String, String, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/LocationVersionOne.cs"
                },
                "region": {
                  "startLine": 113,
                  "snippet": {
                    "text": "        public LocationVersionOne(LocationVersionOne other)"
                  }
                },
                "contextRegion": {
                  "startLine": 112,
                  "startColumn": 1,
                  "endLine": 114,
                  "endColumn": 10,
                  "charOffset": 5726,
                  "charLength": 96,
                  "snippet": {
                    "text": "        /// </exception>\r\n        public LocationVersionOne(LocationVersionOne other)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.LocationVersionOne..ctor(Microsoft.CodeAnalysis.Sarif.VersionOne.LocationVersionOne)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'LocationVersionOne.LocationVersionOne(PhysicalLocationVersionOne, PhysicalLocationVersionOne, string, string, string, IDictionary<string, SerializedPropertyInfo>)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nLocationVersionOne..ctor(PhysicalLocationVersionOne, PhysicalLocationVersionOne, String, String, String, IDictionary<String,SerializedPropertyInfo>)\r\nLocationVersionOne.Init(PhysicalLocationVersionOne, PhysicalLocationVersionOne, String, String, String, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/LocationVersionOne.cs"
                },
                "region": {
                  "startLine": 99,
                  "snippet": {
                    "text": "        public LocationVersionOne(PhysicalLocationVersionOne analysisTarget, PhysicalLocationVersionOne resultFile, string fullyQualifiedLogicalName, string logicalLocationKey, string decoratedName, IDictionary<string, SerializedPropertyInfo> properties)"
                  }
                },
                "contextRegion": {
                  "startLine": 98,
                  "startColumn": 1,
                  "endLine": 100,
                  "endColumn": 10,
                  "charOffset": 4896,
                  "charLength": 287,
                  "snippet": {
                    "text": "        /// </param>\r\n        public LocationVersionOne(PhysicalLocationVersionOne analysisTarget, PhysicalLocationVersionOne resultFile, string fullyQualifiedLogicalName, string logicalLocationKey, string decoratedName, IDictionary<string, SerializedPropertyInfo> properties)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.LocationVersionOne..ctor(Microsoft.CodeAnalysis.Sarif.VersionOne.PhysicalLocationVersionOne,Microsoft.CodeAnalysis.Sarif.VersionOne.PhysicalLocationVersionOne,System.String,System.String,System.String,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'NotificationVersionOne.NotificationVersionOne(NotificationVersionOne)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nNotificationVersionOne..ctor(NotificationVersionOne)\r\nNotificationVersionOne.Init(String, String, String, PhysicalLocationVersionOne, String, NotificationLevelVersionOne, Int32, DateTime, ExceptionDataVersionOne, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/NotificationVersionOne.cs"
                },
                "region": {
                  "startLine": 149,
                  "snippet": {
                    "text": "        public NotificationVersionOne(NotificationVersionOne other)"
                  }
                },
                "contextRegion": {
                  "startLine": 148,
                  "startColumn": 1,
                  "endLine": 150,
                  "endColumn": 10,
                  "charOffset": 6848,
                  "charLength": 104,
                  "snippet": {
                    "text": "        /// </exception>\r\n        public NotificationVersionOne(NotificationVersionOne other)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.NotificationVersionOne..ctor(Microsoft.CodeAnalysis.Sarif.VersionOne.NotificationVersionOne)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'NotificationVersionOne.NotificationVersionOne(string, string, string, PhysicalLocationVersionOne, string, NotificationLevelVersionOne, int, DateTime, ExceptionDataVersionOne, IDictionary<string, SerializedPropertyInfo>)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nNotificationVersionOne..ctor(String, String, String, PhysicalLocationVersionOne, String, NotificationLevelVersionOne, Int32, DateTime, ExceptionDataVersionOne, IDictionary<String,SerializedPropertyInfo>)\r\nNotificationVersionOne.Init(String, String, String, PhysicalLocationVersionOne, String, NotificationLevelVersionOne, Int32, DateTime, ExceptionDataVersionOne, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/NotificationVersionOne.cs"
                },
                "region": {
                  "startLine": 135,
                  "snippet": {
                    "text": "        public NotificationVersionOne(string id, string ruleId, string ruleKey, PhysicalLocationVersionOne physicalLocation, string message, NotificationLevelVersionOne level, int threadId, DateTime time, ExceptionDataVersionOne exception, IDictionary<string, SerializedPropertyInfo> properties)"
                  }
                },
                "contextRegion": {
                  "startLine": 134,
                  "startColumn": 1,
                  "endLine": 136,
                  "endColumn": 10,
                  "charOffset": 5981,
                  "charLength": 328,
                  "snippet": {
                    "text": "        /// </param>\r\n        public NotificationVersionOne(string id, string ruleId, string ruleKey, PhysicalLocationVersionOne physicalLocation, string message, NotificationLevelVersionOne level, int threadId, DateTime time, ExceptionDataVersionOne exception, IDictionary<string, SerializedPropertyInfo> properties)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.NotificationVersionOne..ctor(System.String,System.String,System.String,Microsoft.CodeAnalysis.Sarif.VersionOne.PhysicalLocationVersionOne,System.String,Microsoft.CodeAnalysis.Sarif.VersionOne.NotificationLevelVersionOne,System.Int32,System.DateTime,Microsoft.CodeAnalysis.Sarif.VersionOne.ExceptionDataVersionOne,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1054",
          "level": "error",
          "message": {
            "text": "Change the type of parameter 'uriBaseId' of method 'PhysicalLocationVersionOne.PhysicalLocationVersionOne(Uri, string, RegionVersionOne)' from string to System.Uri, or provide an overload of 'PhysicalLocationVersionOne.PhysicalLocationVersionOne(Uri, string, RegionVersionOne)', that allows 'uriBaseId' to be passed as a System.Uri object."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/PhysicalLocationVersionOne.cs"
                },
                "region": {
                  "startLine": 71,
                  "snippet": {
                    "text": "        public PhysicalLocationVersionOne(Uri uri, string uriBaseId, RegionVersionOne region)"
                  }
                },
                "contextRegion": {
                  "startLine": 70,
                  "startColumn": 1,
                  "endLine": 72,
                  "endColumn": 10,
                  "charOffset": 2968,
                  "charLength": 126,
                  "snippet": {
                    "text": "        /// </param>\r\n        public PhysicalLocationVersionOne(Uri uri, string uriBaseId, RegionVersionOne region)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.PhysicalLocationVersionOne..ctor(System.Uri,System.String,Microsoft.CodeAnalysis.Sarif.VersionOne.RegionVersionOne)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "1#"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1056",
          "level": "error",
          "message": {
            "text": "Change the type of property 'PhysicalLocationVersionOne.UriBaseId' from string to System.Uri."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/PhysicalLocationVersionOne.cs"
                },
                "region": {
                  "startLine": 44,
                  "snippet": {
                    "text": "        public string UriBaseId { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 45,
                  "endColumn": 1,
                  "charOffset": 1803,
                  "charLength": 135,
                  "snippet": {
                    "text": "        [DataMember(Name = \"uriBaseId\", IsRequired = false, EmitDefaultValue = false)]\r\n        public string UriBaseId { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.PhysicalLocationVersionOne.UriBaseId"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'ResultVersionOne.ResultVersionOne(ResultVersionOne)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nResultVersionOne..ctor(ResultVersionOne)\r\nResultVersionOne.Init(String, String, ResultLevelVersionOne, String, FormattedRuleMessageVersionOne, IEnumerable<LocationVersionOne>, String, String, String, IEnumerable<StackVersionOne>, IEnumerable<CodeFlowVersionOne>, IEnumerable<AnnotatedCodeLocationVersionOne>, SuppressionStatesVersionOne, BaselineStateVersionOne, IEnumerable<FixVersionOne>, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/ResultVersionOne.cs"
                },
                "region": {
                  "startLine": 199,
                  "snippet": {
                    "text": "        public ResultVersionOne(ResultVersionOne other)"
                  }
                },
                "contextRegion": {
                  "startLine": 198,
                  "startColumn": 1,
                  "endLine": 200,
                  "endColumn": 10,
                  "charOffset": 10264,
                  "charLength": 92,
                  "snippet": {
                    "text": "        /// </exception>\r\n        public ResultVersionOne(ResultVersionOne other)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.ResultVersionOne..ctor(Microsoft.CodeAnalysis.Sarif.VersionOne.ResultVersionOne)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'ResultVersionOne.ResultVersionOne(string, string, ResultLevelVersionOne, string, FormattedRuleMessageVersionOne, IEnumerable<LocationVersionOne>, string, string, string, IEnumerable<StackVersionOne>, IEnumerable<CodeFlowVersionOne>, IEnumerable<AnnotatedCodeLocationVersionOne>, SuppressionStatesVersionOne, BaselineStateVersionOne, IEnumerable<FixVersionOne>, IDictionary<string, SerializedPropertyInfo>)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nResultVersionOne..ctor(String, String, ResultLevelVersionOne, String, FormattedRuleMessageVersionOne, IEnumerable<LocationVersionOne>, String, String, String, IEnumerable<StackVersionOne>, IEnumerable<CodeFlowVersionOne>, IEnumerable<AnnotatedCodeLocationVersionOne>, SuppressionStatesVersionOne, BaselineStateVersionOne, IEnumerable<FixVersionOne>, IDictionary<String,SerializedPropertyInfo>)\r\nResultVersionOne.Init(String, String, ResultLevelVersionOne, String, FormattedRuleMessageVersionOne, IEnumerable<LocationVersionOne>, String, String, String, IEnumerable<StackVersionOne>, IEnumerable<CodeFlowVersionOne>, IEnumerable<AnnotatedCodeLocationVersionOne>, SuppressionStatesVersionOne, BaselineStateVersionOne, IEnumerable<FixVersionOne>, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/ResultVersionOne.cs"
                },
                "region": {
                  "startLine": 185,
                  "snippet": {
                    "text": "        public ResultVersionOne(string ruleId, string ruleKey, ResultLevelVersionOne level, string message, FormattedRuleMessageVersionOne formattedRuleMessage, IEnumerable<LocationVersionOne> locations, string snippet, string id, string toolFingerprintContribution, IEnumerable<StackVersionOne> stacks, IEnumerable<CodeFlowVersionOne> codeFlows, IEnumerable<AnnotatedCodeLocationVersionOne> relatedLocations, SuppressionStatesVersionOne suppressionStates, BaselineStateVersionOne baselineState, IEnumerable<FixVersionOne> fixes, IDictionary<string, SerializedPropertyInfo> properties)"
                  }
                },
                "contextRegion": {
                  "startLine": 184,
                  "startColumn": 1,
                  "endLine": 186,
                  "endColumn": 10,
                  "charOffset": 9009,
                  "charLength": 618,
                  "snippet": {
                    "text": "        /// </param>\r\n        public ResultVersionOne(string ruleId, string ruleKey, ResultLevelVersionOne level, string message, FormattedRuleMessageVersionOne formattedRuleMessage, IEnumerable<LocationVersionOne> locations, string snippet, string id, string toolFingerprintContribution, IEnumerable<StackVersionOne> stacks, IEnumerable<CodeFlowVersionOne> codeFlows, IEnumerable<AnnotatedCodeLocationVersionOne> relatedLocations, SuppressionStatesVersionOne suppressionStates, BaselineStateVersionOne baselineState, IEnumerable<FixVersionOne> fixes, IDictionary<string, SerializedPropertyInfo> properties)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.ResultVersionOne..ctor(System.String,System.String,Microsoft.CodeAnalysis.Sarif.VersionOne.ResultLevelVersionOne,System.String,Microsoft.CodeAnalysis.Sarif.VersionOne.FormattedRuleMessageVersionOne,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.VersionOne.LocationVersionOne>,System.String,System.String,System.String,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.VersionOne.StackVersionOne>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.VersionOne.CodeFlowVersionOne>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationVersionOne>,Microsoft.CodeAnalysis.Sarif.VersionOne.SuppressionStatesVersionOne,Microsoft.CodeAnalysis.Sarif.VersionOne.BaselineStateVersionOne,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.VersionOne.FixVersionOne>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'ResultVersionOne.CodeFlows' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/ResultVersionOne.cs"
                },
                "region": {
                  "startLine": 99,
                  "snippet": {
                    "text": "        public IList<CodeFlowVersionOne> CodeFlows { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 98,
                  "startColumn": 1,
                  "endLine": 100,
                  "endColumn": 1,
                  "charOffset": 4751,
                  "charLength": 154,
                  "snippet": {
                    "text": "        [DataMember(Name = \"codeFlows\", IsRequired = false, EmitDefaultValue = false)]\r\n        public IList<CodeFlowVersionOne> CodeFlows { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.ResultVersionOne.CodeFlows"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'ResultVersionOne.Fixes' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/ResultVersionOne.cs"
                },
                "region": {
                  "startLine": 119,
                  "snippet": {
                    "text": "        public IList<FixVersionOne> Fixes { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 118,
                  "startColumn": 1,
                  "endLine": 120,
                  "endColumn": 1,
                  "charOffset": 5889,
                  "charLength": 141,
                  "snippet": {
                    "text": "        [DataMember(Name = \"fixes\", IsRequired = false, EmitDefaultValue = false)]\r\n        public IList<FixVersionOne> Fixes { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.ResultVersionOne.Fixes"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'ResultVersionOne.Locations' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/ResultVersionOne.cs"
                },
                "region": {
                  "startLine": 69,
                  "snippet": {
                    "text": "        public IList<LocationVersionOne> Locations { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 68,
                  "startColumn": 1,
                  "endLine": 70,
                  "endColumn": 1,
                  "charOffset": 3447,
                  "charLength": 154,
                  "snippet": {
                    "text": "        [DataMember(Name = \"locations\", IsRequired = false, EmitDefaultValue = false)]\r\n        public IList<LocationVersionOne> Locations { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.ResultVersionOne.Locations"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'ResultVersionOne.RelatedLocations' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/ResultVersionOne.cs"
                },
                "region": {
                  "startLine": 105,
                  "snippet": {
                    "text": "        public IList<AnnotatedCodeLocationVersionOne> RelatedLocations { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 104,
                  "startColumn": 1,
                  "endLine": 106,
                  "endColumn": 95,
                  "charOffset": 5081,
                  "charLength": 275,
                  "snippet": {
                    "text": "        [DataMember(Name = \"relatedLocations\", IsRequired = false, EmitDefaultValue = false)]\r\n        public IList<AnnotatedCodeLocationVersionOne> RelatedLocations { get; set; }\r\n        [DataMember(Name = \"suppressionStates\", IsRequired = false, EmitDefaultValue = false)]"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.ResultVersionOne.RelatedLocations"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'ResultVersionOne.Stacks' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/ResultVersionOne.cs"
                },
                "region": {
                  "startLine": 93,
                  "snippet": {
                    "text": "        public IList<StackVersionOne> Stacks { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 92,
                  "startColumn": 1,
                  "endLine": 94,
                  "endColumn": 1,
                  "charOffset": 4489,
                  "charLength": 145,
                  "snippet": {
                    "text": "        [DataMember(Name = \"stacks\", IsRequired = false, EmitDefaultValue = false)]\r\n        public IList<StackVersionOne> Stacks { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.ResultVersionOne.Stacks"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1502",
          "level": "warning",
          "message": {
            "text": "'ResultVersionOneEqualityComparer.Equals(ResultVersionOne, ResultVersionOne)' has a cyclomatic complexity of 52. Rewrite or refactor the method to reduce complexity to 25."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/ResultVersionOneEqualityComparer.cs"
                },
                "region": {
                  "startLine": 20,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 19,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 46,
                  "charOffset": 771,
                  "charLength": 131,
                  "snippet": {
                    "text": "        public bool Equals(ResultVersionOne left, ResultVersionOne right)\r\n        {\r\n            if (ReferenceEquals(left, right))"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.ResultVersionOneEqualityComparer.Equals(Microsoft.CodeAnalysis.Sarif.VersionOne.ResultVersionOne,Microsoft.CodeAnalysis.Sarif.VersionOne.ResultVersionOne)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Maintainability",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1502",
          "level": "warning",
          "message": {
            "text": "'ResultVersionOneEqualityComparer.GetHashCode(ResultVersionOne)' has a cyclomatic complexity of 33. Rewrite or refactor the method to reduce complexity to 25."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/ResultVersionOneEqualityComparer.cs"
                },
                "region": {
                  "startLine": 212,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 211,
                  "startColumn": 1,
                  "endLine": 213,
                  "endColumn": 44,
                  "charOffset": 6772,
                  "charLength": 108,
                  "snippet": {
                    "text": "        public int GetHashCode(ResultVersionOne obj)\r\n        {\r\n            if (ReferenceEquals(obj, null))"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.ResultVersionOneEqualityComparer.GetHashCode(Microsoft.CodeAnalysis.Sarif.VersionOne.ResultVersionOne)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Maintainability",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'RuleVersionOne.RuleVersionOne(RuleVersionOne)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nRuleVersionOne..ctor(RuleVersionOne)\r\nRuleVersionOne.Init(String, String, String, String, IDictionary<String,String>, RuleConfigurationVersionOne, ResultLevelVersionOne, Uri, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolderVersionOne.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/RuleVersionOne.cs"
                },
                "region": {
                  "startLine": 140,
                  "snippet": {
                    "text": "        public RuleVersionOne(RuleVersionOne other)"
                  }
                },
                "contextRegion": {
                  "startLine": 139,
                  "startColumn": 1,
                  "endLine": 141,
                  "endColumn": 10,
                  "charOffset": 6562,
                  "charLength": 88,
                  "snippet": {
                    "text": "        /// </exception>\r\n        public RuleVersionOne(RuleVersionOne other)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.RuleVersionOne..ctor(Microsoft.CodeAnalysis.Sarif.VersionOne.RuleVersionOne)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'RuleVersionOne.RuleVersionOne(string, string, string, string, IDictionary<string, string>, RuleConfigurationVersionOne, ResultLevelVersionOne, Uri, IDictionary<string, SerializedPropertyInfo>)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nRuleVersionOne..ctor(String, String, String, String, IDictionary<String,String>, RuleConfigurationVersionOne, ResultLevelVersionOne, Uri, IDictionary<String,SerializedPropertyInfo>)\r\nRuleVersionOne.Init(String, String, String, String, IDictionary<String,String>, RuleConfigurationVersionOne, ResultLevelVersionOne, Uri, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolderVersionOne.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/RuleVersionOne.cs"
                },
                "region": {
                  "startLine": 126,
                  "snippet": {
                    "text": "        public RuleVersionOne(string id, string name, string shortDescription, string fullDescription, IDictionary<string, string> messageFormats, RuleConfigurationVersionOne configuration, ResultLevelVersionOne defaultLevel, Uri helpUri, IDictionary<string, SerializedPropertyInfo> properties)"
                  }
                },
                "contextRegion": {
                  "startLine": 125,
                  "startColumn": 1,
                  "endLine": 127,
                  "endColumn": 10,
                  "charOffset": 5687,
                  "charLength": 327,
                  "snippet": {
                    "text": "        /// </param>\r\n        public RuleVersionOne(string id, string name, string shortDescription, string fullDescription, IDictionary<string, string> messageFormats, RuleConfigurationVersionOne configuration, ResultLevelVersionOne defaultLevel, Uri helpUri, IDictionary<string, SerializedPropertyInfo> properties)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.RuleVersionOne..ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary`2<System.String,System.String>,Microsoft.CodeAnalysis.Sarif.VersionOne.RuleConfigurationVersionOne,Microsoft.CodeAnalysis.Sarif.VersionOne.ResultLevelVersionOne,System.Uri,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'RuleVersionOne.MessageFormats' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/RuleVersionOne.cs"
                },
                "region": {
                  "startLine": 63,
                  "snippet": {
                    "text": "        public IDictionary<string, string> MessageFormats { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 62,
                  "startColumn": 1,
                  "endLine": 64,
                  "endColumn": 1,
                  "charOffset": 2765,
                  "charLength": 166,
                  "snippet": {
                    "text": "        [DataMember(Name = \"messageFormats\", IsRequired = false, EmitDefaultValue = false)]\r\n        public IDictionary<string, string> MessageFormats { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.RuleVersionOne.MessageFormats"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1502",
          "level": "warning",
          "message": {
            "text": "'RuleVersionOneEqualityComparer.Equals(RuleVersionOne, RuleVersionOne)' has a cyclomatic complexity of 27. Rewrite or refactor the method to reduce complexity to 25."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/RuleVersionOneEqualityComparer.cs"
                },
                "region": {
                  "startLine": 20,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 19,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 46,
                  "charOffset": 761,
                  "charLength": 127,
                  "snippet": {
                    "text": "        public bool Equals(RuleVersionOne left, RuleVersionOne right)\r\n        {\r\n            if (ReferenceEquals(left, right))"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.RuleVersionOneEqualityComparer.Equals(Microsoft.CodeAnalysis.Sarif.VersionOne.RuleVersionOne,Microsoft.CodeAnalysis.Sarif.VersionOne.RuleVersionOne)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Maintainability",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'RunVersionOne.RunVersionOne(RunVersionOne)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nRunVersionOne..ctor(RunVersionOne)\r\nRunVersionOne.Init(ToolVersionOne, InvocationVersionOne, IDictionary<String,FileDataVersionOne>, IDictionary<String,LogicalLocationVersionOne>, IEnumerable<ResultVersionOne>, IEnumerable<NotificationVersionOne>, IEnumerable<NotificationVersionOne>, IDictionary<String,RuleVersionOne>, String, String, String, String, String, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/RunVersionOne.cs"
                },
                "region": {
                  "startLine": 185,
                  "snippet": {
                    "text": "        public RunVersionOne(RunVersionOne other)"
                  }
                },
                "contextRegion": {
                  "startLine": 184,
                  "startColumn": 1,
                  "endLine": 186,
                  "endColumn": 10,
                  "charOffset": 9697,
                  "charLength": 86,
                  "snippet": {
                    "text": "        /// </exception>\r\n        public RunVersionOne(RunVersionOne other)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.RunVersionOne..ctor(Microsoft.CodeAnalysis.Sarif.VersionOne.RunVersionOne)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'RunVersionOne.RunVersionOne(ToolVersionOne, InvocationVersionOne, IDictionary<string, FileDataVersionOne>, IDictionary<string, LogicalLocationVersionOne>, IEnumerable<ResultVersionOne>, IEnumerable<NotificationVersionOne>, IEnumerable<NotificationVersionOne>, IDictionary<string, RuleVersionOne>, string, string, string, string, string, IDictionary<string, SerializedPropertyInfo>)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nRunVersionOne..ctor(ToolVersionOne, InvocationVersionOne, IDictionary<String,FileDataVersionOne>, IDictionary<String,LogicalLocationVersionOne>, IEnumerable<ResultVersionOne>, IEnumerable<NotificationVersionOne>, IEnumerable<NotificationVersionOne>, IDictionary<String,RuleVersionOne>, String, String, String, String, String, IDictionary<String,SerializedPropertyInfo>)\r\nRunVersionOne.Init(ToolVersionOne, InvocationVersionOne, IDictionary<String,FileDataVersionOne>, IDictionary<String,LogicalLocationVersionOne>, IEnumerable<ResultVersionOne>, IEnumerable<NotificationVersionOne>, IEnumerable<NotificationVersionOne>, IDictionary<String,RuleVersionOne>, String, String, String, String, String, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/RunVersionOne.cs"
                },
                "region": {
                  "startLine": 171,
                  "snippet": {
                    "text": "        public RunVersionOne(ToolVersionOne tool, InvocationVersionOne invocation, IDictionary<string, FileDataVersionOne> files, IDictionary<string, LogicalLocationVersionOne> logicalLocations, IEnumerable<ResultVersionOne> results, IEnumerable<NotificationVersionOne> toolNotifications, IEnumerable<NotificationVersionOne> configurationNotifications, IDictionary<string, RuleVersionOne> rules, string id, string stableId, string automationId, string baselineId, string architecture, IDictionary<string, SerializedPropertyInfo> properties)"
                  }
                },
                "contextRegion": {
                  "startLine": 170,
                  "startColumn": 1,
                  "endLine": 172,
                  "endColumn": 10,
                  "charOffset": 8516,
                  "charLength": 573,
                  "snippet": {
                    "text": "        /// </param>\r\n        public RunVersionOne(ToolVersionOne tool, InvocationVersionOne invocation, IDictionary<string, FileDataVersionOne> files, IDictionary<string, LogicalLocationVersionOne> logicalLocations, IEnumerable<ResultVersionOne> results, IEnumerable<NotificationVersionOne> toolNotifications, IEnumerable<NotificationVersionOne> configurationNotifications, IDictionary<string, RuleVersionOne> rules, string id, string stableId, string automationId, string baselineId, string architecture, IDictionary<string, SerializedPropertyInfo> properties)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.RunVersionOne..ctor(Microsoft.CodeAnalysis.Sarif.VersionOne.ToolVersionOne,Microsoft.CodeAnalysis.Sarif.VersionOne.InvocationVersionOne,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.VersionOne.FileDataVersionOne>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.VersionOne.LogicalLocationVersionOne>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.VersionOne.ResultVersionOne>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.VersionOne.NotificationVersionOne>,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.VersionOne.NotificationVersionOne>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.VersionOne.RuleVersionOne>,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'RunVersionOne.ConfigurationNotifications' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/RunVersionOne.cs"
                },
                "region": {
                  "startLine": 75,
                  "snippet": {
                    "text": "        public IList<NotificationVersionOne> ConfigurationNotifications { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 74,
                  "startColumn": 1,
                  "endLine": 76,
                  "endColumn": 1,
                  "charOffset": 3751,
                  "charLength": 192,
                  "snippet": {
                    "text": "        [DataMember(Name = \"configurationNotifications\", IsRequired = false, EmitDefaultValue = false)]\r\n        public IList<NotificationVersionOne> ConfigurationNotifications { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.RunVersionOne.ConfigurationNotifications"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'RunVersionOne.Files' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/RunVersionOne.cs"
                },
                "region": {
                  "startLine": 51,
                  "snippet": {
                    "text": "        public IDictionary<string, FileDataVersionOne> Files { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 50,
                  "startColumn": 1,
                  "endLine": 52,
                  "endColumn": 1,
                  "charOffset": 2341,
                  "charLength": 160,
                  "snippet": {
                    "text": "        [DataMember(Name = \"files\", IsRequired = false, EmitDefaultValue = false)]\r\n        public IDictionary<string, FileDataVersionOne> Files { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.RunVersionOne.Files"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'RunVersionOne.LogicalLocations' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/RunVersionOne.cs"
                },
                "region": {
                  "startLine": 57,
                  "snippet": {
                    "text": "        public IDictionary<string, LogicalLocationVersionOne> LogicalLocations { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 56,
                  "startColumn": 1,
                  "endLine": 58,
                  "endColumn": 1,
                  "charOffset": 2664,
                  "charLength": 189,
                  "snippet": {
                    "text": "        [DataMember(Name = \"logicalLocations\", IsRequired = false, EmitDefaultValue = false)]\r\n        public IDictionary<string, LogicalLocationVersionOne> LogicalLocations { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.RunVersionOne.LogicalLocations"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'RunVersionOne.Results' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/RunVersionOne.cs"
                },
                "region": {
                  "startLine": 63,
                  "snippet": {
                    "text": "        public IList<ResultVersionOne> Results { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 62,
                  "startColumn": 1,
                  "endLine": 64,
                  "endColumn": 1,
                  "charOffset": 3135,
                  "charLength": 148,
                  "snippet": {
                    "text": "        [DataMember(Name = \"results\", IsRequired = false, EmitDefaultValue = false)]\r\n        public IList<ResultVersionOne> Results { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.RunVersionOne.Results"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'RunVersionOne.Rules' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/RunVersionOne.cs"
                },
                "region": {
                  "startLine": 81,
                  "snippet": {
                    "text": "        public IDictionary<string, RuleVersionOne> Rules { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 80,
                  "startColumn": 1,
                  "endLine": 82,
                  "endColumn": 1,
                  "charOffset": 4191,
                  "charLength": 156,
                  "snippet": {
                    "text": "        [DataMember(Name = \"rules\", IsRequired = false, EmitDefaultValue = false)]\r\n        public IDictionary<string, RuleVersionOne> Rules { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.RunVersionOne.Rules"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'RunVersionOne.ToolNotifications' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/RunVersionOne.cs"
                },
                "region": {
                  "startLine": 69,
                  "snippet": {
                    "text": "        public IList<NotificationVersionOne> ToolNotifications { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 68,
                  "startColumn": 1,
                  "endLine": 70,
                  "endColumn": 1,
                  "charOffset": 3426,
                  "charLength": 174,
                  "snippet": {
                    "text": "        [DataMember(Name = \"toolNotifications\", IsRequired = false, EmitDefaultValue = false)]\r\n        public IList<NotificationVersionOne> ToolNotifications { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.RunVersionOne.ToolNotifications"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1502",
          "level": "warning",
          "message": {
            "text": "'RunVersionOneEqualityComparer.Equals(RunVersionOne, RunVersionOne)' has a cyclomatic complexity of 61. Rewrite or refactor the method to reduce complexity to 25."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/RunVersionOneEqualityComparer.cs"
                },
                "region": {
                  "startLine": 20,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 19,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 46,
                  "charOffset": 756,
                  "charLength": 125,
                  "snippet": {
                    "text": "        public bool Equals(RunVersionOne left, RunVersionOne right)\r\n        {\r\n            if (ReferenceEquals(left, right))"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.RunVersionOneEqualityComparer.Equals(Microsoft.CodeAnalysis.Sarif.VersionOne.RunVersionOne,Microsoft.CodeAnalysis.Sarif.VersionOne.RunVersionOne)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Maintainability",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1502",
          "level": "warning",
          "message": {
            "text": "'RunVersionOneEqualityComparer.GetHashCode(RunVersionOne)' has a cyclomatic complexity of 37. Rewrite or refactor the method to reduce complexity to 25."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/RunVersionOneEqualityComparer.cs"
                },
                "region": {
                  "startLine": 221,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 220,
                  "startColumn": 1,
                  "endLine": 222,
                  "endColumn": 44,
                  "charOffset": 7519,
                  "charLength": 105,
                  "snippet": {
                    "text": "        public int GetHashCode(RunVersionOne obj)\r\n        {\r\n            if (ReferenceEquals(obj, null))"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.RunVersionOneEqualityComparer.GetHashCode(Microsoft.CodeAnalysis.Sarif.VersionOne.RunVersionOne)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Maintainability",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in type name 'SarifLogVersionOne'.",
            "messageId": "Type"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.SarifLogVersionOne"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Type"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'SarifLogVersionOne.Runs' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/SarifLogVersionOne.cs"
                },
                "region": {
                  "startLine": 50,
                  "snippet": {
                    "text": "        public IList<RunVersionOne> Runs { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 49,
                  "startColumn": 1,
                  "endLine": 51,
                  "endColumn": 1,
                  "charOffset": 1909,
                  "charLength": 112,
                  "snippet": {
                    "text": "        [DataMember(Name = \"runs\", IsRequired = true)]\r\n        public IList<RunVersionOne> Runs { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.SarifLogVersionOne.Runs"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in type name 'SarifNodeKindVersionOne'.",
            "messageId": "Type"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.SarifNodeKindVersionOne"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Type"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in member name 'SarifNodeKindVersionOne.SarifLogVersionOne' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.SarifNodeKindVersionOne.SarifLogVersionOne"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in type name 'SarifRewritingVisitorVersionOne'.",
            "messageId": "Type"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.SarifRewritingVisitorVersionOne"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Type"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in member name 'SarifRewritingVisitorVersionOne.VisitSarifLogVersionOne(SarifLogVersionOne)' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/SarifRewritingVisitorVersionOne.cs"
                },
                "region": {
                  "startLine": 442,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 441,
                  "startColumn": 1,
                  "endLine": 443,
                  "endColumn": 30,
                  "charOffset": 16214,
                  "charLength": 132,
                  "snippet": {
                    "text": "        public virtual SarifLogVersionOne VisitSarifLogVersionOne(SarifLogVersionOne node)\r\n        {\r\n            if (node != null)"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.SarifRewritingVisitorVersionOne.VisitSarifLogVersionOne(Microsoft.CodeAnalysis.Sarif.VersionOne.SarifLogVersionOne)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in type name 'SarifVersionVersionOne'.",
            "messageId": "Type"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.SarifVersionVersionOne"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Type"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'StackFrameVersionOne.StackFrameVersionOne(StackFrameVersionOne)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nStackFrameVersionOne..ctor(StackFrameVersionOne)\r\nStackFrameVersionOne.Init(String, Uri, String, Int32, Int32, String, Int32, String, String, Int32, Int32, IEnumerable<String>, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/StackFrameVersionOne.cs"
                },
                "region": {
                  "startLine": 176,
                  "snippet": {
                    "text": "        public StackFrameVersionOne(StackFrameVersionOne other)"
                  }
                },
                "contextRegion": {
                  "startLine": 175,
                  "startColumn": 1,
                  "endLine": 177,
                  "endColumn": 10,
                  "charOffset": 7921,
                  "charLength": 100,
                  "snippet": {
                    "text": "        /// </exception>\r\n        public StackFrameVersionOne(StackFrameVersionOne other)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.StackFrameVersionOne..ctor(Microsoft.CodeAnalysis.Sarif.VersionOne.StackFrameVersionOne)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'StackFrameVersionOne.StackFrameVersionOne(string, Uri, string, int, int, string, int, string, string, int, int, IEnumerable<string>, IDictionary<string, SerializedPropertyInfo>)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nStackFrameVersionOne..ctor(String, Uri, String, Int32, Int32, String, Int32, String, String, Int32, Int32, IEnumerable<String>, IDictionary<String,SerializedPropertyInfo>)\r\nStackFrameVersionOne.Init(String, Uri, String, Int32, Int32, String, Int32, String, String, Int32, Int32, IEnumerable<String>, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/StackFrameVersionOne.cs"
                },
                "region": {
                  "startLine": 162,
                  "snippet": {
                    "text": "        public StackFrameVersionOne(string message, Uri uri, string uriBaseId, int line, int column, string module, int threadId, string fullyQualifiedLogicalName, string logicalLocationKey, int address, int offset, IEnumerable<string> parameters, IDictionary<string, SerializedPropertyInfo> properties)"
                  }
                },
                "contextRegion": {
                  "startLine": 161,
                  "startColumn": 1,
                  "endLine": 163,
                  "endColumn": 10,
                  "charOffset": 6997,
                  "charLength": 336,
                  "snippet": {
                    "text": "        /// </param>\r\n        public StackFrameVersionOne(string message, Uri uri, string uriBaseId, int line, int column, string module, int threadId, string fullyQualifiedLogicalName, string logicalLocationKey, int address, int offset, IEnumerable<string> parameters, IDictionary<string, SerializedPropertyInfo> properties)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.StackFrameVersionOne..ctor(System.String,System.Uri,System.String,System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Collections.Generic.IEnumerable`1<System.String>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1054",
          "level": "error",
          "message": {
            "text": "Change the type of parameter 'uriBaseId' of method 'StackFrameVersionOne.StackFrameVersionOne(string, Uri, string, int, int, string, int, string, string, int, int, IEnumerable<string>, IDictionary<string, SerializedPropertyInfo>)' from string to System.Uri, or provide an overload of 'StackFrameVersionOne.StackFrameVersionOne(string, Uri, string, int, int, string, int, string, string, int, int, IEnumerable<string>, IDictionary<string, SerializedPropertyInfo>)', that allows 'uriBaseId' to be passed as a System.Uri object."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/StackFrameVersionOne.cs"
                },
                "region": {
                  "startLine": 162,
                  "snippet": {
                    "text": "        public StackFrameVersionOne(string message, Uri uri, string uriBaseId, int line, int column, string module, int threadId, string fullyQualifiedLogicalName, string logicalLocationKey, int address, int offset, IEnumerable<string> parameters, IDictionary<string, SerializedPropertyInfo> properties)"
                  }
                },
                "contextRegion": {
                  "startLine": 161,
                  "startColumn": 1,
                  "endLine": 163,
                  "endColumn": 10,
                  "charOffset": 6997,
                  "charLength": 336,
                  "snippet": {
                    "text": "        /// </param>\r\n        public StackFrameVersionOne(string message, Uri uri, string uriBaseId, int line, int column, string module, int threadId, string fullyQualifiedLogicalName, string logicalLocationKey, int address, int offset, IEnumerable<string> parameters, IDictionary<string, SerializedPropertyInfo> properties)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.StackFrameVersionOne..ctor(System.String,System.Uri,System.String,System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.Int32,System.Int32,System.Collections.Generic.IEnumerable`1<System.String>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "2#"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'StackFrameVersionOne.Parameters' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/StackFrameVersionOne.cs"
                },
                "region": {
                  "startLine": 105,
                  "snippet": {
                    "text": "        public IList<string> Parameters { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 104,
                  "startColumn": 1,
                  "endLine": 106,
                  "endColumn": 1,
                  "charOffset": 4326,
                  "charLength": 144,
                  "snippet": {
                    "text": "        [DataMember(Name = \"parameters\", IsRequired = false, EmitDefaultValue = false)]\r\n        public IList<string> Parameters { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.StackFrameVersionOne.Parameters"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1056",
          "level": "error",
          "message": {
            "text": "Change the type of property 'StackFrameVersionOne.UriBaseId' from string to System.Uri."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/StackFrameVersionOne.cs"
                },
                "region": {
                  "startLine": 51,
                  "snippet": {
                    "text": "        public string UriBaseId { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 50,
                  "startColumn": 1,
                  "endLine": 52,
                  "endColumn": 1,
                  "charOffset": 1976,
                  "charLength": 135,
                  "snippet": {
                    "text": "        [DataMember(Name = \"uriBaseId\", IsRequired = false, EmitDefaultValue = false)]\r\n        public string UriBaseId { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.StackFrameVersionOne.UriBaseId"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1502",
          "level": "warning",
          "message": {
            "text": "'StackFrameVersionOneEqualityComparer.Equals(StackFrameVersionOne, StackFrameVersionOne)' has a cyclomatic complexity of 29. Rewrite or refactor the method to reduce complexity to 25."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/StackFrameVersionOneEqualityComparer.cs"
                },
                "region": {
                  "startLine": 20,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 19,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 46,
                  "charOffset": 791,
                  "charLength": 139,
                  "snippet": {
                    "text": "        public bool Equals(StackFrameVersionOne left, StackFrameVersionOne right)\r\n        {\r\n            if (ReferenceEquals(left, right))"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.StackFrameVersionOneEqualityComparer.Equals(Microsoft.CodeAnalysis.Sarif.VersionOne.StackFrameVersionOne,Microsoft.CodeAnalysis.Sarif.VersionOne.StackFrameVersionOne)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Maintainability",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'StackVersionOne.StackVersionOne(StackVersionOne)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nStackVersionOne..ctor(StackVersionOne)\r\nStackVersionOne.Init(String, IEnumerable<StackFrameVersionOne>, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/StackVersionOne.cs"
                },
                "region": {
                  "startLine": 86,
                  "snippet": {
                    "text": "        public StackVersionOne(StackVersionOne other)"
                  }
                },
                "contextRegion": {
                  "startLine": 85,
                  "startColumn": 1,
                  "endLine": 87,
                  "endColumn": 10,
                  "charOffset": 3543,
                  "charLength": 90,
                  "snippet": {
                    "text": "        /// </exception>\r\n        public StackVersionOne(StackVersionOne other)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.StackVersionOne..ctor(Microsoft.CodeAnalysis.Sarif.VersionOne.StackVersionOne)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'StackVersionOne.StackVersionOne(string, IEnumerable<StackFrameVersionOne>, IDictionary<string, SerializedPropertyInfo>)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nStackVersionOne..ctor(String, IEnumerable<StackFrameVersionOne>, IDictionary<String,SerializedPropertyInfo>)\r\nStackVersionOne.Init(String, IEnumerable<StackFrameVersionOne>, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/StackVersionOne.cs"
                },
                "region": {
                  "startLine": 72,
                  "snippet": {
                    "text": "        public StackVersionOne(string message, IEnumerable<StackFrameVersionOne> frames, IDictionary<string, SerializedPropertyInfo> properties)"
                  }
                },
                "contextRegion": {
                  "startLine": 71,
                  "startColumn": 1,
                  "endLine": 73,
                  "endColumn": 10,
                  "charOffset": 2899,
                  "charLength": 177,
                  "snippet": {
                    "text": "        /// </param>\r\n        public StackVersionOne(string message, IEnumerable<StackFrameVersionOne> frames, IDictionary<string, SerializedPropertyInfo> properties)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.StackVersionOne..ctor(System.String,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.VersionOne.StackFrameVersionOne>,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'StackVersionOne.Frames' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/StackVersionOne.cs"
                },
                "region": {
                  "startLine": 45,
                  "snippet": {
                    "text": "        public IList<StackFrameVersionOne> Frames { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 44,
                  "startColumn": 1,
                  "endLine": 46,
                  "endColumn": 1,
                  "charOffset": 1712,
                  "charLength": 123,
                  "snippet": {
                    "text": "        [DataMember(Name = \"frames\", IsRequired = true)]\r\n        public IList<StackFrameVersionOne> Frames { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.StackVersionOne.Frames"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1714",
          "level": "error",
          "message": {
            "text": "If enumeration name 'SuppressionStatesVersionOne' is singular, change it to a plural form."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.SuppressionStatesVersionOne"
            }
          ],
          "properties": {
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1710",
          "level": "error",
          "message": {
            "text": "Rename 'TagsCollectionVersionOne' to end in 'Collection'."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.TagsCollectionVersionOne"
            }
          ],
          "properties": {
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'ToolVersionOne.ToolVersionOne(ToolVersionOne)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nToolVersionOne..ctor(ToolVersionOne)\r\nToolVersionOne.Init(String, String, String, String, String, String, String, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/ToolVersionOne.cs"
                },
                "region": {
                  "startLine": 131,
                  "snippet": {
                    "text": "        public ToolVersionOne(ToolVersionOne other)"
                  }
                },
                "contextRegion": {
                  "startLine": 130,
                  "startColumn": 1,
                  "endLine": 132,
                  "endColumn": 10,
                  "charOffset": 5943,
                  "charLength": 88,
                  "snippet": {
                    "text": "        /// </exception>\r\n        public ToolVersionOne(ToolVersionOne other)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.ToolVersionOne..ctor(Microsoft.CodeAnalysis.Sarif.VersionOne.ToolVersionOne)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2214",
          "level": "warning",
          "message": {
            "text": "'ToolVersionOne.ToolVersionOne(string, string, string, string, string, string, string, IDictionary<string, SerializedPropertyInfo>)' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: \r\n\r\nToolVersionOne..ctor(String, String, String, String, String, String, String, IDictionary<String,SerializedPropertyInfo>)\r\nToolVersionOne.Init(String, String, String, String, String, String, String, IDictionary<String,SerializedPropertyInfo>):Void\r\nPropertyBagHolder.set_Properties(IDictionary<String,SerializedPropertyInfo>):Void"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/ToolVersionOne.cs"
                },
                "region": {
                  "startLine": 117,
                  "snippet": {
                    "text": "        public ToolVersionOne(string name, string fullName, string version, string semanticVersion, string fileVersion, string sarifLoggerVersion, string language, IDictionary<string, SerializedPropertyInfo> properties)"
                  }
                },
                "contextRegion": {
                  "startLine": 116,
                  "startColumn": 1,
                  "endLine": 118,
                  "endColumn": 10,
                  "charOffset": 5157,
                  "charLength": 252,
                  "snippet": {
                    "text": "        /// </param>\r\n        public ToolVersionOne(string name, string fullName, string version, string semanticVersion, string fileVersion, string sarifLoggerVersion, string language, IDictionary<string, SerializedPropertyInfo> properties)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.ToolVersionOne..ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "In method 'ToolVersionOne.ToolVersionOne(string, string, string, string, string, string, string, IDictionary<string, SerializedPropertyInfo>)', correct the spelling of 'sarif' in parameter name 'sarifLoggerVersion' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "MemberParameter"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/ToolVersionOne.cs"
                },
                "region": {
                  "startLine": 117,
                  "snippet": {
                    "text": "        public ToolVersionOne(string name, string fullName, string version, string semanticVersion, string fileVersion, string sarifLoggerVersion, string language, IDictionary<string, SerializedPropertyInfo> properties)"
                  }
                },
                "contextRegion": {
                  "startLine": 116,
                  "startColumn": 1,
                  "endLine": 118,
                  "endColumn": 10,
                  "charOffset": 5157,
                  "charLength": 252,
                  "snippet": {
                    "text": "        /// </param>\r\n        public ToolVersionOne(string name, string fullName, string version, string semanticVersion, string fileVersion, string sarifLoggerVersion, string language, IDictionary<string, SerializedPropertyInfo> properties)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.ToolVersionOne..ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Sarif.Readers.SerializedPropertyInfo>)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "sarif#MemberParameter"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in member name 'ToolVersionOne.SarifLoggerVersion' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/VersionOne/Autogenerated/ToolVersionOne.cs"
                },
                "region": {
                  "startLine": 69,
                  "snippet": {
                    "text": "        public string SarifLoggerVersion { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 68,
                  "startColumn": 1,
                  "endLine": 70,
                  "endColumn": 1,
                  "charOffset": 2818,
                  "charLength": 153,
                  "snippet": {
                    "text": "        [DataMember(Name = \"sarifLoggerVersion\", IsRequired = false, EmitDefaultValue = false)]\r\n        public string SarifLoggerVersion { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.VersionOne.ToolVersionOne.SarifLoggerVersion"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1307",
          "level": "error",
          "message": {
            "text": "Because the behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings, replace this call in 'AbsoluteUrisVisitor.CombineUris(Uri, Uri)' with a call to 'string.StartsWith(string, StringComparison)'. If the result of 'string.StartsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Visitors/AbsoluteUrisVisitor.cs"
                },
                "region": {
                  "startLine": 103,
                  "snippet": {
                    "text": "            if(relativeUri.OriginalString.StartsWith(\"/\"))"
                  }
                },
                "contextRegion": {
                  "startLine": 102,
                  "startColumn": 1,
                  "endLine": 104,
                  "endColumn": 14,
                  "charOffset": 4251,
                  "charLength": 118,
                  "snippet": {
                    "text": "            Uri relativePart = relativeUri;\r\n            if(relativeUri.OriginalString.StartsWith(\"/\"))\r\n            {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.AbsoluteUrisVisitor.CombineUris(System.Uri,System.Uri)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.String.StartsWith(System.String)"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2204",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of the unrecognized token 'originalUriBaseIds' in the literal '\"originalUriBaseIds\"'."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Visitors/AbsoluteUrisVisitor.cs"
                },
                "region": {
                  "startLine": 47,
                  "snippet": {
                    "text": "                    throw new InvalidOperationException($\"Base URI Dictionary incorrectly formatted, we expect a string->uri dictionary in the Run Properties with name {RebaseUriVisitor.BaseUriDictionaryName}\");"
                  }
                },
                "contextRegion": {
                  "startLine": 46,
                  "startColumn": 1,
                  "endLine": 48,
                  "endColumn": 18,
                  "charOffset": 1910,
                  "charLength": 249,
                  "snippet": {
                    "text": "                {\r\n                    throw new InvalidOperationException($\"Base URI Dictionary incorrectly formatted, we expect a string->uri dictionary in the Run Properties with name {RebaseUriVisitor.BaseUriDictionaryName}\");\r\n                }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.AbsoluteUrisVisitor.VisitRun(Microsoft.CodeAnalysis.Sarif.Run)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "originalUriBaseIds"
          },
          "properties": {
            "Category": "Microsoft.Naming",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1305",
          "level": "error",
          "message": {
            "text": "Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'AbsoluteUrisVisitor.VisitRun(Run)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.",
            "messageId": "IFormatProviderAlternateString"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Visitors/AbsoluteUrisVisitor.cs"
                },
                "region": {
                  "startLine": 47,
                  "snippet": {
                    "text": "                    throw new InvalidOperationException($\"Base URI Dictionary incorrectly formatted, we expect a string->uri dictionary in the Run Properties with name {RebaseUriVisitor.BaseUriDictionaryName}\");"
                  }
                },
                "contextRegion": {
                  "startLine": 46,
                  "startColumn": 1,
                  "endLine": 48,
                  "endColumn": 18,
                  "charOffset": 1910,
                  "charLength": 249,
                  "snippet": {
                    "text": "                {\r\n                    throw new InvalidOperationException($\"Base URI Dictionary incorrectly formatted, we expect a string->uri dictionary in the Run Properties with name {RebaseUriVisitor.BaseUriDictionaryName}\");\r\n                }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.AbsoluteUrisVisitor.VisitRun(Microsoft.CodeAnalysis.Sarif.Run)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.String.Format(System.String,System.Object)#IFormatProviderAlternateString"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'AbsoluteUrisVisitor.VisitRun(Run)', validate parameter 'node' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Visitors/AbsoluteUrisVisitor.cs"
                },
                "region": {
                  "startLine": 42,
                  "snippet": {
                    "text": "            if (node.Properties != null && node.Properties.ContainsKey(RebaseUriVisitor.BaseUriDictionaryName))"
                  }
                },
                "contextRegion": {
                  "startLine": 41,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 14,
                  "charOffset": 1473,
                  "charLength": 193,
                  "snippet": {
                    "text": "            // Try to get the uri mappings dictionary out of the \r\n            if (node.Properties != null && node.Properties.ContainsKey(RebaseUriVisitor.BaseUriDictionaryName))\r\n            {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.AbsoluteUrisVisitor.VisitRun(Microsoft.CodeAnalysis.Sarif.Run)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'AddFileReferencesVisitor.VisitPhysicalLocation(PhysicalLocation)', validate parameter 'node' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Visitors/AddFileReferencesVisitor.cs"
                },
                "region": {
                  "startLine": 35,
                  "snippet": {
                    "text": "            FileLocation fileLocation = node.FileLocation;"
                  }
                },
                "contextRegion": {
                  "startLine": 34,
                  "startColumn": 1,
                  "endLine": 36,
                  "endColumn": 1,
                  "charOffset": 1389,
                  "charLength": 62,
                  "snippet": {
                    "text": "\r\n            FileLocation fileLocation = node.FileLocation;\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.AddFileReferencesVisitor.VisitPhysicalLocation(Microsoft.CodeAnalysis.Sarif.PhysicalLocation)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'AddFileReferencesVisitor.VisitRun(Run)', validate parameter 'node' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Visitors/AddFileReferencesVisitor.cs"
                },
                "region": {
                  "startLine": 14,
                  "snippet": {
                    "text": "            _files = node.Files;"
                  }
                },
                "contextRegion": {
                  "startLine": 13,
                  "startColumn": 1,
                  "endLine": 15,
                  "endColumn": 1,
                  "charOffset": 441,
                  "charLength": 45,
                  "snippet": {
                    "text": "        {\r\n            _files = node.Files;\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.AddFileReferencesVisitor.VisitRun(Microsoft.CodeAnalysis.Sarif.Run)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1504",
          "level": "warning",
          "message": {
            "text": "The field name 'InsertOptionalDataVisitor.s_fileSystem' suggests that it is static (Shared in Visual Basic) data but it is declared as an instance member. Review this member to verify that it should be instance, or consider changing the field name.",
            "messageId": "Instance"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.InsertOptionalDataVisitor.s_fileSystem"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Instance"
          },
          "properties": {
            "Category": "Microsoft.Maintainability",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'InsertOptionalDataVisitor.VisitMessage(Message)', validate parameter 'node' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Visitors/InsertOptionalDataVisitor.cs"
                },
                "region": {
                  "startLine": 164,
                  "snippet": {
                    "text": "                _dataToInsert.Includes(OptionallyEmittedData.FlattenedMessages))"
                  }
                },
                "contextRegion": {
                  "startLine": 163,
                  "startColumn": 1,
                  "endLine": 165,
                  "endColumn": 14,
                  "charOffset": 6488,
                  "charLength": 206,
                  "snippet": {
                    "text": "            if ((node.Text == null || _dataToInsert.Includes(OptionallyEmittedData.OverwriteExistingData)) &&\r\n                _dataToInsert.Includes(OptionallyEmittedData.FlattenedMessages))\r\n            {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.InsertOptionalDataVisitor.VisitMessage(Microsoft.CodeAnalysis.Sarif.Message)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'InsertOptionalDataVisitor.VisitPhysicalLocation(PhysicalLocation)', validate parameter 'node' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Visitors/InsertOptionalDataVisitor.cs"
                },
                "region": {
                  "startLine": 64,
                  "snippet": {
                    "text": ""
                  }
                },
                "contextRegion": {
                  "startLine": 63,
                  "startColumn": 1,
                  "endLine": 65,
                  "endColumn": 102,
                  "charOffset": 2251,
                  "charLength": 118,
                  "snippet": {
                    "text": "            }\r\n\r\n            bool insertRegionSnippets = _dataToInsert.Includes(OptionallyEmittedData.RegionSnippets);"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.InsertOptionalDataVisitor.VisitPhysicalLocation(Microsoft.CodeAnalysis.Sarif.PhysicalLocation)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'InsertOptionalDataVisitor.VisitResult(Result)', validate parameter 'node' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Visitors/InsertOptionalDataVisitor.cs"
                },
                "region": {
                  "startLine": 155,
                  "snippet": {
                    "text": "            node = base.VisitResult(node);"
                  }
                },
                "contextRegion": {
                  "startLine": 154,
                  "startColumn": 1,
                  "endLine": 156,
                  "endColumn": 28,
                  "charOffset": 6267,
                  "charLength": 107,
                  "snippet": {
                    "text": "            _ruleId = node.RuleId;\r\n            node = base.VisitResult(node);\r\n            _ruleId = null;"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.InsertOptionalDataVisitor.VisitResult(Microsoft.CodeAnalysis.Sarif.Result)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'RebaseUriVisitor.RebaseUriVisitor(string, bool, Uri)', validate parameter 'baseUri' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Visitors/RebaseUriVisitor.cs"
                },
                "region": {
                  "startLine": 59,
                  "snippet": {
                    "text": "            else if (_rebaseRelativeUris && !newNode.Uri.IsAbsoluteUri)"
                  }
                },
                "contextRegion": {
                  "startLine": 58,
                  "startColumn": 1,
                  "endLine": 60,
                  "endColumn": 14,
                  "charOffset": 2184,
                  "charLength": 101,
                  "snippet": {
                    "text": "            }\r\n            else if (_rebaseRelativeUris && !newNode.Uri.IsAbsoluteUri)\r\n            {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.RebaseUriVisitor..ctor(System.String,System.Boolean,System.Uri)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "2"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'RebaseUriVisitor.RebaseUriVisitor(string, Uri)', validate parameter 'baseUri' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Visitors/RebaseUriVisitor.cs"
                },
                "region": {
                  "startLine": 49,
                  "snippet": {
                    "text": ""
                  }
                },
                "contextRegion": {
                  "startLine": 48,
                  "startColumn": 1,
                  "endLine": 50,
                  "endColumn": 74,
                  "charOffset": 1809,
                  "charLength": 86,
                  "snippet": {
                    "text": "        }\r\n\r\n        public override FileLocation VisitFileLocation(FileLocation node)"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.RebaseUriVisitor..ctor(System.String,System.Uri)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "1"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'RebaseUriVisitor.VisitPhysicalLocation(PhysicalLocation)', validate parameter 'node' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Visitors/RebaseUriVisitor.cs"
                },
                "region": {
                  "startLine": 73,
                  "snippet": {
                    "text": "            if (node.OriginalUriBaseIds != null)"
                  }
                },
                "contextRegion": {
                  "startLine": 72,
                  "startColumn": 1,
                  "endLine": 74,
                  "endColumn": 14,
                  "charOffset": 2646,
                  "charLength": 152,
                  "snippet": {
                    "text": "            IDictionary<string, Uri> baseUriDictionary = new Dictionary<string, Uri>();\r\n            if (node.OriginalUriBaseIds != null)\r\n            {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.RebaseUriVisitor.VisitPhysicalLocation(Microsoft.CodeAnalysis.Sarif.PhysicalLocation)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'RebaseUriVisitor.VisitRun(Run)', validate parameter 'node' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Visitors/RebaseUriVisitor.cs"
                },
                "region": {
                  "startLine": 88,
                  "snippet": {
                    "text": "        /// </summary>"
                  }
                },
                "contextRegion": {
                  "startLine": 87,
                  "startColumn": 1,
                  "endLine": 89,
                  "endColumn": 80,
                  "charOffset": 3324,
                  "charLength": 132,
                  "snippet": {
                    "text": "        /// to be relative.\r\n        /// </summary>\r\n        /// <param name=\"node\">File location being changed to relative.</param>"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.RebaseUriVisitor.VisitRun(Microsoft.CodeAnalysis.Sarif.Run)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1506",
          "level": "warning",
          "message": {
            "text": "'SarifCurrentToVersionOneVisitor' is coupled with 86 different types from 12 different namespaces. Rewrite or refactor this class's methods to decrease its class coupling, or consider moving some of the class's methods to some of the other types it is tightly coupled with. A class coupling above 95 indicates poor maintainability, a class coupling between 95 and 80 indicates moderate maintainability, and a class coupling below 80 indicates good maintainability.",
            "messageId": "Type"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifCurrentToVersionOneVisitor"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Type"
          },
          "properties": {
            "Category": "Microsoft.Maintainability",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in type name 'SarifCurrentToVersionOneVisitor'.",
            "messageId": "Type"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifCurrentToVersionOneVisitor"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Type"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2200",
          "level": "error",
          "message": {
            "text": "'SarifCurrentToVersionOneVisitor.CreateFileChange(FileChange)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Visitors/SarifCurrentToVersionOneVisitor.cs"
                },
                "region": {
                  "startLine": 135,
                  "snippet": {
                    "text": "                catch (UnknownEncodingException ex)"
                  }
                },
                "contextRegion": {
                  "startLine": 134,
                  "startColumn": 1,
                  "endLine": 136,
                  "endColumn": 18,
                  "charOffset": 5497,
                  "charLength": 89,
                  "snippet": {
                    "text": "                }\r\n                catch (UnknownEncodingException ex)\r\n                {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifCurrentToVersionOneVisitor.CreateFileChange(Microsoft.CodeAnalysis.Sarif.FileChange)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1822",
          "level": "warning",
          "message": {
            "text": "The 'this' parameter (or 'Me' in Visual Basic) of 'SarifCurrentToVersionOneVisitor.CreateLogicalLocation(LogicalLocation)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Visitors/SarifCurrentToVersionOneVisitor.cs"
                },
                "region": {
                  "startLine": 322,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 321,
                  "startColumn": 1,
                  "endLine": 323,
                  "endColumn": 62,
                  "charOffset": 12456,
                  "charLength": 173,
                  "snippet": {
                    "text": "        internal LogicalLocationVersionOne CreateLogicalLocation(LogicalLocation v2LogicalLocation)\r\n        {\r\n            LogicalLocationVersionOne logicalLocation = null;"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifCurrentToVersionOneVisitor.CreateLogicalLocation(Microsoft.CodeAnalysis.Sarif.LogicalLocation)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1822",
          "level": "warning",
          "message": {
            "text": "The 'this' parameter (or 'Me' in Visual Basic) of 'SarifCurrentToVersionOneVisitor.CreatePhysicalLocation(FileLocation)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Visitors/SarifCurrentToVersionOneVisitor.cs"
                },
                "region": {
                  "startLine": 379,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 378,
                  "startColumn": 1,
                  "endLine": 380,
                  "endColumn": 64,
                  "charOffset": 14670,
                  "charLength": 171,
                  "snippet": {
                    "text": "        internal PhysicalLocationVersionOne CreatePhysicalLocation(FileLocation v2FileLocation)\r\n        {\r\n            PhysicalLocationVersionOne physicalLocation = null;"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifCurrentToVersionOneVisitor.CreatePhysicalLocation(Microsoft.CodeAnalysis.Sarif.FileLocation)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1822",
          "level": "warning",
          "message": {
            "text": "The 'this' parameter (or 'Me' in Visual Basic) of 'SarifCurrentToVersionOneVisitor.CreateReplacement(Replacement, Encoding)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Visitors/SarifCurrentToVersionOneVisitor.cs"
                },
                "region": {
                  "startLine": 680,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 679,
                  "startColumn": 1,
                  "endLine": 681,
                  "endColumn": 54,
                  "charOffset": 26916,
                  "charLength": 168,
                  "snippet": {
                    "text": "        internal ReplacementVersionOne CreateReplacement(Replacement v2Replacement, Encoding encoding)\r\n        {\r\n            ReplacementVersionOne replacement = null;"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifCurrentToVersionOneVisitor.CreateReplacement(Microsoft.CodeAnalysis.Sarif.Replacement,System.Text.Encoding)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1506",
          "level": "warning",
          "message": {
            "text": "'SarifCurrentToVersionOneVisitor.CreateResult(Result)' is coupled with 31 different types from 8 different namespaces. Rewrite or refactor the method to decrease its class coupling, or consider moving the method to one of the other types it is tightly coupled with. A class coupling above 40 indicates poor maintainability, a class coupling between 40 and 30 indicates moderate maintainability, and a class coupling below 30 indicates good maintainability.",
            "messageId": "Method"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Visitors/SarifCurrentToVersionOneVisitor.cs"
                },
                "region": {
                  "startLine": 742,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 741,
                  "startColumn": 1,
                  "endLine": 743,
                  "endColumn": 44,
                  "charOffset": 29295,
                  "charLength": 119,
                  "snippet": {
                    "text": "        internal ResultVersionOne CreateResult(Result v2Result)\r\n        {\r\n            ResultVersionOne result = null;"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifCurrentToVersionOneVisitor.CreateResult(Microsoft.CodeAnalysis.Sarif.Result)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Method"
          },
          "properties": {
            "Category": "Microsoft.Maintainability",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1502",
          "level": "warning",
          "message": {
            "text": "'SarifCurrentToVersionOneVisitor.CreateResult(Result)' has a cyclomatic complexity of 26. Rewrite or refactor the method to reduce complexity to 25."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Visitors/SarifCurrentToVersionOneVisitor.cs"
                },
                "region": {
                  "startLine": 742,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 741,
                  "startColumn": 1,
                  "endLine": 743,
                  "endColumn": 44,
                  "charOffset": 29295,
                  "charLength": 119,
                  "snippet": {
                    "text": "        internal ResultVersionOne CreateResult(Result v2Result)\r\n        {\r\n            ResultVersionOne result = null;"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifCurrentToVersionOneVisitor.CreateResult(Microsoft.CodeAnalysis.Sarif.Result)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Maintainability",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1822",
          "level": "warning",
          "message": {
            "text": "The 'this' parameter (or 'Me' in Visual Basic) of 'SarifCurrentToVersionOneVisitor.CreateRule(Rule)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Visitors/SarifCurrentToVersionOneVisitor.cs"
                },
                "region": {
                  "startLine": 817,
                  "snippet": {
                    "text": "            RuleVersionOne rule = null;"
                  }
                },
                "contextRegion": {
                  "startLine": 816,
                  "startColumn": 1,
                  "endLine": 818,
                  "endColumn": 1,
                  "charOffset": 32450,
                  "charLength": 52,
                  "snippet": {
                    "text": "        {\r\n            RuleVersionOne rule = null;\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifCurrentToVersionOneVisitor.CreateRule(Microsoft.CodeAnalysis.Sarif.Rule)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1305",
          "level": "error",
          "message": {
            "text": "Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'SarifCurrentToVersionOneVisitor.CreateRun(Run)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.",
            "messageId": "IFormatProviderAlternateString"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Visitors/SarifCurrentToVersionOneVisitor.cs"
                },
                "region": {
                  "startLine": 883,
                  "snippet": {
                    "text": ""
                  }
                },
                "contextRegion": {
                  "startLine": 882,
                  "startColumn": 1,
                  "endLine": 884,
                  "endColumn": 77,
                  "charOffset": 35290,
                  "charLength": 101,
                  "snippet": {
                    "text": "                    }\r\n\r\n                    // Stash the entire v2 run in this v1 run's property bag"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifCurrentToVersionOneVisitor.CreateRun(Microsoft.CodeAnalysis.Sarif.Run)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.String.Format(System.String,System.Object)#IFormatProviderAlternateString"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1822",
          "level": "warning",
          "message": {
            "text": "The 'this' parameter (or 'Me' in Visual Basic) of 'SarifCurrentToVersionOneVisitor.CreateTool(Tool)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Visitors/SarifCurrentToVersionOneVisitor.cs"
                },
                "region": {
                  "startLine": 957,
                  "snippet": {
                    "text": ""
                  }
                },
                "contextRegion": {
                  "startLine": 956,
                  "startColumn": 1,
                  "endLine": 958,
                  "endColumn": 56,
                  "charOffset": 38139,
                  "charLength": 68,
                  "snippet": {
                    "text": "        }\r\n\r\n        internal ToolVersionOne CreateTool(Tool v2Tool)"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifCurrentToVersionOneVisitor.CreateTool(Microsoft.CodeAnalysis.Sarif.Tool)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1305",
          "level": "error",
          "message": {
            "text": "Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'SarifCurrentToVersionOneVisitor.GetContentStream(Uri, out Encoding)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.",
            "messageId": "IFormatProviderAlternateString"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Visitors/SarifCurrentToVersionOneVisitor.cs"
                },
                "region": {
                  "startLine": 647,
                  "snippet": {
                    "text": "                        failureReason = $\"Encoding for file '{uri.OriginalString}' could not be determined\";"
                  }
                },
                "contextRegion": {
                  "startLine": 646,
                  "startColumn": 1,
                  "endLine": 648,
                  "endColumn": 22,
                  "charOffset": 25818,
                  "charLength": 154,
                  "snippet": {
                    "text": "                    {\r\n                        failureReason = $\"Encoding for file '{uri.OriginalString}' could not be determined\";\r\n                    }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifCurrentToVersionOneVisitor.GetContentStream(System.Uri,System.Text.Encoding&)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.String.Format(System.String,System.Object)#IFormatProviderAlternateString"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1305",
          "level": "error",
          "message": {
            "text": "Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'SarifCurrentToVersionOneVisitor.GetContentStream(Uri, out Encoding)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.",
            "messageId": "IFormatProviderAlternateString"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Visitors/SarifCurrentToVersionOneVisitor.cs"
                },
                "region": {
                  "startLine": 654,
                  "snippet": {
                    "text": "                failureReason = $\"File '{uri.LocalPath}' could not be opened\";"
                  }
                },
                "contextRegion": {
                  "startLine": 653,
                  "startColumn": 1,
                  "endLine": 655,
                  "endColumn": 14,
                  "charOffset": 26068,
                  "charLength": 108,
                  "snippet": {
                    "text": "            {\r\n                failureReason = $\"File '{uri.LocalPath}' could not be opened\";\r\n            }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifCurrentToVersionOneVisitor.GetContentStream(System.Uri,System.Text.Encoding&)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.String.Format(System.String,System.Object)#IFormatProviderAlternateString"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1305",
          "level": "error",
          "message": {
            "text": "Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'SarifCurrentToVersionOneVisitor.GetContentStream(Uri, out Encoding)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.",
            "messageId": "IFormatProviderAlternateString"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Visitors/SarifCurrentToVersionOneVisitor.cs"
                },
                "region": {
                  "startLine": 633,
                  "snippet": {
                    "text": "                                failureReason = $\"File '{uri.LocalPath}' could not be found: {ex.ToString()}\";"
                  }
                },
                "contextRegion": {
                  "startLine": 632,
                  "startColumn": 1,
                  "endLine": 634,
                  "endColumn": 30,
                  "charOffset": 25108,
                  "charLength": 172,
                  "snippet": {
                    "text": "                            {\r\n                                failureReason = $\"File '{uri.LocalPath}' could not be found: {ex.ToString()}\";\r\n                            }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifCurrentToVersionOneVisitor.GetContentStream(System.Uri,System.Text.Encoding&)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.String.Format(System.String,System.Object,System.Object)#IFormatProviderAlternateString"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1305",
          "level": "error",
          "message": {
            "text": "Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'SarifCurrentToVersionOneVisitor.GetContentStream(Uri, out Encoding)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.",
            "messageId": "IFormatProviderAlternateString"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Visitors/SarifCurrentToVersionOneVisitor.cs"
                },
                "region": {
                  "startLine": 637,
                  "snippet": {
                    "text": "                                failureReason = $\"File '{uri.LocalPath}' could not be read: {ex.ToString()}\";"
                  }
                },
                "contextRegion": {
                  "startLine": 636,
                  "startColumn": 1,
                  "endLine": 638,
                  "endColumn": 30,
                  "charOffset": 25334,
                  "charLength": 171,
                  "snippet": {
                    "text": "                            {\r\n                                failureReason = $\"File '{uri.LocalPath}' could not be read: {ex.ToString()}\";\r\n                            }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifCurrentToVersionOneVisitor.GetContentStream(System.Uri,System.Text.Encoding&)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.String.Format(System.String,System.Object,System.Object)#IFormatProviderAlternateString"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1305",
          "level": "error",
          "message": {
            "text": "Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'SarifCurrentToVersionOneVisitor.GetContentStream(Uri, out Encoding)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.",
            "messageId": "IFormatProviderAlternateString"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Visitors/SarifCurrentToVersionOneVisitor.cs"
                },
                "region": {
                  "startLine": 641,
                  "snippet": {
                    "text": "                                failureReason = $\"File '{uri.LocalPath}' could not be accessed: {ex.ToString()}\";"
                  }
                },
                "contextRegion": {
                  "startLine": 640,
                  "startColumn": 1,
                  "endLine": 642,
                  "endColumn": 30,
                  "charOffset": 25565,
                  "charLength": 175,
                  "snippet": {
                    "text": "                            {\r\n                                failureReason = $\"File '{uri.LocalPath}' could not be accessed: {ex.ToString()}\";\r\n                            }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifCurrentToVersionOneVisitor.GetContentStream(System.Uri,System.Text.Encoding&)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.String.Format(System.String,System.Object,System.Object)#IFormatProviderAlternateString"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1822",
          "level": "warning",
          "message": {
            "text": "The 'this' parameter (or 'Me' in Visual Basic) of 'SarifCurrentToVersionOneVisitor.GetFileEncoding(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Visitors/SarifCurrentToVersionOneVisitor.cs"
                },
                "region": {
                  "startLine": 163,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 162,
                  "startColumn": 1,
                  "endLine": 164,
                  "endColumn": 38,
                  "charOffset": 6357,
                  "charLength": 111,
                  "snippet": {
                    "text": "        private Encoding GetFileEncoding(string encodingName)\r\n        {\r\n            Encoding encoding = null;"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifCurrentToVersionOneVisitor.GetFileEncoding(System.String)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in member name 'SarifCurrentToVersionOneVisitor.SarifLogVersionOne' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Visitors/SarifCurrentToVersionOneVisitor.cs"
                },
                "region": {
                  "startLine": 25,
                  "snippet": {
                    "text": "        public SarifLogVersionOne SarifLogVersionOne { get; private set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 24,
                  "startColumn": 1,
                  "endLine": 26,
                  "endColumn": 1,
                  "charOffset": 923,
                  "charLength": 78,
                  "snippet": {
                    "text": "\r\n        public SarifLogVersionOne SarifLogVersionOne { get; private set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifCurrentToVersionOneVisitor.SarifLogVersionOne"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1725",
          "level": "error",
          "message": {
            "text": "In member 'SarifCurrentToVersionOneVisitor.VisitSarifLog(SarifLog)', change parameter name 'v2SarifLog' to 'node' in order to match the identifier as it has been declared in 'SarifRewritingVisitor.VisitSarifLog(SarifLog)'."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Visitors/SarifCurrentToVersionOneVisitor.cs"
                },
                "region": {
                  "startLine": 28,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 27,
                  "startColumn": 1,
                  "endLine": 29,
                  "endColumn": 113,
                  "charOffset": 1003,
                  "charLength": 192,
                  "snippet": {
                    "text": "        public override SarifLog VisitSarifLog(SarifLog v2SarifLog)\r\n        {\r\n            SarifLogVersionOne = new SarifLogVersionOne(SarifVersionVersionOne.OneZeroZero.ConvertToSchemaUri(),"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifCurrentToVersionOneVisitor.VisitSarifLog(Microsoft.CodeAnalysis.Sarif.SarifLog)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0#"
          },
          "properties": {
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'SarifCurrentToVersionOneVisitor.VisitSarifLog(SarifLog)', validate parameter 'v2SarifLog' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Visitors/SarifCurrentToVersionOneVisitor.cs"
                },
                "region": {
                  "startLine": 33,
                  "snippet": {
                    "text": "            foreach (Run v2Run in v2SarifLog.Runs)"
                  }
                },
                "contextRegion": {
                  "startLine": 32,
                  "startColumn": 1,
                  "endLine": 34,
                  "endColumn": 14,
                  "charOffset": 1375,
                  "charLength": 67,
                  "snippet": {
                    "text": "\r\n            foreach (Run v2Run in v2SarifLog.Runs)\r\n            {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifCurrentToVersionOneVisitor.VisitSarifLog(Microsoft.CodeAnalysis.Sarif.SarifLog)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in type name 'SarifTransformerUtilities'.",
            "messageId": "Type"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Type"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2104",
          "level": "error",
          "message": {
            "text": "Remove the read-only designation from 'SarifTransformerUtilities.AlgorithmKindNameMap' or change the field to one that is an immutable reference type. If the reference type 'Dictionary<AlgorithmKindVersionOne, string>' is, in fact, immutable, exclude this message."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities.AlgorithmKindNameMap"
            }
          ],
          "properties": {
            "Category": "Microsoft.Security",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2104",
          "level": "error",
          "message": {
            "text": "Remove the read-only designation from 'SarifTransformerUtilities.AlgorithmNameKindMap' or change the field to one that is an immutable reference type. If the reference type 'Dictionary<string, AlgorithmKindVersionOne>' is, in fact, immutable, exclude this message."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities.AlgorithmNameKindMap"
            }
          ],
          "properties": {
            "Category": "Microsoft.Security",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "In method 'SarifTransformerUtilities.CreateAnnotatedCodeLocationImportance(ThreadFlowLocationImportance)', correct the spelling of 'v' in parameter name 'v2ThreadFlowLocationImportance' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "MemberParameter"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Visitors/SarifTransformerUtilities.cs"
                },
                "region": {
                  "startLine": 235,
                  "snippet": {
                    "text": "                    return AnnotatedCodeLocationImportanceVersionOne.Important;"
                  }
                },
                "contextRegion": {
                  "startLine": 234,
                  "startColumn": 1,
                  "endLine": 236,
                  "endColumn": 63,
                  "charOffset": 10088,
                  "charLength": 205,
                  "snippet": {
                    "text": "                case ThreadFlowLocationImportance.Important:\r\n                    return AnnotatedCodeLocationImportanceVersionOne.Important;\r\n                case ThreadFlowLocationImportance.Unimportant:"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities.CreateAnnotatedCodeLocationImportance(Microsoft.CodeAnalysis.Sarif.ThreadFlowLocationImportance)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "v#MemberParameter"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "In method 'SarifTransformerUtilities.CreateBaselineState(BaselineStateVersionOne)', correct the spelling of 'v' in parameter name 'v1BaselineState' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "MemberParameter"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Visitors/SarifTransformerUtilities.cs"
                },
                "region": {
                  "startLine": 191,
                  "snippet": {
                    "text": "                    return BaselineState.Existing;"
                  }
                },
                "contextRegion": {
                  "startLine": 190,
                  "startColumn": 1,
                  "endLine": 192,
                  "endColumn": 50,
                  "charOffset": 8001,
                  "charLength": 157,
                  "snippet": {
                    "text": "                case BaselineStateVersionOne.Existing:\r\n                    return BaselineState.Existing;\r\n                case BaselineStateVersionOne.New:"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities.CreateBaselineState(Microsoft.CodeAnalysis.Sarif.VersionOne.BaselineStateVersionOne)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "v#MemberParameter"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "In method 'SarifTransformerUtilities.CreateBaselineStateVersionOne(BaselineState)', correct the spelling of 'v' in parameter name 'v2BaselineState' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "MemberParameter"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Visitors/SarifTransformerUtilities.cs"
                },
                "region": {
                  "startLine": 205,
                  "snippet": {
                    "text": "                    return BaselineStateVersionOne.Existing;"
                  }
                },
                "contextRegion": {
                  "startLine": 204,
                  "startColumn": 1,
                  "endLine": 206,
                  "endColumn": 40,
                  "charOffset": 8583,
                  "charLength": 147,
                  "snippet": {
                    "text": "                case BaselineState.Existing:\r\n                    return BaselineStateVersionOne.Existing;\r\n                case BaselineState.New:"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities.CreateBaselineStateVersionOne(Microsoft.CodeAnalysis.Sarif.BaselineState)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "v#MemberParameter"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1305",
          "level": "error",
          "message": {
            "text": "Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'SarifTransformerUtilities.CreateDisambiguatedName(string, int)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.",
            "messageId": "IFormatProviderAlternateString"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Visitors/SarifTransformerUtilities.cs"
                },
                "region": {
                  "startLine": 67,
                  "snippet": {
                    "text": "            {"
                  }
                },
                "contextRegion": {
                  "startLine": 66,
                  "startColumn": 1,
                  "endLine": 68,
                  "endColumn": 56,
                  "charOffset": 2828,
                  "charLength": 112,
                  "snippet": {
                    "text": "            switch (v1NotificationLevel)\r\n            {\r\n                case NotificationLevelVersionOne.Error:"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities.CreateDisambiguatedName(System.String,System.Int32)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.String.Format(System.String,System.Object,System.Object)#IFormatProviderAlternateString"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "In method 'SarifTransformerUtilities.CreateNotificationLevel(NotificationLevelVersionOne)', correct the spelling of 'v' in parameter name 'v1NotificationLevel' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "MemberParameter"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Visitors/SarifTransformerUtilities.cs"
                },
                "region": {
                  "startLine": 71,
                  "snippet": {
                    "text": "                    return NotificationLevel.Note;"
                  }
                },
                "contextRegion": {
                  "startLine": 70,
                  "startColumn": 1,
                  "endLine": 72,
                  "endColumn": 25,
                  "charOffset": 2995,
                  "charLength": 132,
                  "snippet": {
                    "text": "                case NotificationLevelVersionOne.Note:\r\n                    return NotificationLevel.Note;\r\n                default:"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities.CreateNotificationLevel(Microsoft.CodeAnalysis.Sarif.VersionOne.NotificationLevelVersionOne)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "v#MemberParameter"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "In method 'SarifTransformerUtilities.CreateNotificationLevelVersionOne(NotificationLevel)', correct the spelling of 'v' in parameter name 'v2NotificationLevel' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "MemberParameter"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Visitors/SarifTransformerUtilities.cs"
                },
                "region": {
                  "startLine": 84,
                  "snippet": {
                    "text": "                    return NotificationLevelVersionOne.Note;"
                  }
                },
                "contextRegion": {
                  "startLine": 83,
                  "startColumn": 1,
                  "endLine": 85,
                  "endColumn": 25,
                  "charOffset": 3514,
                  "charLength": 132,
                  "snippet": {
                    "text": "                case NotificationLevel.Note:\r\n                    return NotificationLevelVersionOne.Note;\r\n                default:"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities.CreateNotificationLevelVersionOne(Microsoft.CodeAnalysis.Sarif.NotificationLevel)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "v#MemberParameter"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "In method 'SarifTransformerUtilities.CreateResultLevel(ResultLevelVersionOne)', correct the spelling of 'v' in parameter name 'v1ResultLevel' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "MemberParameter"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Visitors/SarifTransformerUtilities.cs"
                },
                "region": {
                  "startLine": 112,
                  "snippet": {
                    "text": "                    return ResultLevel.Note;"
                  }
                },
                "contextRegion": {
                  "startLine": 111,
                  "startColumn": 1,
                  "endLine": 113,
                  "endColumn": 49,
                  "charOffset": 4650,
                  "charLength": 144,
                  "snippet": {
                    "text": "                case ResultLevelVersionOne.Note:\r\n                    return ResultLevel.Note;\r\n                case ResultLevelVersionOne.Pass:"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities.CreateResultLevel(Microsoft.CodeAnalysis.Sarif.VersionOne.ResultLevelVersionOne)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "v#MemberParameter"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "In method 'SarifTransformerUtilities.CreateResultLevelVersionOne(ResultLevel)', correct the spelling of 'v' in parameter name 'v2ResultLevel' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "MemberParameter"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Visitors/SarifTransformerUtilities.cs"
                },
                "region": {
                  "startLine": 146,
                  "snippet": {
                    "text": "                    return ResultLevelVersionOne.Note;"
                  }
                },
                "contextRegion": {
                  "startLine": 145,
                  "startColumn": 1,
                  "endLine": 147,
                  "endColumn": 39,
                  "charOffset": 6066,
                  "charLength": 134,
                  "snippet": {
                    "text": "                case ResultLevel.Note:\r\n                    return ResultLevelVersionOne.Note;\r\n                case ResultLevel.Pass:"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities.CreateResultLevelVersionOne(Microsoft.CodeAnalysis.Sarif.ResultLevel)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "v#MemberParameter"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "In method 'SarifTransformerUtilities.CreateResultLevelVersionOne(RuleConfigurationDefaultLevel)', correct the spelling of 'v' in parameter name 'v2DefaultLevel' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "MemberParameter"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Visitors/SarifTransformerUtilities.cs"
                },
                "region": {
                  "startLine": 131,
                  "snippet": {
                    "text": "                    return ResultLevelVersionOne.Pass;"
                  }
                },
                "contextRegion": {
                  "startLine": 130,
                  "startColumn": 1,
                  "endLine": 132,
                  "endColumn": 60,
                  "charOffset": 5459,
                  "charLength": 173,
                  "snippet": {
                    "text": "                case RuleConfigurationDefaultLevel.Note:\r\n                    return ResultLevelVersionOne.Pass;\r\n                case RuleConfigurationDefaultLevel.Warning:"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities.CreateResultLevelVersionOne(Microsoft.CodeAnalysis.Sarif.RuleConfigurationDefaultLevel)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "v#MemberParameter"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "In method 'SarifTransformerUtilities.CreateRuleConfigurationDefaultLevel(ResultLevelVersionOne)', correct the spelling of 'v' in parameter name 'v1ResultLevel' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "MemberParameter"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Visitors/SarifTransformerUtilities.cs"
                },
                "region": {
                  "startLine": 97,
                  "snippet": {
                    "text": "                    return RuleConfigurationDefaultLevel.Note;"
                  }
                },
                "contextRegion": {
                  "startLine": 96,
                  "startColumn": 1,
                  "endLine": 98,
                  "endColumn": 52,
                  "charOffset": 4045,
                  "charLength": 165,
                  "snippet": {
                    "text": "                case ResultLevelVersionOne.Pass:\r\n                    return RuleConfigurationDefaultLevel.Note;\r\n                case ResultLevelVersionOne.Warning:"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities.CreateRuleConfigurationDefaultLevel(Microsoft.CodeAnalysis.Sarif.VersionOne.ResultLevelVersionOne)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "v#MemberParameter"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "In method 'SarifTransformerUtilities.CreateSuppressionStates(SuppressionStatesVersionOne)', correct the spelling of 'v' in parameter name 'v1SuppressionStates' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "MemberParameter"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Visitors/SarifTransformerUtilities.cs"
                },
                "region": {
                  "startLine": 165,
                  "snippet": {
                    "text": "                    return SuppressionStates.SuppressedInSource;"
                  }
                },
                "contextRegion": {
                  "startLine": 164,
                  "startColumn": 1,
                  "endLine": 166,
                  "endColumn": 25,
                  "charOffset": 6909,
                  "charLength": 160,
                  "snippet": {
                    "text": "                case SuppressionStatesVersionOne.SuppressedInSource:\r\n                    return SuppressionStates.SuppressedInSource;\r\n                default:"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities.CreateSuppressionStates(Microsoft.CodeAnalysis.Sarif.VersionOne.SuppressionStatesVersionOne)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "v#MemberParameter"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "In method 'SarifTransformerUtilities.CreateSuppressionStatesVersionOne(SuppressionStates)', correct the spelling of 'v' in parameter name 'v2SuppressionStates' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "MemberParameter"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Visitors/SarifTransformerUtilities.cs"
                },
                "region": {
                  "startLine": 178,
                  "snippet": {
                    "text": "                    return SuppressionStatesVersionOne.SuppressedInSource;"
                  }
                },
                "contextRegion": {
                  "startLine": 177,
                  "startColumn": 1,
                  "endLine": 179,
                  "endColumn": 25,
                  "charOffset": 7483,
                  "charLength": 160,
                  "snippet": {
                    "text": "                case SuppressionStates.SuppressedInSource:\r\n                    return SuppressionStatesVersionOne.SuppressedInSource;\r\n                default:"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities.CreateSuppressionStatesVersionOne(Microsoft.CodeAnalysis.Sarif.SuppressionStates)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "v#MemberParameter"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "In method 'SarifTransformerUtilities.CreateThreadFlowLocationImportance(AnnotatedCodeLocationImportanceVersionOne)', correct the spelling of 'v' in parameter name 'v1AnnotatedCodeLocationImportance' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "MemberParameter"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Visitors/SarifTransformerUtilities.cs"
                },
                "region": {
                  "startLine": 220,
                  "snippet": {
                    "text": "                    return ThreadFlowLocationImportance.Important;"
                  }
                },
                "contextRegion": {
                  "startLine": 219,
                  "startColumn": 1,
                  "endLine": 221,
                  "endColumn": 76,
                  "charOffset": 9290,
                  "charLength": 218,
                  "snippet": {
                    "text": "                case AnnotatedCodeLocationImportanceVersionOne.Important:\r\n                    return ThreadFlowLocationImportance.Important;\r\n                case AnnotatedCodeLocationImportanceVersionOne.Unimportant:"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities.CreateThreadFlowLocationImportance(Microsoft.CodeAnalysis.Sarif.VersionOne.AnnotatedCodeLocationImportanceVersionOne)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "v#MemberParameter"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2105",
          "level": "warning",
          "message": {
            "text": "Either replace 'SarifTransformerUtilities.DefaultFullyQualifiedNameDelimiters' with a strongly typed collection that cannot be changed, or replace the public field with a method that returns a clone of a private array."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities.DefaultFullyQualifiedNameDelimiters"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Security",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2104",
          "level": "error",
          "message": {
            "text": "Remove the read-only designation from 'SarifTransformerUtilities.JsonSettingsV1' or change the field to one that is an immutable reference type. If the reference type 'JsonSerializerSettings' is, in fact, immutable, exclude this message."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities.JsonSettingsV1"
            }
          ],
          "properties": {
            "Category": "Microsoft.Security",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2104",
          "level": "error",
          "message": {
            "text": "Remove the read-only designation from 'SarifTransformerUtilities.JsonSettingsV1Compact' or change the field to one that is an immutable reference type. If the reference type 'JsonSerializerSettings' is, in fact, immutable, exclude this message."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities.JsonSettingsV1Compact"
            }
          ],
          "properties": {
            "Category": "Microsoft.Security",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2104",
          "level": "error",
          "message": {
            "text": "Remove the read-only designation from 'SarifTransformerUtilities.JsonSettingsV2' or change the field to one that is an immutable reference type. If the reference type 'JsonSerializerSettings' is, in fact, immutable, exclude this message."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities.JsonSettingsV2"
            }
          ],
          "properties": {
            "Category": "Microsoft.Security",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2104",
          "level": "error",
          "message": {
            "text": "Remove the read-only designation from 'SarifTransformerUtilities.JsonSettingsV2Compact' or change the field to one that is an immutable reference type. If the reference type 'JsonSerializerSettings' is, in fact, immutable, exclude this message."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities.JsonSettingsV2Compact"
            }
          ],
          "properties": {
            "Category": "Microsoft.Security",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2104",
          "level": "error",
          "message": {
            "text": "Remove the read-only designation from 'SarifTransformerUtilities.PropertyBagTransformerItemPrefixes' or change the field to one that is an immutable reference type. If the reference type 'Dictionary<SarifVersion, string>' is, in fact, immutable, exclude this message."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifTransformerUtilities.PropertyBagTransformerItemPrefixes"
            }
          ],
          "properties": {
            "Category": "Microsoft.Security",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in type name 'SarifVersionOneToCurrentVisitor'.",
            "messageId": "Type"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifVersionOneToCurrentVisitor"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Type"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1823",
          "level": "warning",
          "message": {
            "text": "It appears that field 'SarifVersionOneToCurrentVisitor._currentV1Run' is never used or is only ever assigned to. Use this field or remove it."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifVersionOneToCurrentVisitor._currentV1Run"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1822",
          "level": "warning",
          "message": {
            "text": "The 'this' parameter (or 'Me' in Visual Basic) of 'SarifVersionOneToCurrentVisitor.CreateFileLocation(Uri, string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Visitors/SarifVersionOneToCurrentVisitor.cs"
                },
                "region": {
                  "startLine": 194,
                  "snippet": {
                    "text": "        internal FileLocation CreateFileLocation(Uri uri, string uriBaseId)"
                  }
                },
                "contextRegion": {
                  "startLine": 193,
                  "startColumn": 1,
                  "endLine": 195,
                  "endColumn": 10,
                  "charOffset": 7376,
                  "charLength": 88,
                  "snippet": {
                    "text": "\r\n        internal FileLocation CreateFileLocation(Uri uri, string uriBaseId)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifVersionOneToCurrentVisitor.CreateFileLocation(System.Uri,System.String)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1308",
          "level": "error",
          "message": {
            "text": "In method 'SarifVersionOneToCurrentVisitor.CreateHash(HashVersionOne)', replace the call to 'string.ToLowerInvariant()' with String.ToUpperInvariant().",
            "messageId": "ToUpperInvariant"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Visitors/SarifVersionOneToCurrentVisitor.cs"
                },
                "region": {
                  "startLine": 244,
                  "snippet": {
                    "text": "                {"
                  }
                },
                "contextRegion": {
                  "startLine": 243,
                  "startColumn": 1,
                  "endLine": 245,
                  "endColumn": 80,
                  "charOffset": 8807,
                  "charLength": 197,
                  "snippet": {
                    "text": "                if (!Utilities.AlgorithmKindNameMap.TryGetValue(v1Hash.Algorithm, out algorithm))\r\n                {\r\n                    algorithm = v1Hash.Algorithm.ToString().ToLowerInvariant();"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifVersionOneToCurrentVisitor.CreateHash(Microsoft.CodeAnalysis.Sarif.VersionOne.HashVersionOne)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "ToUpperInvariant"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1822",
          "level": "warning",
          "message": {
            "text": "The 'this' parameter (or 'Me' in Visual Basic) of 'SarifVersionOneToCurrentVisitor.CreateLogicalLocation(LogicalLocationVersionOne)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Visitors/SarifVersionOneToCurrentVisitor.cs"
                },
                "region": {
                  "startLine": 429,
                  "snippet": {
                    "text": "                    Region = CreateRegion(column, line)"
                  }
                },
                "contextRegion": {
                  "startLine": 428,
                  "startColumn": 1,
                  "endLine": 430,
                  "endColumn": 19,
                  "charOffset": 17015,
                  "charLength": 147,
                  "snippet": {
                    "text": "                    FileLocation = CreateFileLocation(uri, uriBaseId),\r\n                    Region = CreateRegion(column, line)\r\n                };"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifVersionOneToCurrentVisitor.CreateLogicalLocation(Microsoft.CodeAnalysis.Sarif.VersionOne.LogicalLocationVersionOne)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1822",
          "level": "warning",
          "message": {
            "text": "The 'this' parameter (or 'Me' in Visual Basic) of 'SarifVersionOneToCurrentVisitor.CreateMessage(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Visitors/SarifVersionOneToCurrentVisitor.cs"
                },
                "region": {
                  "startLine": 530,
                  "snippet": {
                    "text": ""
                  }
                },
                "contextRegion": {
                  "startLine": 529,
                  "startColumn": 1,
                  "endLine": 531,
                  "endColumn": 45,
                  "charOffset": 21031,
                  "charLength": 61,
                  "snippet": {
                    "text": "            }\r\n\r\n            if (logicalLocation.Name == key)"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifVersionOneToCurrentVisitor.CreateMessage(System.String)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1822",
          "level": "warning",
          "message": {
            "text": "The 'this' parameter (or 'Me' in Visual Basic) of 'SarifVersionOneToCurrentVisitor.CreateRegion(RegionVersionOne)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Visitors/SarifVersionOneToCurrentVisitor.cs"
                },
                "region": {
                  "startLine": 653,
                  "snippet": {
                    "text": "                    Region = CreateRegion(v1PhysicalLocation.Region)"
                  }
                },
                "contextRegion": {
                  "startLine": 652,
                  "startColumn": 1,
                  "endLine": 654,
                  "endColumn": 19,
                  "charOffset": 25298,
                  "charLength": 164,
                  "snippet": {
                    "text": "                    FileLocation = CreateFileLocation(v1PhysicalLocation),\r\n                    Region = CreateRegion(v1PhysicalLocation.Region)\r\n                };"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifVersionOneToCurrentVisitor.CreateRegion(Microsoft.CodeAnalysis.Sarif.VersionOne.RegionVersionOne)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1822",
          "level": "warning",
          "message": {
            "text": "The 'this' parameter (or 'Me' in Visual Basic) of 'SarifVersionOneToCurrentVisitor.CreateRegion(int, int, int, int, int, int)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Visitors/SarifVersionOneToCurrentVisitor.cs"
                },
                "region": {
                  "startLine": 697,
                  "snippet": {
                    "text": "                region = CreateRegion(v1PhysicalLocation.Region);"
                  }
                },
                "contextRegion": {
                  "startLine": 696,
                  "startColumn": 1,
                  "endLine": 698,
                  "endColumn": 57,
                  "charOffset": 27107,
                  "charLength": 138,
                  "snippet": {
                    "text": "            {\r\n                region = CreateRegion(v1PhysicalLocation.Region);\r\n                region.Message = CreateMessage(message);"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifVersionOneToCurrentVisitor.CreateRegion(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1502",
          "level": "warning",
          "message": {
            "text": "'SarifVersionOneToCurrentVisitor.CreateResult(ResultVersionOne)' has a cyclomatic complexity of 28. Rewrite or refactor the method to reduce complexity to 25."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Visitors/SarifVersionOneToCurrentVisitor.cs"
                },
                "region": {
                  "startLine": 717,
                  "snippet": {
                    "text": "                    StartLine = startLine"
                  }
                },
                "contextRegion": {
                  "startLine": 716,
                  "startColumn": 1,
                  "endLine": 718,
                  "endColumn": 19,
                  "charOffset": 27871,
                  "charLength": 109,
                  "snippet": {
                    "text": "                    StartColumn = startColumn,\r\n                    StartLine = startLine\r\n                };"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifVersionOneToCurrentVisitor.CreateResult(Microsoft.CodeAnalysis.Sarif.VersionOne.ResultVersionOne)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Maintainability",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1305",
          "level": "error",
          "message": {
            "text": "Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'SarifVersionOneToCurrentVisitor.CreateRun(RunVersionOne)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.",
            "messageId": "IFormatProviderAlternateString"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Visitors/SarifVersionOneToCurrentVisitor.cs"
                },
                "region": {
                  "startLine": 953,
                  "snippet": {
                    "text": "                    if (v1Run.Results != null)"
                  }
                },
                "contextRegion": {
                  "startLine": 952,
                  "startColumn": 1,
                  "endLine": 954,
                  "endColumn": 22,
                  "charOffset": 37186,
                  "charLength": 71,
                  "snippet": {
                    "text": "\r\n                    if (v1Run.Results != null)\r\n                    {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifVersionOneToCurrentVisitor.CreateRun(Microsoft.CodeAnalysis.Sarif.VersionOne.RunVersionOne)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.String.Format(System.String,System.Object)#IFormatProviderAlternateString"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1822",
          "level": "warning",
          "message": {
            "text": "The 'this' parameter (or 'Me' in Visual Basic) of 'SarifVersionOneToCurrentVisitor.CreateTool(ToolVersionOne)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Visitors/SarifVersionOneToCurrentVisitor.cs"
                },
                "region": {
                  "startLine": 1006,
                  "snippet": {
                    "text": "                                                 v1StackFrame.LogicalLocationKey,"
                  }
                },
                "contextRegion": {
                  "startLine": 1005,
                  "startColumn": 1,
                  "endLine": 1007,
                  "endColumn": 71,
                  "charOffset": 38879,
                  "charLength": 243,
                  "snippet": {
                    "text": "            stackFrame.Location = CreateLocation(v1StackFrame.FullyQualifiedLogicalName,\r\n                                                 v1StackFrame.LogicalLocationKey,\r\n                                                 v1StackFrame.Message,"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifVersionOneToCurrentVisitor.CreateTool(Microsoft.CodeAnalysis.Sarif.VersionOne.ToolVersionOne)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1822",
          "level": "warning",
          "message": {
            "text": "The 'this' parameter (or 'Me' in Visual Basic) of 'SarifVersionOneToCurrentVisitor.GetLogicalLocationName(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Visitors/SarifVersionOneToCurrentVisitor.cs"
                },
                "region": {
                  "startLine": 496,
                  "snippet": {
                    "text": "                _currentRun.LogicalLocations.Add(logicalLocationKey, logicalLocation);"
                  }
                },
                "contextRegion": {
                  "startLine": 495,
                  "startColumn": 1,
                  "endLine": 497,
                  "endColumn": 63,
                  "charOffset": 19771,
                  "charLength": 165,
                  "snippet": {
                    "text": "            {\r\n                _currentRun.LogicalLocations.Add(logicalLocationKey, logicalLocation);\r\n                RemoveRedundantProperties(logicalLocationKey);"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifVersionOneToCurrentVisitor.GetLogicalLocationName(System.String)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in member name 'SarifVersionOneToCurrentVisitor.SarifLog' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Visitors/SarifVersionOneToCurrentVisitor.cs"
                },
                "region": {
                  "startLine": 24,
                  "snippet": {
                    "text": ""
                  }
                },
                "contextRegion": {
                  "startLine": 23,
                  "startColumn": 1,
                  "endLine": 25,
                  "endColumn": 55,
                  "charOffset": 931,
                  "charLength": 110,
                  "snippet": {
                    "text": "        private int _threadFlowLocationNestingLevel;\r\n\r\n        public SarifLog SarifLog { get; private set; }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifVersionOneToCurrentVisitor.SarifLog"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1725",
          "level": "error",
          "message": {
            "text": "In member 'SarifVersionOneToCurrentVisitor.VisitSarifLogVersionOne(SarifLogVersionOne)', change parameter name 'v1SarifLog' to 'node' in order to match the identifier as it has been declared in 'SarifRewritingVisitorVersionOne.VisitSarifLogVersionOne(SarifLogVersionOne)'."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Visitors/SarifVersionOneToCurrentVisitor.cs"
                },
                "region": {
                  "startLine": 27,
                  "snippet": {
                    "text": "        public override SarifLogVersionOne VisitSarifLogVersionOne(SarifLogVersionOne v1SarifLog)"
                  }
                },
                "contextRegion": {
                  "startLine": 26,
                  "startColumn": 1,
                  "endLine": 28,
                  "endColumn": 10,
                  "charOffset": 1043,
                  "charLength": 110,
                  "snippet": {
                    "text": "\r\n        public override SarifLogVersionOne VisitSarifLogVersionOne(SarifLogVersionOne v1SarifLog)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifVersionOneToCurrentVisitor.VisitSarifLogVersionOne(Microsoft.CodeAnalysis.Sarif.VersionOne.SarifLogVersionOne)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0#"
          },
          "properties": {
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'SarifVersionOneToCurrentVisitor.VisitSarifLogVersionOne(SarifLogVersionOne)', validate parameter 'v1SarifLog' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Visitors/SarifVersionOneToCurrentVisitor.cs"
                },
                "region": {
                  "startLine": 32,
                  "snippet": {
                    "text": ""
                  }
                },
                "contextRegion": {
                  "startLine": 31,
                  "startColumn": 1,
                  "endLine": 33,
                  "endColumn": 61,
                  "charOffset": 1294,
                  "charLength": 117,
                  "snippet": {
                    "text": "                                    new List<Run>());\r\n\r\n            foreach (RunVersionOne v1Run in v1SarifLog.Runs)"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.SarifVersionOneToCurrentVisitor.VisitSarifLogVersionOne(Microsoft.CodeAnalysis.Sarif.VersionOne.SarifLogVersionOne)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1064",
          "level": "warning",
          "message": {
            "text": "Make exception class 'UnknownEncodingException' public."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.UnknownEncodingException"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1032",
          "level": "error",
          "message": {
            "text": "Add the following constructor to 'UnknownEncodingException': protected UnknownEncodingException(SerializationInfo, StreamingContext).",
            "messageId": "MissingConstructor"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.UnknownEncodingException"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "MissingConstructor"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2237",
          "level": "error",
          "message": {
            "text": "Add [Serializable] to 'UnknownEncodingException' as this type implements ISerializable."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Visitors.UnknownEncodingException"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Cpp' in member name 'MimeType.Cpp' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Writers.MimeType.Cpp"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Cpp#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1057",
          "level": "error",
          "message": {
            "text": "Refactor 'MimeType.DetermineFromFileExtension(string)' so that it builds a System.Uri object from 'path', and then calls 'MimeType.DetermineFromFileExtension(Uri)'."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Writers/MimeType.cs"
                },
                "region": {
                  "startLine": 17,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 18,
                  "endColumn": 30,
                  "charOffset": 724,
                  "charLength": 110,
                  "snippet": {
                    "text": "        public static string DetermineFromFileExtension(string path)\r\n        {\r\n            if (path == null)"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Writers.MimeType.DetermineFromFileExtension(System.String)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in member name 'MimeType.Sarif' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Writers.MimeType.Sarif"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2208",
          "level": "error",
          "message": {
            "text": "Method 'ResultLogJsonWriter.Initialize(Run)' passes 'Tool' as the 'paramName' argument to a 'ArgumentNullException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.",
            "messageId": "IncorrectParameterName"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Writers/ResultLogJsonWriter.cs"
                },
                "region": {
                  "startLine": 64,
                  "snippet": {
                    "text": "            }"
                  }
                },
                "contextRegion": {
                  "startLine": 63,
                  "startColumn": 1,
                  "endLine": 65,
                  "endColumn": 1,
                  "charOffset": 2423,
                  "charLength": 83,
                  "snippet": {
                    "text": "                throw new ArgumentNullException(nameof(run.Tool));\r\n            }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Writers.ResultLogJsonWriter.Initialize(Microsoft.CodeAnalysis.Sarif.Run)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "IncorrectParameterName"
          },
          "properties": {
            "Level": "CriticalError",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in type name 'SarifLogger'.",
            "messageId": "Type"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Writers.SarifLogger"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Type"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1026",
          "level": "error",
          "message": {
            "text": "Replace method 'SarifLogger.SarifLogger(TextWriter, LoggingOptions, OptionallyEmittedData, Tool, Run, IEnumerable<string>, IEnumerable<string>, IEnumerable<string>, string)' with an overload that supplies all default arguments."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Writers/SarifLogger.cs"
                },
                "region": {
                  "startLine": 124,
                  "snippet": {
                    "text": "                  loggingOptions: loggingOptions,"
                  }
                },
                "contextRegion": {
                  "startLine": 123,
                  "startColumn": 1,
                  "endLine": 125,
                  "endColumn": 46,
                  "charOffset": 4731,
                  "charLength": 217,
                  "snippet": {
                    "text": "            : this(new StreamWriter(new FileStream(outputFilePath, FileMode.Create, FileAccess.Write, FileShare.None)),\r\n                  loggingOptions: loggingOptions,\r\n                  dataToInsert: dataToInsert,"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Writers.SarifLogger..ctor(System.IO.TextWriter,Microsoft.CodeAnalysis.Sarif.Writers.LoggingOptions,Microsoft.CodeAnalysis.Sarif.OptionallyEmittedData,Microsoft.CodeAnalysis.Sarif.Tool,Microsoft.CodeAnalysis.Sarif.Run,System.Collections.Generic.IEnumerable`1<System.String>,System.Collections.Generic.IEnumerable`1<System.String>,System.Collections.Generic.IEnumerable`1<System.String>,System.String)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1026",
          "level": "error",
          "message": {
            "text": "Replace method 'SarifLogger.SarifLogger(string, LoggingOptions, OptionallyEmittedData, Tool, Run, IEnumerable<string>, IEnumerable<string>, IEnumerable<string>, string)' with an overload that supplies all default arguments."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Writers/SarifLogger.cs"
                },
                "region": {
                  "startLine": 105,
                  "snippet": {
                    "text": ""
                  }
                },
                "contextRegion": {
                  "startLine": 104,
                  "startColumn": 1,
                  "endLine": 106,
                  "endColumn": 61,
                  "charOffset": 3909,
                  "charLength": 112,
                  "snippet": {
                    "text": "            string uriText = uri.OriginalString;\r\n\r\n            foreach (string tokenToRedact in tokensToRedact)"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Writers.SarifLogger..ctor(System.String,Microsoft.CodeAnalysis.Sarif.Writers.LoggingOptions,Microsoft.CodeAnalysis.Sarif.OptionallyEmittedData,Microsoft.CodeAnalysis.Sarif.Tool,Microsoft.CodeAnalysis.Sarif.Run,System.Collections.Generic.IEnumerable`1<System.String>,System.Collections.Generic.IEnumerable`1<System.String>,System.Collections.Generic.IEnumerable`1<System.String>,System.String)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2000",
          "level": "warning",
          "message": {
            "text": "In method 'SarifLogger.SarifLogger(string, LoggingOptions, OptionallyEmittedData, Tool, Run, IEnumerable<string>, IEnumerable<string>, IEnumerable<string>, string)', call System.IDisposable.Dispose on object 'new FileStream(outputFilePath, FileMode.Create, FileAccess.Write, FileShare.None)' before all references to it are out of scope.",
            "messageId": "NonExceptionEdge"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Writers/SarifLogger.cs"
                },
                "region": {
                  "startLine": 105,
                  "snippet": {
                    "text": ""
                  }
                },
                "contextRegion": {
                  "startLine": 104,
                  "startColumn": 1,
                  "endLine": 106,
                  "endColumn": 61,
                  "charOffset": 3909,
                  "charLength": 112,
                  "snippet": {
                    "text": "            string uriText = uri.OriginalString;\r\n\r\n            foreach (string tokenToRedact in tokensToRedact)"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Writers.SarifLogger..ctor(System.String,Microsoft.CodeAnalysis.Sarif.Writers.LoggingOptions,Microsoft.CodeAnalysis.Sarif.OptionallyEmittedData,Microsoft.CodeAnalysis.Sarif.Tool,Microsoft.CodeAnalysis.Sarif.Run,System.Collections.Generic.IEnumerable`1<System.String>,System.Collections.Generic.IEnumerable`1<System.String>,System.Collections.Generic.IEnumerable`1<System.String>,System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "NonExceptionEdge"
          },
          "properties": {
            "Category": "Microsoft.Reliability",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1801",
          "level": "warning",
          "message": {
            "text": "Parameter 'analysisTargets' of 'SarifLogger.SarifLogger(string, LoggingOptions, OptionallyEmittedData, Tool, Run, IEnumerable<string>, IEnumerable<string>, IEnumerable<string>, string)' is never used. Remove the parameter or use it in the method body."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Writers/SarifLogger.cs"
                },
                "region": {
                  "startLine": 105,
                  "snippet": {
                    "text": ""
                  }
                },
                "contextRegion": {
                  "startLine": 104,
                  "startColumn": 1,
                  "endLine": 106,
                  "endColumn": 61,
                  "charOffset": 3909,
                  "charLength": 112,
                  "snippet": {
                    "text": "            string uriText = uri.OriginalString;\r\n\r\n            foreach (string tokenToRedact in tokensToRedact)"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Writers.SarifLogger..ctor(System.String,Microsoft.CodeAnalysis.Sarif.Writers.LoggingOptions,Microsoft.CodeAnalysis.Sarif.OptionallyEmittedData,Microsoft.CodeAnalysis.Sarif.Tool,Microsoft.CodeAnalysis.Sarif.Run,System.Collections.Generic.IEnumerable`1<System.String>,System.Collections.Generic.IEnumerable`1<System.String>,System.Collections.Generic.IEnumerable`1<System.String>,System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "analysisTargets"
          },
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1801",
          "level": "warning",
          "message": {
            "text": "Parameter 'defaultFileEncoding' of 'SarifLogger.SarifLogger(string, LoggingOptions, OptionallyEmittedData, Tool, Run, IEnumerable<string>, IEnumerable<string>, IEnumerable<string>, string)' is never used. Remove the parameter or use it in the method body."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Writers/SarifLogger.cs"
                },
                "region": {
                  "startLine": 105,
                  "snippet": {
                    "text": ""
                  }
                },
                "contextRegion": {
                  "startLine": 104,
                  "startColumn": 1,
                  "endLine": 106,
                  "endColumn": 61,
                  "charOffset": 3909,
                  "charLength": 112,
                  "snippet": {
                    "text": "            string uriText = uri.OriginalString;\r\n\r\n            foreach (string tokenToRedact in tokensToRedact)"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Writers.SarifLogger..ctor(System.String,Microsoft.CodeAnalysis.Sarif.Writers.LoggingOptions,Microsoft.CodeAnalysis.Sarif.OptionallyEmittedData,Microsoft.CodeAnalysis.Sarif.Tool,Microsoft.CodeAnalysis.Sarif.Run,System.Collections.Generic.IEnumerable`1<System.String>,System.Collections.Generic.IEnumerable`1<System.String>,System.Collections.Generic.IEnumerable`1<System.String>,System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "defaultFileEncoding"
          },
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1502",
          "level": "warning",
          "message": {
            "text": "'SarifLogger.CaptureFilesInResult(Result)' has a cyclomatic complexity of 31. Rewrite or refactor the method to reduce complexity to 25."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif/Writers/SarifLogger.cs"
                },
                "region": {
                  "startLine": 289,
                  "snippet": {
                    "text": "                string message = string.Format(CultureInfo.InvariantCulture, SdkResources.ResultRuleIdDoesNotMatchRule,"
                  }
                },
                "contextRegion": {
                  "startLine": 288,
                  "startColumn": 1,
                  "endLine": 290,
                  "endColumn": 46,
                  "charOffset": 10782,
                  "charLength": 274,
                  "snippet": {
                    "text": "                //The rule id '{0}' specified by the result does not match the actual id of the rule '{1}'\r\n                string message = string.Format(CultureInfo.InvariantCulture, SdkResources.ResultRuleIdDoesNotMatchRule,\r\n                    result.RuleId.ToString(),"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.dll!Microsoft.CodeAnalysis.Sarif.Writers.SarifLogger.CaptureFilesInResult(Microsoft.CodeAnalysis.Sarif.Result)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Maintainability",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2243",
          "level": "warning",
          "message": {
            "text": "In the constructor of 'AssemblyInformationalVersionAttribute', change the value of argument 'informationalVersion', which is currently \"2.0.0-csd.1.0.1\", to something that can be correctly parsed as 'Version'."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in assembly name 'Sarif.Driver.dll'.",
            "messageId": "Assembly"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Assembly"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1014",
          "level": "error",
          "message": {
            "text": "Mark 'Sarif.Driver.dll' with CLSCompliant(true) because it exposes externally visible types."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1824",
          "level": "warning",
          "message": {
            "text": "Because assembly 'Sarif.Driver.dll' contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1063",
          "level": "error",
          "message": {
            "text": "Provide an overridable implementation of Dispose(bool) on 'AggregatingLogger' or mark the type as sealed. A call to Dispose(false) should only clean up native resources. A call to Dispose(true) should clean up both managed and native resources.",
            "messageId": "ProvideDisposeBool"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AggregatingLogger"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "ProvideDisposeBool"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1816",
          "level": "warning",
          "message": {
            "text": "Change 'AggregatingLogger.Dispose()' to call 'GC.SuppressFinalize(object)'. This will prevent derived types that introduce a finalizer from needing to re-implement 'IDisposable' to call it.",
            "messageId": "NotCalled"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/AggregatingLogger.cs"
                },
                "region": {
                  "startLine": 25,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 24,
                  "startColumn": 1,
                  "endLine": 26,
                  "endColumn": 56,
                  "charOffset": 709,
                  "charLength": 97,
                  "snippet": {
                    "text": "        public void Dispose()\r\n        {\r\n            foreach (IAnalysisLogger logger in Loggers)"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AggregatingLogger.Dispose()"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "NotCalled"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1063",
          "level": "error",
          "message": {
            "text": "Modify 'AggregatingLogger.Dispose()' so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.",
            "messageId": "DisposeImplementation"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/AggregatingLogger.cs"
                },
                "region": {
                  "startLine": 25,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 24,
                  "startColumn": 1,
                  "endLine": 26,
                  "endColumn": 56,
                  "charOffset": 709,
                  "charLength": 97,
                  "snippet": {
                    "text": "        public void Dispose()\r\n        {\r\n            foreach (IAnalysisLogger logger in Loggers)"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AggregatingLogger.Dispose()"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "DisposeImplementation"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'AggregatingLogger.Loggers' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/AggregatingLogger.cs"
                },
                "region": {
                  "startLine": 22,
                  "snippet": {
                    "text": "        public IList<IAnalysisLogger> Loggers { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 23,
                  "endColumn": 1,
                  "charOffset": 644,
                  "charLength": 63,
                  "snippet": {
                    "text": "\r\n        public IList<IAnalysisLogger> Loggers { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AggregatingLogger.Loggers"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1063",
          "level": "error",
          "message": {
            "text": "Provide an overridable implementation of Dispose(bool) on 'AnalysisContext' or mark the type as sealed. A call to Dispose(false) should only clean up native resources. A call to Dispose(true) should clean up both managed and native resources.",
            "messageId": "ProvideDisposeBool"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalysisContext"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "ProvideDisposeBool"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1816",
          "level": "warning",
          "message": {
            "text": "Change 'AnalysisContext.Dispose()' to call 'GC.SuppressFinalize(object)'. This will prevent derived types that introduce a finalizer from needing to re-implement 'IDisposable' to call it.",
            "messageId": "NotCalled"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/AnalysisContext.cs"
                },
                "region": {
                  "startLine": 27,
                  "snippet": {
                    "text": "        public void Dispose() { }"
                  }
                },
                "contextRegion": {
                  "startLine": 26,
                  "startColumn": 1,
                  "endLine": 28,
                  "endColumn": 6,
                  "charOffset": 719,
                  "charLength": 42,
                  "snippet": {
                    "text": "\r\n        public void Dispose() { }\r\n    }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalysisContext.Dispose()"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "NotCalled"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1063",
          "level": "error",
          "message": {
            "text": "Modify 'AnalysisContext.Dispose()' so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.",
            "messageId": "DisposeImplementation"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/AnalysisContext.cs"
                },
                "region": {
                  "startLine": 27,
                  "snippet": {
                    "text": "        public void Dispose() { }"
                  }
                },
                "contextRegion": {
                  "startLine": 26,
                  "startColumn": 1,
                  "endLine": 28,
                  "endColumn": 6,
                  "charOffset": 719,
                  "charLength": 42,
                  "snippet": {
                    "text": "\r\n        public void Dispose() { }\r\n    }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalysisContext.Dispose()"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "DisposeImplementation"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'AnalysisContext.Policy' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/AnalysisContext.cs"
                },
                "region": {
                  "startLine": 19,
                  "snippet": {
                    "text": "        public PropertiesDictionary Policy { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 18,
                  "startColumn": 1,
                  "endLine": 20,
                  "endColumn": 1,
                  "charOffset": 501,
                  "charLength": 60,
                  "snippet": {
                    "text": "\r\n        public PropertiesDictionary Policy { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalysisContext.Policy"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1031",
          "level": "error",
          "message": {
            "text": "Modify 'AnalyzeCommandBase<TContext, TOptions>.AnalyzeTarget(IEnumerable<ISkimmer<TContext>>, TContext, HashSet<string>)' to catch a more specific exception than 'Exception' or rethrow the exception."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/AnalyzeCommandBase.cs"
                },
                "region": {
                  "startLine": 554,
                  "snippet": {
                    "text": "                return context;"
                  }
                },
                "contextRegion": {
                  "startLine": 553,
                  "startColumn": 1,
                  "endLine": 555,
                  "endColumn": 14,
                  "charOffset": 21649,
                  "charLength": 82,
                  "snippet": {
                    "text": "                context.Dispose();\r\n                return context;\r\n            }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2.AnalyzeTarget(System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Driver.ISkimmer`1<!0>>,!0,System.Collections.Generic.HashSet`1<System.String>)"
            }
          ],
          "properties": {
            "Level": "CriticalError",
            "Category": "Microsoft.Design",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1006",
          "level": "error",
          "message": {
            "text": "Consider a design where 'AnalyzeCommandBase<TContext, TOptions>.AnalyzeTarget(IEnumerable<ISkimmer<TContext>>, TContext, HashSet<string>)' doesn't nest generic type 'IEnumerable<ISkimmer<TContext>>'."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/AnalyzeCommandBase.cs"
                },
                "region": {
                  "startLine": 543,
                  "snippet": {
                    "text": ""
                  }
                },
                "contextRegion": {
                  "startLine": 542,
                  "startColumn": 1,
                  "endLine": 544,
                  "endColumn": 53,
                  "charOffset": 21253,
                  "charLength": 104,
                  "snippet": {
                    "text": "            context.Policy = rootContext.Policy;\r\n\r\n            if (context.TargetLoadException != null)"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2.AnalyzeTarget(System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Driver.ISkimmer`1<!0>>,!0,System.Collections.Generic.HashSet`1<System.String>)"
            }
          ],
          "properties": {
            "Level": "CriticalError",
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'AnalyzeCommandBase<TContext, TOptions>.AnalyzeTarget(IEnumerable<ISkimmer<TContext>>, TContext, HashSet<string>)', validate parameter 'skimmers' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/AnalyzeCommandBase.cs"
                },
                "region": {
                  "startLine": 544,
                  "snippet": {
                    "text": "            if (context.TargetLoadException != null)"
                  }
                },
                "contextRegion": {
                  "startLine": 543,
                  "startColumn": 1,
                  "endLine": 545,
                  "endColumn": 14,
                  "charOffset": 21303,
                  "charLength": 69,
                  "snippet": {
                    "text": "\r\n            if (context.TargetLoadException != null)\r\n            {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2.AnalyzeTarget(System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Driver.ISkimmer`1<!0>>,!0,System.Collections.Generic.HashSet`1<System.String>)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'AnalyzeCommandBase<TContext, TOptions>.AnalyzeTarget(IEnumerable<ISkimmer<TContext>>, TContext, HashSet<string>)', validate parameter 'disabledSkimmers' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/AnalyzeCommandBase.cs"
                },
                "region": {
                  "startLine": 546,
                  "snippet": {
                    "text": "                Errors.LogExceptionLoadingTarget(context);"
                  }
                },
                "contextRegion": {
                  "startLine": 545,
                  "startColumn": 1,
                  "endLine": 547,
                  "endColumn": 35,
                  "charOffset": 21359,
                  "charLength": 109,
                  "snippet": {
                    "text": "            {\r\n                Errors.LogExceptionLoadingTarget(context);\r\n                context.Dispose();"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2.AnalyzeTarget(System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Driver.ISkimmer`1<!0>>,!0,System.Collections.Generic.HashSet`1<System.String>)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "2"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1006",
          "level": "error",
          "message": {
            "text": "Consider a design where 'AnalyzeCommandBase<TContext, TOptions>.AnalyzeTargets(TOptions, IEnumerable<ISkimmer<TContext>>, TContext, IEnumerable<string>)' doesn't nest generic type 'IEnumerable<ISkimmer<TContext>>'."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/AnalyzeCommandBase.cs"
                },
                "region": {
                  "startLine": 476,
                  "snippet": {
                    "text": "#else"
                  }
                },
                "contextRegion": {
                  "startLine": 475,
                  "startColumn": 1,
                  "endLine": 477,
                  "endColumn": 67,
                  "charOffset": 18654,
                  "charLength": 120,
                  "snippet": {
                    "text": "            return SupportedPlatform.Windows;\r\n#else\r\n            if (RuntimeInformation.IsOSPlatform(OSPlatform.Linux))"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2.AnalyzeTargets(!1,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Driver.ISkimmer`1<!0>>,!0,System.Collections.Generic.IEnumerable`1<System.String>)"
            }
          ],
          "properties": {
            "Level": "CriticalError",
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'AnalyzeCommandBase<TContext, TOptions>.AnalyzeTargets(TOptions, IEnumerable<ISkimmer<TContext>>, TContext, IEnumerable<string>)', validate parameter 'skimmers' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/AnalyzeCommandBase.cs"
                },
                "region": {
                  "startLine": 479,
                  "snippet": {
                    "text": "                return SupportedPlatform.Linux;"
                  }
                },
                "contextRegion": {
                  "startLine": 478,
                  "startColumn": 1,
                  "endLine": 480,
                  "endColumn": 14,
                  "charOffset": 18776,
                  "charLength": 77,
                  "snippet": {
                    "text": "            {\r\n                return SupportedPlatform.Linux;\r\n            }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2.AnalyzeTargets(!1,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Driver.ISkimmer`1<!0>>,!0,System.Collections.Generic.IEnumerable`1<System.String>)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "1"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'AnalyzeCommandBase<TContext, TOptions>.AnalyzeTargets(TOptions, IEnumerable<ISkimmer<TContext>>, TContext, IEnumerable<string>)', validate parameter 'targets' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/AnalyzeCommandBase.cs"
                },
                "region": {
                  "startLine": 500,
                  "snippet": {
                    "text": "            IEnumerable<string> targets)"
                  }
                },
                "contextRegion": {
                  "startLine": 499,
                  "startColumn": 1,
                  "endLine": 501,
                  "endColumn": 10,
                  "charOffset": 19413,
                  "charLength": 86,
                  "snippet": {
                    "text": "            TContext rootContext,\r\n            IEnumerable<string> targets)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2.AnalyzeTargets(!1,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Driver.ISkimmer`1<!0>>,!0,System.Collections.Generic.IEnumerable`1<System.String>)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "3"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1500",
          "level": "error",
          "message": {
            "text": "'rootContext', a parameter declared in 'AnalyzeCommandBase<TContext, TOptions>.AnalyzeTargets(TOptions, IEnumerable<ISkimmer<TContext>>, TContext, IEnumerable<string>)', has the same name as an instance field on the type. Change the name of one of these items.",
            "messageId": "Parameter"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/AnalyzeCommandBase.cs"
                },
                "region": {
                  "startLine": 476,
                  "snippet": {
                    "text": "#else"
                  }
                },
                "contextRegion": {
                  "startLine": 475,
                  "startColumn": 1,
                  "endLine": 477,
                  "endColumn": 67,
                  "charOffset": 18654,
                  "charLength": 120,
                  "snippet": {
                    "text": "            return SupportedPlatform.Windows;\r\n#else\r\n            if (RuntimeInformation.IsOSPlatform(OSPlatform.Linux))"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2.AnalyzeTargets(!1,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Driver.ISkimmer`1<!0>>,!0,System.Collections.Generic.IEnumerable`1<System.String>)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "rootContext#Parameter"
          },
          "properties": {
            "Category": "Microsoft.Maintainability",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1026",
          "level": "error",
          "message": {
            "text": "Replace method 'AnalyzeCommandBase<TContext, TOptions>.CreateContext(TOptions, IAnalysisLogger, RuntimeConditions, string)' with an overload that supplies all default arguments."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/AnalyzeCommandBase.cs"
                },
                "region": {
                  "startLine": 267,
                  "snippet": {
                    "text": "        }"
                  }
                },
                "contextRegion": {
                  "startLine": 266,
                  "startColumn": 1,
                  "endLine": 268,
                  "endColumn": 1,
                  "charOffset": 10274,
                  "charLength": 40,
                  "snippet": {
                    "text": "            return targets;\r\n        }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2.CreateContext(!1,Microsoft.CodeAnalysis.Sarif.IAnalysisLogger,Microsoft.CodeAnalysis.Sarif.RuntimeConditions,System.String)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1031",
          "level": "error",
          "message": {
            "text": "Modify 'AnalyzeCommandBase<TContext, TOptions>.CreateSkimmers(TContext)' to catch a more specific exception than 'Exception' or rethrow the exception."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/AnalyzeCommandBase.cs"
                },
                "region": {
                  "startLine": 432,
                  "snippet": {
                    "text": "            }"
                  }
                },
                "contextRegion": {
                  "startLine": 431,
                  "startColumn": 1,
                  "endLine": 433,
                  "endColumn": 10,
                  "charOffset": 17007,
                  "charLength": 63,
                  "snippet": {
                    "text": "                exceptionHandler(ex);\r\n            }\r\n        }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2.CreateSkimmers(!0)"
            }
          ],
          "properties": {
            "Level": "CriticalError",
            "Category": "Microsoft.Design",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1000",
          "level": "error",
          "message": {
            "text": "Remove 'AnalyzeCommandBase<TContext, TOptions>.DefaultPolicyName' from 'AnalyzeCommandBase<TContext, TOptions>' or make it an instance member."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2.DefaultPolicyName"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1006",
          "level": "error",
          "message": {
            "text": "Consider a design where 'AnalyzeCommandBase<TContext, TOptions>.DetermineApplicabilityAndAnalyze(TOptions, IEnumerable<ISkimmer<TContext>>, TContext, string, HashSet<string>)' doesn't nest generic type 'IEnumerable<ISkimmer<TContext>>'."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/AnalyzeCommandBase.cs"
                },
                "region": {
                  "startLine": 515,
                  "snippet": {
                    "text": "                    RuntimeErrors |= RuntimeConditions.RuleWasExplicitlyDisabled;"
                  }
                },
                "contextRegion": {
                  "startLine": 514,
                  "startColumn": 1,
                  "endLine": 516,
                  "endColumn": 18,
                  "charOffset": 20096,
                  "charLength": 182,
                  "snippet": {
                    "text": "                    Warnings.LogRuleExplicitlyDisabled(rootContext, skimmer.Id);\r\n                    RuntimeErrors |= RuntimeConditions.RuleWasExplicitlyDisabled;\r\n                }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2.DetermineApplicabilityAndAnalyze(!1,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Driver.ISkimmer`1<!0>>,!0,System.String,System.Collections.Generic.HashSet`1<System.String>)"
            }
          ],
          "properties": {
            "Level": "CriticalError",
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1500",
          "level": "error",
          "message": {
            "text": "'rootContext', a parameter declared in 'AnalyzeCommandBase<TContext, TOptions>.DetermineApplicabilityAndAnalyze(TOptions, IEnumerable<ISkimmer<TContext>>, TContext, string, HashSet<string>)', has the same name as an instance field on the type. Change the name of one of these items.",
            "messageId": "Parameter"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/AnalyzeCommandBase.cs"
                },
                "region": {
                  "startLine": 515,
                  "snippet": {
                    "text": "                    RuntimeErrors |= RuntimeConditions.RuleWasExplicitlyDisabled;"
                  }
                },
                "contextRegion": {
                  "startLine": 514,
                  "startColumn": 1,
                  "endLine": 516,
                  "endColumn": 18,
                  "charOffset": 20096,
                  "charLength": 182,
                  "snippet": {
                    "text": "                    Warnings.LogRuleExplicitlyDisabled(rootContext, skimmer.Id);\r\n                    RuntimeErrors |= RuntimeConditions.RuleWasExplicitlyDisabled;\r\n                }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2.DetermineApplicabilityAndAnalyze(!1,System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Driver.ISkimmer`1<!0>>,!0,System.String,System.Collections.Generic.HashSet`1<System.String>)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "rootContext#Parameter"
          },
          "properties": {
            "Category": "Microsoft.Maintainability",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1031",
          "level": "error",
          "message": {
            "text": "Modify 'AnalyzeCommandBase<TContext, TOptions>.DetermineApplicabilityForTarget(IEnumerable<ISkimmer<TContext>>, TContext, HashSet<string>)' to catch a more specific exception than 'Exception' or rethrow the exception."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/AnalyzeCommandBase.cs"
                },
                "region": {
                  "startLine": 581,
                  "snippet": {
                    "text": "                    RuntimeErrors |= Errors.LogUnhandledRuleExceptionAnalyzingTarget(disabledSkimmers, context, ex);"
                  }
                },
                "contextRegion": {
                  "startLine": 580,
                  "startColumn": 1,
                  "endLine": 582,
                  "endColumn": 18,
                  "charOffset": 22574,
                  "charLength": 154,
                  "snippet": {
                    "text": "                {\r\n                    RuntimeErrors |= Errors.LogUnhandledRuleExceptionAnalyzingTarget(disabledSkimmers, context, ex);\r\n                }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2.DetermineApplicabilityForTarget(System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Driver.ISkimmer`1<!0>>,!0,System.Collections.Generic.HashSet`1<System.String>)"
            }
          ],
          "properties": {
            "Level": "CriticalError",
            "Category": "Microsoft.Design",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1006",
          "level": "error",
          "message": {
            "text": "Consider a design where 'AnalyzeCommandBase<TContext, TOptions>.DetermineApplicabilityForTarget(IEnumerable<ISkimmer<TContext>>, TContext, HashSet<string>)' doesn't nest generic type 'IEnumerable<ISkimmer<TContext>>'."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/AnalyzeCommandBase.cs"
                },
                "region": {
                  "startLine": 565,
                  "snippet": {
                    "text": "        }"
                  }
                },
                "contextRegion": {
                  "startLine": 564,
                  "startColumn": 1,
                  "endLine": 566,
                  "endColumn": 1,
                  "charOffset": 22041,
                  "charLength": 40,
                  "snippet": {
                    "text": "            return context;\r\n        }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2.DetermineApplicabilityForTarget(System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Driver.ISkimmer`1<!0>>,!0,System.Collections.Generic.HashSet`1<System.String>)"
            }
          ],
          "properties": {
            "Level": "CriticalError",
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1006",
          "level": "error",
          "message": {
            "text": "Consider a design where 'AnalyzeCommandBase<TContext, TOptions>.DetermineApplicabilityForTarget(IEnumerable<ISkimmer<TContext>>, TContext, HashSet<string>)' doesn't nest generic type 'IEnumerable<ISkimmer<TContext>>'."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/AnalyzeCommandBase.cs"
                },
                "region": {
                  "startLine": 565,
                  "snippet": {
                    "text": "        }"
                  }
                },
                "contextRegion": {
                  "startLine": 564,
                  "startColumn": 1,
                  "endLine": 566,
                  "endColumn": 1,
                  "charOffset": 22041,
                  "charLength": 40,
                  "snippet": {
                    "text": "            return context;\r\n        }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2.DetermineApplicabilityForTarget(System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Driver.ISkimmer`1<!0>>,!0,System.Collections.Generic.HashSet`1<System.String>)"
            }
          ],
          "properties": {
            "Level": "CriticalError",
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'AnalyzeCommandBase<TContext, TOptions>.DetermineApplicabilityForTarget(IEnumerable<ISkimmer<TContext>>, TContext, HashSet<string>)', validate parameter 'skimmers' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/AnalyzeCommandBase.cs"
                },
                "region": {
                  "startLine": 568,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 567,
                  "startColumn": 1,
                  "endLine": 569,
                  "endColumn": 61,
                  "charOffset": 22083,
                  "charLength": 211,
                  "snippet": {
                    "text": "        protected virtual void AnalyzeTarget(IEnumerable<ISkimmer<TContext>> skimmers, TContext context, HashSet<string> disabledSkimmers)\r\n        {\r\n            foreach (ISkimmer<TContext> skimmer in skimmers)"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2.DetermineApplicabilityForTarget(System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Driver.ISkimmer`1<!0>>,!0,System.Collections.Generic.HashSet`1<System.String>)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'AnalyzeCommandBase<TContext, TOptions>.DetermineApplicabilityForTarget(IEnumerable<ISkimmer<TContext>>, TContext, HashSet<string>)', validate parameter 'disabledSkimmers' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/AnalyzeCommandBase.cs"
                },
                "region": {
                  "startLine": 570,
                  "snippet": {
                    "text": "            {"
                  }
                },
                "contextRegion": {
                  "startLine": 569,
                  "startColumn": 1,
                  "endLine": 571,
                  "endColumn": 73,
                  "charOffset": 22234,
                  "charLength": 149,
                  "snippet": {
                    "text": "            foreach (ISkimmer<TContext> skimmer in skimmers)\r\n            {\r\n                if (disabledSkimmers.Contains(skimmer.Id)) { continue; }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2.DetermineApplicabilityForTarget(System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Driver.ISkimmer`1<!0>>,!0,System.Collections.Generic.HashSet`1<System.String>)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "2"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1822",
          "level": "warning",
          "message": {
            "text": "The 'this' parameter (or 'Me' in Visual Basic) of 'AnalyzeCommandBase<TContext, TOptions>.GenerateSensitiveTokensList()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/AnalyzeCommandBase.cs"
                },
                "region": {
                  "startLine": 378,
                  "snippet": {
                    "text": "                        {"
                  }
                },
                "contextRegion": {
                  "startLine": 377,
                  "startColumn": 1,
                  "endLine": 379,
                  "endColumn": 70,
                  "charOffset": 14826,
                  "charLength": 126,
                  "snippet": {
                    "text": "                        else\r\n                        {\r\n                            sarifLogger = new SarifOneZeroZeroLogger("
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2.GenerateSensitiveTokensList()"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1822",
          "level": "warning",
          "message": {
            "text": "The 'this' parameter (or 'Me' in Visual Basic) of 'AnalyzeCommandBase<TContext, TOptions>.GetCurrentRunningOS()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/AnalyzeCommandBase.cs"
                },
                "region": {
                  "startLine": 447,
                  "snippet": {
                    "text": "                    if(skimmer.SupportedPlatforms.HasFlag(currentOS))"
                  }
                },
                "contextRegion": {
                  "startLine": 446,
                  "startColumn": 1,
                  "endLine": 448,
                  "endColumn": 22,
                  "charOffset": 17576,
                  "charLength": 111,
                  "snippet": {
                    "text": "                {\r\n                    if(skimmer.SupportedPlatforms.HasFlag(currentOS))\r\n                    {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2.GetCurrentRunningOS()"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2000",
          "level": "warning",
          "message": {
            "text": "In method 'AnalyzeCommandBase<TContext, TOptions>.InitializeLogger(AnalyzeOptionsBase)', object 'logger' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'logger' before all references to it are out of scope.",
            "messageId": "ExceptionEdge"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/AnalyzeCommandBase.cs"
                },
                "region": {
                  "startLine": 213,
                  "snippet": {
                    "text": "            }"
                  }
                },
                "contextRegion": {
                  "startLine": 212,
                  "startColumn": 1,
                  "endLine": 214,
                  "endColumn": 1,
                  "charOffset": 8332,
                  "charLength": 34,
                  "snippet": {
                    "text": "                }\r\n            }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2.InitializeLogger(Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeOptionsBase)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "ExceptionEdge"
          },
          "properties": {
            "Category": "Microsoft.Reliability",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1822",
          "level": "warning",
          "message": {
            "text": "The 'this' parameter (or 'Me' in Visual Basic) of 'AnalyzeCommandBase<TContext, TOptions>.InitializeLogger(AnalyzeOptionsBase)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/AnalyzeCommandBase.cs"
                },
                "region": {
                  "startLine": 212,
                  "snippet": {
                    "text": "                }"
                  }
                },
                "contextRegion": {
                  "startLine": 211,
                  "startColumn": 1,
                  "endLine": 213,
                  "endColumn": 14,
                  "charOffset": 8309,
                  "charLength": 55,
                  "snippet": {
                    "text": "                    }\r\n                }\r\n            }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2.InitializeLogger(Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeOptionsBase)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2000",
          "level": "warning",
          "message": {
            "text": "In method 'AnalyzeCommandBase<TContext, TOptions>.InitializeOutputFile(TOptions, TContext, HashSet<string>)', object 'sarifLogger' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'sarifLogger' before all references to it are out of scope.",
            "messageId": "ExceptionEdge"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/AnalyzeCommandBase.cs"
                },
                "region": {
                  "startLine": 356,
                  "snippet": {
                    "text": ""
                  }
                },
                "contextRegion": {
                  "startLine": 355,
                  "startColumn": 1,
                  "endLine": 357,
                  "endColumn": 100,
                  "charOffset": 13573,
                  "charLength": 185,
                  "snippet": {
                    "text": "                        loggingOptions = analyzeOptions.ConvertToLoggingOptions();\r\n\r\n                        OptionallyEmittedData dataToInsert = analyzeOptions.DataToInsert.ToFlags();"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2.InitializeOutputFile(!1,!0,System.Collections.Generic.HashSet`1<System.String>)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "ExceptionEdge"
          },
          "properties": {
            "Category": "Microsoft.Reliability",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1031",
          "level": "error",
          "message": {
            "text": "Modify 'AnalyzeCommandBase<TContext, TOptions>.InitializeSkimmers(HashSet<ISkimmer<TContext>>, TContext)' to catch a more specific exception than 'Exception' or rethrow the exception."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/AnalyzeCommandBase.cs"
                },
                "region": {
                  "startLine": 632,
                  "snippet": {
                    "text": "        }"
                  }
                },
                "contextRegion": {
                  "startLine": 631,
                  "startColumn": 1,
                  "endLine": 633,
                  "endColumn": 1,
                  "charOffset": 24497,
                  "charLength": 50,
                  "snippet": {
                    "text": "            return candidateSkimmers;\r\n        }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2.InitializeSkimmers(System.Collections.Generic.HashSet`1<Microsoft.CodeAnalysis.Sarif.Driver.ISkimmer`1<!0>>,!0)"
            }
          ],
          "properties": {
            "Level": "CriticalError",
            "Category": "Microsoft.Design",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1006",
          "level": "error",
          "message": {
            "text": "Consider a design where 'AnalyzeCommandBase<TContext, TOptions>.InitializeSkimmers(HashSet<ISkimmer<TContext>>, TContext)' doesn't nest generic type 'HashSet<ISkimmer<TContext>>'."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/AnalyzeCommandBase.cs"
                },
                "region": {
                  "startLine": 620,
                  "snippet": {
                    "text": "                            Notes.LogNotApplicableToSpecifiedTarget(context, reasonForNotAnalyzing);"
                  }
                },
                "contextRegion": {
                  "startLine": 619,
                  "startColumn": 1,
                  "endLine": 621,
                  "endColumn": 35,
                  "charOffset": 24041,
                  "charLength": 163,
                  "snippet": {
                    "text": "                        {\r\n                            Notes.LogNotApplicableToSpecifiedTarget(context, reasonForNotAnalyzing);\r\n                            break;"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2.InitializeSkimmers(System.Collections.Generic.HashSet`1<Microsoft.CodeAnalysis.Sarif.Driver.ISkimmer`1<!0>>,!0)"
            }
          ],
          "properties": {
            "Level": "CriticalError",
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1006",
          "level": "error",
          "message": {
            "text": "Consider a design where 'AnalyzeCommandBase<TContext, TOptions>.InitializeSkimmers(HashSet<ISkimmer<TContext>>, TContext)' doesn't nest generic type 'HashSet<ISkimmer<TContext>>'."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/AnalyzeCommandBase.cs"
                },
                "region": {
                  "startLine": 620,
                  "snippet": {
                    "text": "                            Notes.LogNotApplicableToSpecifiedTarget(context, reasonForNotAnalyzing);"
                  }
                },
                "contextRegion": {
                  "startLine": 619,
                  "startColumn": 1,
                  "endLine": 621,
                  "endColumn": 35,
                  "charOffset": 24041,
                  "charLength": 163,
                  "snippet": {
                    "text": "                        {\r\n                            Notes.LogNotApplicableToSpecifiedTarget(context, reasonForNotAnalyzing);\r\n                            break;"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2.InitializeSkimmers(System.Collections.Generic.HashSet`1<Microsoft.CodeAnalysis.Sarif.Driver.ISkimmer`1<!0>>,!0)"
            }
          ],
          "properties": {
            "Level": "CriticalError",
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'AnalyzeCommandBase<TContext, TOptions>.InitializeSkimmers(HashSet<ISkimmer<TContext>>, TContext)', validate parameter 'skimmers' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/AnalyzeCommandBase.cs"
                },
                "region": {
                  "startLine": 625,
                  "snippet": {
                    "text": "                        {"
                  }
                },
                "contextRegion": {
                  "startLine": 624,
                  "startColumn": 1,
                  "endLine": 626,
                  "endColumn": 60,
                  "charOffset": 24235,
                  "charLength": 163,
                  "snippet": {
                    "text": "                    case AnalysisApplicability.ApplicableToSpecifiedTarget:\r\n                        {\r\n                            candidateSkimmers.Add(skimmer);"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2.InitializeSkimmers(System.Collections.Generic.HashSet`1<Microsoft.CodeAnalysis.Sarif.Driver.ISkimmer`1<!0>>,!0)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'AnalyzeCommandBase<TContext, TOptions>.InvokeCatchingRelevantIOExceptions(Action, Action<Exception>)', validate parameter 'action' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/AnalyzeCommandBase.cs"
                },
                "region": {
                  "startLine": 398,
                  "snippet": {
                    "text": "                );"
                  }
                },
                "contextRegion": {
                  "startLine": 397,
                  "startColumn": 1,
                  "endLine": 399,
                  "endColumn": 14,
                  "charOffset": 15907,
                  "charLength": 56,
                  "snippet": {
                    "text": "                    }\r\n                );\r\n            }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2.InvokeCatchingRelevantIOExceptions(System.Action,System.Action`1<System.Exception>)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'AnalyzeCommandBase<TContext, TOptions>.InvokeCatchingRelevantIOExceptions(Action, Action<Exception>)', validate parameter 'exceptionHandler' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/AnalyzeCommandBase.cs"
                },
                "region": {
                  "startLine": 402,
                  "snippet": {
                    "text": "        private IEnumerable<string> GenerateSensitiveTokensList()"
                  }
                },
                "contextRegion": {
                  "startLine": 401,
                  "startColumn": 1,
                  "endLine": 403,
                  "endColumn": 10,
                  "charOffset": 15976,
                  "charLength": 78,
                  "snippet": {
                    "text": "\r\n        private IEnumerable<string> GenerateSensitiveTokensList()\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2.InvokeCatchingRelevantIOExceptions(System.Action,System.Action`1<System.Exception>)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "1"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1026",
          "level": "error",
          "message": {
            "text": "Replace method 'AnalyzeCommandBase<TContext, TOptions>.LogToolNotification(IAnalysisLogger, string, NotificationLevel, Exception)' with an overload that supplies all default arguments."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/AnalyzeCommandBase.cs"
                },
                "region": {
                  "startLine": 653,
                  "snippet": {
                    "text": "                {"
                  }
                },
                "contextRegion": {
                  "startLine": 652,
                  "startColumn": 1,
                  "endLine": 654,
                  "endColumn": 44,
                  "charOffset": 25400,
                  "charLength": 83,
                  "snippet": {
                    "text": "                try\r\n                {\r\n                    context.Rule = skimmer;"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2.LogToolNotification(Microsoft.CodeAnalysis.Sarif.IAnalysisLogger,System.String,Microsoft.CodeAnalysis.Sarif.NotificationLevel,System.Exception)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'AnalyzeCommandBase<TContext, TOptions>.LogToolNotification(IAnalysisLogger, string, NotificationLevel, Exception)', validate parameter 'logger' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/AnalyzeCommandBase.cs"
                },
                "region": {
                  "startLine": 668,
                  "snippet": {
                    "text": "            }"
                  }
                },
                "contextRegion": {
                  "startLine": 667,
                  "startColumn": 1,
                  "endLine": 669,
                  "endColumn": 1,
                  "charOffset": 25958,
                  "charLength": 66,
                  "snippet": {
                    "text": "                skimmers.Remove(disabledSkimmer);\r\n            }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2.LogToolNotification(Microsoft.CodeAnalysis.Sarif.IAnalysisLogger,System.String,Microsoft.CodeAnalysis.Sarif.NotificationLevel,System.Exception)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1000",
          "level": "error",
          "message": {
            "text": "Remove 'AnalyzeCommandBase<TContext, TOptions>.RaiseUnhandledExceptionInDriverCode' from 'AnalyzeCommandBase<TContext, TOptions>' or make it an instance member."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/AnalyzeCommandBase.cs"
                },
                "region": {
                  "startLine": 29,
                  "snippet": {
                    "text": "        public static bool RaiseUnhandledExceptionInDriverCode { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 28,
                  "startColumn": 1,
                  "endLine": 30,
                  "endColumn": 1,
                  "charOffset": 884,
                  "charLength": 80,
                  "snippet": {
                    "text": "\r\n        public static bool RaiseUnhandledExceptionInDriverCode { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2.RaiseUnhandledExceptionInDriverCode"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1031",
          "level": "error",
          "message": {
            "text": "Modify 'AnalyzeCommandBase<TContext, TOptions>.Run(TOptions)' to catch a more specific exception than 'Exception' or rethrow the exception."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/AnalyzeCommandBase.cs"
                },
                "region": {
                  "startLine": 58,
                  "snippet": {
                    "text": "                }"
                  }
                },
                "contextRegion": {
                  "startLine": 57,
                  "startColumn": 1,
                  "endLine": 59,
                  "endColumn": 64,
                  "charOffset": 1928,
                  "charLength": 136,
                  "snippet": {
                    "text": "                    Analyze(analyzeOptions, logger);\r\n                }\r\n                catch (ExitApplicationException<ExitReason> ex)"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2.Run(!1)"
            }
          ],
          "properties": {
            "Level": "CriticalError",
            "Category": "Microsoft.Design",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1725",
          "level": "error",
          "message": {
            "text": "In member 'AnalyzeCommandBase<TContext, TOptions>.Run(TOptions)', change parameter name 'analyzeOptions' to 'options' in order to match the identifier as it has been declared in 'DriverCommand<TOptions>.Run(TOptions)'."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/AnalyzeCommandBase.cs"
                },
                "region": {
                  "startLine": 43,
                  "snippet": {
                    "text": "            {"
                  }
                },
                "contextRegion": {
                  "startLine": 42,
                  "startColumn": 1,
                  "endLine": 44,
                  "endColumn": 99,
                  "charOffset": 1330,
                  "charLength": 130,
                  "snippet": {
                    "text": "            get\r\n            {\r\n                string currentDirectory = Path.GetDirectoryName(this.GetType().Assembly.Location);"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2.Run(!1)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0#"
          },
          "properties": {
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1026",
          "level": "error",
          "message": {
            "text": "Replace method 'AnalyzeCommandBase<TContext, TOptions>.ThrowExitApplicationException(TContext, ExitReason, Exception)' with an overload that supplies all default arguments."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/AnalyzeCommandBase.cs"
                },
                "region": {
                  "startLine": 610,
                  "snippet": {
                    "text": "                }"
                  }
                },
                "contextRegion": {
                  "startLine": 609,
                  "startColumn": 1,
                  "endLine": 611,
                  "endColumn": 24,
                  "charOffset": 23726,
                  "charLength": 73,
                  "snippet": {
                    "text": "                    continue;\r\n                }\r\n                finally"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2.ThrowExitApplicationException(!0,Microsoft.CodeAnalysis.Sarif.Driver.ExitReason,System.Exception)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1822",
          "level": "warning",
          "message": {
            "text": "The 'this' parameter (or 'Me' in Visual Basic) of 'AnalyzeCommandBase<TContext, TOptions>.ValidateFile(TContext, string, bool?)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/AnalyzeCommandBase.cs"
                },
                "region": {
                  "startLine": 160,
                  "snippet": {
                    "text": "                succeeded &= ValidateFile(context, filePath, shouldExist);"
                  }
                },
                "contextRegion": {
                  "startLine": 159,
                  "startColumn": 1,
                  "endLine": 161,
                  "endColumn": 14,
                  "charOffset": 6437,
                  "charLength": 104,
                  "snippet": {
                    "text": "            {\r\n                succeeded &= ValidateFile(context, filePath, shouldExist);\r\n            }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeCommandBase`2.ValidateFile(!0,System.String,System.Nullable`1<System.Boolean>)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1002",
          "level": "error",
          "message": {
            "text": "Change 'List<string>' in 'ArgumentSplitter.CommandLineToArgvW(string)' to use Collection<T>, ReadOnlyCollection<T> or KeyedCollection<K,V>"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/ArgumentSplitter.cs"
                },
                "region": {
                  "startLine": 26,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 25,
                  "startColumn": 1,
                  "endLine": 27,
                  "endColumn": 93,
                  "charOffset": 843,
                  "charLength": 172,
                  "snippet": {
                    "text": "        public static List<string> CommandLineToArgvW(string input)\r\n        {\r\n            // This function mimics CommandLineToArgvW's escaping behavior, documented here:"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.ArgumentSplitter.CommandLineToArgvW(System.String)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Argv' in member name 'ArgumentSplitter.CommandLineToArgvW(string)' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/ArgumentSplitter.cs"
                },
                "region": {
                  "startLine": 26,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 25,
                  "startColumn": 1,
                  "endLine": 27,
                  "endColumn": 93,
                  "charOffset": 843,
                  "charLength": 172,
                  "snippet": {
                    "text": "        public static List<string> CommandLineToArgvW(string input)\r\n        {\r\n            // This function mimics CommandLineToArgvW's escaping behavior, documented here:"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.ArgumentSplitter.CommandLineToArgvW(System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Argv#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'DefaultDriverOptions.CreateRuleSpecificOption<T>(IRule, PerLanguageOption<T>)', validate parameter 'rule' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/DefaultDriverOptions.cs"
                },
                "region": {
                  "startLine": 39,
                  "snippet": {
                    "text": "            return new PerLanguageOption<T>("
                  }
                },
                "contextRegion": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 40,
                  "endColumn": 57,
                  "charOffset": 1815,
                  "charLength": 203,
                  "snippet": {
                    "text": "            // that is further qualified (by feature name) to be associated with a different check.\r\n            return new PerLanguageOption<T>(\r\n                feature: rule.Id + \".\" + rule.Name.Text,"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.DefaultDriverOptions.CreateRuleSpecificOption`1(Microsoft.CodeAnalysis.Sarif.IRule,Microsoft.CodeAnalysis.Sarif.PerLanguageOption`1<!!0>)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'DefaultDriverOptions.CreateRuleSpecificOption<T>(IRule, PerLanguageOption<T>)', validate parameter 'option' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/DefaultDriverOptions.cs"
                },
                "region": {
                  "startLine": 39,
                  "snippet": {
                    "text": "            return new PerLanguageOption<T>("
                  }
                },
                "contextRegion": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 40,
                  "endColumn": 57,
                  "charOffset": 1815,
                  "charLength": 203,
                  "snippet": {
                    "text": "            // that is further qualified (by feature name) to be associated with a different check.\r\n            return new PerLanguageOption<T>(\r\n                feature: rule.Id + \".\" + rule.Name.Text,"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.DefaultDriverOptions.CreateRuleSpecificOption`1(Microsoft.CodeAnalysis.Sarif.IRule,Microsoft.CodeAnalysis.Sarif.PerLanguageOption`1<!!0>)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "1"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA2211",
          "level": "warning",
          "message": {
            "text": "Consider making 'DefaultDriverOptions.Instance' non-public or a constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.DefaultDriverOptions.Instance"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1710",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.DisposableEnumerable`1"
            }
          ],
          "suppressionStates": ["suppressedInSource"],
          "properties": {
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1000",
          "level": "error",
          "message": {
            "text": "Remove 'DriverCommand<T>.FAILURE' from 'DriverCommand<T>' or make it an instance member."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.DriverCommand`1.FAILURE"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1709",
          "level": "error",
          "message": {
            "text": "Correct the casing of 'FAILURE' in member name 'DriverCommand<T>.FAILURE' by changing it to 'Failure'.",
            "messageId": "Member"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.DriverCommand`1.FAILURE"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "FAILURE#Member"
          },
          "properties": {
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1000",
          "level": "error",
          "message": {
            "text": "Remove 'DriverCommand<T>.SUCCESS' from 'DriverCommand<T>' or make it an instance member."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.DriverCommand`1.SUCCESS"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1709",
          "level": "error",
          "message": {
            "text": "Correct the casing of 'SUCCESS' in member name 'DriverCommand<T>.SUCCESS' by changing it to 'Success'.",
            "messageId": "Member"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.DriverCommand`1.SUCCESS"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "SUCCESS#Member"
          },
          "properties": {
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'DriverExtensionMethods.ConvertToLoggingOptions(this AnalyzeOptionsBase)', validate parameter 'analyzeOptions' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/DriverExtensionMethods.cs"
                },
                "region": {
                  "startLine": 14,
                  "snippet": {
                    "text": "            if (analyzeOptions.Verbose) { loggingOptions |= LoggingOptions.Verbose; }"
                  }
                },
                "contextRegion": {
                  "startLine": 13,
                  "startColumn": 1,
                  "endLine": 15,
                  "endColumn": 94,
                  "charOffset": 499,
                  "charLength": 182,
                  "snippet": {
                    "text": "\r\n            if (analyzeOptions.Verbose) { loggingOptions |= LoggingOptions.Verbose; }\r\n            if (analyzeOptions.PrettyPrint) { loggingOptions |= LoggingOptions.PrettyPrint; }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.DriverExtensionMethods.ConvertToLoggingOptions(Microsoft.CodeAnalysis.Sarif.Driver.AnalyzeOptionsBase)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1811",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.DriverResources..ctor()"
            }
          ],
          "suppressionStates": ["suppressedInSource"],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2000",
          "level": "warning",
          "message": {
            "text": "In method 'DriverUtilities.GetExports<T>(IEnumerable<Assembly>)', call System.IDisposable.Dispose on object 'container' before all references to it are out of scope.",
            "messageId": "NonExceptionEdge"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/CompositionUtilities.cs"
                },
                "region": {
                  "startLine": 16,
                  "snippet": {
                    "text": "            var container = CreateCompositionContainer<T>(assemblies);"
                  }
                },
                "contextRegion": {
                  "startLine": 15,
                  "startColumn": 1,
                  "endLine": 17,
                  "endColumn": 65,
                  "charOffset": 517,
                  "charLength": 147,
                  "snippet": {
                    "text": "        {\r\n            var container = CreateCompositionContainer<T>(assemblies);\r\n            return container.GetExports<T>().ToImmutableArray();"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.DriverUtilities.GetExports`1(System.Collections.Generic.IEnumerable`1<System.Reflection.Assembly>)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "NonExceptionEdge"
          },
          "properties": {
            "Category": "Microsoft.Reliability",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1060",
          "level": "warning",
          "message": {
            "text": "Because it is a P/Invoke method, 'EntryPointUtilities.CommandLineToArgvW(string, out int)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.EntryPointUtilities.CommandLineToArgvW(System.String,System.Int32&)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'EntryPointUtilities.GenerateArguments(string[], IFileSystem, IEnvironmentVariables)', validate parameter 'args' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/EntryPointUtilities.cs"
                },
                "region": {
                  "startLine": 19,
                  "snippet": {
                    "text": "            foreach (string argument in args)"
                  }
                },
                "contextRegion": {
                  "startLine": 18,
                  "startColumn": 1,
                  "endLine": 20,
                  "endColumn": 14,
                  "charOffset": 598,
                  "charLength": 62,
                  "snippet": {
                    "text": "\r\n            foreach (string argument in args)\r\n            {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.EntryPointUtilities.GenerateArguments(System.String[],Microsoft.CodeAnalysis.Sarif.IFileSystem,Microsoft.CodeAnalysis.Sarif.Driver.IEnvironmentVariables)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'EntryPointUtilities.GenerateArguments(string[], IFileSystem, IEnvironmentVariables)', validate parameter 'fileSystem' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/EntryPointUtilities.cs"
                },
                "region": {
                  "startLine": 31,
                  "snippet": {
                    "text": "                responseFile = fileSystem.GetFullPath(responseFile);"
                  }
                },
                "contextRegion": {
                  "startLine": 30,
                  "startColumn": 1,
                  "endLine": 32,
                  "endColumn": 1,
                  "charOffset": 919,
                  "charLength": 165,
                  "snippet": {
                    "text": "                responseFile = environmentVariables.ExpandEnvironmentVariables(responseFile);\r\n                responseFile = fileSystem.GetFullPath(responseFile);\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.EntryPointUtilities.GenerateArguments(System.String[],Microsoft.CodeAnalysis.Sarif.IFileSystem,Microsoft.CodeAnalysis.Sarif.Driver.IEnvironmentVariables)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "1"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'EntryPointUtilities.GenerateArguments(string[], IFileSystem, IEnvironmentVariables)', validate parameter 'environmentVariables' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/EntryPointUtilities.cs"
                },
                "region": {
                  "startLine": 30,
                  "snippet": {
                    "text": "                responseFile = environmentVariables.ExpandEnvironmentVariables(responseFile);"
                  }
                },
                "contextRegion": {
                  "startLine": 29,
                  "startColumn": 1,
                  "endLine": 31,
                  "endColumn": 69,
                  "charOffset": 917,
                  "charLength": 165,
                  "snippet": {
                    "text": "\r\n                responseFile = environmentVariables.ExpandEnvironmentVariables(responseFile);\r\n                responseFile = fileSystem.GetFullPath(responseFile);"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.EntryPointUtilities.GenerateArguments(System.String[],Microsoft.CodeAnalysis.Sarif.IFileSystem,Microsoft.CodeAnalysis.Sarif.Driver.IEnvironmentVariables)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "2"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1060",
          "level": "warning",
          "message": {
            "text": "Because it is a P/Invoke method, 'EntryPointUtilities.LocalFree(IntPtr)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.EntryPointUtilities.LocalFree(System.IntPtr)"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1062",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.EnumerableExtensions.LexicographicalCompare`1(System.Collections.Generic.IEnumerable`1<!!0>,System.Collections.Generic.IEnumerable`1<!!0>,System.Collections.Generic.IComparer`1<!!0>)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "suppressionStates": ["suppressedInSource"],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.EnumerableExtensions.LexicographicalCompare`1(System.Collections.Generic.IEnumerable`1<!!0>,System.Collections.Generic.IEnumerable`1<!!0>,System.Collections.Generic.IComparer`1<!!0>)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "1"
          },
          "suppressionStates": ["suppressedInSource"],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1045",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.EnumerableExtensions.RemoveIf`1(!!0[]&,System.Func`2<!!0,System.Boolean>)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0#"
          },
          "suppressionStates": ["suppressedInSource"],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1062",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.EnumerableExtensions.RemoveIf`1(!!0[]&,System.Func`2<!!0,System.Boolean>)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "suppressionStates": ["suppressedInSource"],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1811",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.ExceptionStrings..ctor()"
            }
          ],
          "suppressionStates": ["suppressedInSource"],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1032",
          "level": "error",
          "message": {
            "text": "Add the following constructor to 'ExitApplicationException<T>': protected ExitApplicationException`1(SerializationInfo, StreamingContext).",
            "messageId": "MissingConstructor"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.ExitApplicationException`1"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "MissingConstructor"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2237",
          "level": "error",
          "message": {
            "text": "Add [Serializable] to 'ExitApplicationException<T>' as this type implements ISerializable."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.ExitApplicationException`1"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1303",
          "level": "warning",
          "message": {
            "text": "Method 'ExportConfigurationCommandBase.Run(ExportConfigurationOptions)' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: \"Configuration file saved to: \".",
            "messageId": "KnownValue"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/ExportConfigurationCommandBase.cs"
                },
                "region": {
                  "startLine": 78,
                  "snippet": {
                    "text": "                Console.WriteLine(\"Configuration file saved to: \" + Path.GetFullPath(exportOptions.OutputFilePath));"
                  }
                },
                "contextRegion": {
                  "startLine": 77,
                  "startColumn": 1,
                  "endLine": 79,
                  "endColumn": 1,
                  "charOffset": 3420,
                  "charLength": 120,
                  "snippet": {
                    "text": "\r\n                Console.WriteLine(\"Configuration file saved to: \" + Path.GetFullPath(exportOptions.OutputFilePath));\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.ExportConfigurationCommandBase.Run(Microsoft.CodeAnalysis.Sarif.Driver.ExportConfigurationOptions)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.Console.WriteLine(System.String)#KnownValue"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1031",
          "level": "error",
          "message": {
            "text": "Modify 'ExportConfigurationCommandBase.Run(ExportConfigurationOptions)' to catch a more specific exception than 'Exception' or rethrow the exception."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/ExportConfigurationCommandBase.cs"
                },
                "region": {
                  "startLine": 82,
                  "snippet": {
                    "text": "            catch (Exception ex)"
                  }
                },
                "contextRegion": {
                  "startLine": 81,
                  "startColumn": 1,
                  "endLine": 83,
                  "endColumn": 14,
                  "charOffset": 3577,
                  "charLength": 62,
                  "snippet": {
                    "text": "            }\r\n            catch (Exception ex)\r\n            {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.ExportConfigurationCommandBase.Run(Microsoft.CodeAnalysis.Sarif.Driver.ExportConfigurationOptions)"
            }
          ],
          "properties": {
            "Level": "CriticalError",
            "Category": "Microsoft.Design",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1725",
          "level": "error",
          "message": {
            "text": "In member 'ExportConfigurationCommandBase.Run(ExportConfigurationOptions)', change parameter name 'exportOptions' to 'options' in order to match the identifier as it has been declared in 'DriverCommand<ExportConfigurationOptions>.Run(ExportConfigurationOptions)'."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/ExportConfigurationCommandBase.cs"
                },
                "region": {
                  "startLine": 14,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 13,
                  "startColumn": 1,
                  "endLine": 15,
                  "endColumn": 34,
                  "charOffset": 427,
                  "charLength": 119,
                  "snippet": {
                    "text": "        public override int Run(ExportConfigurationOptions exportOptions)\r\n        {\r\n            int result = FAILURE;"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.ExportConfigurationCommandBase.Run(Microsoft.CodeAnalysis.Sarif.Driver.ExportConfigurationOptions)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0#"
          },
          "properties": {
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'ExportConfigurationCommandBase.Run(ExportConfigurationOptions)', validate parameter 'exportOptions' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/ExportConfigurationCommandBase.cs"
                },
                "region": {
                  "startLine": 59,
                  "snippet": {
                    "text": "                string extension = Path.GetExtension(exportOptions.OutputFilePath);"
                  }
                },
                "contextRegion": {
                  "startLine": 58,
                  "startColumn": 1,
                  "endLine": 60,
                  "endColumn": 1,
                  "charOffset": 2621,
                  "charLength": 87,
                  "snippet": {
                    "text": "\r\n                string extension = Path.GetExtension(exportOptions.OutputFilePath);\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.ExportConfigurationCommandBase.Run(Microsoft.CodeAnalysis.Sarif.Driver.ExportConfigurationOptions)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1822",
          "level": "warning",
          "message": {
            "text": "The 'this' parameter (or 'Me' in Visual Basic) of 'ExportRulesMetadataCommandBase.GetIdIntegerSuffix(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/ExportRulesMetadataCommandBase.cs"
                },
                "region": {
                  "startLine": 166,
                  "snippet": {
                    "text": "            int alphaCount = 0;"
                  }
                },
                "contextRegion": {
                  "startLine": 165,
                  "startColumn": 1,
                  "endLine": 167,
                  "endColumn": 1,
                  "charOffset": 6032,
                  "charLength": 44,
                  "snippet": {
                    "text": "        {\r\n            int alphaCount = 0;\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.ExportRulesMetadataCommandBase.GetIdIntegerSuffix(System.String)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1305",
          "level": "error",
          "message": {
            "text": "Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'ExportRulesMetadataCommandBase.GetIdIntegerSuffix(string)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.",
            "messageId": "IFormatProviderAlternate"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/ExportRulesMetadataCommandBase.cs"
                },
                "region": {
                  "startLine": 178,
                  "snippet": {
                    "text": "        }"
                  }
                },
                "contextRegion": {
                  "startLine": 177,
                  "startColumn": 1,
                  "endLine": 179,
                  "endColumn": 6,
                  "charOffset": 6313,
                  "charLength": 75,
                  "snippet": {
                    "text": "            return Int32.Parse(id.Substring(alphaCount));\r\n        }\r\n    }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.ExportRulesMetadataCommandBase.GetIdIntegerSuffix(System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.Int32.Parse(System.String)#IFormatProviderAlternate"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1506",
          "level": "warning",
          "message": {
            "text": "'ExportRulesMetadataCommandBase.OutputSarifRulesMetada(string, ImmutableArray<IRule>)' is coupled with 31 different types from 10 different namespaces. Rewrite or refactor the method to decrease its class coupling, or consider moving the method to one of the other types it is tightly coupled with. A class coupling above 40 indicates poor maintainability, a class coupling between 40 and 30 indicates moderate maintainability, and a class coupling below 30 indicates good maintainability.",
            "messageId": "Method"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/ExportRulesMetadataCommandBase.cs"
                },
                "region": {
                  "startLine": 103,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 102,
                  "startColumn": 1,
                  "endLine": 104,
                  "endColumn": 38,
                  "charOffset": 3802,
                  "charLength": 148,
                  "snippet": {
                    "text": "        private void OutputSarifRulesMetada(string outputFilePath, ImmutableArray<IRule> skimmers)\r\n        {\r\n            var log = new SarifLog();"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.ExportRulesMetadataCommandBase.OutputSarifRulesMetada(System.String,System.Collections.Immutable.ImmutableArray`1<Microsoft.CodeAnalysis.Sarif.IRule>)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Method"
          },
          "properties": {
            "Category": "Microsoft.Maintainability",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1303",
          "level": "warning",
          "message": {
            "text": "Method 'ExportRulesMetadataCommandBase.Run(ExportRulesMetadataOptions)' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: \"SARIF, SonarQube,  rules metadata exported to: \".",
            "messageId": "KnownValue"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/ExportRulesMetadataCommandBase.cs"
                },
                "region": {
                  "startLine": 54,
                  "snippet": {
                    "text": "                Console.WriteLine(format + \" rules metadata exported to: \" + Path.GetFullPath(outputFilePath));"
                  }
                },
                "contextRegion": {
                  "startLine": 53,
                  "startColumn": 1,
                  "endLine": 55,
                  "endColumn": 14,
                  "charOffset": 1765,
                  "charLength": 161,
                  "snippet": {
                    "text": "                result = SUCCESS;\r\n                Console.WriteLine(format + \" rules metadata exported to: \" + Path.GetFullPath(outputFilePath));\r\n            }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.ExportRulesMetadataCommandBase.Run(Microsoft.CodeAnalysis.Sarif.Driver.ExportRulesMetadataOptions)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.Console.WriteLine(System.String)#KnownValue"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1031",
          "level": "error",
          "message": {
            "text": "Modify 'ExportRulesMetadataCommandBase.Run(ExportRulesMetadataOptions)' to catch a more specific exception than 'Exception' or rethrow the exception."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/ExportRulesMetadataCommandBase.cs"
                },
                "region": {
                  "startLine": 56,
                  "snippet": {
                    "text": "            catch (Exception ex)"
                  }
                },
                "contextRegion": {
                  "startLine": 55,
                  "startColumn": 1,
                  "endLine": 57,
                  "endColumn": 14,
                  "charOffset": 1913,
                  "charLength": 62,
                  "snippet": {
                    "text": "            }\r\n            catch (Exception ex)\r\n            {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.ExportRulesMetadataCommandBase.Run(Microsoft.CodeAnalysis.Sarif.Driver.ExportRulesMetadataOptions)"
            }
          ],
          "properties": {
            "Level": "CriticalError",
            "Category": "Microsoft.Design",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA2204",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of the unrecognized token 'SonarQube' in the literal '\"SonarQube\"'."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/ExportRulesMetadataCommandBase.cs"
                },
                "region": {
                  "startLine": 54,
                  "snippet": {
                    "text": "                Console.WriteLine(format + \" rules metadata exported to: \" + Path.GetFullPath(outputFilePath));"
                  }
                },
                "contextRegion": {
                  "startLine": 53,
                  "startColumn": 1,
                  "endLine": 55,
                  "endColumn": 14,
                  "charOffset": 1765,
                  "charLength": 161,
                  "snippet": {
                    "text": "                result = SUCCESS;\r\n                Console.WriteLine(format + \" rules metadata exported to: \" + Path.GetFullPath(outputFilePath));\r\n            }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.ExportRulesMetadataCommandBase.Run(Microsoft.CodeAnalysis.Sarif.Driver.ExportRulesMetadataOptions)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "SonarQube"
          },
          "properties": {
            "Category": "Microsoft.Naming",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1725",
          "level": "error",
          "message": {
            "text": "In member 'ExportRulesMetadataCommandBase.Run(ExportRulesMetadataOptions)', change parameter name 'exportOptions' to 'options' in order to match the identifier as it has been declared in 'DriverCommand<ExportRulesMetadataOptions>.Run(ExportRulesMetadataOptions)'."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/ExportRulesMetadataCommandBase.cs"
                },
                "region": {
                  "startLine": 19,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 18,
                  "startColumn": 1,
                  "endLine": 20,
                  "endColumn": 34,
                  "charOffset": 520,
                  "charLength": 119,
                  "snippet": {
                    "text": "        public override int Run(ExportRulesMetadataOptions exportOptions)\r\n        {\r\n            int result = FAILURE;"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.ExportRulesMetadataCommandBase.Run(Microsoft.CodeAnalysis.Sarif.Driver.ExportRulesMetadataOptions)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0#"
          },
          "properties": {
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'ExportRulesMetadataCommandBase.Run(ExportRulesMetadataOptions)', validate parameter 'exportOptions' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/ExportRulesMetadataCommandBase.cs"
                },
                "region": {
                  "startLine": 27,
                  "snippet": {
                    "text": "                string outputFilePath = exportOptions.OutputFilePath;"
                  }
                },
                "contextRegion": {
                  "startLine": 26,
                  "startColumn": 1,
                  "endLine": 28,
                  "endColumn": 70,
                  "charOffset": 787,
                  "charLength": 177,
                  "snippet": {
                    "text": "                string format = \"\";\r\n                string outputFilePath = exportOptions.OutputFilePath;\r\n                string extension = Path.GetExtension(outputFilePath);"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.ExportRulesMetadataCommandBase.Run(Microsoft.CodeAnalysis.Sarif.Driver.ExportRulesMetadataOptions)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1026",
          "level": "error",
          "message": {
            "text": "Replace method 'FileSpecifier.FileSpecifier(string, bool)' with an overload that supplies all default arguments."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/FileSpecifier.cs"
                },
                "region": {
                  "startLine": 12,
                  "snippet": {
                    "text": "        private readonly IFileSystem _fileSystem;"
                  }
                },
                "contextRegion": {
                  "startLine": 11,
                  "startColumn": 1,
                  "endLine": 13,
                  "endColumn": 1,
                  "charOffset": 307,
                  "charLength": 58,
                  "snippet": {
                    "text": "    {\r\n        private readonly IFileSystem _fileSystem;\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.FileSpecifier..ctor(System.String,System.Boolean)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1021",
          "level": "warning",
          "message": {
            "text": "Consider a design that does not require that 'reasonIfNotApplicable' be an out parameter."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.ISkimmer`1.CanAnalyze(!0,System.String&)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "1#"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1062",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.MurmurHash.AddRange(System.Collections.Generic.IEnumerable`1<System.Int32>)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "suppressionStates": ["suppressedInSource"],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.MurmurHash.AddRange(System.Collections.IEnumerable)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "suppressionStates": ["suppressedInSource"],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.MurmurHash.AddRange(System.Int32[])"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "suppressionStates": ["suppressedInSource"],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1702",
          "level": "error",
          "message": {
            "text": "The compound word 'PlugIn' in type name 'PlugInDriverCommand<T>' exists as a discrete term. If your usage is intended to be single word, case it as 'Plugin'.",
            "messageId": "TypeShouldBeDiscreteTerm"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.PlugInDriverCommand`1"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "PlugIn#TypeShouldBeDiscreteTerm"
          },
          "properties": {
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1702",
          "level": "error",
          "message": {
            "text": "The compound word 'PlugIn' in member name 'PlugInDriverCommand<T>.DefaultPlugInAssemblies' exists as a discrete term. If your usage is intended to be single word, case it as 'Plugin' or strip the first token entirely if it represents any sort of Hungarian notation.",
            "messageId": "MemberShouldBeDiscreteTerm"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/PlugInDriverCommand.cs"
                },
                "region": {
                  "startLine": 14,
                  "snippet": {
                    "text": "            get { return null; }"
                  }
                },
                "contextRegion": {
                  "startLine": 13,
                  "startColumn": 1,
                  "endLine": 15,
                  "endColumn": 59,
                  "charOffset": 429,
                  "charLength": 103,
                  "snippet": {
                    "text": "        {\r\n            get { return null; }\r\n            set { throw new InvalidOperationException(); }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.PlugInDriverCommand`1.DefaultPlugInAssemblies"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "PlugIn#MemberShouldBeDiscreteTerm"
          },
          "properties": {
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2104",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.ReferenceEqualityComparer`1.Instance"
            }
          ],
          "suppressionStates": ["suppressedInSource"],
          "properties": {
            "Category": "Microsoft.Security",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1000",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.ReferenceEqualityComparer`1.Instance"
            }
          ],
          "suppressionStates": ["suppressedInSource"],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2215",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.RentalStream.Dispose(System.Boolean)"
            }
          ],
          "suppressionStates": ["suppressedInSource"],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1008",
          "level": "error",
          "message": {
            "text": "In enum 'RuleEnabledState', change the name of 'RuleEnabledState.Default' to 'None'.",
            "messageId": "FlagsRename"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.RuleEnabledState"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "FlagsRename"
          },
          "properties": {
            "Level": "CriticalError",
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1714",
          "level": "error",
          "message": {
            "text": "If enumeration name 'RuleEnabledState' is singular, change it to a plural form."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.RuleEnabledState"
            }
          ],
          "properties": {
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1012",
          "level": "warning",
          "message": {
            "text": "Change the accessibility of all public constructors in 'SkimmerBase<TContext>' to protected."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.SkimmerBase`1"
            }
          ],
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Design",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1303",
          "level": "warning",
          "message": {
            "text": "Method 'StatisticsLogger.AnalysisStopped(RuntimeConditions)' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: \"# invalid targets: \".",
            "messageId": "KnownValue"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/StatisticsLogger.cs"
                },
                "region": {
                  "startLine": 28,
                  "snippet": {
                    "text": "            Console.WriteLine(\"# invalid targets: \" + _invalidTargetsCount.ToString());"
                  }
                },
                "contextRegion": {
                  "startLine": 27,
                  "startColumn": 1,
                  "endLine": 29,
                  "endColumn": 81,
                  "charOffset": 720,
                  "charLength": 249,
                  "snippet": {
                    "text": "            Console.WriteLine(\"# valid targets: \" + _targetsCount.ToString());\r\n            Console.WriteLine(\"# invalid targets: \" + _invalidTargetsCount.ToString());\r\n            Console.WriteLine(\"Time elapsed: \" + _stopwatch.Elapsed.ToString());"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.StatisticsLogger.AnalysisStopped(Microsoft.CodeAnalysis.Sarif.RuntimeConditions)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.Console.WriteLine(System.String)#KnownValue"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1303",
          "level": "warning",
          "message": {
            "text": "Method 'StatisticsLogger.AnalysisStopped(RuntimeConditions)' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: \"# valid targets: \".",
            "messageId": "KnownValue"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/StatisticsLogger.cs"
                },
                "region": {
                  "startLine": 27,
                  "snippet": {
                    "text": "            Console.WriteLine(\"# valid targets: \" + _targetsCount.ToString());"
                  }
                },
                "contextRegion": {
                  "startLine": 26,
                  "startColumn": 1,
                  "endLine": 28,
                  "endColumn": 88,
                  "charOffset": 686,
                  "charLength": 201,
                  "snippet": {
                    "text": "            Console.WriteLine();\r\n            Console.WriteLine(\"# valid targets: \" + _targetsCount.ToString());\r\n            Console.WriteLine(\"# invalid targets: \" + _invalidTargetsCount.ToString());"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.StatisticsLogger.AnalysisStopped(Microsoft.CodeAnalysis.Sarif.RuntimeConditions)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.Console.WriteLine(System.String)#KnownValue"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1303",
          "level": "warning",
          "message": {
            "text": "Method 'StatisticsLogger.AnalysisStopped(RuntimeConditions)' passes a literal string as parameter 'value' of a call to 'Console.WriteLine(string)'. Retrieve the following string(s) from a resource table instead: \"Time elapsed: \".",
            "messageId": "KnownValue"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/StatisticsLogger.cs"
                },
                "region": {
                  "startLine": 29,
                  "snippet": {
                    "text": "            Console.WriteLine(\"Time elapsed: \" + _stopwatch.Elapsed.ToString());"
                  }
                },
                "contextRegion": {
                  "startLine": 28,
                  "startColumn": 1,
                  "endLine": 30,
                  "endColumn": 10,
                  "charOffset": 800,
                  "charLength": 180,
                  "snippet": {
                    "text": "            Console.WriteLine(\"# invalid targets: \" + _invalidTargetsCount.ToString());\r\n            Console.WriteLine(\"Time elapsed: \" + _stopwatch.Elapsed.ToString());\r\n        }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.StatisticsLogger.AnalysisStopped(Microsoft.CodeAnalysis.Sarif.RuntimeConditions)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.Console.WriteLine(System.String)#KnownValue"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1305",
          "level": "error",
          "message": {
            "text": "Because the behavior of 'long.ToString()' could vary based on the current user's locale settings, replace this call in 'StatisticsLogger.AnalysisStopped(RuntimeConditions)' with a call to 'long.ToString(IFormatProvider)'. If the result of 'long.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.",
            "messageId": "IFormatProviderAlternateString"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/StatisticsLogger.cs"
                },
                "region": {
                  "startLine": 27,
                  "snippet": {
                    "text": "            Console.WriteLine(\"# valid targets: \" + _targetsCount.ToString());"
                  }
                },
                "contextRegion": {
                  "startLine": 26,
                  "startColumn": 1,
                  "endLine": 28,
                  "endColumn": 88,
                  "charOffset": 686,
                  "charLength": 201,
                  "snippet": {
                    "text": "            Console.WriteLine();\r\n            Console.WriteLine(\"# valid targets: \" + _targetsCount.ToString());\r\n            Console.WriteLine(\"# invalid targets: \" + _invalidTargetsCount.ToString());"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.StatisticsLogger.AnalysisStopped(Microsoft.CodeAnalysis.Sarif.RuntimeConditions)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.Int64.ToString#IFormatProviderAlternateString"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1305",
          "level": "error",
          "message": {
            "text": "Because the behavior of 'long.ToString()' could vary based on the current user's locale settings, replace this call in 'StatisticsLogger.AnalysisStopped(RuntimeConditions)' with a call to 'long.ToString(IFormatProvider)'. If the result of 'long.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.",
            "messageId": "IFormatProviderAlternateString"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/StatisticsLogger.cs"
                },
                "region": {
                  "startLine": 28,
                  "snippet": {
                    "text": "            Console.WriteLine(\"# invalid targets: \" + _invalidTargetsCount.ToString());"
                  }
                },
                "contextRegion": {
                  "startLine": 27,
                  "startColumn": 1,
                  "endLine": 29,
                  "endColumn": 81,
                  "charOffset": 720,
                  "charLength": 249,
                  "snippet": {
                    "text": "            Console.WriteLine(\"# valid targets: \" + _targetsCount.ToString());\r\n            Console.WriteLine(\"# invalid targets: \" + _invalidTargetsCount.ToString());\r\n            Console.WriteLine(\"Time elapsed: \" + _stopwatch.Elapsed.ToString());"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.StatisticsLogger.AnalysisStopped(Microsoft.CodeAnalysis.Sarif.RuntimeConditions)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.Int64.ToString#IFormatProviderAlternateString"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1822",
          "level": "warning",
          "message": {
            "text": "The 'this' parameter (or 'Me' in Visual Basic) of 'StatisticsLogger.Dispose()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/StatisticsLogger.cs"
                },
                "region": {
                  "startLine": 80,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 79,
                  "startColumn": 1,
                  "endLine": 81,
                  "endColumn": 10,
                  "charOffset": 2161,
                  "charLength": 51,
                  "snippet": {
                    "text": "        public void Dispose()\r\n        {\r\n        }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.StatisticsLogger.Dispose()"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'StatisticsLogger.Log(IRule, Result)', validate parameter 'result' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/StatisticsLogger.cs"
                },
                "region": {
                  "startLine": 39,
                  "snippet": {
                    "text": "            Log(result.Level, result.RuleId);"
                  }
                },
                "contextRegion": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 40,
                  "endColumn": 10,
                  "charOffset": 1153,
                  "charLength": 67,
                  "snippet": {
                    "text": "        {\r\n            Log(result.Level, result.RuleId);\r\n        }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.StatisticsLogger.Log(Microsoft.CodeAnalysis.Sarif.IRule,Microsoft.CodeAnalysis.Sarif.Result)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "1"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1822",
          "level": "warning",
          "message": {
            "text": "The 'this' parameter (or 'Me' in Visual Basic) of 'StatisticsLogger.Log(ResultLevel, string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/StatisticsLogger.cs"
                },
                "region": {
                  "startLine": 59,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 58,
                  "startColumn": 1,
                  "endLine": 60,
                  "endColumn": 27,
                  "charOffset": 1641,
                  "charLength": 96,
                  "snippet": {
                    "text": "        public void Log(ResultLevel level, string ruleId)\r\n        {\r\n            switch (level)"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.StatisticsLogger.Log(Microsoft.CodeAnalysis.Sarif.ResultLevel,System.String)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1801",
          "level": "warning",
          "message": {
            "text": "Parameter 'ruleId' of 'StatisticsLogger.Log(ResultLevel, string)' is never used. Remove the parameter or use it in the method body."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/StatisticsLogger.cs"
                },
                "region": {
                  "startLine": 59,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 58,
                  "startColumn": 1,
                  "endLine": 60,
                  "endColumn": 27,
                  "charOffset": 1641,
                  "charLength": 96,
                  "snippet": {
                    "text": "        public void Log(ResultLevel level, string ruleId)\r\n        {\r\n            switch (level)"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.StatisticsLogger.Log(Microsoft.CodeAnalysis.Sarif.ResultLevel,System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "ruleId"
          },
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'StatisticsLogger.LogConfigurationNotification(Notification)', validate parameter 'notification' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/Sdk/StatisticsLogger.cs"
                },
                "region": {
                  "startLine": 48,
                  "snippet": {
                    "text": "            if (notification.Id == Warnings.Wrn997_InvalidTarget)"
                  }
                },
                "contextRegion": {
                  "startLine": 47,
                  "startColumn": 1,
                  "endLine": 49,
                  "endColumn": 14,
                  "charOffset": 1393,
                  "charLength": 91,
                  "snippet": {
                    "text": "        {\r\n            if (notification.Id == Warnings.Wrn997_InvalidTarget)\r\n            {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.StatisticsLogger.LogConfigurationNotification(Microsoft.CodeAnalysis.Sarif.Notification)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.TempFile..ctor(System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "suppressionStates": ["suppressedInSource"],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysis.Sarif.Driver.XmlWriterExtensions.WriteElementInt(System.Xml.XmlWriter,System.String,System.Int32)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "suppressionStates": ["suppressedInSource"],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1804",
          "level": "warning",
          "message": {
            "text": "'FileStreamExtensionMethods.ReadString(this FileStream, int)' declares a variable, 'byteRead', of type 'int', which is never used or is only assigned to. Use this variable or remove it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/FileStreamExtensionMethods.cs"
                },
                "region": {
                  "startLine": 18,
                  "snippet": {
                    "text": "            while ((byteRead = stream.ReadByte()) > 0)"
                  }
                },
                "contextRegion": {
                  "startLine": 17,
                  "startColumn": 1,
                  "endLine": 19,
                  "endColumn": 14,
                  "charOffset": 491,
                  "charLength": 71,
                  "snippet": {
                    "text": "\r\n            while ((byteRead = stream.ReadByte()) > 0)\r\n            {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysisDriver.FileStreamExtensionMethods.ReadString(System.IO.FileStream,System.Int32)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "byteRead"
          },
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'FileStreamExtensionMethods.ReadString(this FileStream, int)', validate parameter 'stream' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/FileStreamExtensionMethods.cs"
                },
                "region": {
                  "startLine": 13,
                  "snippet": {
                    "text": "            long startPosition = stream.Position;"
                  }
                },
                "contextRegion": {
                  "startLine": 12,
                  "startColumn": 1,
                  "endLine": 14,
                  "endColumn": 1,
                  "charOffset": 368,
                  "charLength": 62,
                  "snippet": {
                    "text": "        {\r\n            long startPosition = stream.Position;\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysisDriver.FileStreamExtensionMethods.ReadString(System.IO.FileStream,System.Int32)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1011",
          "level": "error",
          "message": {
            "text": "Consider changing the type of parameter 'stream' in 'FileStreamExtensionMethods.ReadToArray(this FileStream, int)' from 'FileStream' to its base type 'Stream'. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/FileStreamExtensionMethods.cs"
                },
                "region": {
                  "startLine": 51,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 50,
                  "startColumn": 1,
                  "endLine": 52,
                  "endColumn": 45,
                  "charOffset": 1468,
                  "charLength": 133,
                  "snippet": {
                    "text": "        public static byte[] ReadToArray(this FileStream stream, int length)\r\n        {\r\n            byte[] bytes = new byte[length];"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysisDriver.FileStreamExtensionMethods.ReadToArray(System.IO.FileStream,System.Int32)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'FileStreamExtensionMethods.ReadToArray(this FileStream, int)', validate parameter 'stream' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Driver.dll",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Driver/FileStreamExtensionMethods.cs"
                },
                "region": {
                  "startLine": 53,
                  "snippet": {
                    "text": "            int dataRead = stream.Read(bytes, 0, length);"
                  }
                },
                "contextRegion": {
                  "startLine": 52,
                  "startColumn": 1,
                  "endLine": 54,
                  "endColumn": 36,
                  "charOffset": 1557,
                  "charLength": 140,
                  "snippet": {
                    "text": "            byte[] bytes = new byte[length];\r\n            int dataRead = stream.Read(bytes, 0, length);\r\n            if (dataRead != length)"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.driver.dll!Microsoft.CodeAnalysisDriver.FileStreamExtensionMethods.ReadToArray(System.IO.FileStream,System.Int32)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA2243",
          "level": "warning",
          "message": {
            "text": "In the constructor of 'AssemblyInformationalVersionAttribute', change the value of argument 'informationalVersion', which is currently \"2.0.0-csd.1.0.1\", to something that can be correctly parsed as 'Version'."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.multitool.exe"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Multitool' in assembly name 'Sarif.Multitool.exe'.",
            "messageId": "Assembly"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.multitool.exe"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Multitool#Assembly"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in assembly name 'Sarif.Multitool.exe'.",
            "messageId": "Assembly"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.multitool.exe"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Assembly"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1014",
          "level": "error",
          "message": {
            "text": "Mark 'Sarif.Multitool.exe' with CLSCompliant(true) because it exposes externally visible types."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.multitool.exe"
            }
          ],
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1824",
          "level": "warning",
          "message": {
            "text": "Because assembly 'Sarif.Multitool.exe' contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved."
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.multitool.exe"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1811",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.MultitoolResources..ctor()"
            }
          ],
          "suppressionStates": ["suppressedInSource"],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1031",
          "level": "error",
          "message": {
            "text": "Modify 'AbsoluteUriCommand.Run(AbsoluteUriOptions)' to catch a more specific exception than 'Exception' or rethrow the exception."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Multitool/AbsoluteUriCommand.cs"
                },
                "region": {
                  "startLine": 34,
                  "snippet": {
                    "text": "            }"
                  }
                },
                "contextRegion": {
                  "startLine": 33,
                  "startColumn": 1,
                  "endLine": 35,
                  "endColumn": 33,
                  "charOffset": 1240,
                  "charLength": 66,
                  "snippet": {
                    "text": "                }\r\n            }\r\n            catch (Exception ex)"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.AbsoluteUriCommand.Run(Microsoft.CodeAnalysis.Sarif.Multitool.AbsoluteUriOptions)"
            }
          ],
          "properties": {
            "Level": "CriticalError",
            "Category": "Microsoft.Design",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1031",
          "level": "error",
          "message": {
            "text": "Modify 'BaselineCommand.Run(BaselineOptions)' to catch a more specific exception than 'Exception' or rethrow the exception."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Multitool/BaselineCommand.cs"
                },
                "region": {
                  "startLine": 39
                }
              },
              "fullyQualifiedLogicalName": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.BaselineCommand.Run(Microsoft.CodeAnalysis.Sarif.Multitool.BaselineOptions)"
            }
          ],
          "properties": {
            "Level": "CriticalError",
            "Category": "Microsoft.Design",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1031",
          "level": "error",
          "message": {
            "text": "Modify 'ConvertCommand.Run(ConvertOptions)' to catch a more specific exception than 'Exception' or rethrow the exception."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Multitool/ConvertCommand.cs"
                },
                "region": {
                  "startLine": 43,
                  "snippet": {
                    "text": "            catch (Exception ex)"
                  }
                },
                "contextRegion": {
                  "startLine": 42,
                  "startColumn": 1,
                  "endLine": 44,
                  "endColumn": 14,
                  "charOffset": 1687,
                  "charLength": 62,
                  "snippet": {
                    "text": "            }\r\n            catch (Exception ex)\r\n            {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.ConvertCommand.Run(Microsoft.CodeAnalysis.Sarif.Multitool.ConvertOptions)"
            }
          ],
          "properties": {
            "Level": "CriticalError",
            "Category": "Microsoft.Design",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'JTokenExtensions.HasProperty(this JToken, string)', validate parameter 'token' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Multitool/JTokenExtensions.cs"
                },
                "region": {
                  "startLine": 14,
                  "snippet": {
                    "text": "            return token.Children<JProperty>()"
                  }
                },
                "contextRegion": {
                  "startLine": 13,
                  "startColumn": 1,
                  "endLine": 15,
                  "endColumn": 84,
                  "charOffset": 403,
                  "charLength": 142,
                  "snippet": {
                    "text": "        {\r\n            return token.Children<JProperty>()\r\n                .Any(jp => jp.Name.Equals(propertyName, StringComparison.Ordinal));"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.JTokenExtensions.HasProperty(Newtonsoft.Json.Linq.JToken,System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1031",
          "level": "error",
          "message": {
            "text": "Modify 'MergeCommand.Run(MergeOptions)' to catch a more specific exception than 'Exception' or rethrow the exception."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Multitool/MergeCommand.cs"
                },
                "region": {
                  "startLine": 45,
                  "snippet": {
                    "text": "                Directory.CreateDirectory(mergeOptions.OutputFolderPath);"
                  }
                },
                "contextRegion": {
                  "startLine": 44,
                  "startColumn": 1,
                  "endLine": 46,
                  "endColumn": 1,
                  "charOffset": 1744,
                  "charLength": 77,
                  "snippet": {
                    "text": "\r\n                Directory.CreateDirectory(mergeOptions.OutputFolderPath);\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.MergeCommand.Run(Microsoft.CodeAnalysis.Sarif.Multitool.MergeOptions)"
            }
          ],
          "properties": {
            "Level": "CriticalError",
            "Category": "Microsoft.Design",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Multitool' in type name 'MultitoolOptionsBase'.",
            "messageId": "Type"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.MultitoolOptionsBase"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Multitool#Type"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1031",
          "level": "error",
          "message": {
            "text": "Modify 'RebaseUriCommand.Run(RebaseUriOptions)' to catch a more specific exception than 'Exception' or rethrow the exception."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Multitool/RebaseUriCommand.cs"
                },
                "region": {
                  "startLine": 46,
                  "snippet": {
                    "text": "            }"
                  }
                },
                "contextRegion": {
                  "startLine": 45,
                  "startColumn": 1,
                  "endLine": 47,
                  "endColumn": 33,
                  "charOffset": 1923,
                  "charLength": 66,
                  "snippet": {
                    "text": "                }\r\n            }\r\n            catch (Exception ex)"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.RebaseUriCommand.Run(Microsoft.CodeAnalysis.Sarif.Multitool.RebaseUriOptions)"
            }
          ],
          "properties": {
            "Level": "CriticalError",
            "Category": "Microsoft.Design",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1305",
          "level": "error",
          "message": {
            "text": "Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'RebaseUriCommand.Run(RebaseUriOptions)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.",
            "messageId": "IFormatProviderAlternateString"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Multitool/RebaseUriCommand.cs"
                },
                "region": {
                  "startLine": 21,
                  "snippet": {
                    "text": "                {"
                  }
                },
                "contextRegion": {
                  "startLine": 20,
                  "startColumn": 1,
                  "endLine": 22,
                  "endColumn": 125,
                  "charOffset": 581,
                  "charLength": 235,
                  "snippet": {
                    "text": "                if (!Uri.TryCreate(rebaseOptions.BasePath, UriKind.Absolute, out baseUri))\r\n                {\r\n                    throw new ArgumentException($\"BasePath {rebaseOptions.BasePath} was not an absolute URI.  It must be.\");"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.RebaseUriCommand.Run(Microsoft.CodeAnalysis.Sarif.Multitool.RebaseUriOptions)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "System.String.Format(System.String,System.Object)#IFormatProviderAlternateString"
          },
          "properties": {
            "Category": "Microsoft.Globalization",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1031",
          "level": "error",
          "message": {
            "text": "Modify 'RewriteCommand.Run(RewriteOptions)' to catch a more specific exception than 'Exception' or rethrow the exception."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Multitool/RewriteCommand.cs"
                },
                "region": {
                  "startLine": 33,
                  "snippet": {
                    "text": "                    : Formatting.None;"
                  }
                },
                "contextRegion": {
                  "startLine": 32,
                  "startColumn": 1,
                  "endLine": 34,
                  "endColumn": 1,
                  "charOffset": 1306,
                  "charLength": 83,
                  "snippet": {
                    "text": "                    ? Formatting.Indented\r\n                    : Formatting.None;\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.RewriteCommand.Run(Microsoft.CodeAnalysis.Sarif.Multitool.RewriteOptions)"
            }
          ],
          "properties": {
            "Level": "CriticalError",
            "Category": "Microsoft.Design",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in type name 'SarifPropertyName'.",
            "messageId": "Type"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.SarifPropertyName"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Type"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Stderr' in member name 'SarifPropertyName.Stderr' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.SarifPropertyName.Stderr"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Stderr#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Stdin' in member name 'SarifPropertyName.Stdin' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.SarifPropertyName.Stdin"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Stdin#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Stdout' in member name 'SarifPropertyName.Stdout' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.SarifPropertyName.Stdout"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Stdout#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Stderr' in member name 'SarifPropertyName.StdoutStderr' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.SarifPropertyName.StdoutStderr"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Stderr#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Stdout' in member name 'SarifPropertyName.StdoutStderr' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "Member"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.SarifPropertyName.StdoutStderr"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Stdout#Member"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in type name 'SarifValidationContext'.",
            "messageId": "Type"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.SarifValidationContext"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Type"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1063",
          "level": "error",
          "message": {
            "text": "Provide an overridable implementation of Dispose(bool) on 'SarifValidationContext' or mark the type as sealed. A call to Dispose(false) should only clean up native resources. A call to Dispose(true) should clean up both managed and native resources.",
            "messageId": "ProvideDisposeBool"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.SarifValidationContext"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "ProvideDisposeBool"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1816",
          "level": "warning",
          "message": {
            "text": "Change 'SarifValidationContext.Dispose()' to call 'GC.SuppressFinalize(object)'. This will prevent derived types that introduce a finalizer from needing to re-implement 'IDisposable' to call it.",
            "messageId": "NotCalled"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Multitool/SarifValidationContext.cs"
                },
                "region": {
                  "startLine": 65,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 64,
                  "startColumn": 1,
                  "endLine": 66,
                  "endColumn": 35,
                  "charOffset": 1691,
                  "charLength": 76,
                  "snippet": {
                    "text": "        public void Dispose()\r\n        {\r\n            // Nothing to dispose."
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.SarifValidationContext.Dispose()"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "NotCalled"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1063",
          "level": "error",
          "message": {
            "text": "Modify 'SarifValidationContext.Dispose()' so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.",
            "messageId": "DisposeImplementation"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Multitool/SarifValidationContext.cs"
                },
                "region": {
                  "startLine": 65,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 64,
                  "startColumn": 1,
                  "endLine": 66,
                  "endColumn": 35,
                  "charOffset": 1691,
                  "charLength": 76,
                  "snippet": {
                    "text": "        public void Dispose()\r\n        {\r\n            // Nothing to dispose."
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.SarifValidationContext.Dispose()"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "DisposeImplementation"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA2227",
          "level": "warning",
          "message": {
            "text": "Change 'SarifValidationContext.Policy' to be read-only by removing the property setter."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Multitool/SarifValidationContext.cs"
                },
                "region": {
                  "startLine": 28,
                  "snippet": {
                    "text": "        public PropertiesDictionary Policy { get; set; }"
                  }
                },
                "contextRegion": {
                  "startLine": 27,
                  "startColumn": 1,
                  "endLine": 29,
                  "endColumn": 1,
                  "charOffset": 793,
                  "charLength": 60,
                  "snippet": {
                    "text": "\r\n        public PropertiesDictionary Policy { get; set; }\r\n"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.SarifValidationContext.Policy"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1031",
          "level": "error",
          "message": {
            "text": "Modify 'TransformCommand.Run(TransformOptions)' to catch a more specific exception than 'Exception' or rethrow the exception."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Multitool/TransformCommand.cs"
                },
                "region": {
                  "startLine": 52,
                  "snippet": {
                    "text": "            }"
                  }
                },
                "contextRegion": {
                  "startLine": 51,
                  "startColumn": 1,
                  "endLine": 53,
                  "endColumn": 33,
                  "charOffset": 2223,
                  "charLength": 66,
                  "snippet": {
                    "text": "                }\r\n            }\r\n            catch (Exception ex)"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.TransformCommand.Run(Microsoft.CodeAnalysis.Sarif.Multitool.TransformOptions)"
            }
          ],
          "properties": {
            "Level": "CriticalError",
            "Category": "Microsoft.Design",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1804",
          "level": "warning",
          "message": {
            "text": "'TransformCommand.Run(TransformOptions)' declares a variable, 'dataToInsert', of type 'OptionallyEmittedData', which is never used or is only assigned to. Use this variable or remove it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Multitool/TransformCommand.cs"
                },
                "region": {
                  "startLine": 24,
                  "snippet": {
                    "text": ""
                  }
                },
                "contextRegion": {
                  "startLine": 23,
                  "startColumn": 1,
                  "endLine": 25,
                  "endColumn": 94,
                  "charOffset": 820,
                  "charLength": 114,
                  "snippet": {
                    "text": "                }\r\n\r\n                OptionallyEmittedData dataToInsert = transformOptions.DataToInsert.ToFlags();"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.TransformCommand.Run(Microsoft.CodeAnalysis.Sarif.Multitool.TransformOptions)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "dataToInsert"
          },
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'ValidateCommand.AnalyzeTarget(IEnumerable<ISkimmer<SarifValidationContext>>, SarifValidationContext, HashSet<string>)', validate parameter 'context' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Multitool/ValidateCommand.cs"
                },
                "region": {
                  "startLine": 55,
                  "snippet": {
                    "text": "            //"
                  }
                },
                "contextRegion": {
                  "startLine": 54,
                  "startColumn": 1,
                  "endLine": 56,
                  "endColumn": 92,
                  "charOffset": 2065,
                  "charLength": 148,
                  "snippet": {
                    "text": "            // so we do that ourselves.\r\n            //\r\n            // Validate will return false if there are any JSON syntax errors. In that case"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.ValidateCommand.AnalyzeTarget(System.Collections.Generic.IEnumerable`1<Microsoft.CodeAnalysis.Sarif.Driver.ISkimmer`1<Microsoft.CodeAnalysis.Sarif.Multitool.SarifValidationContext>>,Microsoft.CodeAnalysis.Sarif.Multitool.SarifValidationContext,System.Collections.Generic.HashSet`1<System.String>)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "1"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'ValidateCommand.CreateContext(ValidateOptions, IAnalysisLogger, RuntimeConditions, string)', validate parameter 'options' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Multitool/ValidateCommand.cs"
                },
                "region": {
                  "startLine": 40,
                  "snippet": {
                    "text": "        protected override SarifValidationContext CreateContext(ValidateOptions options, IAnalysisLogger logger, RuntimeConditions runtimeErrors, string filePath = null)"
                  }
                },
                "contextRegion": {
                  "startLine": 39,
                  "startColumn": 1,
                  "endLine": 41,
                  "endColumn": 10,
                  "charOffset": 1251,
                  "charLength": 182,
                  "snippet": {
                    "text": "\r\n        protected override SarifValidationContext CreateContext(ValidateOptions options, IAnalysisLogger logger, RuntimeConditions runtimeErrors, string filePath = null)\r\n        {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.ValidateCommand.CreateContext(Microsoft.CodeAnalysis.Sarif.Multitool.ValidateOptions,Microsoft.CodeAnalysis.Sarif.IAnalysisLogger,Microsoft.CodeAnalysis.Sarif.RuntimeConditions,System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1822",
          "level": "warning",
          "message": {
            "text": "The 'this' parameter (or 'Me' in Visual Basic) of 'ValidateCommand.Validate(string, string, IAnalysisLogger)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Multitool/ValidateCommand.cs"
                },
                "region": {
                  "startLine": 95,
                  "snippet": {
                    "text": ""
                  }
                },
                "contextRegion": {
                  "startLine": 94,
                  "startColumn": 1,
                  "endLine": 96,
                  "endColumn": 16,
                  "charOffset": 3702,
                  "charLength": 46,
                  "snippet": {
                    "text": "            bool ok = true;\r\n\r\n            try"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.ValidateCommand.Validate(System.String,System.String,Microsoft.CodeAnalysis.Sarif.IAnalysisLogger)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1811",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.ValidatorResources..ctor()"
            }
          ],
          "suppressionStates": ["suppressedInSource"],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'DoNotUseFriendlyNameAsRuleId.Analyze(Rule, string)', validate parameter 'rule' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Multitool/Rules/DoNotUseFriendlyNameAsRuleId.cs"
                },
                "region": {
                  "startLine": 38,
                  "snippet": {
                    "text": "                    rulePointer,"
                  }
                },
                "contextRegion": {
                  "startLine": 37,
                  "startColumn": 1,
                  "endLine": 39,
                  "endColumn": 61,
                  "charOffset": 1298,
                  "charLength": 122,
                  "snippet": {
                    "text": "                LogResult(\r\n                    rulePointer,\r\n                    nameof(RuleResources.SARIF1001_Default),"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.DoNotUseFriendlyNameAsRuleId.Analyze(Microsoft.CodeAnalysis.Sarif.Rule,System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'EndColumnMustNotBeLessThanStartColumn.Analyze(Region, string)', validate parameter 'region' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Multitool/Rules/EndColumnMustNotBeLessThanStartColumn.cs"
                },
                "region": {
                  "startLine": 42,
                  "snippet": {
                    "text": "                LogResult("
                  }
                },
                "contextRegion": {
                  "startLine": 41,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 38,
                  "charOffset": 1571,
                  "charLength": 67,
                  "snippet": {
                    "text": "\r\n                LogResult(\r\n                    endColumnPointer,"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.EndColumnMustNotBeLessThanStartColumn.Analyze(Microsoft.CodeAnalysis.Sarif.Region,System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'EndLineMustNotBeLessThanStartLine.Analyze(Region, string)', validate parameter 'region' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Multitool/Rules/EndLineMustNotBeLessThanStartLine.cs"
                },
                "region": {
                  "startLine": 41,
                  "snippet": {
                    "text": "                    endLinePointer,"
                  }
                },
                "contextRegion": {
                  "startLine": 40,
                  "startColumn": 1,
                  "endLine": 42,
                  "endColumn": 61,
                  "charOffset": 1463,
                  "charLength": 125,
                  "snippet": {
                    "text": "                LogResult(\r\n                    endLinePointer,\r\n                    nameof(RuleResources.SARIF1012_Default),"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.EndLineMustNotBeLessThanStartLine.Analyze(Microsoft.CodeAnalysis.Sarif.Region,System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'EndTimeMustBeAfterStartTime.Analyze(Invocation, string)', validate parameter 'invocation' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Multitool/Rules/EndTimeMustBeAfterStartTime.cs"
                },
                "region": {
                  "startLine": 40,
                  "snippet": {
                    "text": "                    nameof(RuleResources.SARIF1007_Default),"
                  }
                },
                "contextRegion": {
                  "startLine": 39,
                  "startColumn": 1,
                  "endLine": 41,
                  "endColumn": 56,
                  "charOffset": 1320,
                  "charLength": 154,
                  "snippet": {
                    "text": "                    endTimePointer,\r\n                    nameof(RuleResources.SARIF1007_Default),\r\n                    FormatDateTime(invocation.EndTime),"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.EndTimeMustBeAfterStartTime.Analyze(Microsoft.CodeAnalysis.Sarif.Invocation,System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'HashAlgorithmsMustBeUnique.Analyze(FileData, string, string)', validate parameter 'fileData' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Multitool/Rules/HashAlgorithmsMustBeUnique.cs"
                },
                "region": {
                  "startLine": 39,
                  "snippet": {
                    "text": "            if (fileData.Hashes != null)"
                  }
                },
                "contextRegion": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 40,
                  "endColumn": 14,
                  "charOffset": 1199,
                  "charLength": 66,
                  "snippet": {
                    "text": "        {\r\n            if (fileData.Hashes != null)\r\n            {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.HashAlgorithmsMustBeUnique.Analyze(Microsoft.CodeAnalysis.Sarif.FileData,System.String,System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'MessagesShouldEndWithPeriod.Analyze(Message, string)', validate parameter 'message' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Multitool/Rules/MessagesShouldEndWithPeriod.cs"
                },
                "region": {
                  "startLine": 70,
                  "snippet": {
                    "text": "            AnalyzeMessageString(message.Text, messagePointer, SarifPropertyName.Text);"
                  }
                },
                "contextRegion": {
                  "startLine": 69,
                  "startColumn": 1,
                  "endLine": 71,
                  "endColumn": 96,
                  "charOffset": 2459,
                  "charLength": 195,
                  "snippet": {
                    "text": "        {\r\n            AnalyzeMessageString(message.Text, messagePointer, SarifPropertyName.Text);\r\n            AnalyzeMessageString(message.RichText, messagePointer, SarifPropertyName.RichText);"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.MessagesShouldEndWithPeriod.Analyze(Microsoft.CodeAnalysis.Sarif.Message,System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'MessagesShouldEndWithPeriod.Analyze(Rule, string)', validate parameter 'rule' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Multitool/Rules/MessagesShouldEndWithPeriod.cs"
                },
                "region": {
                  "startLine": 39,
                  "snippet": {
                    "text": "            AnalyzeMessageStrings(rule.MessageStrings, rulePointer, SarifPropertyName.MessageStrings);"
                  }
                },
                "contextRegion": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 40,
                  "endColumn": 111,
                  "charOffset": 1201,
                  "charLength": 225,
                  "snippet": {
                    "text": "        {\r\n            AnalyzeMessageStrings(rule.MessageStrings, rulePointer, SarifPropertyName.MessageStrings);\r\n            AnalyzeMessageStrings(rule.RichMessageStrings, rulePointer, SarifPropertyName.RichMessageStrings);"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.MessagesShouldEndWithPeriod.Analyze(Microsoft.CodeAnalysis.Sarif.Rule,System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1811",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.RuleResources..ctor()"
            }
          ],
          "suppressionStates": ["suppressedInSource"],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "Correct the spelling of 'Sarif' in type name 'SarifValidationSkimmerBase'.",
            "messageId": "Type"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe",
                  "uriBaseId": "$(ProjectDir)"
                }
              },
              "fullyQualifiedLogicalName": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.SarifValidationSkimmerBase"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "Sarif#Type"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1704",
          "level": "warning",
          "message": {
            "text": "In method 'SarifValidationSkimmerBase.LogResult(string, string, params string[])', correct the spelling of 'j' in parameter name 'jPointer' or remove it entirely if it represents any sort of Hungarian notation.",
            "messageId": "MemberParameter"
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Multitool/Rules/SarifValidationSkimmerBase.cs"
                },
                "region": {
                  "startLine": 48,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 47,
                  "startColumn": 1,
                  "endLine": 49,
                  "endColumn": 61,
                  "charOffset": 1631,
                  "charLength": 161,
                  "snippet": {
                    "text": "        protected void LogResult(string jPointer, string formatId, params string[] args)\r\n        {\r\n            Region region = GetRegionFromJPointer(jPointer);"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.SarifValidationSkimmerBase.LogResult(System.String,System.String,System.String[])"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "j#MemberParameter"
          },
          "properties": {
            "Level": "CriticalWarning",
            "Category": "Microsoft.Naming",
            "FixCategory": "Breaking"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'SarifValidationSkimmerBase.LogResult(string, string, params string[])', validate parameter 'args' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Multitool/Rules/SarifValidationSkimmerBase.cs"
                },
                "region": {
                  "startLine": 52,
                  "snippet": {
                    "text": "            string[] argsWithPointer = new string[args.Length + 1];"
                  }
                },
                "contextRegion": {
                  "startLine": 51,
                  "startColumn": 1,
                  "endLine": 53,
                  "endColumn": 66,
                  "charOffset": 1796,
                  "charLength": 241,
                  "snippet": {
                    "text": "            // All messages start with \"In {file}, at {jPointer}, ...\". Prepend the jPointer to the args.\r\n            string[] argsWithPointer = new string[args.Length + 1];\r\n            Array.Copy(args, 0, argsWithPointer, 1, args.Length);"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.SarifValidationSkimmerBase.LogResult(System.String,System.String,System.String[])"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "2"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'StepValuesMustFormOneBasedSequence.Analyze(ThreadFlow, string)', validate parameter 'threadFlow' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Multitool/Rules/StepValuesMustFormOneBasedSequence.cs"
                },
                "region": {
                  "startLine": 57,
                  "snippet": {
                    "text": ""
                  }
                },
                "contextRegion": {
                  "startLine": 56,
                  "startColumn": 1,
                  "endLine": 58,
                  "endColumn": 46,
                  "charOffset": 2227,
                  "charLength": 58,
                  "snippet": {
                    "text": "        }\r\n\r\n        private void ReportInvalidStepValues("
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.StepValuesMustFormOneBasedSequence.Analyze(Microsoft.CodeAnalysis.Sarif.ThreadFlow,System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1822",
          "level": "warning",
          "message": {
            "text": "The 'this' parameter (or 'Me' in Visual Basic) of 'StepValuesMustFormOneBasedSequence.FindFirstLocationWithMissingStep(JObject[])' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Multitool/Rules/StepValuesMustFormOneBasedSequence.cs"
                },
                "region": {
                  "startLine": 117,
                  "snippet": {
                    "text": "                {"
                  }
                },
                "contextRegion": {
                  "startLine": 116,
                  "startColumn": 1,
                  "endLine": 118,
                  "endColumn": 31,
                  "charOffset": 4973,
                  "charLength": 137,
                  "snippet": {
                    "text": "                if (!threadFlowLocationObjects[i].HasProperty(SarifPropertyName.Step))\r\n                {\r\n                    index = i;"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.StepValuesMustFormOneBasedSequence.FindFirstLocationWithMissingStep(Newtonsoft.Json.Linq.JObject[])"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'UriBaseIdRequiresRelativeUri.Analyze(FileLocation, string)', validate parameter 'fileLocation' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Multitool/Rules/UriBaseIdRequiresRelativeUri.cs"
                },
                "region": {
                  "startLine": 38,
                  "snippet": {
                    "text": "            }"
                  }
                },
                "contextRegion": {
                  "startLine": 37,
                  "startColumn": 1,
                  "endLine": 39,
                  "endColumn": 10,
                  "charOffset": 1346,
                  "charLength": 79,
                  "snippet": {
                    "text": "                    fileLocation.Uri.OriginalString);\r\n            }\r\n        }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.UriBaseIdRequiresRelativeUri.Analyze(Microsoft.CodeAnalysis.Sarif.FileLocation,System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA2234",
          "level": "warning",
          "message": {
            "text": "Modify 'UrisMustBeValid.Analyze(FileData, string, string)' to call 'UrisMustBeValid.AnalyzeUri(Uri, string)' instead of 'UrisMustBeValid.AnalyzeUri(string, string)'."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Multitool/Rules/UrisMustBeValid.cs"
                },
                "region": {
                  "startLine": 44,
                  "snippet": {
                    "text": "        private const string UriWithPrefixPattern ="
                  }
                },
                "contextRegion": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 45,
                  "endColumn": 55,
                  "charOffset": 1451,
                  "charLength": 109,
                  "snippet": {
                    "text": "\r\n        private const string UriWithPrefixPattern =\r\n@\"^                     # Start of string, followed by"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.UrisMustBeValid.Analyze(Microsoft.CodeAnalysis.Sarif.FileData,System.String,System.String)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Usage",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'UrisMustBeValid.Analyze(FileLocation, string)', validate parameter 'fileLocation' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Multitool/Rules/UrisMustBeValid.cs"
                },
                "region": {
                  "startLine": 51,
                  "snippet": {
                    "text": "(?<uri>                 # followed by the URI, which is"
                  }
                },
                "contextRegion": {
                  "startLine": 50,
                  "startColumn": 1,
                  "endLine": 52,
                  "endColumn": 41,
                  "charOffset": 1856,
                  "charLength": 100,
                  "snippet": {
                    "text": ")\r\n(?<uri>                 # followed by the URI, which is\r\n    .+                  #     everything"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.UrisMustBeValid.Analyze(Microsoft.CodeAnalysis.Sarif.FileLocation,System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'UrisMustBeValid.Analyze(Result, string)', validate parameter 'result' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Multitool/Rules/UrisMustBeValid.cs"
                },
                "region": {
                  "startLine": 56,
                  "snippet": {
                    "text": ""
                  }
                },
                "contextRegion": {
                  "startLine": 55,
                  "startColumn": 1,
                  "endLine": 57,
                  "endColumn": 61,
                  "charOffset": 2065,
                  "charLength": 66,
                  "snippet": {
                    "text": "\";\r\n\r\n        private static readonly Regex s_uriWithPrefixRegex ="
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.UrisMustBeValid.Analyze(Microsoft.CodeAnalysis.Sarif.Result,System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'UrisMustBeValid.Analyze(Rule, string)', validate parameter 'rule' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Multitool/Rules/UrisMustBeValid.cs"
                },
                "region": {
                  "startLine": 70,
                  "snippet": {
                    "text": "            AnalyzeUri(fileLocation.Uri, fileLocationPointer.AtProperty(SarifPropertyName.Uri));"
                  }
                },
                "contextRegion": {
                  "startLine": 69,
                  "startColumn": 1,
                  "endLine": 71,
                  "endColumn": 10,
                  "charOffset": 2596,
                  "charLength": 118,
                  "snippet": {
                    "text": "        {\r\n            AnalyzeUri(fileLocation.Uri, fileLocationPointer.AtProperty(SarifPropertyName.Uri));\r\n        }"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.UrisMustBeValid.Analyze(Microsoft.CodeAnalysis.Sarif.Rule,System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'UrisMustBeValid.Analyze(Run, string)', validate parameter 'run' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Multitool/Rules/UrisMustBeValid.cs"
                },
                "region": {
                  "startLine": 75,
                  "snippet": {
                    "text": "            if (result.WorkItemUris != null)"
                  }
                },
                "contextRegion": {
                  "startLine": 74,
                  "startColumn": 1,
                  "endLine": 76,
                  "endColumn": 14,
                  "charOffset": 2796,
                  "charLength": 70,
                  "snippet": {
                    "text": "        {\r\n            if (result.WorkItemUris != null)\r\n            {"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.UrisMustBeValid.Analyze(Microsoft.CodeAnalysis.Sarif.Run,System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'UrisMustBeValid.Analyze(SarifLog, string)', validate parameter 'log' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Multitool/Rules/UrisMustBeValid.cs"
                },
                "region": {
                  "startLine": 40,
                  "snippet": {
                    "text": "            string fileUriReference = RemoveUriBaseIdPrefix(fileKey);"
                  }
                },
                "contextRegion": {
                  "startLine": 39,
                  "startColumn": 1,
                  "endLine": 41,
                  "endColumn": 55,
                  "charOffset": 1302,
                  "charLength": 136,
                  "snippet": {
                    "text": "        {\r\n            string fileUriReference = RemoveUriBaseIdPrefix(fileKey);\r\n            AnalyzeUri(fileUriReference, filePointer);"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.UrisMustBeValid.Analyze(Microsoft.CodeAnalysis.Sarif.SarifLog,System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'UrisMustBeValid.Analyze(Tool, string)', validate parameter 'tool' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Multitool/Rules/UrisMustBeValid.cs"
                },
                "region": {
                  "startLine": 88,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 87,
                  "startColumn": 1,
                  "endLine": 89,
                  "endColumn": 89,
                  "charOffset": 3254,
                  "charLength": 188,
                  "snippet": {
                    "text": "        protected override void Analyze(IRule rule, string ruleKey, string rulePointer)\r\n        {\r\n            AnalyzeUri(rule.HelpUri, rulePointer.AtProperty(SarifPropertyName.HelpUri));"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.UrisMustBeValid.Analyze(Microsoft.CodeAnalysis.Sarif.Tool,System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'UrisMustBeValid.Analyze(VersionControlDetails, string)', validate parameter 'versionControlDetails' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Multitool/Rules/UrisMustBeValid.cs"
                },
                "region": {
                  "startLine": 93,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 92,
                  "startColumn": 1,
                  "endLine": 94,
                  "endColumn": 48,
                  "charOffset": 3457,
                  "charLength": 127,
                  "snippet": {
                    "text": "        protected override void Analyze(Run run, string runPointer)\r\n        {\r\n            if (run.OriginalUriBaseIds != null)"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.UrisMustBeValid.Analyze(Microsoft.CodeAnalysis.Sarif.VersionControlDetails,System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1062",
          "level": "warning",
          "message": {
            "text": "In externally visible method 'UseAbsolutePathsForNestedFileUriFragments.Analyze(FileLocation, string)', validate parameter 'fileLocation' before using it."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Multitool/Rules/UseAbsolutePathsForNestedFileUriFragments.cs"
                },
                "region": {
                  "startLine": 39,
                  "snippet": {
                    "text": "        {"
                  }
                },
                "contextRegion": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 40,
                  "endColumn": 81,
                  "charOffset": 1412,
                  "charLength": 187,
                  "snippet": {
                    "text": "        protected override void Analyze(FileData fileData, string fileKey, string filePointer)\r\n        {\r\n            if (!Uri.IsWellFormedUriString(fileKey, UriKind.RelativeOrAbsolute))"
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.UseAbsolutePathsForNestedFileUriFragments.Analyze(Microsoft.CodeAnalysis.Sarif.FileLocation,System.String)"
            }
          ],
          "partialFingerprints": {
            "UniqueId": "0"
          },
          "properties": {
            "Category": "Microsoft.Design",
            "FixCategory": "DependsOnFix"
          }
        },
        {
          "ruleId": "CA1822",
          "level": "warning",
          "message": {
            "text": "The 'this' parameter (or 'Me' in Visual Basic) of 'UseAbsolutePathsForNestedFileUriFragments.UriHasNonAbsoluteFragment(Uri)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate."
          },
          "analysisTarget": {
            "uri": "../../../../../../sarif-sdk/bld/bin/AnyCPU_Debug/Sarif.Multitool/net461/Sarif.Multitool.exe",
            "uriBaseId": "$(ProjectDir)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "file:///D:/src/sarif-sdk/src/Sarif.Multitool/Rules/UseAbsolutePathsForNestedFileUriFragments.cs"
                },
                "region": {
                  "startLine": 65,
                  "snippet": {
                    "text": "            // You can't access the Fragment property of a relative URI, so if this URI is"
                  }
                },
                "contextRegion": {
                  "startLine": 64,
                  "startColumn": 1,
                  "endLine": 66,
                  "endColumn": 91,
                  "charOffset": 2316,
                  "charLength": 184,
                  "snippet": {
                    "text": "\r\n            // You can't access the Fragment property of a relative URI, so if this URI is\r\n            // relative, turn it into a fake absolute URI, and get the fragment from that."
                  }
                }
              },
              "fullyQualifiedLogicalName": "sarif.multitool.exe!Microsoft.CodeAnalysis.Sarif.Multitool.Rules.UseAbsolutePathsForNestedFileUriFragments.UriHasNonAbsoluteFragment(System.Uri)"
            }
          ],
          "properties": {
            "Category": "Microsoft.Performance",
            "FixCategory": "NonBreaking"
          }
        },
        {
          "ruleId": "CA0053",
          "message": {
            "text": "AssemblyLoad exception: Microsoft.FxCop.Common.AssemblyLoadException: Unable to load rule assembly 'c:\\program files (x86)\\microsoft\\fxcop 14.0 for sdl\\Rules\\DataflowRules.dll': The assembly contains no FxCop rules. ."
          },
          "locations": [
            {}
          ],
          "partialFingerprints": {
            "UniqueId": "Microsoft.FxCop.Common.AssemblyLoadException"
          }
        },
        {
          "ruleId": "CA0053",
          "message": {
            "text": "AssemblyLoad exception: Microsoft.FxCop.Common.AssemblyLoadException: Unable to load rule assembly 'c:\\program files (x86)\\microsoft\\fxcop 14.0 for sdl\\Rules\\SecurityWebConfigurationRules.dll': The assembly contains no FxCop rules. ."
          },
          "locations": [
            {}
          ],
          "partialFingerprints": {
            "UniqueId": "Microsoft.FxCop.Common.AssemblyLoadException"
          }
        },
        {
          "ruleId": "CA0053",
          "message": {
            "text": "AssemblyLoad exception: Microsoft.FxCop.Common.AssemblyLoadException: Unable to load rule assembly 'c:\\program files (x86)\\microsoft\\fxcop 14.0 for sdl\\Rules\\SecurityWebDataflowRules.dll': The assembly contains no FxCop rules. ."
          },
          "locations": [
            {}
          ],
          "partialFingerprints": {
            "UniqueId": "Microsoft.FxCop.Common.AssemblyLoadException"
          }
        },
        {
          "ruleId": "CA0001",
          "message": {
            "text": "ProjectLoad exception: Microsoft.FxCop.Sdk.FxCopException: Failed to add rule assembly: c:\\program files (x86)\\microsoft\\fxcop 14.0 for sdl\\Rules\\DataflowRules.dll. . Inner Exception: Microsoft.FxCop.Common.AssemblyLoadException: Unable to load rule assembly 'c:\\program files (x86)\\microsoft\\fxcop 14.0 for sdl\\Rules\\DataflowRules.dll': The assembly contains no FxCop rules. "
          },
          "locations": [
            {}
          ],
          "partialFingerprints": {
            "UniqueId": "Microsoft.FxCop.Sdk.FxCopException"
          }
        },
        {
          "ruleId": "CA0001",
          "message": {
            "text": "ProjectLoad exception: Microsoft.FxCop.Sdk.FxCopException: Failed to add rule assembly: c:\\program files (x86)\\microsoft\\fxcop 14.0 for sdl\\Rules\\SecurityWebConfigurationRules.dll. . Inner Exception: Microsoft.FxCop.Common.AssemblyLoadException: Unable to load rule assembly 'c:\\program files (x86)\\microsoft\\fxcop 14.0 for sdl\\Rules\\SecurityWebConfigurationRules.dll': The assembly contains no FxCop rules. "
          },
          "locations": [
            {}
          ],
          "partialFingerprints": {
            "UniqueId": "Microsoft.FxCop.Sdk.FxCopException"
          }
        },
        {
          "ruleId": "CA0001",
          "message": {
            "text": "ProjectLoad exception: Microsoft.FxCop.Sdk.FxCopException: Failed to add rule assembly: c:\\program files (x86)\\microsoft\\fxcop 14.0 for sdl\\Rules\\SecurityWebDataflowRules.dll. . Inner Exception: Microsoft.FxCop.Common.AssemblyLoadException: Unable to load rule assembly 'c:\\program files (x86)\\microsoft\\fxcop 14.0 for sdl\\Rules\\SecurityWebDataflowRules.dll': The assembly contains no FxCop rules. "
          },
          "locations": [
            {}
          ],
          "partialFingerprints": {
            "UniqueId": "Microsoft.FxCop.Sdk.FxCopException"
          }
        },
        {
          "ruleId": "CA0068",
          "message": {
            "text": "Engine exception: Microsoft.FxCop.Sdk.FxCopException: Debug information could not be found for target assembly 'Microsoft.Json.Schema.Validation.dll'. For best analysis results, include the .pdb file with debug information for 'Microsoft.Json.Schema.Validation.dll' in the same directory as the target assembly. ."
          },
          "locations": [
            {}
          ],
          "partialFingerprints": {
            "UniqueId": "Microsoft.FxCop.Sdk.FxCopException"
          }
        },
        {
          "ruleId": "CA0068",
          "message": {
            "text": "Engine exception: Microsoft.FxCop.Sdk.FxCopException: Debug information could not be found for target assembly 'Microsoft.Json.Pointer.dll'. For best analysis results, include the .pdb file with debug information for 'Microsoft.Json.Pointer.dll' in the same directory as the target assembly. ."
          },
          "locations": [
            {}
          ],
          "partialFingerprints": {
            "UniqueId": "Microsoft.FxCop.Sdk.FxCopException"
          }
        },
        {
          "ruleId": "CA0068",
          "message": {
            "text": "Engine exception: Microsoft.FxCop.Sdk.FxCopException: Debug information could not be found for target assembly 'Microsoft.Json.Schema.dll'. For best analysis results, include the .pdb file with debug information for 'Microsoft.Json.Schema.dll' in the same directory as the target assembly. ."
          },
          "locations": [
            {}
          ],
          "partialFingerprints": {
            "UniqueId": "Microsoft.FxCop.Sdk.FxCopException"
          }
        }
      ],
      "resources": {
        "rules": {
          "CA1012": {
            "id": "CA1012",
            "name": {
              "text": "AbstractTypesShouldNotHaveConstructors"
            },
            "messageStrings": {
              "Default": "Change the accessibility of all public constructors in {0} to protected."
            },
            "properties": {
              "Category": "Microsoft.Design"
            }
          },
          "CA2105": {
            "id": "CA2105",
            "name": {
              "text": "ArrayFieldsShouldNotBeReadOnly"
            },
            "messageStrings": {
              "Default": "Either replace {0} with a strongly typed collection that cannot be changed, or replace the public field with a method that returns a clone of a private array."
            },
            "properties": {
              "Category": "Microsoft.Security"
            }
          },
          "CA2243": {
            "id": "CA2243",
            "name": {
              "text": "AttributeStringLiteralsShouldParseCorrectly"
            },
            "messageStrings": {
              "Default": "In the constructor of {0}, change the value of argument {1}, which is currently \"{2}\", to something that can be correctly parsed as {3}."
            },
            "properties": {
              "Category": "Microsoft.Usage"
            }
          },
          "CA1040": {
            "id": "CA1040",
            "name": {
              "text": "AvoidEmptyInterfaces"
            },
            "messageStrings": {
              "Default": "Define a custom attribute to replace {0}."
            },
            "properties": {
              "Category": "Microsoft.Design"
            }
          },
          "CA1506": {
            "id": "CA1506",
            "name": {
              "text": "AvoidExcessiveClassCoupling"
            },
            "messageStrings": {
              "Method": "{0} is coupled with {1} different types from {2} different namespaces. Rewrite or refactor the method to decrease its class coupling, or consider moving the method to one of the other types it is tightly coupled with. A class coupling above {3} indicates poor maintainability, a class coupling between {3} and {4} indicates moderate maintainability, and a class coupling below {4} indicates good maintainability.",
              "Type": "{0} is coupled with {1} different types from {2} different namespaces. Rewrite or refactor this class's methods to decrease its class coupling, or consider moving some of the class's methods to some of the other types it is tightly coupled with. A class coupling above {3} indicates poor maintainability, a class coupling between {3} and {4} indicates moderate maintainability, and a class coupling below {4} indicates good maintainability."
            },
            "properties": {
              "Category": "Microsoft.Maintainability"
            }
          },
          "CA1502": {
            "id": "CA1502",
            "name": {
              "text": "AvoidExcessiveComplexity"
            },
            "messageStrings": {
              "Default": "{0} has a cyclomatic complexity of {1}. Rewrite or refactor the method to reduce complexity to {2}."
            },
            "properties": {
              "Category": "Microsoft.Maintainability"
            }
          },
          "CA1809": {
            "id": "CA1809",
            "name": {
              "text": "AvoidExcessiveLocals"
            },
            "messageStrings": {
              "Compiler": "{0} has {1} local variables, {2} of which were generated by the compiler. Refactor {0} so that it uses fewer than 64 local variables."
            },
            "properties": {
              "Category": "Microsoft.Performance"
            }
          },
          "CA1020": {
            "id": "CA1020",
            "name": {
              "text": "AvoidNamespacesWithFewTypes"
            },
            "messageStrings": {
              "Default": "Consider merging the types defined in '{0}' with another namespace."
            },
            "properties": {
              "Category": "Microsoft.Design"
            }
          },
          "CA1021": {
            "id": "CA1021",
            "name": {
              "text": "AvoidOutParameters"
            },
            "messageStrings": {
              "Default": "Consider a design that does not require that {0} be an out parameter."
            },
            "properties": {
              "Category": "Microsoft.Design"
            }
          },
          "CA1811": {
            "id": "CA1811",
            "name": {
              "text": "AvoidUncalledPrivateCode"
            },
            "messageStrings": {
              "Default": "{0} appears to have no upstream public or protected callers."
            },
            "properties": {
              "Category": "Microsoft.Performance"
            }
          },
          "CA1812": {
            "id": "CA1812",
            "name": {
              "text": "AvoidUninstantiatedInternalClasses"
            },
            "messageStrings": {
              "Default": "{0} is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor."
            },
            "properties": {
              "Category": "Microsoft.Performance"
            }
          },
          "CA1505": {
            "id": "CA1505",
            "name": {
              "text": "AvoidUnmaintainableCode"
            },
            "messageStrings": {
              "Method": "{0} has a maintainability index of {1}. Rewrite or refactor the method to increase its maintainability index (MI). An MI below {2} indicates poor maintainability, an MI between {2} and {3} indicates moderate maintainability, and an MI above {3} indicates good maintainability."
            },
            "properties": {
              "Category": "Microsoft.Maintainability"
            }
          },
          "CA1823": {
            "id": "CA1823",
            "name": {
              "text": "AvoidUnusedPrivateFields"
            },
            "messageStrings": {
              "Default": "It appears that field {0} is never used or is only ever assigned to. Use this field or remove it."
            },
            "properties": {
              "Category": "Microsoft.Performance"
            }
          },
          "CA1816": {
            "id": "CA1816",
            "name": {
              "text": "CallGCSuppressFinalizeCorrectly"
            },
            "messageStrings": {
              "NotCalled": "Change {0} to call {1}. This will prevent derived types that introduce a finalizer from needing to re-implement 'IDisposable' to call it."
            },
            "properties": {
              "Category": "Microsoft.Usage"
            }
          },
          "CA2227": {
            "id": "CA2227",
            "name": {
              "text": "CollectionPropertiesShouldBeReadOnly"
            },
            "messageStrings": {
              "Default": "Change {0} to be read-only by removing the property setter."
            },
            "properties": {
              "Category": "Microsoft.Usage"
            }
          },
          "CA1702": {
            "id": "CA1702",
            "name": {
              "text": "CompoundWordsShouldBeCasedCorrectly"
            },
            "messageStrings": {
              "MemberParameterShouldBeDiscreteTerm": "In member {0}, the compound word '{1}' in parameter name {2} exists as a discrete term. If your usage is intended to be single word, case it as '{3}' or strip the first token entirely if it represents any sort of Hungarian notation.",
              "MemberShouldBeDiscreteTerm": "The compound word '{0}' in member name {1} exists as a discrete term. If your usage is intended to be single word, case it as '{2}' or strip the first token entirely if it represents any sort of Hungarian notation.",
              "TypeShouldBeDiscreteTerm": "The compound word '{0}' in type name {1} exists as a discrete term. If your usage is intended to be single word, case it as '{2}'."
            },
            "properties": {
              "Category": "Microsoft.Naming"
            }
          },
          "CA1011": {
            "id": "CA1011",
            "name": {
              "text": "ConsiderPassingBaseTypesAsParameters"
            },
            "messageStrings": {
              "Default": "Consider changing the type of parameter {0} in {1} from {2} to its base type {3}. This method appears to only require base class members in its implementation. Suppress this violation if there is a compelling reason to require the more derived type in the method signature."
            },
            "properties": {
              "Category": "Microsoft.Design"
            }
          },
          "CA1026": {
            "id": "CA1026",
            "name": {
              "text": "DefaultParametersShouldNotBeUsed"
            },
            "messageStrings": {
              "Default": "Replace method {0} with an overload that supplies all default arguments."
            },
            "properties": {
              "Category": "Microsoft.Design"
            }
          },
          "CA2215": {
            "id": "CA2215",
            "name": {
              "text": "Dispose methods should call base class dispose"
            },
            "messageStrings": {
              "Default": "Ensure that method {0} calls base.{0} in all possible control flow paths."
            },
            "properties": {
              "Category": "Microsoft.Usage"
            }
          },
          "CA2000": {
            "id": "CA2000",
            "name": {
              "text": "Dispose objects before losing scope"
            },
            "messageStrings": {
              "ExceptionEdge": "In method {0}, object {1} is not disposed along all exception paths. Call System.IDisposable.Dispose on object {1} before all references to it are out of scope.",
              "NonExceptionEdge": "In method {0}, call System.IDisposable.Dispose on object {1} before all references to it are out of scope."
            },
            "properties": {
              "Category": "Microsoft.Reliability"
            }
          },
          "CA2202": {
            "id": "CA2202",
            "name": {
              "text": "Do not dispose objects multiple times"
            },
            "messageStrings": {
              "Default": "Object {0} can be disposed more than once in method {1}. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 38"
            },
            "properties": {
              "Category": "Microsoft.Usage"
            }
          },
          "CA1303": {
            "id": "CA1303",
            "name": {
              "text": "Do not pass literals as localized parameters"
            },
            "messageStrings": {
              "KnownValue": "Method {0} passes a literal string as parameter '{1}' of a call to {2}. Retrieve the following string(s) from a resource table instead: {3}."
            },
            "properties": {
              "Category": "Microsoft.Globalization"
            }
          },
          "CA2214": {
            "id": "CA2214",
            "name": {
              "text": "DoNotCallOverridableMethodsInConstructors"
            },
            "messageStrings": {
              "Default": "{0} contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: {1}"
            },
            "properties": {
              "Category": "Microsoft.Usage"
            }
          },
          "CA1800": {
            "id": "CA1800",
            "name": {
              "text": "DoNotCastUnnecessarily"
            },
            "messageStrings": {
              "Local": "{0}, a variable, is cast to type {1} multiple times in method {2}. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant {3} instruction.",
              "Parameter": "{0}, a parameter, is cast to type {1} multiple times in method {2}. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant {3} instruction."
            },
            "properties": {
              "Category": "Microsoft.Performance"
            }
          },
          "CA1031": {
            "id": "CA1031",
            "name": {
              "text": "DoNotCatchGeneralExceptionTypes"
            },
            "messageStrings": {
              "Default": "Modify {0} to catch a more specific exception than {1} or rethrow the exception."
            },
            "properties": {
              "Category": "Microsoft.Design"
            }
          },
          "CA2104": {
            "id": "CA2104",
            "name": {
              "text": "DoNotDeclareReadOnlyMutableReferenceTypes"
            },
            "messageStrings": {
              "Default": "Remove the read-only designation from {0} or change the field to one that is an immutable reference type. If the reference type {1} is, in fact, immutable, exclude this message."
            },
            "properties": {
              "Category": "Microsoft.Security"
            }
          },
          "CA1000": {
            "id": "CA1000",
            "name": {
              "text": "DoNotDeclareStaticMembersOnGenericTypes"
            },
            "messageStrings": {
              "Default": "Remove {0} from {1} or make it an instance member."
            },
            "properties": {
              "Category": "Microsoft.Design"
            }
          },
          "CA1051": {
            "id": "CA1051",
            "name": {
              "text": "DoNotDeclareVisibleInstanceFields"
            },
            "messageStrings": {
              "Default": "Because field {0} is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it."
            },
            "properties": {
              "Category": "Microsoft.Design"
            }
          },
          "CA1002": {
            "id": "CA1002",
            "name": {
              "text": "DoNotExposeGenericLists"
            },
            "messageStrings": {
              "Default": "Change {0} in {1} to use Collection<T>, ReadOnlyCollection<T> or KeyedCollection<K,V>"
            },
            "properties": {
              "Category": "Microsoft.Design"
            }
          },
          "CA1806": {
            "id": "CA1806",
            "name": {
              "text": "DoNotIgnoreMethodResults"
            },
            "messageStrings": {
              "TryParse": "{0} calls {1} but does not explicitly check whether the conversion succeeded. Either use the return value in a conditional statement or verify that the call site expects that the out argument will be set to the default value when the conversion fails."
            },
            "properties": {
              "Category": "Microsoft.Usage"
            }
          },
          "CA2217": {
            "id": "CA2217",
            "name": {
              "text": "DoNotMarkEnumsWithFlags"
            },
            "messageStrings": {
              "Default": "{0} is marked with FlagsAttribute but a discrete member cannot be found for every settable bit that is used across the range of enum values. Remove FlagsAttribute from the type or define new members for the following (currently missing) values: {1}"
            },
            "properties": {
              "Category": "Microsoft.Usage"
            }
          },
          "CA1006": {
            "id": "CA1006",
            "name": {
              "text": "DoNotNestGenericTypesInMemberSignatures"
            },
            "messageStrings": {
              "Default": "Consider a design where {0} doesn't nest generic type {1}."
            },
            "properties": {
              "Category": "Microsoft.Design"
            }
          },
          "CA1045": {
            "id": "CA1045",
            "name": {
              "text": "DoNotPassTypesByReference"
            },
            "messageStrings": {
              "Default": "Consider a design that does not require that {0} be a reference parameter."
            },
            "properties": {
              "Category": "Microsoft.Design"
            }
          },
          "CA2201": {
            "id": "CA2201",
            "name": {
              "text": "DoNotRaiseReservedExceptionTypes"
            },
            "messageStrings": {
              "TooGeneric": "{0} creates an exception of type {1}, an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type."
            },
            "properties": {
              "Category": "Microsoft.Usage"
            }
          },
          "CA1028": {
            "id": "CA1028",
            "name": {
              "text": "EnumStorageShouldBeInt32"
            },
            "messageStrings": {
              "NotIntegral": "If possible, make the underlying type of {0} Int32 instead of {1}. Otherwise consider Byte, Int16, or Int64."
            },
            "properties": {
              "Category": "Microsoft.Design"
            }
          },
          "CA1008": {
            "id": "CA1008",
            "name": {
              "text": "EnumsShouldHaveZeroValue"
            },
            "messageStrings": {
              "FlagsRename": "In enum {0}, change the name of {1} to 'None'."
            },
            "properties": {
              "Category": "Microsoft.Design"
            }
          },
          "CA1064": {
            "id": "CA1064",
            "name": {
              "text": "ExceptionsShouldBePublic"
            },
            "messageStrings": {
              "Default": "Make exception class {0} public."
            },
            "properties": {
              "Category": "Microsoft.Design"
            }
          },
          "CA1714": {
            "id": "CA1714",
            "name": {
              "text": "FlagsEnumsShouldHavePluralNames"
            },
            "messageStrings": {
              "Default": "If enumeration name {0} is singular, change it to a plural form."
            },
            "properties": {
              "Category": "Microsoft.Naming"
            }
          },
          "CA1709": {
            "id": "CA1709",
            "name": {
              "text": "IdentifiersShouldBeCasedCorrectly"
            },
            "messageStrings": {
              "Member": "Correct the casing of '{0}' in member name {1} by changing it to '{2}'.",
              "Namespace": "Correct the casing of '{0}' in namespace name '{1}' by changing it to '{2}'.",
              "Type": "Correct the casing of '{0}' in type name {1} by changing it to '{2}'."
            },
            "properties": {
              "Category": "Microsoft.Naming"
            }
          },
          "CA1704": {
            "id": "CA1704",
            "name": {
              "text": "IdentifiersShouldBeSpelledCorrectly"
            },
            "messageStrings": {
              "Assembly": "Correct the spelling of '{0}' in assembly name {1}.",
              "Member": "Correct the spelling of '{0}' in member name {1} or remove it entirely if it represents any sort of Hungarian notation.",
              "MemberParameter": "In method {0}, correct the spelling of '{1}' in parameter name {2} or remove it entirely if it represents any sort of Hungarian notation.",
              "MemberParameterMoreMeaningfulName": "In method {0}, consider providing a more meaningful name than parameter name {1}.",
              "Namespace": "Correct the spelling of '{0}' in namespace name '{1}'.",
              "Type": "Correct the spelling of '{0}' in type name {1}."
            },
            "properties": {
              "Category": "Microsoft.Naming"
            }
          },
          "CA1710": {
            "id": "CA1710",
            "name": {
              "text": "IdentifiersShouldHaveCorrectSuffix"
            },
            "messageStrings": {
              "Default": "Rename {0} to end in '{1}'."
            },
            "properties": {
              "Category": "Microsoft.Naming"
            }
          },
          "CA1720": {
            "id": "CA1720",
            "name": {
              "text": "IdentifiersShouldNotContainTypeNames"
            },
            "messageStrings": {
              "LanguageIndependentMemberParameter": "In member {0}, consider replacing the data type identifier '{1}' in parameter name {2} with a more generic term, such as 'value'."
            },
            "properties": {
              "Category": "Microsoft.Naming"
            }
          },
          "CA1707": {
            "id": "CA1707",
            "name": {
              "text": "IdentifiersShouldNotContainUnderscores"
            },
            "messageStrings": {
              "Member": "Remove the underscores from member name {0}."
            },
            "properties": {
              "Category": "Microsoft.Naming"
            }
          },
          "CA1711": {
            "id": "CA1711",
            "name": {
              "text": "IdentifiersShouldNotHaveIncorrectSuffix"
            },
            "messageStrings": {
              "TypeNoAlternate": "Rename type name {0} so that it does not end in '{1}'."
            },
            "properties": {
              "Category": "Microsoft.Naming"
            }
          },
          "CA1716": {
            "id": "CA1716",
            "name": {
              "text": "IdentifiersShouldNotMatchKeywords"
            },
            "messageStrings": {
              "Type": "Rename type {0} so that it no longer conflicts with the reserved language keyword '{1}'. Using a reserved keyword as the name of a type makes it harder for consumers in other languages to use the type."
            },
            "properties": {
              "Category": "Microsoft.Naming"
            }
          },
          "CA1063": {
            "id": "CA1063",
            "name": {
              "text": "ImplementIDisposableCorrectly"
            },
            "messageStrings": {
              "DisposeImplementation": "Modify {0} so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.",
              "ProvideDisposeBool": "Provide an overridable implementation of Dispose(bool) on {0} or mark the type as sealed. A call to Dispose(false) should only clean up native resources. A call to Dispose(true) should clean up both managed and native resources."
            },
            "properties": {
              "Category": "Microsoft.Design"
            }
          },
          "CA2240": {
            "id": "CA2240",
            "name": {
              "text": "ImplementISerializableCorrectly"
            },
            "messageStrings": {
              "Default": "Add an implementation of GetObjectData to type {0}."
            },
            "properties": {
              "Category": "Microsoft.Usage"
            }
          },
          "CA1032": {
            "id": "CA1032",
            "name": {
              "text": "ImplementStandardExceptionConstructors"
            },
            "messageStrings": {
              "Accessibility": "Change the accessibility of {0} to {1}.",
              "MissingConstructor": "Add the following constructor to {0}: {1}."
            },
            "properties": {
              "Category": "Microsoft.Design"
            }
          },
          "CA2208": {
            "id": "CA2208",
            "name": {
              "text": "InstantiateArgumentExceptionsCorrectly"
            },
            "messageStrings": {
              "IncorrectParameterName": "Method {0} passes '{1}' as the {2} argument to a {3} constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method."
            },
            "properties": {
              "Category": "Microsoft.Usage"
            }
          },
          "CA1033": {
            "id": "CA1033",
            "name": {
              "text": "InterfaceMethodsShouldBeCallableByChildTypes"
            },
            "messageStrings": {
              "Default": "Make {0} sealed (a breaking change if this class has previously shipped), implement the method non-explicitly, or implement a new method that exposes the functionality of {1} and is visible to derived classes."
            },
            "properties": {
              "Category": "Microsoft.Design"
            }
          },
          "CA2204": {
            "id": "CA2204",
            "name": {
              "text": "Literals should be spelled correctly"
            },
            "messageStrings": {
              "Default": "Correct the spelling of the unrecognized token '{0}' in the literal '{1}'."
            },
            "properties": {
              "Category": "Microsoft.Naming"
            }
          },
          "CA5350": {
            "id": "CA5350",
            "name": {
              "text": "MD5CannotBeUsed"
            },
            "messageStrings": {
              "Default": "{0} calls into an instance of the {1} type, which implements a cryptographically insecure hashing function. Hash collisions are computationally feasible for the MD5 and HMACMD5 algorithms and are banned by the SDL. Replace this usage with a SHA-2 family hash algorithm (SHA512, SHA384, SHA256)."
            },
            "properties": {
              "Category": "Microsoft.Security.Cryptography"
            }
          },
          "CA2235": {
            "id": "CA2235",
            "name": {
              "text": "MarkAllNonSerializableFields"
            },
            "messageStrings": {
              "Default": "Field {0} is a member of type {1}, which is serializable, but is of type {2}, which is not serializable. Add the NonSerializedAttribute to {0}."
            },
            "properties": {
              "Category": "Microsoft.Usage"
            }
          },
          "CA1014": {
            "id": "CA1014",
            "name": {
              "text": "MarkAssembliesWithClsCompliant"
            },
            "messageStrings": {
              "Default": "Mark {0} with CLSCompliant(true) because it exposes externally visible types."
            },
            "properties": {
              "Category": "Microsoft.Design"
            }
          },
          "CA1824": {
            "id": "CA1824",
            "name": {
              "text": "MarkAssembliesWithNeutralResourcesLanguage"
            },
            "messageStrings": {
              "Default": "Because assembly {0} contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved."
            },
            "properties": {
              "Category": "Microsoft.Performance"
            }
          },
          "CA2237": {
            "id": "CA2237",
            "name": {
              "text": "MarkISerializableTypesWithSerializable"
            },
            "messageStrings": {
              "Default": "Add [Serializable] to {0} as this type implements ISerializable."
            },
            "properties": {
              "Category": "Microsoft.Usage"
            }
          },
          "CA1822": {
            "id": "CA1822",
            "name": {
              "text": "MarkMembersAsStatic"
            },
            "messageStrings": {
              "Default": "The 'this' parameter (or 'Me' in Visual Basic) of {0} is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate."
            },
            "properties": {
              "Category": "Microsoft.Performance"
            }
          },
          "CA1060": {
            "id": "CA1060",
            "name": {
              "text": "MovePInvokesToNativeMethodsClass"
            },
            "messageStrings": {
              "Default": "Because it is a P/Invoke method, {0} should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods."
            },
            "properties": {
              "Category": "Microsoft.Design"
            }
          },
          "CA2211": {
            "id": "CA2211",
            "name": {
              "text": "NonConstantFieldsShouldNotBeVisible"
            },
            "messageStrings": {
              "Default": "Consider making {0} non-public or a constant."
            },
            "properties": {
              "Category": "Microsoft.Usage"
            }
          },
          "CA1308": {
            "id": "CA1308",
            "name": {
              "text": "NormalizeStringsToUppercase"
            },
            "messageStrings": {
              "ToUpperInvariant": "In method {0}, replace the call to {1} with String.ToUpperInvariant()."
            },
            "properties": {
              "Category": "Microsoft.Globalization"
            }
          },
          "CA1725": {
            "id": "CA1725",
            "name": {
              "text": "ParameterNamesShouldMatchBaseDeclaration"
            },
            "messageStrings": {
              "Default": "In member {0}, change parameter name {1} to {2} in order to match the identifier as it has been declared in {3}."
            },
            "properties": {
              "Category": "Microsoft.Naming"
            }
          },
          "CA2234": {
            "id": "CA2234",
            "name": {
              "text": "PassSystemUriObjectsInsteadOfStrings"
            },
            "messageStrings": {
              "Default": "Modify {0} to call {1} instead of {2}."
            },
            "properties": {
              "Category": "Microsoft.Usage"
            }
          },
          "CA1819": {
            "id": "CA1819",
            "name": {
              "text": "PropertiesShouldNotReturnArrays"
            },
            "messageStrings": {
              "Default": "Change {0} to return a collection or make it a method."
            },
            "properties": {
              "Category": "Microsoft.Performance"
            }
          },
          "CA1721": {
            "id": "CA1721",
            "name": {
              "text": "PropertyNamesShouldNotMatchGetMethods"
            },
            "messageStrings": {
              "BaseType": "The property name {0} is confusing given the existence of inherited method {1}. Rename or remove this property."
            },
            "properties": {
              "Category": "Microsoft.Naming"
            }
          },
          "CA1804": {
            "id": "CA1804",
            "name": {
              "text": "RemoveUnusedLocals"
            },
            "messageStrings": {
              "Default": "{0} declares a variable, {1}, of type {2}, which is never used or is only assigned to. Use this variable or remove it."
            },
            "properties": {
              "Category": "Microsoft.Performance"
            }
          },
          "CA1703": {
            "id": "CA1703",
            "name": {
              "text": "ResourceStringsShouldBeSpelledCorrectly"
            },
            "messageStrings": {
              "StringResource": "In resource {0}, referenced by name '{1}', correct the spelling of '{2}' in string value '{3}'."
            },
            "properties": {
              "Category": "Microsoft.Naming"
            }
          },
          "CA2200": {
            "id": "CA2200",
            "name": {
              "text": "RethrowToPreserveStackDetails"
            },
            "messageStrings": {
              "Default": "{0} rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised."
            },
            "properties": {
              "Category": "Microsoft.Usage"
            }
          },
          "CA1504": {
            "id": "CA1504",
            "name": {
              "text": "ReviewMisleadingFieldNames"
            },
            "messageStrings": {
              "Instance": "The field name {0} suggests that it is static (Shared in Visual Basic) data but it is declared as an instance member. Review this member to verify that it should be instance, or consider changing the field name."
            },
            "properties": {
              "Category": "Microsoft.Maintainability"
            }
          },
          "CA1801": {
            "id": "CA1801",
            "name": {
              "text": "ReviewUnusedParameters"
            },
            "messageStrings": {
              "Default": "Parameter {0} of {1} is never used. Remove the parameter or use it in the method body."
            },
            "properties": {
              "Category": "Microsoft.Usage"
            }
          },
          "CA5354": {
            "id": "CA5354",
            "name": {
              "text": "SHA1CannotBeUsed"
            },
            "messageStrings": {
              "Default": "{0} calls into an instance of the {1} type, which implements a cryptographically insecure hashing function. Hash collisions are computationally feasible for the SHA-1 and SHA-0 algorithms and are banned by the SDL. Replace this usage with a SHA-2 family hash algorithm (SHA512, SHA384, SHA256)."
            },
            "properties": {
              "Category": "Microsoft.Security.Cryptography"
            }
          },
          "CA1305": {
            "id": "CA1305",
            "name": {
              "text": "SpecifyIFormatProvider"
            },
            "messageStrings": {
              "IFormatProviderAlternate": "Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be based on input from the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify {4}.",
              "IFormatProviderAlternateString": "Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify {4}."
            },
            "properties": {
              "Category": "Microsoft.Globalization"
            }
          },
          "CA1307": {
            "id": "CA1307",
            "name": {
              "text": "SpecifyStringComparison"
            },
            "messageStrings": {
              "Default": "Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'."
            },
            "properties": {
              "Category": "Microsoft.Globalization"
            }
          },
          "CA1053": {
            "id": "CA1053",
            "name": {
              "text": "StaticHolderTypesShouldNotHaveConstructors"
            },
            "messageStrings": {
              "CSharp2_0": "Because type {0} contains only 'static' members, mark it as 'static' to prevent the compiler from adding a default public constructor.",
              "Default": "Because type {0} contains only 'static' ('Shared' in Visual Basic) members, add a default private constructor to prevent the compiler from adding a default public constructor."
            },
            "properties": {
              "Category": "Microsoft.Design"
            }
          },
          "CA1057": {
            "id": "CA1057",
            "name": {
              "text": "StringUriOverloadsCallSystemUriOverloads"
            },
            "messageStrings": {
              "Default": "Refactor {0} so that it builds a System.Uri object from {1}, and then calls {2}."
            },
            "properties": {
              "Category": "Microsoft.Design"
            }
          },
          "CA1724": {
            "id": "CA1724",
            "name": {
              "text": "TypeNamesShouldNotMatchNamespaces"
            },
            "messageStrings": {
              "System": "The type name {0} conflicts in whole or in part with the namespace name '{1}' defined in the .NET Framework. Rename the type to eliminate the conflict."
            },
            "properties": {
              "Category": "Microsoft.Naming"
            }
          },
          "CA1054": {
            "id": "CA1054",
            "name": {
              "text": "UriParametersShouldNotBeStrings"
            },
            "messageStrings": {
              "Default": "Change the type of parameter {0} of method {1} from string to System.Uri, or provide an overload of {1}, that allows {0} to be passed as a System.Uri object."
            },
            "properties": {
              "Category": "Microsoft.Design"
            }
          },
          "CA1056": {
            "id": "CA1056",
            "name": {
              "text": "UriPropertiesShouldNotBeStrings"
            },
            "messageStrings": {
              "Default": "Change the type of property {0} from string to System.Uri."
            },
            "properties": {
              "Category": "Microsoft.Design"
            }
          },
          "CA1055": {
            "id": "CA1055",
            "name": {
              "text": "UriReturnValuesShouldNotBeStrings"
            },
            "messageStrings": {
              "Default": "Change the return type of {0} from string to System.Uri."
            },
            "properties": {
              "Category": "Microsoft.Design"
            }
          },
          "CA1802": {
            "id": "CA1802",
            "name": {
              "text": "UseLiteralsWhereAppropriate"
            },
            "messageStrings": {
              "Default": "Field {0} is declared as 'static readonly' but is initialized with a constant value '{1}'. Mark this field as 'const' instead."
            },
            "properties": {
              "Category": "Microsoft.Performance"
            }
          },
          "CA1726": {
            "id": "CA1726",
            "name": {
              "text": "UsePreferredTerms"
            },
            "messageStrings": {
              "MemberNoAlternate": "Replace the term '{0}' in member name {1} with an appropriate alternate or remove it entirely.",
              "TypeNoAlternate": "Replace the term '{0}' in type name {1} with an appropriate alternate or remove it entirely."
            },
            "properties": {
              "Category": "Microsoft.Naming"
            }
          },
          "CA1024": {
            "id": "CA1024",
            "name": {
              "text": "UsePropertiesWhereAppropriate"
            },
            "messageStrings": {
              "Default": "Change {0} to a property if appropriate."
            },
            "properties": {
              "Category": "Microsoft.Design"
            }
          },
          "CA3053": {
            "id": "CA3053",
            "name": {
              "text": "UseXmlSecureResolver"
            },
            "messageStrings": {
              "XmlReaderCreateInsecureXmlResolver": "{0} instantiates an XmlReader instance by calling {1} and provided an XmlReaderSettings instance with an insecure XmlResolver property value. This usage is potentially unsafe as untrusted external resources may be resolved during read operations. Provide a XmlReaderSettings instance and set the XmlResolver property to null or an instance of XmlSecureResolver."
            },
            "properties": {
              "Category": "Microsoft.Security.Xml"
            }
          },
          "CA1062": {
            "id": "CA1062",
            "name": {
              "text": "Validate arguments of public methods"
            },
            "messageStrings": {
              "Default": "In externally visible method {0}, validate parameter '{1}' before using it.",
              "Reassigned": "In externally visible method {0}, validate local variable '{1}', which was reassigned from parameter '{2}', before using it."
            },
            "properties": {
              "Category": "Microsoft.Design"
            }
          },
          "CA1500": {
            "id": "CA1500",
            "name": {
              "text": "VariableNamesShouldNotMatchFieldNames"
            },
            "messageStrings": {
              "Parameter": "{0}, a parameter declared in {1}, has the same name as an instance field on the type. Change the name of one of these items."
            },
            "properties": {
              "Category": "Microsoft.Maintainability"
            }
          }
        }
      }
    }
  ]
}