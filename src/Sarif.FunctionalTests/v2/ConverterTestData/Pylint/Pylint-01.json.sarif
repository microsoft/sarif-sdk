{
  "$schema": "http://json.schemastore.org/sarif-2.0.0-csd.2.beta.2018-09-26",
  "version": "2.0.0-csd.2.beta.2018-09-26",
  "runs": [
    {
      "tool": {
        "name": "Pylint"
      },
      "files": {
        "test.py": {
          "mimeType": "text/python"
        }
      },
      "results": [
        {
          "ruleId": "C0301(line-too-long)",
          "level": "warning",
          "message": {
            "text": "Line too long (110/100)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 18
                }
              }
            }
          ]
        },
        {
          "ruleId": "C0330(bad-continuation)",
          "level": "warning",
          "message": {
            "text": "Wrong continued indentation (add 2 spaces).\n        'jason', \"oof\", 'png', 'jeff', 'wdg', 'ryley', 'yossi', 'faucon', 'christopher', 'scott', 'riese']\r\n        ^ |"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 19
                }
              }
            }
          ]
        },
        {
          "ruleId": "C0301(line-too-long)",
          "level": "warning",
          "message": {
            "text": "Line too long (106/100)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 19
                }
              }
            }
          ]
        },
        {
          "ruleId": "C0325(superfluous-parens)",
          "level": "warning",
          "message": {
            "text": "Unnecessary parens after 'return' keyword"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 24
                }
              }
            }
          ]
        },
        {
          "ruleId": "C0303(trailing-whitespace)",
          "level": "warning",
          "message": {
            "text": "Trailing whitespace"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 69
                }
              }
            }
          ]
        },
        {
          "ruleId": "C0303(trailing-whitespace)",
          "level": "warning",
          "message": {
            "text": "Trailing whitespace"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 74
                }
              }
            }
          ]
        },
        {
          "ruleId": "C0303(trailing-whitespace)",
          "level": "warning",
          "message": {
            "text": "Trailing whitespace"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 76
                }
              }
            }
          ]
        },
        {
          "ruleId": "C0325(superfluous-parens)",
          "level": "warning",
          "message": {
            "text": "Unnecessary parens after 'if' keyword"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 79
                }
              }
            }
          ]
        },
        {
          "ruleId": "C0303(trailing-whitespace)",
          "level": "warning",
          "message": {
            "text": "Trailing whitespace"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 85
                }
              }
            }
          ]
        },
        {
          "ruleId": "C0330(bad-continuation)",
          "level": "warning",
          "message": {
            "text": "Wrong continued indentation (remove 4 spaces).\n                                 min_df=2, stop_words= swords,\r\n                             |   ^"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 102
                }
              }
            }
          ]
        },
        {
          "ruleId": "C0326(bad-whitespace)",
          "level": "warning",
          "message": {
            "text": "No space allowed after keyword argument assignment\n                                 min_df=2, stop_words= swords,\r\n                                                     ^"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 102
                }
              }
            }
          ]
        },
        {
          "ruleId": "C0330(bad-continuation)",
          "level": "warning",
          "message": {
            "text": "Wrong continued indentation (remove 4 spaces).\n                                 use_idf=True)\r\n                             |   ^"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 103
                }
              }
            }
          ]
        },
        {
          "ruleId": "C0330(bad-continuation)",
          "level": "warning",
          "message": {
            "text": "Wrong continued indentation (remove 4 spaces).\n                         init_size=1000, batch_size=1000, verbose=True)\r\n                     |   ^"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 107
                }
              }
            }
          ]
        },
        {
          "ruleId": "C0304(missing-final-newline)",
          "level": "warning",
          "message": {
            "text": "Final newline missing"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 114
                }
              }
            }
          ]
        },
        {
          "ruleId": "C0111(missing-docstring)",
          "level": "warning",
          "message": {
            "text": "Missing module docstring"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "W0402(deprecated-module)",
          "level": "warning",
          "message": {
            "text": "Uses of a deprecated module 'optparse'"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C0103(invalid-name)",
          "level": "warning",
          "message": {
            "text": "Constant name \"today\" doesn't conform to UPPER_CASE naming style"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 16
                }
              }
            }
          ]
        },
        {
          "ruleId": "C0103(invalid-name)",
          "level": "warning",
          "message": {
            "text": "Constant name \"clusters\" doesn't conform to UPPER_CASE naming style"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 17
                }
              }
            }
          ]
        },
        {
          "ruleId": "C0103(invalid-name)",
          "level": "warning",
          "message": {
            "text": "Constant name \"swords\" doesn't conform to UPPER_CASE naming style"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 18
                }
              }
            }
          ]
        },
        {
          "ruleId": "C0103(invalid-name)",
          "level": "warning",
          "message": {
            "text": "Function name \"getLast30daysMails\" doesn't conform to snake_case naming style"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "C0111(missing-docstring)",
          "level": "warning",
          "message": {
            "text": "Missing function docstring"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "C0103(invalid-name)",
          "level": "warning",
          "message": {
            "text": "Variable name \"sentOn\" doesn't conform to snake_case naming style"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 4
                }
              }
            }
          ]
        },
        {
          "ruleId": "C0103(invalid-name)",
          "level": "warning",
          "message": {
            "text": "Variable name \"mailTime\" doesn't conform to snake_case naming style"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 4
                }
              }
            }
          ]
        },
        {
          "ruleId": "C0103(invalid-name)",
          "level": "warning",
          "message": {
            "text": "Argument name \"X\" doesn't conform to snake_case naming style"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 26
                }
              }
            }
          ]
        },
        {
          "ruleId": "C0111(missing-docstring)",
          "level": "warning",
          "message": {
            "text": "Missing function docstring"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 26
                }
              }
            }
          ]
        },
        {
          "ruleId": "W0621(redefined-outer-name)",
          "level": "warning",
          "message": {
            "text": "Redefining name 'X' from outer scope (line 104)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 8
                }
              }
            }
          ]
        },
        {
          "ruleId": "W0621(redefined-outer-name)",
          "level": "warning",
          "message": {
            "text": "Redefining name 't0' from outer scope (line 109)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 4
                }
              }
            }
          ]
        },
        {
          "ruleId": "W0621(redefined-outer-name)",
          "level": "warning",
          "message": {
            "text": "Redefining name 'svd' from outer scope (line 105)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 4
                }
              }
            }
          ]
        },
        {
          "ruleId": "C0103(invalid-name)",
          "level": "warning",
          "message": {
            "text": "Variable name \"t0\" doesn't conform to snake_case naming style"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 4
                }
              }
            }
          ]
        },
        {
          "ruleId": "C0103(invalid-name)",
          "level": "warning",
          "message": {
            "text": "Constant name \"hcorpus\" doesn't conform to UPPER_CASE naming style"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 47
                }
              }
            }
          ]
        },
        {
          "ruleId": "C0103(invalid-name)",
          "level": "warning",
          "message": {
            "text": "Function name \"getHash\" doesn't conform to snake_case naming style"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 48
                }
              }
            }
          ]
        },
        {
          "ruleId": "C0111(missing-docstring)",
          "level": "warning",
          "message": {
            "text": "Missing function docstring"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 48
                }
              }
            }
          ]
        },
        {
          "ruleId": "C0111(missing-docstring)",
          "level": "warning",
          "message": {
            "text": "Missing function docstring"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 51
                }
              }
            }
          ]
        },
        {
          "ruleId": "W0621(redefined-outer-name)",
          "level": "warning",
          "message": {
            "text": "Redefining name 'corpus' from outer scope (line 99)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 16
                }
              }
            }
          ]
        },
        {
          "ruleId": "C0103(invalid-name)",
          "level": "warning",
          "message": {
            "text": "Constant name \"groups\" doesn't conform to UPPER_CASE naming style"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 55
                }
              }
            }
          ]
        },
        {
          "ruleId": "C0103(invalid-name)",
          "level": "warning",
          "message": {
            "text": "Function name \"getData\" doesn't conform to snake_case naming style"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 57
                }
              }
            }
          ]
        },
        {
          "ruleId": "C0103(invalid-name)",
          "level": "warning",
          "message": {
            "text": "Argument name \"km\" doesn't conform to snake_case naming style"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 57
                }
              }
            }
          ]
        },
        {
          "ruleId": "C0111(missing-docstring)",
          "level": "warning",
          "message": {
            "text": "Missing function docstring"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 57
                }
              }
            }
          ]
        },
        {
          "ruleId": "W0621(redefined-outer-name)",
          "level": "warning",
          "message": {
            "text": "Redefining name 'km' from outer scope (line 106)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 12
                }
              }
            }
          ]
        },
        {
          "ruleId": "W0621(redefined-outer-name)",
          "level": "warning",
          "message": {
            "text": "Redefining name 'svd' from outer scope (line 105)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 16
                }
              }
            }
          ]
        },
        {
          "ruleId": "C0103(invalid-name)",
          "level": "warning",
          "message": {
            "text": "Function name \"groupCluster\" doesn't conform to snake_case naming style"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 63
                }
              }
            }
          ]
        },
        {
          "ruleId": "C0111(missing-docstring)",
          "level": "warning",
          "message": {
            "text": "Missing function docstring"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 63
                }
              }
            }
          ]
        },
        {
          "ruleId": "C0103(invalid-name)",
          "level": "warning",
          "message": {
            "text": "Variable name \"hs\" doesn't conform to snake_case naming style"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 4
                }
              }
            }
          ]
        },
        {
          "ruleId": "C0103(invalid-name)",
          "level": "warning",
          "message": {
            "text": "Function name \"mapCluster\" doesn't conform to snake_case naming style"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 73
                }
              }
            }
          ]
        },
        {
          "ruleId": "C0111(missing-docstring)",
          "level": "warning",
          "message": {
            "text": "Missing function docstring"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 73
                }
              }
            }
          ]
        },
        {
          "ruleId": "C0103(invalid-name)",
          "level": "warning",
          "message": {
            "text": "Variable name \"cd\" doesn't conform to snake_case naming style"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 4
                }
              }
            }
          ]
        },
        {
          "ruleId": "C0103(invalid-name)",
          "level": "warning",
          "message": {
            "text": "Argument name \"km\" doesn't conform to snake_case naming style"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 82
                }
              }
            }
          ]
        },
        {
          "ruleId": "C0111(missing-docstring)",
          "level": "warning",
          "message": {
            "text": "Missing function docstring"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 82
                }
              }
            }
          ]
        },
        {
          "ruleId": "W0621(redefined-outer-name)",
          "level": "warning",
          "message": {
            "text": "Redefining name 'km' from outer scope (line 106)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "W0621(redefined-outer-name)",
          "level": "warning",
          "message": {
            "text": "Redefining name 'svd' from outer scope (line 105)"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 25
                }
              }
            }
          ]
        },
        {
          "ruleId": "C0103(invalid-name)",
          "level": "warning",
          "message": {
            "text": "Constant name \"outlook\" doesn't conform to UPPER_CASE naming style"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 93
                }
              }
            }
          ]
        },
        {
          "ruleId": "C0103(invalid-name)",
          "level": "warning",
          "message": {
            "text": "Constant name \"inbox\" doesn't conform to UPPER_CASE naming style"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 94
                }
              }
            }
          ]
        },
        {
          "ruleId": "C0103(invalid-name)",
          "level": "warning",
          "message": {
            "text": "Constant name \"messages\" doesn't conform to UPPER_CASE naming style"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 97
                }
              }
            }
          ]
        },
        {
          "ruleId": "C0103(invalid-name)",
          "level": "warning",
          "message": {
            "text": "Constant name \"filter_messages\" doesn't conform to UPPER_CASE naming style"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 98
                }
              }
            }
          ]
        },
        {
          "ruleId": "C0103(invalid-name)",
          "level": "warning",
          "message": {
            "text": "Constant name \"corpus\" doesn't conform to UPPER_CASE naming style"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 99
                }
              }
            }
          ]
        },
        {
          "ruleId": "C0103(invalid-name)",
          "level": "warning",
          "message": {
            "text": "Constant name \"vectorizer\" doesn't conform to UPPER_CASE naming style"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 101
                }
              }
            }
          ]
        },
        {
          "ruleId": "C0103(invalid-name)",
          "level": "warning",
          "message": {
            "text": "Constant name \"dx\" doesn't conform to UPPER_CASE naming style"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "C0103(invalid-name)",
          "level": "warning",
          "message": {
            "text": "Constant name \"svd\" doesn't conform to UPPER_CASE naming style"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "C0103(invalid-name)",
          "level": "warning",
          "message": {
            "text": "Constant name \"km\" doesn't conform to UPPER_CASE naming style"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 106
                }
              }
            }
          ]
        },
        {
          "ruleId": "C0103(invalid-name)",
          "level": "warning",
          "message": {
            "text": "Constant name \"t0\" doesn't conform to UPPER_CASE naming style"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 109
                }
              }
            }
          ]
        },
        {
          "ruleId": "W0104(pointless-statement)",
          "level": "warning",
          "message": {
            "text": "Statement seems to have no effect"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 114
                }
              }
            }
          ]
        },
        {
          "ruleId": "W0611(unused-import)",
          "level": "warning",
          "message": {
            "text": "Unused timedelta imported from datetime as td"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "W0611(unused-import)",
          "level": "warning",
          "message": {
            "text": "Unused HashingVectorizer imported from sklearn.feature_extraction.text"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 4
                }
              }
            }
          ]
        },
        {
          "ruleId": "W0611(unused-import)",
          "level": "warning",
          "message": {
            "text": "Unused TfidfTransformer imported from sklearn.feature_extraction.text"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "W0611(unused-import)",
          "level": "warning",
          "message": {
            "text": "Unused import sys"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "W0611(unused-import)",
          "level": "warning",
          "message": {
            "text": "Unused OptionParser imported from optparse"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "W0611(unused-import)",
          "level": "warning",
          "message": {
            "text": "Unused KMeans imported from sklearn.cluster"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "C0411(wrong-import-order)",
          "level": "warning",
          "message": {
            "text": "standard import \"from time import time\" should be placed before \"from sklearn.decomposition import TruncatedSVD\""
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 8
                }
              }
            }
          ]
        },
        {
          "ruleId": "C0411(wrong-import-order)",
          "level": "warning",
          "message": {
            "text": "standard import \"import sys\" should be placed before \"from sklearn.decomposition import TruncatedSVD\""
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 11
                }
              }
            }
          ]
        },
        {
          "ruleId": "C0411(wrong-import-order)",
          "level": "warning",
          "message": {
            "text": "standard import \"import hashlib\" should be placed before \"from sklearn.decomposition import TruncatedSVD\""
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 12
                }
              }
            }
          ]
        },
        {
          "ruleId": "C0411(wrong-import-order)",
          "level": "warning",
          "message": {
            "text": "standard import \"from optparse import OptionParser\" should be placed before \"from sklearn.decomposition import TruncatedSVD\""
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 13
                }
              }
            }
          ]
        },
        {
          "ruleId": "C0412(ungrouped-imports)",
          "level": "warning",
          "message": {
            "text": "Imports from package sklearn are not grouped"
          },
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "test.py"
                },
                "region": {
                  "startLine": 14
                }
              }
            }
          ]
        }
      ]
    }
  ]
}