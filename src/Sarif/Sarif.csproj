<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup Label="AssemblyAttributes">
    <AssemblyTitle>SARIF SDK Library</AssemblyTitle>
    <Description>Object model and utilities for reading and writing files in the SARIF format</Description>
  </PropertyGroup>

  <PropertyGroup Label="Packaging">
    <!--
    Without this property setting, the id of the NuGet package would match the
    assembly name, "Sarif".
    -->
    <PackageId>Sarif.Sdk</PackageId>

    <!-- Place content files at the root of the package. -->
    <ContentTargetFolders>.</ContentTargetFolders>
  </PropertyGroup>

  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), build.props))\build.props" />

  <PropertyGroup>
    <TargetFrameworks>netstandard2.0</TargetFrameworks>
    <TargetFrameworks Condition="$(OS) == 'Windows_NT'">$(TargetFrameworks);net462</TargetFrameworks>
    <EnableNETAnalyzers>true</EnableNETAnalyzers>
  </PropertyGroup>

  <ItemGroup>
    <Compile Remove="NotYetAutoGenerated\**" />
    <EmbeddedResource Remove="NotYetAutoGenerated\**" />
    <None Remove="NotYetAutoGenerated\**" />
  </ItemGroup>

  <Choose>
    <When Condition="$(TargetFramework) == 'netstandard2.0'">
      <ItemGroup>
        <!-- We have to ship pre-patch versions of NewtonSoft for VisualStudio SDK.  
             We mitigate risk by limiting nesting depth. -->
        <PackageReference Include="Newtonsoft.Json" Version="9.0.1" NoWarn="NU1903" />
      </ItemGroup>
    </When>
    <Otherwise>
      <ItemGroup>
        <PackageReference Include="Newtonsoft.Json" Version="6.0.8" NoWarn="NU1903" />
        <Reference Include="System.Web" />
        <Reference Include="System.Net.Http" />
      </ItemGroup>
    </Otherwise>
  </Choose>

  <ItemGroup>
    <PackageReference Include="Microsoft.Diagnostics.Tracing.EventRegister" Version="1.1.28" Condition="$(OS) == 'Windows_NT'" />
    <PackageReference Include="Microsoft.Diagnostics.Tracing.TraceEvent" Version="3.1.3" />
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.1.1" PrivateAssets="All" />
    <PackageReference Include="System.Collections.Immutable" Version="5.0.0" />
    <PackageReference Include="System.Diagnostics.Debug" Version="4.3.0" />
    <PackageReference Include="System.IO.FileSystem.Primitives" Version="4.3.0" />
    <PackageReference Include="System.Text.Encoding.CodePages" Version="4.3.0" />
    <PackageReference Include="System.Text.Encoding.Extensions" Version="4.3.0" />
  </ItemGroup>

  <ItemGroup Label="Packaging">
    <!--
    Marking these items as content causes them to be included in the NuGet package.
    -->
    <Content Include="Schemata\sarif-$(SchemaVersionAsPublishedToSchemaStoreOrg).json" />
    <Content Include="Schemata\sarif-external-property-file-$(SchemaVersionAsPublishedToSchemaStoreOrg).json" />
    <!-- This item will be added to the NuGet package, however. -->
    <Content Include="..\..\ReleaseHistory.md" />
  </ItemGroup>
  <PropertyGroup>
    <EtwManifestForceAll>true</EtwManifestForceAll>
  </PropertyGroup>

  <ItemGroup>
    <JsonSchemaFile Include="$(MsBuildThisFileDirectory)Schemata\sarif-$(SchemaVersionAsPublishedToSchemaStoreOrg).json">
      <Namespace>$(RootNamespace)</Namespace>
      <RootClassName>SarifLog</RootClassName>
      <CopyrightFilePath>CopyrightNotice.txt</CopyrightFilePath>
      <HintsFilePath>CodeGenHints.json</HintsFilePath>
    </JsonSchemaFile>
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Update="SdkResources.resx">
      <Generator>PublicResXFileCodeGenerator</Generator>
      <CustomToolNamespace>Microsoft.CodeAnalysis.Sarif</CustomToolNamespace>
      <LastGenOutput>SdkResources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>

  <ItemGroup>
    <None Include="CodeGenHints.json" />
    <None Include="CopyrightNotice.txt" />
  </ItemGroup>

  <ItemGroup>
    <Compile Update="SdkResources.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>SdkResources.resx</DependentUpon>
    </Compile>
  </ItemGroup>
  
<!-- Disabling the automatic code generation. This code emit is generating
     style guideline breaks. It is also extremely stable at this point. 
     Moving forward, we could update JSchema to generate code that strictly
     meets our style guidelines. We can also temporarily enable this targets
     file again (and reapply style changes) if necessary.
  <Import Project="ToDotNet\ToDotNet.targets" />  
-->

</Project>
