// Copyright (c) Microsoft. All rights reserved. Licensed under the MIT        
// license. See LICENSE file in the project root for full license information. 

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Newtonsoft.Json;

namespace Microsoft.CodeAnalysis.Sarif.Processors
{
    public class ActionTuple
    {
        public SarifLogAction Action;
        public string[] Parameters;
        
        /// <summary>
        /// Two ActionTuples are equal if they take the same actions with the same parameters.
        /// </summary>
        public override bool Equals(object obj)
        {
            ActionTuple other = obj as ActionTuple;
            if (other == null)
            {
                return base.Equals(obj);
            }
            if(this.Action != other.Action)
            {
                return false;
            }

            if (this.Parameters.Length != other.Parameters.Length)
            {
                return false;
            }

            for (int i = 0; i < this.Parameters.Length; i++)
            {
                if(!this.Parameters[i].Equals(other.Parameters[i]))
                {
                    return false;
                }
            }

            return true;
        }
        
        /// <summary>
        /// Generated by Visual Studio--we're overriding Equals() so we need to override this as well.
        /// </summary>
        public override int GetHashCode()
        {
            var hashCode = -2011433744;
            hashCode = hashCode * -1521134295 + Action.GetHashCode();
            hashCode = hashCode * -1521134295 + EqualityComparer<string[]>.Default.GetHashCode(Parameters);
            return hashCode;
        }
    }

    /// <summary>
    /// Serializable log manipulation pipeline--takes a series of stages, and then executes them sequentially on a log file.
    /// </summary>
    [Serializable]
    public class SarifLogPipeline
    {
        [JsonRequired]
        public List<ActionTuple> Actions
        {
            get;
            private set;
        }
        
        private GenericActionPipeline<SarifLog> _pipeline;

        [JsonConstructor]
        public SarifLogPipeline(List<ActionTuple> actions)
        {
            this.Actions = actions;
            
            _pipeline = new GenericActionPipeline<SarifLog>(Actions.Select(a => SarifLogProcessorFactory.GetActionStage(a.Action, a.Parameters)));
        }

        public IEnumerable<SarifLog> ApplyPipeline(IEnumerable<SarifLog> logs)
        {
            return _pipeline.Act(logs);
        }
        
        /// <summary>
        /// Two pipelines are equal if they apply the same steps to the input sarif files.
        /// </summary>
        public override bool Equals(object obj)
        {
            SarifLogPipeline other = obj as SarifLogPipeline;

            if (other == null)
            {
                return base.Equals(obj);
            }

            if (other.Actions.Count != this.Actions.Count)
            {
                return false;
            }

            for (int i = 0; i < this.Actions.Count; i++)
            {
                if(!this.Actions[i].Equals(other.Actions[i]))
                {
                    return false;
                }
            }

            return true;
        }

        /// <summary>
        /// Generated by Visual Studio.  We're overriding Equals() so we need to override this as well.
        /// </summary>
        public override int GetHashCode()
        {
            return 1522684324 + EqualityComparer<List<ActionTuple>>.Default.GetHashCode(Actions);
        }
    }
}
