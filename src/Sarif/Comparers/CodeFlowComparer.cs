// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root for full license information.

using System.Collections.Generic;

/// <summary>
/// Note: This comparer may not have all properties compared. Will be replaced by a comprehensive
/// comparer generated by JSchema as part of EqualityComparer in a planned comprehensive solution.
/// Tracking by issue: https://github.com/microsoft/jschema/issues/141
/// </summary>
namespace Microsoft.CodeAnalysis.Sarif.Comparers
{
    internal class CodeFlowComparer : IComparer<CodeFlow>
    {
        internal static readonly CodeFlowComparer Instance = new CodeFlowComparer();

        public int Compare(CodeFlow left, CodeFlow right)
        {
            int compareResult = 0;

            if (left.TryReferenceCompares(right, out compareResult))
            {
                return compareResult;
            }

            compareResult = MessageComparer.Instance.Compare(left.Message, right.Message);

            if (compareResult != 0)
            {
                return compareResult;
            }

            compareResult = left.ThreadFlows.ListCompares(right.ThreadFlows, ThreadFlowComparer.Instance);

            if (compareResult != 0)
            {
                return compareResult;
            }

            // Note: There may be other properties are not compared.
            return compareResult;
        }
    }
}
