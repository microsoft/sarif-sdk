<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Microsoft.Sarif.Viewer.Themes"
                    xmlns:cvt="clr-namespace:Microsoft.Sarif.Viewer.Converters"
                    xmlns:viewer="clr-namespace:Microsoft.Sarif.Viewer"
                    xmlns:shell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.14.0">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Microsoft.Sarif.Viewer;component/Themes/DefaultStyles.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <DataTemplate x:Key="CallTreeTemplate">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <ToolBarTray Grid.Row="0">
                <ToolBar ToolBarTray.IsLocked="True">
                    <Button Command="{Binding ExpandAllCommand}"
                            ToolTip="Expand all">
                        <TextBlock Text="+"
                                   FontFamily="Consolas"
                                   FontSize="18"
                                   FontWeight="Medium" />
                    </Button>
                    <Button Command="{Binding CollapseAllCommand}"
                            ToolTip="Collapse all">
                        <TextBlock Text="-"
                                   FontFamily="Consolas"
                                   FontSize="18"
                                   FontWeight="Medium" />
                    </Button>
                    <Button Command="{Binding IntelligentExpandCommand}"
                            ToolTip="Intelligent expand">
                        <TextBlock Text="±"
                                   FontFamily="Consolas"
                                   FontSize="18"
                                   FontWeight="Medium" />
                    </Button>
                    <Separator Margin="5 0 5 0" />
                    <Slider Maximum="200"
                            IsSnapToTickEnabled="True"
                            TickFrequency="100" 
                            TickPlacement="BottomRight"
                            Width="100px"
                            Value="{Binding Verbosity}" 
                            ToolTip="Tree verbosity"
                            Foreground="DarkGray" />
                </ToolBar>
            </ToolBarTray>
            <ItemsControl Grid.Row="1"
                          ItemsSource="{Binding}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <DockPanel IsItemsHost="True"
                                   LastChildFill="True" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemContainerStyle>
                    <Style TargetType="{x:Type ContentPresenter}">
                        <Setter Property="DockPanel.Dock"
                                Value="Top" />
                    </Style>
                </ItemsControl.ItemContainerStyle>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <DataTemplate.Resources>
                            <Style x:Key="callTreeBaseTextStyle"
                                   TargetType="TextBlock"
                                   BasedOn="{StaticResource baseTextBlockStyle}">
                                <Setter Property="Margin"
                                        Value="0 0 10 0" />
                            </Style>
                            <Style x:Key="callTreeMessageTextStyle"
                                   TargetType="TextBlock"
                                   BasedOn="{StaticResource callTreeBaseTextStyle}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Location.Importance}"
                                                 Value="Essential">
                                        <Setter Property="FontWeight"
                                                Value="Bold" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Location.Importance}"
                                                 Value="Important">
                                        <Setter Property="FontWeight"
                                                Value="Normal" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Location.Importance}"
                                                 Value="Unimportant">
                                        <Setter Property="FontWeight"
                                                Value="Normal" />
                                        <Setter Property="Foreground"
                                                Value="Gray" />
                                    </DataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Location.Message, Converter={StaticResource stringToVisibilityConverter}}"
                                                       Value="Collapsed" />
                                            <Condition Binding="{Binding Location.Snippet, Converter={StaticResource stringToVisibilityConverter}}"
                                                       Value="Visible" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="TextBlock.FontFamily"
                                                Value="Consolas" />
                                        <Setter Property="FontSize"
                                                Value="10pt" />
                                    </MultiDataTrigger>
                                    <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}}}"
                                                 Value="True">
                                        <Setter Property="Foreground"
                                                Value="White" />
                                    </DataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}}}"
                                                       Value="True" />
                                            <Condition Binding="{Binding IsFocused, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}}}"
                                                       Value="False" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Foreground"
                                                Value="Black" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                            <Style x:Key="callTreeLocationTextStyle"
                                   TargetType="TextBlock"
                                   BasedOn="{StaticResource callTreeBaseTextStyle}">
                                <Setter Property="Visibility"
                                        Value="{Binding LocationDisplayString, Converter={StaticResource stringToVisibilityConverter}}" />
                            </Style>
                        </DataTemplate.Resources>
                        <TreeView ItemsSource="{Binding TopLevelNodes}"
                                  viewer:TreeViewHelper.SelectedItem="{Binding SelectedItem, Mode=TwoWay}"
                                  Grid.IsSharedSizeScope="True"
                                  BorderThickness="0 0 0 0">
                            <TreeView.Resources>
                                <cvt:CallTreeNodeToTextConverter x:Key="callTreeToTextConverter" />
                                <cvt:StringToVisibilityConverter x:Key="stringToVisibilityConverter" />
                            </TreeView.Resources>
                            <TreeView.ItemContainerStyle>
                                <Style TargetType="{x:Type TreeViewItem}">
                                    <Setter Property="IsExpanded"
                                            Value="{Binding IsExpanded, Mode=TwoWay}" />
                                    <Setter Property="Visibility"
                                            Value="{Binding Visibility}" />
                                </Style>
                            </TreeView.ItemContainerStyle>
                            <TreeView.ItemTemplate>
                                <HierarchicalDataTemplate DataType="x:Type local:CallTreeNode"
                                                          ItemsSource="{Binding Children}">
                                    <Grid>
                                        <Grid.ToolTip>
                                            <TextBlock>
                                                <Run Text="{Binding Location.Kind}" />
                                            </TextBlock>
                                        </Grid.ToolTip>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="MessageGroup" />
                                            <ColumnDefinition SharedSizeGroup="LocationGroup" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0"
                                                   Text="{Binding Converter={StaticResource callTreeToTextConverter}}"
                                                   Style="{StaticResource callTreeMessageTextStyle}" />
                                        <TextBlock Grid.Column="1"
                                                   Text="{Binding LocationDisplayString, Mode=OneWay}"
                                                   Style="{StaticResource callTreeLocationTextStyle}" />
                                    </Grid>
                                </HierarchicalDataTemplate>
                            </TreeView.ItemTemplate>
                            <TreeView.InputBindings>
                                <KeyBinding Command="{Binding SelectPreviousCommand}"
                                            Gesture="CTRL+ALT+SHIFT+F7"
                                            CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TreeView}}" />
                                <KeyBinding Command="{Binding SelectNextCommand}"
                                            Gesture="CTRL+ALT+SHIFT+F8"
                                            CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TreeView}}" />
                            </TreeView.InputBindings>
                        </TreeView>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Grid>
    </DataTemplate>
</ResourceDictionary>