<UserControl x:Class="Microsoft.Sarif.Viewer.Views.SarifViewerControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:vs_shell="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
             xmlns:viewModels="clr-namespace:Microsoft.Sarif.Viewer.ViewModels"
             xmlns:controls="clr-namespace:Microsoft.Sarif.Viewer.Controls"
             mc:Ignorable="d"
             d:DesignHeight="500"
             d:DesignWidth="500"
             d:DataContext="{x:Static viewModels:ViewModelLocator.DesignTime}"
             FocusManager.FocusedElement="{Binding ElementName=RuleIdHyperlink}"
             Background="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowBackgroundBrushKey}}">
    <UserControl.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Microsoft.Sarif.Viewer;component/Themes/DefaultStyles.xaml" />
                <ResourceDictionary Source="pack://application:,,,/Microsoft.Sarif.Viewer;component/Views/SarifViewerControlStringResources.xaml" />
                <ResourceDictionary Source="pack://application:,,,/Microsoft.Sarif.Viewer;component/Themes/SarifViewerControlStyles.xaml" />
                <ResourceDictionary Source="pack://application:,,,/Microsoft.Sarif.Viewer;component/Views/TreeView.xaml" />
                <ResourceDictionary Source="pack://application:,,,/Microsoft.Sarif.Viewer;component/Views/Locations.xaml" />
                <ResourceDictionary Source="pack://application:,,,/Microsoft.Sarif.Viewer;component/Views/Stacks.xaml" />
                <ResourceDictionary Source="pack://application:,,,/Microsoft.Sarif.Viewer;component/Views/CallTrees.xaml" />
                <ResourceDictionary Source="pack://application:,,,/Microsoft.Sarif.Viewer;component/Views/Fixes.xaml" />
                <ResourceDictionary Source="pack://application:,,,/Microsoft.Sarif.Viewer;component/Views/Information.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>

    </UserControl.Resources>

    <!-- The user control starts here. -->
    <Grid KeyboardNavigation.TabNavigation="Cycle">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!-- This is the header of the dialog. It displays general info about the result. -->
        <Grid Grid.Row="0"
              Style="{StaticResource HeaderGridStyle}">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Border Grid.Row="0"
                    Style="{StaticResource HeaderGridBorderStyle}">
                <DockPanel Style="{StaticResource HeaderGridBorderPanelStyle}">
                    <controls:InternetHyperlink x:Name="RuleIdHyperlink"
                                                Text="{Binding Rule.Id}"
                                                AutomationProperties.Name="{Binding Rule.Id, StringFormat=Rule ID: {0}}"
                                                NavigateUri="{Binding Rule.HelpUri}"
                                                IsTabStop="False"
                                                TabIndex="1"
                                                Style="{StaticResource RuleIdHyperlinkStyle}"/>
                    <TextBlock Text="{Binding Rule.Name, Mode=OneTime}"
                               AutomationProperties.Name="{Binding Rule.Name, Mode=OneTime, StringFormat=Rule name: {0}}"
                               Style="{StaticResource HeaderTextStyle}"/>
                    <TextBlock Text="|"
                               Style="{StaticResource HeaderSeparatorStyle}"/>
                    <DockPanel DataContext="{Binding Locations[0]}"
                               Style="{StaticResource HeaderLocationPanelStyle}">
                        <DockPanel.ToolTip>
                            <ToolTip DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                                <WrapPanel Style="{StaticResource HeaderLocationToolTipPanelStyle}">
                                    <TextBlock>
                                        <Run Text="{Binding FilePath, Mode=OneWay}" />
                                    </TextBlock>
                                    <TextBlock Visibility="{Binding Region.StartLine, Converter={StaticResource Int32ToVisibilityConverter}}"
                                               Style="{StaticResource HeaderLocationRegionTextStyle}">
                                        <Run Text="{Binding Region.StartLine, Mode=OneWay, StringFormat={StaticResource SarifViewerControl_HeaderLocation_ToolTip_RegionStartLine_Text_FormatString}}" />
                                    </TextBlock>
                                    <TextBlock Visibility="{Binding Region.StartColumn, Converter={StaticResource Int32ToVisibilityConverter}}"
                                               Style="{StaticResource HeaderLocationRegionTextStyle}">
                                        <Run Text="{Binding Region.StartColumn, Mode=OneWay, StringFormat={StaticResource SarifViewerControl_HeaderLocation_ToolTip_RegionStartColumn_Text_FormatString}}" />
                                    </TextBlock>
                                </WrapPanel>
                            </ToolTip>
                        </DockPanel.ToolTip>
                        <TextBlock AutomationProperties.Name="{Binding FileName, StringFormat=File name: {0}}"
                                   Style="{StaticResource HeaderLocationFilenameTextStyle}">
                            <Run Text="{Binding FileName, Mode=OneWay}" />
                        </TextBlock>
                        <TextBlock AutomationProperties.Name="{Binding Location, StringFormat=Location: {0}}"
                                   Visibility="{Binding Location, Converter={StaticResource StringToVisibilityConverter}}"
                                   Style="{StaticResource HeaderLocationLocationTextStyle}">
                            <Run Text="{Binding Location, Mode=OneWay}" />
                        </TextBlock>
                    </DockPanel>
                </DockPanel>
            </Border>
            <controls:BindableTextBlock Grid.Row="2"
                                        InlineList="{Binding MessageInlines}"
                                        Style="{StaticResource HeaderMessageTextStyle}"/>
        </Grid>
        
        <!-- These are the tabs which display the result information. -->
        <TabControl x:Name="ViolationPropertiesTabControl"
                    Grid.Row="1"
                    SelectedValue="{Binding SelectedTab, Mode=TwoWay}">
            <TabControl.Resources>
                <Style BasedOn="{StaticResource TabControlStyle}" TargetType="{x:Type TabControl}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TabControl}">
                                <Grid x:Name="TemplateRoot"
                                      KeyboardNavigation.TabNavigation="Local"
                                      Style="{StaticResource TabControlGridStyle}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition x:Name="ColumnDefinition0"/>
                                        <ColumnDefinition x:Name="ColumnDefinition1"
                                                          Width="0"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition x:Name="RowDefinition0"
                                                       Height="Auto"/>
                                        <RowDefinition x:Name="RowDefinition1"
                                                       Height="*"/>
                                    </Grid.RowDefinitions>
                                    <TabPanel x:Name="HeaderTabPanel"
                                              Grid.Row="0" 
                                              Grid.Column="0"
                                              IsItemsHost="True"
                                              KeyboardNavigation.TabIndex="2"
                                              Style="{StaticResource HeaderTabPanelStyle}"/>
                                    <Border x:Name="ContentBorder"
                                            Grid.Column="0" 
                                            Grid.Row="1"
                                            KeyboardNavigation.DirectionalNavigation="Contained"
                                            KeyboardNavigation.TabNavigation="Local"
                                            Style="{StaticResource TabControlContentBorderStyle}">
                                        <ContentPresenter ContentSource="SelectedContent"
                                                          Style="{StaticResource TabControlContentPresenterStyle}"/>
                                    </Border>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="TabStripPlacement" Value="Bottom">
                                        <Setter Property="Grid.Row" TargetName="HeaderTabPanel" Value="1"/>
                                        <Setter Property="Grid.Row" TargetName="ContentBorder" Value="0"/>
                                        <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                        <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                                        <Setter Property="Margin" TargetName="HeaderTabPanel" Value="2,0,2,2"/>
                                    </Trigger>
                                    <Trigger Property="TabStripPlacement" Value="Left">
                                        <Setter Property="Grid.Row" TargetName="HeaderTabPanel" Value="0"/>
                                        <Setter Property="Grid.Row" TargetName="ContentBorder" Value="0"/>
                                        <Setter Property="Grid.Column" TargetName="HeaderTabPanel" Value="0"/>
                                        <Setter Property="Grid.Column" TargetName="ContentBorder" Value="1"/>
                                        <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                                        <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                                        <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                        <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                        <Setter Property="Margin" TargetName="HeaderTabPanel" Value="2,2,0,2"/>
                                    </Trigger>
                                    <Trigger Property="TabStripPlacement" Value="Right">
                                        <Setter Property="Grid.Row" TargetName="HeaderTabPanel" Value="0"/>
                                        <Setter Property="Grid.Row" TargetName="ContentBorder" Value="0"/>
                                        <Setter Property="Grid.Column" TargetName="HeaderTabPanel" Value="1"/>
                                        <Setter Property="Grid.Column" TargetName="ContentBorder" Value="0"/>
                                        <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                                        <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                                        <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                        <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                        <Setter Property="Margin" TargetName="HeaderTabPanel" Value="0,2,2,2"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="TextElement.Foreground" TargetName="TemplateRoot" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolboxDisabledContentTextBrushKey}}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Locations, Converter={StaticResource CollectionToBooleanConverter}}" Value="True">
                            <Setter Property="SelectedIndex" Value="0" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Fixes, Converter={StaticResource CollectionToBooleanConverter}}" Value="True">
                            <Setter Property="SelectedIndex" Value="3" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Stacks, Converter={StaticResource CollectionToBooleanConverter}}" Value="True">
                            <Setter Property="SelectedIndex" Value="2" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding CallTrees, Converter={StaticResource CollectionToBooleanConverter}}" Value="True">
                            <Setter Property="SelectedIndex" Value="1" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
                <Style BasedOn="{StaticResource TabItemStyle}" TargetType="{x:Type TabItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TabItem}">
                                <Border Name="Border"
                                        Style="{StaticResource TabItemBorderStyle}">
                                    <ContentPresenter ContentSource="Header"
                                                      Style="{StaticResource TabItemBorderContentPresenterStyle}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowTabSelectedTabBrushKey}}" />
                                        <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowTabMouseOverBackgroundGradientBrushKey}}" />
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowTabSelectedTextBrushKey}}" />
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="False">
                                        <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowTabGradientBrushKey}}" />
                                        <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowTabGradientBrushKey}}" />
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowTabTextBrushKey}}" />
                                    </Trigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="False" />
                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowTabMouseOverBackgroundGradientBrushKey}}" />
                                        <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowTabMouseOverBackgroundGradientBrushKey}}" />
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowTabMouseOverTextBrushKey}}" />
                                    </MultiDataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TabControl.Resources>
            <TabItem>
                <TabItem.Header>
                    <DockPanel Style="{StaticResource TabItemHeaderPanelStyle}">
                        <TextBlock Text="{StaticResource SarifViewerControl_TabItemHeader_Locations_Text_String}"
                                   Style="{StaticResource TabItemHeaderTextStyle}"/>
                        <TextBlock Visibility="{Binding HasMultipleLocations, Converter={StaticResource BooleanToVisiblityConverter}}"
                                   Style="{StaticResource TabItemHeaderItemCountTextStyle}">
                            <Run Text="{Binding LocationsCount, Mode=OneWay, StringFormat={StaticResource SarifViewerControl_TabItemHeader_ItemCount_Text_FormatString}}" />
                        </TextBlock>
                    </DockPanel>
                </TabItem.Header>
                <ContentControl ContentTemplate="{StaticResource CodeLocationCollectionTemplate}"
                                Content="{Binding}"
                                IsTabStop="False"/>
            </TabItem>
            <TabItem Visibility="{Binding CallTrees, Converter={StaticResource CollectionToVisibilityConverter}, ConverterParameter=0}">
                <TabItem.Header>
                    <DockPanel Style="{StaticResource TabItemHeaderPanelStyle}">
                        <TextBlock Text="{StaticResource SarifViewerControl_TabItemHeader_CallTrees_Text_String}"
                                   Style="{StaticResource TabItemHeaderTextStyle}"/>
                        <TextBlock Visibility="{Binding CallTrees, Converter={StaticResource CollectionToVisibilityConverter}, ConverterParameter=1}"
                                   Style="{StaticResource TabItemHeaderItemCountTextStyle}">
                            <Run Text="{Binding CallTrees, Mode=OneWay, Converter={StaticResource CollectionToCountConverter}, StringFormat={StaticResource SarifViewerControl_TabItemHeader_ItemCount_Text_FormatString}}" />
                        </TextBlock>
                    </DockPanel>
                </TabItem.Header>

                <ContentControl ContentTemplate="{StaticResource CallTreeTemplate}"
                                Content="{Binding CallTrees}"
                                IsTabStop="False"/>
            </TabItem>
            <TabItem Visibility="{Binding Stacks, Converter={StaticResource CollectionToVisibilityConverter}, ConverterParameter=0}">
                <TabItem.Header>
                    <DockPanel Style="{StaticResource TabItemHeaderPanelStyle}">
                        <TextBlock Text="{StaticResource SarifViewerControl_TabItemHeader_Stacks_Text_String}"
                                   Style="{StaticResource TabItemHeaderTextStyle}"/>
                        <TextBlock Visibility="{Binding Stacks, Converter={StaticResource CollectionToVisibilityConverter}, ConverterParameter=1}"
                                   Style="{StaticResource TabItemHeaderItemCountTextStyle}">
                            <Run Text="{Binding Stacks, Mode=OneWay, Converter={StaticResource CollectionToCountConverter}, StringFormat={StaticResource SarifViewerControl_TabItemHeader_ItemCount_Text_FormatString}}" />
                        </TextBlock>
                    </DockPanel>
                </TabItem.Header>

                <ContentControl ContentTemplate="{StaticResource StackCollectionTemplate}"
                                Content="{Binding Stacks}"
                                IsTabStop="False"
                                Style="{StaticResource StacksTabItemContentStyle}"/>
            </TabItem>
            <TabItem Visibility="{Binding Fixes, Converter={StaticResource CollectionToVisibilityConverter}, ConverterParameter=0}">
                <TabItem.Header>
                    <DockPanel Style="{StaticResource TabItemHeaderPanelStyle}">
                        <TextBlock Text="{StaticResource SarifViewerControl_TabItemHeader_Fixes_Text_String}"
                                   Style="{StaticResource TabItemHeaderTextStyle}"/>
                        <TextBlock Visibility="{Binding Fixes, Converter={StaticResource CollectionToVisibilityConverter}, ConverterParameter=1}"
                                   Style="{StaticResource TabItemHeaderItemCountTextStyle}">
                            <Run Text="{Binding Fixes, Mode=OneWay, Converter={StaticResource CollectionToCountConverter}, StringFormat={StaticResource SarifViewerControl_TabItemHeader_ItemCount_Text_FormatString}}" />
                        </TextBlock>
                    </DockPanel>
                </TabItem.Header>

                <ContentControl ContentTemplate="{StaticResource FixCollectionTemplate}"
                                Content="{Binding Fixes}" 
                                IsTabStop="False"/>
            </TabItem>
            <TabItem>
                <TabItem.Header>
                    <TextBlock Text="{StaticResource SarifViewerControl_TabItemHeader_Info_Text_String}"
                               Style="{StaticResource InfoTabItemHeaderTextStyle}" />
                </TabItem.Header>

                <ContentControl ContentTemplate="{StaticResource InfoTemplate}"
                                Content="{Binding}"
                                IsTabStop="False" />
            </TabItem>
        </TabControl>
    </Grid>
</UserControl>
