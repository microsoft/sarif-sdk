{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.5.json",
  "version": "2.1.0",
  "runs": [
    {
      "results": [
        {
          "ruleId": "28204",
          "message": {
            "text": "'Compare' has an override at `c:\\somepath\\test049.cpp(18)` and only the override is annotated for _Param_(1): when an override is annotated, the base (this function) should be similarly annotated."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///c:/somepath/test049.cpp",
                  "index": 0
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 25
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": ""
                }
              ],
              "properties": {
                "funcline": "0"
              }
            }
          ]
        },
        {
          "ruleId": "26015",
          "message": {
            "text": "Potential overflow using expression 'buf[100]'\nBuffer access is apparently unbounded by the buffer size.  \n\nIn particular: any constant is not constrained by (c->Base::a)`29\n\nBuffer buf is a parameter to this function declared on line 29\nBuffer is of length offset(buf)`29 + (c->Base::a)`29 bytes [from annotation SAL_readableTo(elementCount(c->a)) at c:\\somepath\\test049.cpp(29)]\nAccessing the byte at byte offset 100\n\nValues of variables:\nPointer buf is at offset 0 bytes from the start of the buffer\n\nwhere\noffset(buf)`29 == 0\n(c->Base::a)`29 >= 1\n\nOverrun access occurs when\n(c->Base::a)`29 <= 100\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///c:/somepath/test049.cpp",
                  "index": 0
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 13
                }
              },
              "logicalLocations": [
                {
                  "index": 0,
                  "fullyQualifiedName": "test_b_a"
                }
              ],
              "properties": {
                "funcline": "29"
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///c:/somepath/test049.cpp",
                            "index": 0
                          },
                          "region": {
                            "startLine": 29,
                            "startColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///c:/somepath/test049.cpp",
                            "index": 0
                          },
                          "region": {
                            "startLine": 31,
                            "startColumn": 13
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "26015",
          "message": {
            "text": "Potential overflow using expression 'buf[100]'\nBuffer access is apparently unbounded by the buffer size.  \n\nIn particular: any constant is not constrained by (c->Derived::b)`34\n\nBuffer buf is a parameter to this function declared on line 34\nBuffer is of length offset(buf)`34 + (c->Derived::b)`34 bytes [from annotation SAL_readableTo(elementCount(c->b)) at c:\\somepath\\test049.cpp(34)]\nAccessing the byte at byte offset 100\n\nValues of variables:\nPointer buf is at offset 0 bytes from the start of the buffer\n\nwhere\noffset(buf)`34 == 0\n(c->Derived::b)`34 >= 1\n\nOverrun access occurs when\n(c->Derived::b)`34 <= 100\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///c:/somepath/test049.cpp",
                  "index": 0
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 13
                }
              },
              "logicalLocations": [
                {
                  "index": 1,
                  "fullyQualifiedName": "test_d_b"
                }
              ],
              "properties": {
                "funcline": "34"
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///c:/somepath/test049.cpp",
                            "index": 0
                          },
                          "region": {
                            "startLine": 34,
                            "startColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///c:/somepath/test049.cpp",
                            "index": 0
                          },
                          "region": {
                            "startLine": 36,
                            "startColumn": 13
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "26015",
          "message": {
            "text": "Potential overflow using expression 'buf[100]'\nBuffer access is apparently unbounded by the buffer size.  \n\nIn particular: any constant is not constrained by (c->Base::a)`40\n\nBuffer buf is a parameter to this function declared on line 40\nBuffer is of length offset(buf)`40 + (c->Base::a)`40 bytes [from annotation SAL_readableTo(elementCount(c->Base.a)) at c:\\somepath\\test049.cpp(40)]\nAccessing the byte at byte offset 100\n\nValues of variables:\nPointer buf is at offset 0 bytes from the start of the buffer\n\nwhere\noffset(buf)`40 == 0\n(c->Base::a)`40 >= 1\n\nOverrun access occurs when\n(c->Base::a)`40 <= 100\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///c:/somepath/test049.cpp",
                  "index": 0
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 13
                }
              },
              "logicalLocations": [
                {
                  "index": 2,
                  "fullyQualifiedName": "test_d_a"
                }
              ],
              "properties": {
                "funcline": "40"
              }
            }
          ],
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///c:/somepath/test049.cpp",
                            "index": 0
                          },
                          "region": {
                            "startLine": 40,
                            "startColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "file:///c:/somepath/test049.cpp",
                            "index": 0
                          },
                          "region": {
                            "startLine": 42,
                            "startColumn": 13
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "tool": {
        "driver": {
          "name": "PREfast",
          "fullName": "PREfast Code Analysis"
        }
      },
      "artifacts": [
        {
          "location": {
            "uri": "file:///c:/somepath/test049.cpp"
          }
        }
      ],
      "logicalLocations": [
        {
          "fullyQualifiedName": "test_b_a",
          "decoratedName": "?test_b_a@@YAXPADPBVBase@@@Z"
        },
        {
          "fullyQualifiedName": "test_d_b",
          "decoratedName": "?test_d_b@@YAXPADPBVDerived@@@Z"
        },
        {
          "fullyQualifiedName": "test_d_a",
          "decoratedName": "?test_d_a@@YAXPADPBVDerived@@@Z"
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}